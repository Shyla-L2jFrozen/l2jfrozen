com.l2jfrozen.common.CommonConfig
com.l2jfrozen.common.CommonConfig: org.apache.log4j.Logger LOGGER
com.l2jfrozen.common.CommonConfig: boolean ENABLE_ALL_EXCEPTIONS
com.l2jfrozen.common.CommonConfig: boolean ASSERT
com.l2jfrozen.common.CommonConfig: boolean DEBUG
com.l2jfrozen.common.CommonConfig: boolean BROADCAST_DEBUG
com.l2jfrozen.common.CommonConfig: int THREAD_P_EFFECTS
com.l2jfrozen.common.CommonConfig: int THREAD_P_GENERAL
com.l2jfrozen.common.CommonConfig: int IO_PACKET_THREAD_CORE_SIZE
com.l2jfrozen.common.CommonConfig: int GENERAL_PACKET_THREAD_CORE_SIZE
com.l2jfrozen.common.CommonConfig: int GENERAL_THREAD_CORE_SIZE
com.l2jfrozen.common.CommonConfig: int AI_MAX_THREAD
com.l2jfrozen.common.CommonConfig: java.lang.Object DATABASE_POOL_TYPE
com.l2jfrozen.common.CommonConfig: java.lang.String DATABASE_DRIVER
com.l2jfrozen.common.CommonConfig: java.lang.String DATABASE_URL
com.l2jfrozen.common.CommonConfig: int DATABASE_MAX_CONNECTIONS
com.l2jfrozen.common.CommonConfig: java.lang.String DATABASE_LOGIN
com.l2jfrozen.common.CommonConfig: java.lang.String DATABASE_PASSWORD
com.l2jfrozen.common.CommonConfig: long DATABASE_CONNECTION_TIMEOUT
com.l2jfrozen.common.CommonConfig: long DATABASE_TIMEOUT
com.l2jfrozen.common.CommonConfig: int DATABASE_MAX_IDLE_TIME
com.l2jfrozen.common.CommonConfig: CommonConfig()
com.l2jfrozen.common.CommonConfig: void load()
com.l2jfrozen.common.CommonConfig: void load(java.lang.String)
com.l2jfrozen.common.CommonConfig: void <clinit>()
com.l2jfrozen.common.CommonConfigFiles
com.l2jfrozen.common.CommonConfigFiles: org.apache.log4j.Logger LOGGER
com.l2jfrozen.common.CommonConfigFiles: java.lang.String MAIN_CONFIGURATION_FILE
com.l2jfrozen.common.CommonConfigFiles: java.lang.String COMMON_CONFIGURATION_FILE
com.l2jfrozen.common.CommonConfigFiles: java.lang.String LOG4J_CONF_FILE
com.l2jfrozen.common.CommonConfigFiles: java.lang.String LOG_CONF_FILE
com.l2jfrozen.common.CommonConfigFiles: java.util.Properties configFiles
com.l2jfrozen.common.CommonConfigFiles: CommonConfigFiles()
com.l2jfrozen.common.CommonConfigFiles: void loadConfigurationFilesPaths()
com.l2jfrozen.common.CommonConfigFiles: void loadConfigurationFilesPaths(java.lang.String)
com.l2jfrozen.common.CommonConfigFiles: void <clinit>()
com.l2jfrozen.common.L2Frozen
com.l2jfrozen.common.L2Frozen: org.apache.log4j.Logger LOGGER
com.l2jfrozen.common.L2Frozen: L2Frozen()
com.l2jfrozen.common.L2Frozen: void info()
com.l2jfrozen.common.L2Frozen: void <clinit>()
com.l2jfrozen.common.L2Properties
com.l2jfrozen.common.L2Properties: long serialVersionUID
com.l2jfrozen.common.L2Properties: org.apache.log4j.Logger LOGGER
com.l2jfrozen.common.L2Properties: boolean _warn
com.l2jfrozen.common.L2Properties: L2Properties()
com.l2jfrozen.common.L2Properties: com.l2jfrozen.common.L2Properties setLog(boolean)
com.l2jfrozen.common.L2Properties: L2Properties(java.lang.String)
com.l2jfrozen.common.L2Properties: L2Properties(java.io.File)
com.l2jfrozen.common.L2Properties: L2Properties(java.io.InputStream)
com.l2jfrozen.common.L2Properties: L2Properties(java.io.Reader)
com.l2jfrozen.common.L2Properties: void load(java.lang.String)
com.l2jfrozen.common.L2Properties: void load(java.io.File)
com.l2jfrozen.common.L2Properties: void load(java.io.InputStream)
com.l2jfrozen.common.L2Properties: void load(java.io.Reader)
com.l2jfrozen.common.L2Properties: java.lang.String getProperty(java.lang.String)
com.l2jfrozen.common.L2Properties: java.lang.String getProperty(java.lang.String,java.lang.String)
com.l2jfrozen.common.L2Properties: void <clinit>()
com.l2jfrozen.common.ServerType
com.l2jfrozen.common.ServerType: int MODE_NONE
com.l2jfrozen.common.ServerType: int MODE_GAMESERVER
com.l2jfrozen.common.ServerType: int MODE_LOGINSERVER
com.l2jfrozen.common.ServerType: int serverMode
com.l2jfrozen.common.ServerType: ServerType()
com.l2jfrozen.common.ServerType: void <clinit>()
com.l2jfrozen.common.crypt.Base64
com.l2jfrozen.common.crypt.Base64: org.apache.log4j.Logger LOGGER
com.l2jfrozen.common.crypt.Base64: int NO_OPTIONS
com.l2jfrozen.common.crypt.Base64: int ENCODE
com.l2jfrozen.common.crypt.Base64: int DECODE
com.l2jfrozen.common.crypt.Base64: int GZIP
com.l2jfrozen.common.crypt.Base64: int DONT_BREAK_LINES
com.l2jfrozen.common.crypt.Base64: int MAX_LINE_LENGTH
com.l2jfrozen.common.crypt.Base64: byte EQUALS_SIGN
com.l2jfrozen.common.crypt.Base64: byte NEW_LINE
com.l2jfrozen.common.crypt.Base64: java.lang.String PREFERRED_ENCODING
com.l2jfrozen.common.crypt.Base64: byte[] ALPHABET
com.l2jfrozen.common.crypt.Base64: byte[] _NATIVE_ALPHABET
com.l2jfrozen.common.crypt.Base64: byte[] DECODABET
com.l2jfrozen.common.crypt.Base64: byte WHITE_SPACE_ENC
com.l2jfrozen.common.crypt.Base64: byte EQUALS_SIGN_ENC
com.l2jfrozen.common.crypt.Base64: Base64()
com.l2jfrozen.common.crypt.Base64: byte[] encode3to4(byte[],byte[],int)
com.l2jfrozen.common.crypt.Base64: byte[] encode3to4(byte[],int,int,byte[],int)
com.l2jfrozen.common.crypt.Base64: java.lang.String encodeObject(java.io.Serializable)
com.l2jfrozen.common.crypt.Base64: java.lang.String encodeObject(java.io.Serializable,int)
com.l2jfrozen.common.crypt.Base64: java.lang.String encodeBytes(byte[])
com.l2jfrozen.common.crypt.Base64: java.lang.String encodeBytes(byte[],int)
com.l2jfrozen.common.crypt.Base64: java.lang.String encodeBytes(byte[],int,int)
com.l2jfrozen.common.crypt.Base64: java.lang.String encodeBytes(byte[],int,int,int)
com.l2jfrozen.common.crypt.Base64: int decode4to3(byte[],int,byte[],int)
com.l2jfrozen.common.crypt.Base64: byte[] decode(byte[],int,int)
com.l2jfrozen.common.crypt.Base64: byte[] decode(java.lang.String)
com.l2jfrozen.common.crypt.Base64: java.lang.Object decodeToObject(java.lang.String)
com.l2jfrozen.common.crypt.Base64: void <clinit>()
com.l2jfrozen.common.crypt.Base64$InputStream
com.l2jfrozen.common.crypt.Base64$InputStream: boolean encode
com.l2jfrozen.common.crypt.Base64$InputStream: int position
com.l2jfrozen.common.crypt.Base64$InputStream: byte[] buffer
com.l2jfrozen.common.crypt.Base64$InputStream: int bufferLength
com.l2jfrozen.common.crypt.Base64$InputStream: int numSigBytes
com.l2jfrozen.common.crypt.Base64$InputStream: int lineLength
com.l2jfrozen.common.crypt.Base64$InputStream: boolean breakLines
com.l2jfrozen.common.crypt.Base64$InputStream: Base64$InputStream(java.io.InputStream)
com.l2jfrozen.common.crypt.Base64$InputStream: Base64$InputStream(java.io.InputStream,int)
com.l2jfrozen.common.crypt.Base64$InputStream: int read()
com.l2jfrozen.common.crypt.Base64$InputStream: int read(byte[],int,int)
com.l2jfrozen.common.crypt.Base64$OutputStream
com.l2jfrozen.common.crypt.Base64$OutputStream: boolean encode
com.l2jfrozen.common.crypt.Base64$OutputStream: int position
com.l2jfrozen.common.crypt.Base64$OutputStream: byte[] buffer
com.l2jfrozen.common.crypt.Base64$OutputStream: int bufferLength
com.l2jfrozen.common.crypt.Base64$OutputStream: int lineLength
com.l2jfrozen.common.crypt.Base64$OutputStream: boolean breakLines
com.l2jfrozen.common.crypt.Base64$OutputStream: byte[] b4
com.l2jfrozen.common.crypt.Base64$OutputStream: boolean suspendEncoding
com.l2jfrozen.common.crypt.Base64$OutputStream: Base64$OutputStream(java.io.OutputStream)
com.l2jfrozen.common.crypt.Base64$OutputStream: Base64$OutputStream(java.io.OutputStream,int)
com.l2jfrozen.common.crypt.Base64$OutputStream: void write(int)
com.l2jfrozen.common.crypt.Base64$OutputStream: void write(byte[],int,int)
com.l2jfrozen.common.crypt.Base64$OutputStream: void flushBase64()
com.l2jfrozen.common.crypt.Base64$OutputStream: void close()
com.l2jfrozen.common.crypt.Base64$OutputStream: void suspendEncoding()
com.l2jfrozen.common.crypt.Base64$OutputStream: void resumeEncoding()
com.l2jfrozen.common.logs.ConsoleLogFormatter
com.l2jfrozen.common.logs.ConsoleLogFormatter: java.lang.String CRLF
com.l2jfrozen.common.logs.ConsoleLogFormatter: ConsoleLogFormatter()
com.l2jfrozen.common.logs.ConsoleLogFormatter: java.lang.String format(java.util.logging.LogRecord)
com.l2jfrozen.common.logs.ConsoleLogFormatter$ExtendedLog
com.l2jfrozen.common.logs.ConsoleLogFormatter$ExtendedLog: long serialVersionUID
com.l2jfrozen.common.logs.ConsoleLogFormatter$ExtendedLog: ConsoleLogFormatter$ExtendedLog()
com.l2jfrozen.common.logs.ErrorFilter
com.l2jfrozen.common.logs.ErrorFilter: ErrorFilter()
com.l2jfrozen.common.logs.ErrorFilter: boolean isLoggable(java.util.logging.LogRecord)
com.l2jfrozen.common.logs.ErrorLogHandler
com.l2jfrozen.common.logs.ErrorLogHandler: ErrorLogHandler()
com.l2jfrozen.common.logs.FileLogFormatter
com.l2jfrozen.common.logs.FileLogFormatter: java.lang.String CRLF
com.l2jfrozen.common.logs.FileLogFormatter: java.lang.String tab
com.l2jfrozen.common.logs.FileLogFormatter: java.text.SimpleDateFormat dateFmt
com.l2jfrozen.common.logs.FileLogFormatter: FileLogFormatter()
com.l2jfrozen.common.logs.FileLogFormatter: java.lang.String format(java.util.logging.LogRecord)
com.l2jfrozen.common.logs.Log
com.l2jfrozen.common.logs.Log: org.apache.log4j.Logger LOGGER
com.l2jfrozen.common.logs.Log: Log()
com.l2jfrozen.common.logs.Log: void add(java.lang.String,java.lang.String,java.lang.String)
com.l2jfrozen.common.logs.Log: void append(java.lang.String,java.lang.String,java.lang.String)
com.l2jfrozen.common.logs.Log: void add(java.lang.String,java.lang.String)
com.l2jfrozen.common.logs.Log: void Assert(boolean,java.lang.String)
com.l2jfrozen.common.logs.Log: void <clinit>()
com.l2jfrozen.common.thread.DeadlockDetector
com.l2jfrozen.common.thread.DeadlockDetector: org.apache.log4j.Logger LOGGER
com.l2jfrozen.common.thread.DeadlockDetector: java.util.Set _logged
com.l2jfrozen.common.thread.DeadlockDetector: com.l2jfrozen.common.thread.DeadlockDetector _instance
com.l2jfrozen.common.thread.DeadlockDetector: com.l2jfrozen.common.thread.DeadlockDetector getInstance()
com.l2jfrozen.common.thread.DeadlockDetector: DeadlockDetector()
com.l2jfrozen.common.thread.DeadlockDetector: void run()
com.l2jfrozen.common.thread.DeadlockDetector: long[] findDeadlockedThreadIDs()
com.l2jfrozen.common.thread.DeadlockDetector: java.lang.Thread findThreadById(long)
com.l2jfrozen.common.thread.DeadlockDetector: void <clinit>()
com.l2jfrozen.common.thread.L2Thread
com.l2jfrozen.common.thread.L2Thread: boolean _isAlive
com.l2jfrozen.common.thread.L2Thread: L2Thread()
com.l2jfrozen.common.thread.L2Thread: L2Thread(java.lang.String)
com.l2jfrozen.common.thread.L2Thread: void shutdown()
com.l2jfrozen.common.thread.L2Thread: void run()
com.l2jfrozen.common.thread.L2Thread: void runTurn()
com.l2jfrozen.common.thread.L2Thread: void sleepTurn()
com.l2jfrozen.common.thread.L2Thread: java.util.List getStats(java.lang.Thread)
com.l2jfrozen.common.thread.RunnableStatsManager
com.l2jfrozen.common.thread.RunnableStatsManager: java.util.Map _classStats
com.l2jfrozen.common.thread.RunnableStatsManager: RunnableStatsManager()
com.l2jfrozen.common.thread.RunnableStatsManager: com.l2jfrozen.common.thread.RunnableStatsManager$ClassStat getClassStat(java.lang.Class,boolean)
com.l2jfrozen.common.thread.RunnableStatsManager: void handleStats(java.lang.Class,long)
com.l2jfrozen.common.thread.RunnableStatsManager: void handleStats(java.lang.Class,java.lang.String,long)
com.l2jfrozen.common.thread.RunnableStatsManager: void <clinit>()
com.l2jfrozen.common.thread.RunnableStatsManager$ClassStat
com.l2jfrozen.common.thread.RunnableStatsManager$ClassStat: java.lang.String[] _methodNames
com.l2jfrozen.common.thread.RunnableStatsManager$ClassStat: com.l2jfrozen.common.thread.RunnableStatsManager$MethodStat[] _methodStats
com.l2jfrozen.common.thread.RunnableStatsManager$ClassStat: RunnableStatsManager$ClassStat(java.lang.Class)
com.l2jfrozen.common.thread.RunnableStatsManager$ClassStat: com.l2jfrozen.common.thread.RunnableStatsManager$MethodStat getMethodStat(java.lang.String,boolean)
com.l2jfrozen.common.thread.RunnableStatsManager$MethodStat
com.l2jfrozen.common.thread.RunnableStatsManager$MethodStat: java.util.concurrent.locks.ReentrantLock _lock
com.l2jfrozen.common.thread.RunnableStatsManager$MethodStat: long _min
com.l2jfrozen.common.thread.RunnableStatsManager$MethodStat: long _max
com.l2jfrozen.common.thread.RunnableStatsManager$MethodStat: RunnableStatsManager$MethodStat()
com.l2jfrozen.common.thread.RunnableStatsManager$MethodStat: void handleStats(long)
com.l2jfrozen.common.thread.TaskPriority
com.l2jfrozen.common.thread.TaskPriority: com.l2jfrozen.common.thread.TaskPriority PR_NORMAL
com.l2jfrozen.common.thread.TaskPriority: com.l2jfrozen.common.thread.TaskPriority PR_HIGH
com.l2jfrozen.common.thread.TaskPriority: com.l2jfrozen.common.thread.TaskPriority PR_URGENT
com.l2jfrozen.common.thread.TaskPriority: com.l2jfrozen.common.thread.TaskPriority[] $VALUES
com.l2jfrozen.common.thread.TaskPriority: com.l2jfrozen.common.thread.TaskPriority[] values()
com.l2jfrozen.common.thread.TaskPriority: com.l2jfrozen.common.thread.TaskPriority valueOf(java.lang.String)
com.l2jfrozen.common.thread.TaskPriority: TaskPriority(java.lang.String,int)
com.l2jfrozen.common.thread.TaskPriority: void <clinit>()
com.l2jfrozen.common.thread.ThreadPoolManager
com.l2jfrozen.common.thread.ThreadPoolManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.common.thread.ThreadPoolManager: java.util.concurrent.ScheduledThreadPoolExecutor _effectsScheduledThreadPool
com.l2jfrozen.common.thread.ThreadPoolManager: java.util.concurrent.ScheduledThreadPoolExecutor _generalScheduledThreadPool
com.l2jfrozen.common.thread.ThreadPoolManager: java.util.concurrent.ScheduledThreadPoolExecutor _aiScheduledThreadPool
com.l2jfrozen.common.thread.ThreadPoolManager: java.util.concurrent.ThreadPoolExecutor _generalPacketsThreadPool
com.l2jfrozen.common.thread.ThreadPoolManager: java.util.concurrent.ThreadPoolExecutor _ioPacketsThreadPool
com.l2jfrozen.common.thread.ThreadPoolManager: java.util.concurrent.ThreadPoolExecutor _generalThreadPool
com.l2jfrozen.common.thread.ThreadPoolManager: long MAX_DELAY
com.l2jfrozen.common.thread.ThreadPoolManager: boolean _shutdown
com.l2jfrozen.common.thread.ThreadPoolManager: com.l2jfrozen.common.thread.ThreadPoolManager getInstance()
com.l2jfrozen.common.thread.ThreadPoolManager: ThreadPoolManager()
com.l2jfrozen.common.thread.ThreadPoolManager: long validateDelay(long)
com.l2jfrozen.common.thread.ThreadPoolManager: java.util.concurrent.ScheduledFuture scheduleEffect(java.lang.Runnable,long)
com.l2jfrozen.common.thread.ThreadPoolManager: java.util.concurrent.ScheduledFuture scheduleEffectAtFixedRate(java.lang.Runnable,long,long)
com.l2jfrozen.common.thread.ThreadPoolManager: boolean removeEffect(java.util.concurrent.RunnableScheduledFuture)
com.l2jfrozen.common.thread.ThreadPoolManager: java.util.concurrent.ScheduledFuture scheduleGeneral(java.lang.Runnable,long)
com.l2jfrozen.common.thread.ThreadPoolManager: java.util.concurrent.ScheduledFuture scheduleGeneralAtFixedRate(java.lang.Runnable,long,long)
com.l2jfrozen.common.thread.ThreadPoolManager: boolean removeGeneral(java.lang.Runnable)
com.l2jfrozen.common.thread.ThreadPoolManager: java.util.concurrent.ScheduledFuture scheduleAi(java.lang.Runnable,long)
com.l2jfrozen.common.thread.ThreadPoolManager: java.util.concurrent.ScheduledFuture scheduleAiAtFixedRate(java.lang.Runnable,long,long)
com.l2jfrozen.common.thread.ThreadPoolManager: void executePacket(java.lang.Runnable)
com.l2jfrozen.common.thread.ThreadPoolManager: void executeCommunityPacket(java.lang.Runnable)
com.l2jfrozen.common.thread.ThreadPoolManager: void executeIOPacket(java.lang.Runnable)
com.l2jfrozen.common.thread.ThreadPoolManager: void executeTask(java.lang.Runnable)
com.l2jfrozen.common.thread.ThreadPoolManager: void executeAi(java.lang.Runnable)
com.l2jfrozen.common.thread.ThreadPoolManager: java.lang.String[] getStats()
com.l2jfrozen.common.thread.ThreadPoolManager: void shutdown()
com.l2jfrozen.common.thread.ThreadPoolManager: boolean isShutdown()
com.l2jfrozen.common.thread.ThreadPoolManager: void purge()
com.l2jfrozen.common.thread.ThreadPoolManager: java.lang.String getPacketStats()
com.l2jfrozen.common.thread.ThreadPoolManager: java.lang.String getIOPacketStats()
com.l2jfrozen.common.thread.ThreadPoolManager: java.lang.String getGeneralStats()
com.l2jfrozen.common.thread.ThreadPoolManager: ThreadPoolManager(com.l2jfrozen.common.thread.ThreadPoolManager$1)
com.l2jfrozen.common.thread.ThreadPoolManager: void <clinit>()
com.l2jfrozen.common.thread.ThreadPoolManager$1
com.l2jfrozen.common.thread.ThreadPoolManager$PriorityThreadFactory
com.l2jfrozen.common.thread.ThreadPoolManager$PriorityThreadFactory: int _prio
com.l2jfrozen.common.thread.ThreadPoolManager$PriorityThreadFactory: java.lang.String _name
com.l2jfrozen.common.thread.ThreadPoolManager$PriorityThreadFactory: java.util.concurrent.atomic.AtomicInteger _threadNumber
com.l2jfrozen.common.thread.ThreadPoolManager$PriorityThreadFactory: java.lang.ThreadGroup _group
com.l2jfrozen.common.thread.ThreadPoolManager$PriorityThreadFactory: ThreadPoolManager$PriorityThreadFactory(java.lang.String,int)
com.l2jfrozen.common.thread.ThreadPoolManager$PriorityThreadFactory: java.lang.Thread newThread(java.lang.Runnable)
com.l2jfrozen.common.thread.ThreadPoolManager$PriorityThreadFactory: java.lang.ThreadGroup getGroup()
com.l2jfrozen.common.thread.ThreadPoolManager$PurgeTask
com.l2jfrozen.common.thread.ThreadPoolManager$PurgeTask: com.l2jfrozen.common.thread.ThreadPoolManager this$0
com.l2jfrozen.common.thread.ThreadPoolManager$PurgeTask: ThreadPoolManager$PurgeTask(com.l2jfrozen.common.thread.ThreadPoolManager)
com.l2jfrozen.common.thread.ThreadPoolManager$PurgeTask: void run()
com.l2jfrozen.common.thread.ThreadPoolManager$RunnableWrapper
com.l2jfrozen.common.thread.ThreadPoolManager$RunnableWrapper: java.lang.Runnable _r
com.l2jfrozen.common.thread.ThreadPoolManager$RunnableWrapper: ThreadPoolManager$RunnableWrapper(java.lang.Runnable)
com.l2jfrozen.common.thread.ThreadPoolManager$RunnableWrapper: void run()
com.l2jfrozen.common.thread.ThreadPoolManager$SingletonHolder
com.l2jfrozen.common.thread.ThreadPoolManager$SingletonHolder: com.l2jfrozen.common.thread.ThreadPoolManager _instance
com.l2jfrozen.common.thread.ThreadPoolManager$SingletonHolder: ThreadPoolManager$SingletonHolder()
com.l2jfrozen.common.thread.ThreadPoolManager$SingletonHolder: void <clinit>()
com.l2jfrozen.common.util.CloseUtil
com.l2jfrozen.common.util.CloseUtil: org.apache.log4j.Logger LOGGER
com.l2jfrozen.common.util.CloseUtil: CloseUtil()
com.l2jfrozen.common.util.CloseUtil: void close(java.sql.Connection)
com.l2jfrozen.common.util.CloseUtil: void close(java.io.Closeable)
com.l2jfrozen.common.util.CloseUtil: void <clinit>()
com.l2jfrozen.common.util.L2FastList
com.l2jfrozen.common.util.L2FastList: long serialVersionUID
com.l2jfrozen.common.util.L2FastList: L2FastList()
com.l2jfrozen.common.util.L2FastList: boolean forEach(com.l2jfrozen.common.util.L2FastList$I2ForEach,boolean)
com.l2jfrozen.common.util.L2FastList: boolean forEachP(com.l2jfrozen.common.util.L2FastList$I2ForEach)
com.l2jfrozen.common.util.L2FastList$I2ForEach
com.l2jfrozen.common.util.L2FastList$I2ForEach: boolean ForEach(java.lang.Object)
com.l2jfrozen.common.util.L2FastList$I2ForEach: javolution.util.FastList$Node getNext(javolution.util.FastList$Node)
com.l2jfrozen.common.util.L2FastMap
com.l2jfrozen.common.util.L2FastMap: long serialVersionUID
com.l2jfrozen.common.util.L2FastMap: L2FastMap()
com.l2jfrozen.common.util.L2FastMap: boolean ForEach(com.l2jfrozen.common.util.L2FastMap$I2ForEach,boolean)
com.l2jfrozen.common.util.L2FastMap: boolean forEachP(com.l2jfrozen.common.util.L2FastMap$I2ForEach)
com.l2jfrozen.common.util.L2FastMap$I2ForEach
com.l2jfrozen.common.util.L2FastMap$I2ForEach: boolean forEach(java.lang.Object,java.lang.Object)
com.l2jfrozen.common.util.L2FastMap$I2ForEach: javolution.util.FastMap$Entry getNext(javolution.util.FastMap$Entry)
com.l2jfrozen.common.util.Memory
com.l2jfrozen.common.util.Memory: Memory()
com.l2jfrozen.common.util.Memory: long getUsedMemory()
com.l2jfrozen.common.util.Memory: long getFreeMemory()
com.l2jfrozen.common.util.Memory: long getTotalMemory()
com.l2jfrozen.common.util.Memory: java.lang.String getOSName()
com.l2jfrozen.common.util.Memory: java.lang.String getOSVersion()
com.l2jfrozen.common.util.Memory: java.lang.String getOSArch()
com.l2jfrozen.common.util.Memory: int getAvailableProcessors()
com.l2jfrozen.common.util.OlympiadLogger
com.l2jfrozen.common.util.OlympiadLogger: org.apache.log4j.Logger LOGGER
com.l2jfrozen.common.util.OlympiadLogger: OlympiadLogger()
com.l2jfrozen.common.util.OlympiadLogger: void add(java.lang.String,java.lang.String)
com.l2jfrozen.common.util.OlympiadLogger: void Assert(boolean,java.lang.String)
com.l2jfrozen.common.util.OlympiadLogger: void <clinit>()
com.l2jfrozen.common.util.Point3D
com.l2jfrozen.common.util.Point3D: long serialVersionUID
com.l2jfrozen.common.util.Point3D: int _x
com.l2jfrozen.common.util.Point3D: int _y
com.l2jfrozen.common.util.Point3D: int _z
com.l2jfrozen.common.util.Point3D: Point3D(int,int,int)
com.l2jfrozen.common.util.Point3D: Point3D(int,int)
com.l2jfrozen.common.util.Point3D: Point3D(com.l2jfrozen.common.util.Point3D)
com.l2jfrozen.common.util.Point3D: void setTo(com.l2jfrozen.common.util.Point3D)
com.l2jfrozen.common.util.Point3D: java.lang.String toString()
com.l2jfrozen.common.util.Point3D: int hashCode()
com.l2jfrozen.common.util.Point3D: boolean equals(java.lang.Object)
com.l2jfrozen.common.util.Point3D: boolean equals(int,int,int)
com.l2jfrozen.common.util.Point3D: long distanceSquaredTo(com.l2jfrozen.common.util.Point3D)
com.l2jfrozen.common.util.Point3D: long distanceSquared(com.l2jfrozen.common.util.Point3D,com.l2jfrozen.common.util.Point3D)
com.l2jfrozen.common.util.Point3D: boolean distanceLessThan(com.l2jfrozen.common.util.Point3D,com.l2jfrozen.common.util.Point3D,double)
com.l2jfrozen.common.util.Point3D: int getX()
com.l2jfrozen.common.util.Point3D: void setX(int)
com.l2jfrozen.common.util.Point3D: int getY()
com.l2jfrozen.common.util.Point3D: void setY(int)
com.l2jfrozen.common.util.Point3D: int getZ()
com.l2jfrozen.common.util.Point3D: void setZ(int)
com.l2jfrozen.common.util.Point3D: void setXYZ(int,int,int)
com.l2jfrozen.common.util.PrimeFinder
com.l2jfrozen.common.util.PrimeFinder: int LARGEST_PRIME
com.l2jfrozen.common.util.PrimeFinder: int[] PRIME_CAPACITIES
com.l2jfrozen.common.util.PrimeFinder: PrimeFinder()
com.l2jfrozen.common.util.PrimeFinder: int nextPrime(int)
com.l2jfrozen.common.util.PrimeFinder: void <clinit>()
com.l2jfrozen.common.util.StringUtil
com.l2jfrozen.common.util.StringUtil: StringUtil()
com.l2jfrozen.common.util.StringUtil: java.lang.String concat(java.lang.String[])
com.l2jfrozen.common.util.StringUtil: java.lang.StringBuilder startAppend(int,java.lang.String[])
com.l2jfrozen.common.util.StringUtil: void append(java.lang.StringBuilder,java.lang.String[])
com.l2jfrozen.common.util.StringUtil: int getLength(java.lang.String[])
com.l2jfrozen.common.util.StringUtil: java.lang.String getTraceString(java.lang.StackTraceElement[])
com.l2jfrozen.common.util.Util
com.l2jfrozen.common.util.Util: org.apache.log4j.Logger LOGGER
com.l2jfrozen.common.util.Util: Util()
com.l2jfrozen.common.util.Util: boolean isInternalIP(java.lang.String)
com.l2jfrozen.common.util.Util: java.lang.String printData(byte[],int)
com.l2jfrozen.common.util.Util: java.lang.String fillHex(int,int)
com.l2jfrozen.common.util.Util: void printSection(java.lang.String)
com.l2jfrozen.common.util.Util: java.lang.String printData(byte[])
com.l2jfrozen.common.util.Util: int convertMinutesToMiliseconds(int)
com.l2jfrozen.common.util.Util: void <clinit>()
com.l2jfrozen.common.util.XmlEngine
com.l2jfrozen.common.util.XmlEngine: org.apache.log4j.Logger LOGGER
com.l2jfrozen.common.util.XmlEngine: java.io.File _file
com.l2jfrozen.common.util.XmlEngine: XmlEngine(java.io.File)
com.l2jfrozen.common.util.XmlEngine: void parseFile()
com.l2jfrozen.common.util.XmlEngine: void parseDocument(org.w3c.dom.Document)
com.l2jfrozen.common.util.XmlEngine: java.util.List parseHeadStandart(org.w3c.dom.Document)
com.l2jfrozen.common.util.XmlEngine: void <clinit>()
com.l2jfrozen.common.util.database.ConnectionCloser
com.l2jfrozen.common.util.database.ConnectionCloser: org.apache.log4j.Logger LOGGER
com.l2jfrozen.common.util.database.ConnectionCloser: java.sql.Connection c
com.l2jfrozen.common.util.database.ConnectionCloser: java.lang.RuntimeException exp
com.l2jfrozen.common.util.database.ConnectionCloser: ConnectionCloser(java.sql.Connection,java.lang.RuntimeException)
com.l2jfrozen.common.util.database.ConnectionCloser: void run()
com.l2jfrozen.common.util.database.ConnectionCloser: void <clinit>()
com.l2jfrozen.common.util.database.DatabaseUtils
com.l2jfrozen.common.util.database.DatabaseUtils: DatabaseUtils()
com.l2jfrozen.common.util.database.DatabaseUtils: void close(java.sql.Connection)
com.l2jfrozen.common.util.database.DatabaseUtils: void close(java.sql.PreparedStatement)
com.l2jfrozen.common.util.database.DatabaseUtils: void close(java.sql.ResultSet)
com.l2jfrozen.common.util.database.DatabaseUtils: void closeDatabaseCSR(java.sql.Connection,java.sql.PreparedStatement,java.sql.ResultSet)
com.l2jfrozen.common.util.database.DatabaseUtils: void closeDatabaseCS(java.sql.Connection,java.sql.PreparedStatement)
com.l2jfrozen.common.util.database.DatabaseUtils: void closeDatabaseSR(java.sql.PreparedStatement,java.sql.ResultSet)
com.l2jfrozen.common.util.database.L2DatabaseFactory
com.l2jfrozen.common.util.database.L2DatabaseFactory: org.apache.log4j.Logger LOGGER
com.l2jfrozen.common.util.database.L2DatabaseFactory: com.l2jfrozen.common.util.database.L2DatabaseFactory _instance
com.l2jfrozen.common.util.database.L2DatabaseFactory: com.l2jfrozen.common.util.database.ProviderType _providerType
com.l2jfrozen.common.util.database.L2DatabaseFactory: com.l2jfrozen.common.util.database.L2DatabaseFactory getInstance()
com.l2jfrozen.common.util.database.L2DatabaseFactory: L2DatabaseFactory()
com.l2jfrozen.common.util.database.L2DatabaseFactory: java.lang.String prepQuerySelect(java.lang.String[],java.lang.String,java.lang.String,boolean)
com.l2jfrozen.common.util.database.L2DatabaseFactory: java.lang.String safetyString(java.lang.String[])
com.l2jfrozen.common.util.database.L2DatabaseFactory: java.sql.Connection getConnection()
com.l2jfrozen.common.util.database.L2DatabaseFactory: com.l2jfrozen.common.util.database.ProviderType getProviderType()
com.l2jfrozen.common.util.database.L2DatabaseFactory: void close(java.sql.Connection)
com.l2jfrozen.common.util.database.L2DatabaseFactory: void shutdown()
com.l2jfrozen.common.util.database.L2DatabaseFactory: java.sql.Connection getConnection(boolean)
com.l2jfrozen.common.util.database.L2DatabaseFactory: java.sql.Connection getConnection(long)
com.l2jfrozen.common.util.database.L2DatabaseFactory: int getBusyConnectionCount()
com.l2jfrozen.common.util.database.L2DatabaseFactory: void <clinit>()
com.l2jfrozen.common.util.database.L2DatabaseFactory_c3p0
com.l2jfrozen.common.util.database.L2DatabaseFactory_c3p0: org.apache.log4j.Logger LOGGER
com.l2jfrozen.common.util.database.L2DatabaseFactory_c3p0: com.mchange.v2.c3p0.ComboPooledDataSource _source
com.l2jfrozen.common.util.database.L2DatabaseFactory_c3p0: L2DatabaseFactory_c3p0()
com.l2jfrozen.common.util.database.L2DatabaseFactory_c3p0: void shutdown()
com.l2jfrozen.common.util.database.L2DatabaseFactory_c3p0: java.sql.Connection getConnection(boolean)
com.l2jfrozen.common.util.database.L2DatabaseFactory_c3p0: java.sql.Connection getConnection(long)
com.l2jfrozen.common.util.database.L2DatabaseFactory_c3p0: int getBusyConnectionCount()
com.l2jfrozen.common.util.database.L2DatabaseFactory_c3p0: int getIdleConnectionCount()
com.l2jfrozen.common.util.database.L2DatabaseFactory_c3p0: int getNumConnections()
com.l2jfrozen.common.util.database.L2DatabaseFactory_c3p0: void <clinit>()
com.l2jfrozen.common.util.database.ProviderType
com.l2jfrozen.common.util.database.ProviderType: com.l2jfrozen.common.util.database.ProviderType MySql
com.l2jfrozen.common.util.database.ProviderType: com.l2jfrozen.common.util.database.ProviderType MsSql
com.l2jfrozen.common.util.database.ProviderType: com.l2jfrozen.common.util.database.ProviderType[] $VALUES
com.l2jfrozen.common.util.database.ProviderType: com.l2jfrozen.common.util.database.ProviderType[] values()
com.l2jfrozen.common.util.database.ProviderType: com.l2jfrozen.common.util.database.ProviderType valueOf(java.lang.String)
com.l2jfrozen.common.util.database.ProviderType: ProviderType(java.lang.String,int)
com.l2jfrozen.common.util.database.ProviderType: void <clinit>()
com.l2jfrozen.common.util.database.SqlUtils
com.l2jfrozen.common.util.database.SqlUtils: org.apache.log4j.Logger LOGGER
com.l2jfrozen.common.util.database.SqlUtils: com.l2jfrozen.common.util.database.SqlUtils _instance
com.l2jfrozen.common.util.database.SqlUtils: SqlUtils()
com.l2jfrozen.common.util.database.SqlUtils: com.l2jfrozen.common.util.database.SqlUtils getInstance()
com.l2jfrozen.common.util.database.SqlUtils: java.lang.Integer getIntValue(java.lang.String,java.lang.String,java.lang.String)
com.l2jfrozen.common.util.database.SqlUtils: java.lang.Integer[] getIntArray(java.lang.String,java.lang.String,java.lang.String)
com.l2jfrozen.common.util.database.SqlUtils: java.lang.Integer[][] get2DIntArray(java.lang.String[],java.lang.String,java.lang.String)
com.l2jfrozen.common.util.database.SqlUtils: void OpzGame()
com.l2jfrozen.common.util.database.SqlUtils: void OpzLogin()
com.l2jfrozen.common.util.database.SqlUtils: void <clinit>()
com.l2jfrozen.common.util.monitoring.StatusManager
com.l2jfrozen.common.util.monitoring.StatusManager: java.util.List monitoredStatus
com.l2jfrozen.common.util.monitoring.StatusManager: StatusManager()
com.l2jfrozen.common.util.monitoring.StatusManager: boolean registerMonitoredStatus(com.l2jfrozen.common.util.monitoring.data.MonitoredStatus)
com.l2jfrozen.common.util.monitoring.StatusManager: boolean unregisterMonitoredStatus(com.l2jfrozen.common.util.monitoring.data.MonitoredStatus)
com.l2jfrozen.common.util.monitoring.StatusManager: void logStaticMonitoredStatuses()
com.l2jfrozen.common.util.monitoring.StatusManager: void logCurrentMonitoredStatuses()
com.l2jfrozen.common.util.monitoring.StatusManager: java.util.List getCurrentMonitoredStatuses()
com.l2jfrozen.common.util.monitoring.StatusManager: com.l2jfrozen.common.util.monitoring.StatusManager getInstance()
com.l2jfrozen.common.util.monitoring.StatusManager: StatusManager(com.l2jfrozen.common.util.monitoring.StatusManager$1)
com.l2jfrozen.common.util.monitoring.StatusManager$1
com.l2jfrozen.common.util.monitoring.StatusManager$SingletonHolder
com.l2jfrozen.common.util.monitoring.StatusManager$SingletonHolder: com.l2jfrozen.common.util.monitoring.StatusManager _instance
com.l2jfrozen.common.util.monitoring.StatusManager$SingletonHolder: StatusManager$SingletonHolder()
com.l2jfrozen.common.util.monitoring.StatusManager$SingletonHolder: void <clinit>()
com.l2jfrozen.common.util.monitoring.data.MonitoredStatus
com.l2jfrozen.common.util.monitoring.data.MonitoredStatus: org.apache.log4j.Logger LOGGER
com.l2jfrozen.common.util.monitoring.data.MonitoredStatus: MonitoredStatus()
com.l2jfrozen.common.util.monitoring.data.MonitoredStatus: void refreshStatus()
com.l2jfrozen.common.util.monitoring.data.MonitoredStatus: java.lang.String getStaticStatus()
com.l2jfrozen.common.util.monitoring.data.MonitoredStatus: java.lang.String getDynamicStatus()
com.l2jfrozen.common.util.monitoring.data.MonitoredStatus: void printDynamicStatus()
com.l2jfrozen.common.util.monitoring.data.MonitoredStatus: void printStaticStatus()
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: long serialVersionUID
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: java.lang.String systemTime
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: int avaibleCPUs
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: java.lang.String processorIdentifier
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: java.lang.String os
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: java.lang.String osBuild
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: java.lang.String osArch
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: java.lang.String javaRuntimeName
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: java.lang.String javaVersion
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: java.lang.String javaClassVersion
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: long currentFreeHeapSize
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: long currentHeapSize
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: long maximumHeapSize
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: java.lang.String jvmName
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: java.lang.String jvmInstallationDirectory
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: java.lang.String jvmVersion
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: java.lang.String jvmVendor
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: java.lang.String jvmExtraInfo
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: RuntimeStatus()
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: java.lang.String getSystemTime()
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: int getAvaibleCPUs()
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: java.lang.String getProcessorIdentifier()
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: java.lang.String getOs()
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: java.lang.String getOsArch()
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: java.lang.String getJavaRuntimeName()
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: java.lang.String getJavaVersion()
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: java.lang.String getJavaClassVersion()
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: long getCurrentFreeHeapSize()
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: long getCurrentHeapSize()
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: long getMaximumHeapSize()
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: java.lang.String getJvmName()
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: java.lang.String getJvmInstallationDirectory()
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: java.lang.String getJvmVersion()
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: java.lang.String getJvmVendor()
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: java.lang.String getJvmExtraInfo()
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: java.lang.String toString()
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: java.lang.String getCpuInfo()
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: java.lang.String getOSInfo()
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: java.lang.String getJreInfo()
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: java.lang.String getRuntimeInfo()
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: java.lang.String getSystemTimeInfo()
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: java.lang.String getJvmInfo()
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: java.lang.String getDynamicStatus()
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: java.lang.String getStaticStatus()
com.l2jfrozen.common.util.monitoring.data.RuntimeStatus: void refreshStatus()
com.l2jfrozen.common.util.monitoring.task.TaskPrintServerStatus
com.l2jfrozen.common.util.monitoring.task.TaskPrintServerStatus: java.lang.String NAME
com.l2jfrozen.common.util.monitoring.task.TaskPrintServerStatus: TaskPrintServerStatus()
com.l2jfrozen.common.util.monitoring.task.TaskPrintServerStatus: java.lang.String getName()
com.l2jfrozen.common.util.monitoring.task.TaskPrintServerStatus: void onTimeElapsed(com.l2jfrozen.common.util.taskmanager.ExecutedTask)
com.l2jfrozen.common.util.monitoring.task.TaskPrintServerStatus: void initializate()
com.l2jfrozen.common.util.random.NonAtomicRandom
com.l2jfrozen.common.util.random.NonAtomicRandom: long serialVersionUID
com.l2jfrozen.common.util.random.NonAtomicRandom: long _seed
com.l2jfrozen.common.util.random.NonAtomicRandom: NonAtomicRandom()
com.l2jfrozen.common.util.random.NonAtomicRandom: NonAtomicRandom(long)
com.l2jfrozen.common.util.random.NonAtomicRandom: int next(int)
com.l2jfrozen.common.util.random.NonAtomicRandom: void setSeed(long)
com.l2jfrozen.common.util.random.RandomContainer
com.l2jfrozen.common.util.random.RandomContainer: java.util.Random _random
com.l2jfrozen.common.util.random.RandomContainer: RandomContainer(java.util.Random)
com.l2jfrozen.common.util.random.RandomContainer: java.util.Random directRandom()
com.l2jfrozen.common.util.random.RandomContainer: double get()
com.l2jfrozen.common.util.random.RandomContainer: int get(int)
com.l2jfrozen.common.util.random.RandomContainer: int get(int,int)
com.l2jfrozen.common.util.random.RandomContainer: long get(long,long)
com.l2jfrozen.common.util.random.RandomContainer: boolean nextBoolean()
com.l2jfrozen.common.util.random.RandomContainer: void nextBytes(byte[])
com.l2jfrozen.common.util.random.RandomContainer: double nextDouble()
com.l2jfrozen.common.util.random.RandomContainer: float nextFloat()
com.l2jfrozen.common.util.random.RandomContainer: double nextGaussian()
com.l2jfrozen.common.util.random.RandomContainer: int nextInt()
com.l2jfrozen.common.util.random.RandomContainer: long nextLong()
com.l2jfrozen.common.util.random.RandomType
com.l2jfrozen.common.util.random.RandomType: com.l2jfrozen.common.util.random.RandomType SECURE
com.l2jfrozen.common.util.random.RandomType: com.l2jfrozen.common.util.random.RandomType UNSECURE_ATOMIC
com.l2jfrozen.common.util.random.RandomType: com.l2jfrozen.common.util.random.RandomType UNSECURE_THREAD_LOCAL
com.l2jfrozen.common.util.random.RandomType: com.l2jfrozen.common.util.random.RandomType UNSECURE_VOLATILE
com.l2jfrozen.common.util.random.RandomType: com.l2jfrozen.common.util.random.RandomType[] $VALUES
com.l2jfrozen.common.util.random.RandomType: com.l2jfrozen.common.util.random.RandomType[] values()
com.l2jfrozen.common.util.random.RandomType: com.l2jfrozen.common.util.random.RandomType valueOf(java.lang.String)
com.l2jfrozen.common.util.random.RandomType: RandomType(java.lang.String,int)
com.l2jfrozen.common.util.random.RandomType: void <clinit>()
com.l2jfrozen.common.util.random.Rnd
com.l2jfrozen.common.util.random.Rnd: long ADDEND
com.l2jfrozen.common.util.random.Rnd: long MASK
com.l2jfrozen.common.util.random.Rnd: long MULTIPLIER
com.l2jfrozen.common.util.random.Rnd: long SEED_UNIQUIFIER
com.l2jfrozen.common.util.random.Rnd: com.l2jfrozen.common.util.random.RandomContainer rnd
com.l2jfrozen.common.util.random.Rnd: Rnd()
com.l2jfrozen.common.util.random.Rnd: com.l2jfrozen.common.util.random.RandomContainer newInstance(com.l2jfrozen.common.util.random.RandomType)
com.l2jfrozen.common.util.random.Rnd: java.util.Random directRandom()
com.l2jfrozen.common.util.random.Rnd: double get()
com.l2jfrozen.common.util.random.Rnd: int get(int)
com.l2jfrozen.common.util.random.Rnd: int get(int,int)
com.l2jfrozen.common.util.random.Rnd: long get(long,long)
com.l2jfrozen.common.util.random.Rnd: boolean nextBoolean()
com.l2jfrozen.common.util.random.Rnd: void nextBytes(byte[])
com.l2jfrozen.common.util.random.Rnd: double nextDouble()
com.l2jfrozen.common.util.random.Rnd: float nextFloat()
com.l2jfrozen.common.util.random.Rnd: double nextGaussian()
com.l2jfrozen.common.util.random.Rnd: int nextInt()
com.l2jfrozen.common.util.random.Rnd: int nextInt(int)
com.l2jfrozen.common.util.random.Rnd: long nextLong()
com.l2jfrozen.common.util.random.Rnd: void <clinit>()
com.l2jfrozen.common.util.random.Rnd$1
com.l2jfrozen.common.util.random.Rnd$1: int[] $SwitchMap$com$l2jfrozen$common$util$random$RandomType
com.l2jfrozen.common.util.random.Rnd$1: void <clinit>()
com.l2jfrozen.common.util.random.ThreadLocalRandom
com.l2jfrozen.common.util.random.ThreadLocalRandom: long serialVersionUID
com.l2jfrozen.common.util.random.ThreadLocalRandom: java.lang.ThreadLocal _seedLocal
com.l2jfrozen.common.util.random.ThreadLocalRandom: ThreadLocalRandom()
com.l2jfrozen.common.util.random.ThreadLocalRandom: ThreadLocalRandom(long)
com.l2jfrozen.common.util.random.ThreadLocalRandom: int next(int)
com.l2jfrozen.common.util.random.ThreadLocalRandom: void setSeed(long)
com.l2jfrozen.common.util.random.ThreadLocalRandom$1
com.l2jfrozen.common.util.random.ThreadLocalRandom$1: com.l2jfrozen.common.util.random.ThreadLocalRandom this$0
com.l2jfrozen.common.util.random.ThreadLocalRandom$1: ThreadLocalRandom$1(com.l2jfrozen.common.util.random.ThreadLocalRandom)
com.l2jfrozen.common.util.random.ThreadLocalRandom$1: com.l2jfrozen.common.util.random.ThreadLocalRandom$Seed initialValue()
com.l2jfrozen.common.util.random.ThreadLocalRandom$1: java.lang.Object initialValue()
com.l2jfrozen.common.util.random.ThreadLocalRandom$2
com.l2jfrozen.common.util.random.ThreadLocalRandom$2: long val$seed
com.l2jfrozen.common.util.random.ThreadLocalRandom$2: com.l2jfrozen.common.util.random.ThreadLocalRandom this$0
com.l2jfrozen.common.util.random.ThreadLocalRandom$2: ThreadLocalRandom$2(com.l2jfrozen.common.util.random.ThreadLocalRandom,long)
com.l2jfrozen.common.util.random.ThreadLocalRandom$2: com.l2jfrozen.common.util.random.ThreadLocalRandom$Seed initialValue()
com.l2jfrozen.common.util.random.ThreadLocalRandom$2: java.lang.Object initialValue()
com.l2jfrozen.common.util.random.ThreadLocalRandom$Seed
com.l2jfrozen.common.util.random.ThreadLocalRandom$Seed: long _seed
com.l2jfrozen.common.util.random.ThreadLocalRandom$Seed: com.l2jfrozen.common.util.random.ThreadLocalRandom this$0
com.l2jfrozen.common.util.random.ThreadLocalRandom$Seed: ThreadLocalRandom$Seed(com.l2jfrozen.common.util.random.ThreadLocalRandom,long)
com.l2jfrozen.common.util.random.ThreadLocalRandom$Seed: int next(int)
com.l2jfrozen.common.util.random.ThreadLocalRandom$Seed: void setSeed(long)
com.l2jfrozen.common.util.taskmanager.ExclusiveTask
com.l2jfrozen.common.util.taskmanager.ExclusiveTask: boolean _returnIfAlreadyRunning
com.l2jfrozen.common.util.taskmanager.ExclusiveTask: java.util.concurrent.Future _future
com.l2jfrozen.common.util.taskmanager.ExclusiveTask: boolean _isRunning
com.l2jfrozen.common.util.taskmanager.ExclusiveTask: java.lang.Thread _currentThread
com.l2jfrozen.common.util.taskmanager.ExclusiveTask: java.lang.Runnable _runnable
com.l2jfrozen.common.util.taskmanager.ExclusiveTask: ExclusiveTask(boolean)
com.l2jfrozen.common.util.taskmanager.ExclusiveTask: ExclusiveTask()
com.l2jfrozen.common.util.taskmanager.ExclusiveTask: boolean isScheduled()
com.l2jfrozen.common.util.taskmanager.ExclusiveTask: void cancel()
com.l2jfrozen.common.util.taskmanager.ExclusiveTask: void schedule(long)
com.l2jfrozen.common.util.taskmanager.ExclusiveTask: void execute()
com.l2jfrozen.common.util.taskmanager.ExclusiveTask: void scheduleAtFixedRate(long,long)
com.l2jfrozen.common.util.taskmanager.ExclusiveTask: void onElapsed()
com.l2jfrozen.common.util.taskmanager.ExclusiveTask: boolean tryLock()
com.l2jfrozen.common.util.taskmanager.ExclusiveTask: void unlock()
com.l2jfrozen.common.util.taskmanager.ExclusiveTask$1
com.l2jfrozen.common.util.taskmanager.ExclusiveTask$1: com.l2jfrozen.common.util.taskmanager.ExclusiveTask this$0
com.l2jfrozen.common.util.taskmanager.ExclusiveTask$1: ExclusiveTask$1(com.l2jfrozen.common.util.taskmanager.ExclusiveTask)
com.l2jfrozen.common.util.taskmanager.ExclusiveTask$1: void run()
com.l2jfrozen.common.util.taskmanager.ExecutedTask
com.l2jfrozen.common.util.taskmanager.ExecutedTask: int id
com.l2jfrozen.common.util.taskmanager.ExecutedTask: long lastActivation
com.l2jfrozen.common.util.taskmanager.ExecutedTask: com.l2jfrozen.common.util.taskmanager.Task task
com.l2jfrozen.common.util.taskmanager.ExecutedTask: com.l2jfrozen.common.util.taskmanager.TaskTypes type
com.l2jfrozen.common.util.taskmanager.ExecutedTask: java.lang.String[] params
com.l2jfrozen.common.util.taskmanager.ExecutedTask: java.util.concurrent.ScheduledFuture scheduled
com.l2jfrozen.common.util.taskmanager.ExecutedTask: ExecutedTask(com.l2jfrozen.common.util.taskmanager.Task,com.l2jfrozen.common.util.taskmanager.TaskTypes,java.sql.ResultSet)
com.l2jfrozen.common.util.taskmanager.ExecutedTask: void run()
com.l2jfrozen.common.util.taskmanager.ExecutedTask: boolean equals(java.lang.Object)
com.l2jfrozen.common.util.taskmanager.ExecutedTask: int hashCode()
com.l2jfrozen.common.util.taskmanager.ExecutedTask: com.l2jfrozen.common.util.taskmanager.Task getTask()
com.l2jfrozen.common.util.taskmanager.ExecutedTask: com.l2jfrozen.common.util.taskmanager.TaskTypes getType()
com.l2jfrozen.common.util.taskmanager.ExecutedTask: int getId()
com.l2jfrozen.common.util.taskmanager.ExecutedTask: java.lang.String[] getParams()
com.l2jfrozen.common.util.taskmanager.ExecutedTask: long getLastActivation()
com.l2jfrozen.common.util.taskmanager.ExecutedTask: void stopTask()
com.l2jfrozen.common.util.taskmanager.ExecutedTask: void setScheduled(java.util.concurrent.ScheduledFuture)
com.l2jfrozen.common.util.taskmanager.Task
com.l2jfrozen.common.util.taskmanager.Task: org.apache.log4j.Logger LOGGER
com.l2jfrozen.common.util.taskmanager.Task: Task()
com.l2jfrozen.common.util.taskmanager.Task: void initializate()
com.l2jfrozen.common.util.taskmanager.Task: java.util.concurrent.ScheduledFuture launchSpecial(com.l2jfrozen.common.util.taskmanager.ExecutedTask)
com.l2jfrozen.common.util.taskmanager.Task: java.lang.String getName()
com.l2jfrozen.common.util.taskmanager.Task: void onTimeElapsed(com.l2jfrozen.common.util.taskmanager.ExecutedTask)
com.l2jfrozen.common.util.taskmanager.Task: void onDestroy()
com.l2jfrozen.common.util.taskmanager.Task: void <clinit>()
com.l2jfrozen.common.util.taskmanager.TaskManager
com.l2jfrozen.common.util.taskmanager.TaskManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.common.util.taskmanager.TaskManager: com.l2jfrozen.common.util.taskmanager.TaskManager _instance
com.l2jfrozen.common.util.taskmanager.TaskManager: java.lang.String[] SQL_STATEMENTS
com.l2jfrozen.common.util.taskmanager.TaskManager: javolution.util.FastMap _tasks
com.l2jfrozen.common.util.taskmanager.TaskManager: javolution.util.FastList _currentTasks
com.l2jfrozen.common.util.taskmanager.TaskManager: com.l2jfrozen.common.util.taskmanager.TaskManager getInstance()
com.l2jfrozen.common.util.taskmanager.TaskManager: TaskManager()
com.l2jfrozen.common.util.taskmanager.TaskManager: void registerTask(com.l2jfrozen.common.util.taskmanager.Task)
com.l2jfrozen.common.util.taskmanager.TaskManager: void startRegisteredTasksPresentOnDB()
com.l2jfrozen.common.util.taskmanager.TaskManager: boolean launchTask(com.l2jfrozen.common.util.taskmanager.ExecutedTask)
com.l2jfrozen.common.util.taskmanager.TaskManager: boolean addUniqueTaskOnDB(java.lang.String,com.l2jfrozen.common.util.taskmanager.TaskTypes,java.lang.String,java.lang.String,java.lang.String)
com.l2jfrozen.common.util.taskmanager.TaskManager: boolean updateExecutedTaskOnDB(long,int)
com.l2jfrozen.common.util.taskmanager.TaskManager: boolean addUniqueTaskOnDB(java.lang.String,com.l2jfrozen.common.util.taskmanager.TaskTypes,java.lang.String,java.lang.String,java.lang.String,long)
com.l2jfrozen.common.util.taskmanager.TaskManager: boolean addTaskOnDB(java.lang.String,com.l2jfrozen.common.util.taskmanager.TaskTypes,java.lang.String,java.lang.String,java.lang.String)
com.l2jfrozen.common.util.taskmanager.TaskManager: boolean addTaskOnDB(java.lang.String,com.l2jfrozen.common.util.taskmanager.TaskTypes,java.lang.String,java.lang.String,java.lang.String,long)
com.l2jfrozen.common.util.taskmanager.TaskManager: void removeActiveTask(com.l2jfrozen.common.util.taskmanager.ExecutedTask)
com.l2jfrozen.common.util.taskmanager.TaskManager: void <clinit>()
com.l2jfrozen.common.util.taskmanager.TaskTypes
com.l2jfrozen.common.util.taskmanager.TaskTypes: com.l2jfrozen.common.util.taskmanager.TaskTypes TYPE_NONE
com.l2jfrozen.common.util.taskmanager.TaskTypes: com.l2jfrozen.common.util.taskmanager.TaskTypes TYPE_TIME
com.l2jfrozen.common.util.taskmanager.TaskTypes: com.l2jfrozen.common.util.taskmanager.TaskTypes TYPE_SHEDULED
com.l2jfrozen.common.util.taskmanager.TaskTypes: com.l2jfrozen.common.util.taskmanager.TaskTypes TYPE_FIXED_SHEDULED
com.l2jfrozen.common.util.taskmanager.TaskTypes: com.l2jfrozen.common.util.taskmanager.TaskTypes TYPE_GLOBAL_TASK
com.l2jfrozen.common.util.taskmanager.TaskTypes: com.l2jfrozen.common.util.taskmanager.TaskTypes TYPE_STARTUP
com.l2jfrozen.common.util.taskmanager.TaskTypes: com.l2jfrozen.common.util.taskmanager.TaskTypes TYPE_SPECIAL
com.l2jfrozen.common.util.taskmanager.TaskTypes: com.l2jfrozen.common.util.taskmanager.TaskTypes[] $VALUES
com.l2jfrozen.common.util.taskmanager.TaskTypes: com.l2jfrozen.common.util.taskmanager.TaskTypes[] values()
com.l2jfrozen.common.util.taskmanager.TaskTypes: com.l2jfrozen.common.util.taskmanager.TaskTypes valueOf(java.lang.String)
com.l2jfrozen.common.util.taskmanager.TaskTypes: TaskTypes(java.lang.String,int)
com.l2jfrozen.common.util.taskmanager.TaskTypes: void <clinit>()
com.l2jfrozen.gameserver.GameServer
com.l2jfrozen.gameserver.GameServer: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.GameServer: com.l2jfrozen.gameserver.LoginServerThread _loginThread
com.l2jfrozen.gameserver.GameServer: com.l2jfrozen.gameserver.network.L2GamePacketHandler _gamePacketHandler
com.l2jfrozen.gameserver.GameServer: java.util.Calendar dateTimeServerStarted
com.l2jfrozen.gameserver.GameServer: GameServer()
com.l2jfrozen.gameserver.GameServer: void main(java.lang.String[])
com.l2jfrozen.gameserver.GameServer: void <clinit>()
com.l2jfrozen.gameserver.LoginServerThread
com.l2jfrozen.gameserver.LoginServerThread: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.LoginServerThread: org.apache.log4j.Logger LOGGER_ACCOUNTING
com.l2jfrozen.gameserver.LoginServerThread: int REVISION
com.l2jfrozen.gameserver.LoginServerThread: java.lang.String _hostname
com.l2jfrozen.gameserver.LoginServerThread: int _port
com.l2jfrozen.gameserver.LoginServerThread: int _gamePort
com.l2jfrozen.gameserver.LoginServerThread: java.net.Socket _loginSocket
com.l2jfrozen.gameserver.LoginServerThread: java.io.OutputStream _out
com.l2jfrozen.gameserver.LoginServerThread: com.l2jfrozen.netcore.util.crypt.NewCrypt _blowfish
com.l2jfrozen.gameserver.LoginServerThread: byte[] _hexID
com.l2jfrozen.gameserver.LoginServerThread: boolean _acceptAlternate
com.l2jfrozen.gameserver.LoginServerThread: int _requestID
com.l2jfrozen.gameserver.LoginServerThread: boolean _reserveHost
com.l2jfrozen.gameserver.LoginServerThread: int _maxPlayer
com.l2jfrozen.gameserver.LoginServerThread: java.util.List _waitingClients
com.l2jfrozen.gameserver.LoginServerThread: java.util.Map _accountsInGameServer
com.l2jfrozen.gameserver.LoginServerThread: int _status
com.l2jfrozen.gameserver.LoginServerThread: java.lang.String _serverName
com.l2jfrozen.gameserver.LoginServerThread: java.util.List _subnets
com.l2jfrozen.gameserver.LoginServerThread: java.util.List _hosts
com.l2jfrozen.gameserver.LoginServerThread: LoginServerThread()
com.l2jfrozen.gameserver.LoginServerThread: void run()
com.l2jfrozen.gameserver.LoginServerThread: byte[] generateHex(int)
com.l2jfrozen.gameserver.LoginServerThread: void addWaitingClientAndSendRequest(java.lang.String,com.l2jfrozen.gameserver.network.L2GameClient,com.l2jfrozen.netcore.SessionKey)
com.l2jfrozen.gameserver.LoginServerThread: void removeWaitingClient(com.l2jfrozen.gameserver.network.L2GameClient)
com.l2jfrozen.gameserver.LoginServerThread: void sendLogout(java.lang.String)
com.l2jfrozen.gameserver.LoginServerThread: boolean addGameServerLogin(java.lang.String,com.l2jfrozen.gameserver.network.L2GameClient)
com.l2jfrozen.gameserver.LoginServerThread: void sendAccessLevel(java.lang.String,int)
com.l2jfrozen.gameserver.LoginServerThread: void sendClientTracert(java.lang.String,java.lang.String[])
com.l2jfrozen.gameserver.LoginServerThread: java.lang.String hexToString(byte[])
com.l2jfrozen.gameserver.LoginServerThread: void doKickPlayer(java.lang.String)
com.l2jfrozen.gameserver.LoginServerThread: void sendPacket(com.l2jfrozen.netcore.util.network.BaseSendablePacket)
com.l2jfrozen.gameserver.LoginServerThread: void setMaxPlayer(int)
com.l2jfrozen.gameserver.LoginServerThread: int getMaxPlayer()
com.l2jfrozen.gameserver.LoginServerThread: void sendServerStatus(int,int)
com.l2jfrozen.gameserver.LoginServerThread: void sendServerType()
com.l2jfrozen.gameserver.LoginServerThread: java.lang.String getStatusString()
com.l2jfrozen.gameserver.LoginServerThread: java.lang.String getServerName()
com.l2jfrozen.gameserver.LoginServerThread: void setServerStatus(int)
com.l2jfrozen.gameserver.LoginServerThread: com.l2jfrozen.gameserver.network.L2GameClient getClient(java.lang.String)
com.l2jfrozen.gameserver.LoginServerThread: com.l2jfrozen.gameserver.LoginServerThread getInstance()
com.l2jfrozen.gameserver.LoginServerThread: void saveHexid(int,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.LoginServerThread: void <clinit>()
com.l2jfrozen.gameserver.LoginServerThread$SingletonHolder
com.l2jfrozen.gameserver.LoginServerThread$SingletonHolder: com.l2jfrozen.gameserver.LoginServerThread _instance
com.l2jfrozen.gameserver.LoginServerThread$SingletonHolder: LoginServerThread$SingletonHolder()
com.l2jfrozen.gameserver.LoginServerThread$SingletonHolder: void <clinit>()
com.l2jfrozen.gameserver.LoginServerThread$WaitingClient
com.l2jfrozen.gameserver.LoginServerThread$WaitingClient: java.lang.String account
com.l2jfrozen.gameserver.LoginServerThread$WaitingClient: com.l2jfrozen.gameserver.network.L2GameClient gameClient
com.l2jfrozen.gameserver.LoginServerThread$WaitingClient: com.l2jfrozen.netcore.SessionKey session
com.l2jfrozen.gameserver.LoginServerThread$WaitingClient: LoginServerThread$WaitingClient(java.lang.String,com.l2jfrozen.gameserver.network.L2GameClient,com.l2jfrozen.netcore.SessionKey)
com.l2jfrozen.gameserver.Shutdown
com.l2jfrozen.gameserver.Shutdown: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.Shutdown: com.l2jfrozen.gameserver.Shutdown _instance
com.l2jfrozen.gameserver.Shutdown: com.l2jfrozen.gameserver.Shutdown _counterInstance
com.l2jfrozen.gameserver.Shutdown: int _secondsShut
com.l2jfrozen.gameserver.Shutdown: int _shutdownMode
com.l2jfrozen.gameserver.Shutdown: boolean _shutdownStarted
com.l2jfrozen.gameserver.Shutdown: int SIGTERM
com.l2jfrozen.gameserver.Shutdown: int GM_SHUTDOWN
com.l2jfrozen.gameserver.Shutdown: int GM_RESTART
com.l2jfrozen.gameserver.Shutdown: int ABORT
com.l2jfrozen.gameserver.Shutdown: int TASK_SHUTDOWN
com.l2jfrozen.gameserver.Shutdown: int TASK_RESTART
com.l2jfrozen.gameserver.Shutdown: int TELL_SHUTDOWN
com.l2jfrozen.gameserver.Shutdown: int TELL_RESTART
com.l2jfrozen.gameserver.Shutdown: java.lang.String[] MODE_TEXT
com.l2jfrozen.gameserver.Shutdown: Shutdown()
com.l2jfrozen.gameserver.Shutdown: Shutdown(int,boolean,boolean)
com.l2jfrozen.gameserver.Shutdown: com.l2jfrozen.gameserver.Shutdown getInstance()
com.l2jfrozen.gameserver.Shutdown: boolean isShutdownStarted()
com.l2jfrozen.gameserver.Shutdown: void run()
com.l2jfrozen.gameserver.Shutdown: void startShutdown(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,boolean)
com.l2jfrozen.gameserver.Shutdown: int getCountdown()
com.l2jfrozen.gameserver.Shutdown: void abort(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.Shutdown: void _abort()
com.l2jfrozen.gameserver.Shutdown: void countdown()
com.l2jfrozen.gameserver.Shutdown: void closeServer()
com.l2jfrozen.gameserver.Shutdown: void saveData()
com.l2jfrozen.gameserver.Shutdown: void saveAllPlayers()
com.l2jfrozen.gameserver.Shutdown: void disconnectAllCharacters()
com.l2jfrozen.gameserver.Shutdown: void <clinit>()
com.l2jfrozen.gameserver.ShutdownModeType1
com.l2jfrozen.gameserver.ShutdownModeType1: com.l2jfrozen.gameserver.ShutdownModeType1 SIGTERM
com.l2jfrozen.gameserver.ShutdownModeType1: com.l2jfrozen.gameserver.ShutdownModeType1 SHUTDOWN
com.l2jfrozen.gameserver.ShutdownModeType1: com.l2jfrozen.gameserver.ShutdownModeType1 RESTART
com.l2jfrozen.gameserver.ShutdownModeType1: com.l2jfrozen.gameserver.ShutdownModeType1 ABORT
com.l2jfrozen.gameserver.ShutdownModeType1: com.l2jfrozen.gameserver.ShutdownModeType1 TASK_SHUT
com.l2jfrozen.gameserver.ShutdownModeType1: com.l2jfrozen.gameserver.ShutdownModeType1 TASK_RES
com.l2jfrozen.gameserver.ShutdownModeType1: com.l2jfrozen.gameserver.ShutdownModeType1 TELL_SHUT
com.l2jfrozen.gameserver.ShutdownModeType1: com.l2jfrozen.gameserver.ShutdownModeType1 TELL_RES
com.l2jfrozen.gameserver.ShutdownModeType1: java.lang.String _modeText
com.l2jfrozen.gameserver.ShutdownModeType1: com.l2jfrozen.gameserver.ShutdownModeType1[] $VALUES
com.l2jfrozen.gameserver.ShutdownModeType1: com.l2jfrozen.gameserver.ShutdownModeType1[] values()
com.l2jfrozen.gameserver.ShutdownModeType1: com.l2jfrozen.gameserver.ShutdownModeType1 valueOf(java.lang.String)
com.l2jfrozen.gameserver.ShutdownModeType1: ShutdownModeType1(java.lang.String,int,java.lang.String)
com.l2jfrozen.gameserver.ShutdownModeType1: java.lang.String getText()
com.l2jfrozen.gameserver.ShutdownModeType1: void <clinit>()
com.l2jfrozen.gameserver.ai.AbstractAI
com.l2jfrozen.gameserver.ai.AbstractAI: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.ai.AbstractAI: com.l2jfrozen.gameserver.model.L2Character _actor
com.l2jfrozen.gameserver.ai.AbstractAI: com.l2jfrozen.gameserver.model.L2Character$AIAccessor _accessor
com.l2jfrozen.gameserver.ai.AbstractAI: com.l2jfrozen.gameserver.ai.CtrlIntention _intention
com.l2jfrozen.gameserver.ai.AbstractAI: java.lang.Object _intentionArg0
com.l2jfrozen.gameserver.ai.AbstractAI: java.lang.Object _intentionArg1
com.l2jfrozen.gameserver.ai.AbstractAI: boolean _clientMoving
com.l2jfrozen.gameserver.ai.AbstractAI: boolean _clientAutoAttacking
com.l2jfrozen.gameserver.ai.AbstractAI: int _clientMovingToPawnOffset
com.l2jfrozen.gameserver.ai.AbstractAI: com.l2jfrozen.gameserver.model.L2Object _target
com.l2jfrozen.gameserver.ai.AbstractAI: com.l2jfrozen.gameserver.model.L2Character _castTarget
com.l2jfrozen.gameserver.ai.AbstractAI: com.l2jfrozen.gameserver.model.L2Character _attackTarget
com.l2jfrozen.gameserver.ai.AbstractAI: com.l2jfrozen.gameserver.model.L2Character _followTarget
com.l2jfrozen.gameserver.ai.AbstractAI: int _moveToPawnTimeout
com.l2jfrozen.gameserver.ai.AbstractAI: java.util.concurrent.Future _followTask
com.l2jfrozen.gameserver.ai.AbstractAI: int FOLLOW_INTERVAL
com.l2jfrozen.gameserver.ai.AbstractAI: int ATTACK_FOLLOW_INTERVAL
com.l2jfrozen.gameserver.ai.AbstractAI: AbstractAI(com.l2jfrozen.gameserver.model.L2Character$AIAccessor)
com.l2jfrozen.gameserver.ai.AbstractAI: com.l2jfrozen.gameserver.model.L2Character getActor()
com.l2jfrozen.gameserver.ai.AbstractAI: void changeIntention(com.l2jfrozen.gameserver.ai.CtrlIntention,java.lang.Object,java.lang.Object)
com.l2jfrozen.gameserver.ai.AbstractAI: void setIntention(com.l2jfrozen.gameserver.ai.CtrlIntention)
com.l2jfrozen.gameserver.ai.AbstractAI: void setIntention(com.l2jfrozen.gameserver.ai.CtrlIntention,java.lang.Object)
com.l2jfrozen.gameserver.ai.AbstractAI: void setIntention(com.l2jfrozen.gameserver.ai.CtrlIntention,java.lang.Object,java.lang.Object)
com.l2jfrozen.gameserver.ai.AbstractAI: void notifyEvent(com.l2jfrozen.gameserver.ai.CtrlEvent)
com.l2jfrozen.gameserver.ai.AbstractAI: void notifyEvent(com.l2jfrozen.gameserver.ai.CtrlEvent,java.lang.Object)
com.l2jfrozen.gameserver.ai.AbstractAI: void notifyEvent(com.l2jfrozen.gameserver.ai.CtrlEvent,java.lang.Object,java.lang.Object)
com.l2jfrozen.gameserver.ai.AbstractAI: void onIntentionIdle()
com.l2jfrozen.gameserver.ai.AbstractAI: void onIntentionActive()
com.l2jfrozen.gameserver.ai.AbstractAI: void onIntentionRest()
com.l2jfrozen.gameserver.ai.AbstractAI: void onIntentionAttack(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.AbstractAI: void onIntentionCast(com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.ai.AbstractAI: void onIntentionMoveTo(com.l2jfrozen.gameserver.model.actor.position.L2CharPosition)
com.l2jfrozen.gameserver.ai.AbstractAI: void onIntentionMoveToInABoat(com.l2jfrozen.gameserver.model.actor.position.L2CharPosition,com.l2jfrozen.gameserver.model.actor.position.L2CharPosition)
com.l2jfrozen.gameserver.ai.AbstractAI: void onIntentionFollow(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.AbstractAI: void onIntentionPickUp(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.ai.AbstractAI: void onIntentionInteract(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.ai.AbstractAI: void onEvtThink()
com.l2jfrozen.gameserver.ai.AbstractAI: void onEvtAttacked(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.AbstractAI: void onEvtAggression(com.l2jfrozen.gameserver.model.L2Character,int)
com.l2jfrozen.gameserver.ai.AbstractAI: void onEvtStunned(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.AbstractAI: void onEvtSleeping(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.AbstractAI: void onEvtRooted(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.AbstractAI: void onEvtConfused(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.AbstractAI: void onEvtMuted(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.AbstractAI: void onEvtReadyToAct()
com.l2jfrozen.gameserver.ai.AbstractAI: void onEvtUserCmd(java.lang.Object,java.lang.Object)
com.l2jfrozen.gameserver.ai.AbstractAI: void onEvtArrived()
com.l2jfrozen.gameserver.ai.AbstractAI: void onEvtArrivedRevalidate()
com.l2jfrozen.gameserver.ai.AbstractAI: void onEvtArrivedBlocked(com.l2jfrozen.gameserver.model.actor.position.L2CharPosition)
com.l2jfrozen.gameserver.ai.AbstractAI: void onEvtForgetObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.ai.AbstractAI: void onEvtCancel()
com.l2jfrozen.gameserver.ai.AbstractAI: void onEvtDead()
com.l2jfrozen.gameserver.ai.AbstractAI: void onEvtFakeDeath()
com.l2jfrozen.gameserver.ai.AbstractAI: void onEvtFinishCasting()
com.l2jfrozen.gameserver.ai.AbstractAI: void clientActionFailed()
com.l2jfrozen.gameserver.ai.AbstractAI: void moveToPawn(com.l2jfrozen.gameserver.model.L2Object,int)
com.l2jfrozen.gameserver.ai.AbstractAI: void moveTo(int,int,int)
com.l2jfrozen.gameserver.ai.AbstractAI: void moveToInABoat(com.l2jfrozen.gameserver.model.actor.position.L2CharPosition,com.l2jfrozen.gameserver.model.actor.position.L2CharPosition)
com.l2jfrozen.gameserver.ai.AbstractAI: void clientStopMoving(com.l2jfrozen.gameserver.model.actor.position.L2CharPosition)
com.l2jfrozen.gameserver.ai.AbstractAI: void clientStoppedMoving()
com.l2jfrozen.gameserver.ai.AbstractAI: void clientStartAutoAttack()
com.l2jfrozen.gameserver.ai.AbstractAI: void clientStopAutoAttack()
com.l2jfrozen.gameserver.ai.AbstractAI: void clientNotifyDead()
com.l2jfrozen.gameserver.ai.AbstractAI: void describeStateToPlayer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.ai.AbstractAI: void startFollow(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.AbstractAI: void startFollow(com.l2jfrozen.gameserver.model.L2Character,int)
com.l2jfrozen.gameserver.ai.AbstractAI: void stopFollow()
com.l2jfrozen.gameserver.ai.AbstractAI: com.l2jfrozen.gameserver.model.L2Character getFollowTarget()
com.l2jfrozen.gameserver.ai.AbstractAI: com.l2jfrozen.gameserver.model.L2Object getTarget()
com.l2jfrozen.gameserver.ai.AbstractAI: void setTarget(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.ai.AbstractAI: void setCastTarget(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.AbstractAI: com.l2jfrozen.gameserver.model.L2Character getCastTarget()
com.l2jfrozen.gameserver.ai.AbstractAI: void setAttackTarget(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.AbstractAI: com.l2jfrozen.gameserver.model.L2Character getAttackTarget()
com.l2jfrozen.gameserver.ai.AbstractAI: boolean isAutoAttacking()
com.l2jfrozen.gameserver.ai.AbstractAI: void setAutoAttacking(boolean)
com.l2jfrozen.gameserver.ai.AbstractAI: java.lang.Object get_intentionArg0()
com.l2jfrozen.gameserver.ai.AbstractAI: void set_intentionArg0(java.lang.Object)
com.l2jfrozen.gameserver.ai.AbstractAI: java.lang.Object get_intentionArg1()
com.l2jfrozen.gameserver.ai.AbstractAI: void set_intentionArg1(java.lang.Object)
com.l2jfrozen.gameserver.ai.AbstractAI: com.l2jfrozen.gameserver.ai.CtrlIntention getIntention()
com.l2jfrozen.gameserver.ai.AbstractAI: void <clinit>()
com.l2jfrozen.gameserver.ai.AbstractAI$1
com.l2jfrozen.gameserver.ai.AbstractAI$1: int[] $SwitchMap$com$l2jfrozen$gameserver$ai$CtrlIntention
com.l2jfrozen.gameserver.ai.AbstractAI$1: int[] $SwitchMap$com$l2jfrozen$gameserver$ai$CtrlEvent
com.l2jfrozen.gameserver.ai.AbstractAI$1: void <clinit>()
com.l2jfrozen.gameserver.ai.AbstractAI$FollowTask
com.l2jfrozen.gameserver.ai.AbstractAI$FollowTask: int _range
com.l2jfrozen.gameserver.ai.AbstractAI$FollowTask: boolean newtask
com.l2jfrozen.gameserver.ai.AbstractAI$FollowTask: com.l2jfrozen.gameserver.ai.AbstractAI this$0
com.l2jfrozen.gameserver.ai.AbstractAI$FollowTask: AbstractAI$FollowTask(com.l2jfrozen.gameserver.ai.AbstractAI)
com.l2jfrozen.gameserver.ai.AbstractAI$FollowTask: AbstractAI$FollowTask(com.l2jfrozen.gameserver.ai.AbstractAI,int)
com.l2jfrozen.gameserver.ai.AbstractAI$FollowTask: void run()
com.l2jfrozen.gameserver.ai.Ctrl
com.l2jfrozen.gameserver.ai.Ctrl: com.l2jfrozen.gameserver.model.L2Character getActor()
com.l2jfrozen.gameserver.ai.Ctrl: com.l2jfrozen.gameserver.ai.CtrlIntention getIntention()
com.l2jfrozen.gameserver.ai.Ctrl: com.l2jfrozen.gameserver.model.L2Character getAttackTarget()
com.l2jfrozen.gameserver.ai.Ctrl: void setIntention(com.l2jfrozen.gameserver.ai.CtrlIntention)
com.l2jfrozen.gameserver.ai.Ctrl: void setIntention(com.l2jfrozen.gameserver.ai.CtrlIntention,java.lang.Object)
com.l2jfrozen.gameserver.ai.Ctrl: void setIntention(com.l2jfrozen.gameserver.ai.CtrlIntention,java.lang.Object,java.lang.Object)
com.l2jfrozen.gameserver.ai.Ctrl: void notifyEvent(com.l2jfrozen.gameserver.ai.CtrlEvent)
com.l2jfrozen.gameserver.ai.Ctrl: void notifyEvent(com.l2jfrozen.gameserver.ai.CtrlEvent,java.lang.Object)
com.l2jfrozen.gameserver.ai.Ctrl: void notifyEvent(com.l2jfrozen.gameserver.ai.CtrlEvent,java.lang.Object,java.lang.Object)
com.l2jfrozen.gameserver.ai.CtrlEvent
com.l2jfrozen.gameserver.ai.CtrlEvent: com.l2jfrozen.gameserver.ai.CtrlEvent EVT_THINK
com.l2jfrozen.gameserver.ai.CtrlEvent: com.l2jfrozen.gameserver.ai.CtrlEvent EVT_ATTACKED
com.l2jfrozen.gameserver.ai.CtrlEvent: com.l2jfrozen.gameserver.ai.CtrlEvent EVT_AGGRESSION
com.l2jfrozen.gameserver.ai.CtrlEvent: com.l2jfrozen.gameserver.ai.CtrlEvent EVT_STUNNED
com.l2jfrozen.gameserver.ai.CtrlEvent: com.l2jfrozen.gameserver.ai.CtrlEvent EVT_SLEEPING
com.l2jfrozen.gameserver.ai.CtrlEvent: com.l2jfrozen.gameserver.ai.CtrlEvent EVT_ROOTED
com.l2jfrozen.gameserver.ai.CtrlEvent: com.l2jfrozen.gameserver.ai.CtrlEvent EVT_READY_TO_ACT
com.l2jfrozen.gameserver.ai.CtrlEvent: com.l2jfrozen.gameserver.ai.CtrlEvent EVT_USER_CMD
com.l2jfrozen.gameserver.ai.CtrlEvent: com.l2jfrozen.gameserver.ai.CtrlEvent EVT_ARRIVED
com.l2jfrozen.gameserver.ai.CtrlEvent: com.l2jfrozen.gameserver.ai.CtrlEvent EVT_ARRIVED_REVALIDATE
com.l2jfrozen.gameserver.ai.CtrlEvent: com.l2jfrozen.gameserver.ai.CtrlEvent EVT_ARRIVED_BLOCKED
com.l2jfrozen.gameserver.ai.CtrlEvent: com.l2jfrozen.gameserver.ai.CtrlEvent EVT_FORGET_OBJECT
com.l2jfrozen.gameserver.ai.CtrlEvent: com.l2jfrozen.gameserver.ai.CtrlEvent EVT_CANCEL
com.l2jfrozen.gameserver.ai.CtrlEvent: com.l2jfrozen.gameserver.ai.CtrlEvent EVT_DEAD
com.l2jfrozen.gameserver.ai.CtrlEvent: com.l2jfrozen.gameserver.ai.CtrlEvent EVT_FAKE_DEATH
com.l2jfrozen.gameserver.ai.CtrlEvent: com.l2jfrozen.gameserver.ai.CtrlEvent EVT_CONFUSED
com.l2jfrozen.gameserver.ai.CtrlEvent: com.l2jfrozen.gameserver.ai.CtrlEvent EVT_MUTED
com.l2jfrozen.gameserver.ai.CtrlEvent: com.l2jfrozen.gameserver.ai.CtrlEvent EVT_AFFRAID
com.l2jfrozen.gameserver.ai.CtrlEvent: com.l2jfrozen.gameserver.ai.CtrlEvent EVT_FINISH_CASTING
com.l2jfrozen.gameserver.ai.CtrlEvent: com.l2jfrozen.gameserver.ai.CtrlEvent EVT_BETRAYED
com.l2jfrozen.gameserver.ai.CtrlEvent: com.l2jfrozen.gameserver.ai.CtrlEvent[] $VALUES
com.l2jfrozen.gameserver.ai.CtrlEvent: com.l2jfrozen.gameserver.ai.CtrlEvent[] values()
com.l2jfrozen.gameserver.ai.CtrlEvent: com.l2jfrozen.gameserver.ai.CtrlEvent valueOf(java.lang.String)
com.l2jfrozen.gameserver.ai.CtrlEvent: CtrlEvent(java.lang.String,int)
com.l2jfrozen.gameserver.ai.CtrlEvent: void <clinit>()
com.l2jfrozen.gameserver.ai.CtrlIntention
com.l2jfrozen.gameserver.ai.CtrlIntention: com.l2jfrozen.gameserver.ai.CtrlIntention AI_INTENTION_IDLE
com.l2jfrozen.gameserver.ai.CtrlIntention: com.l2jfrozen.gameserver.ai.CtrlIntention AI_INTENTION_ACTIVE
com.l2jfrozen.gameserver.ai.CtrlIntention: com.l2jfrozen.gameserver.ai.CtrlIntention AI_INTENTION_REST
com.l2jfrozen.gameserver.ai.CtrlIntention: com.l2jfrozen.gameserver.ai.CtrlIntention AI_INTENTION_ATTACK
com.l2jfrozen.gameserver.ai.CtrlIntention: com.l2jfrozen.gameserver.ai.CtrlIntention AI_INTENTION_CAST
com.l2jfrozen.gameserver.ai.CtrlIntention: com.l2jfrozen.gameserver.ai.CtrlIntention AI_INTENTION_MOVE_TO
com.l2jfrozen.gameserver.ai.CtrlIntention: com.l2jfrozen.gameserver.ai.CtrlIntention AI_INTENTION_FOLLOW
com.l2jfrozen.gameserver.ai.CtrlIntention: com.l2jfrozen.gameserver.ai.CtrlIntention AI_INTENTION_PICK_UP
com.l2jfrozen.gameserver.ai.CtrlIntention: com.l2jfrozen.gameserver.ai.CtrlIntention AI_INTENTION_INTERACT
com.l2jfrozen.gameserver.ai.CtrlIntention: com.l2jfrozen.gameserver.ai.CtrlIntention AI_INTENTION_MOVE_TO_IN_A_BOAT
com.l2jfrozen.gameserver.ai.CtrlIntention: com.l2jfrozen.gameserver.ai.CtrlIntention[] $VALUES
com.l2jfrozen.gameserver.ai.CtrlIntention: com.l2jfrozen.gameserver.ai.CtrlIntention[] values()
com.l2jfrozen.gameserver.ai.CtrlIntention: com.l2jfrozen.gameserver.ai.CtrlIntention valueOf(java.lang.String)
com.l2jfrozen.gameserver.ai.CtrlIntention: CtrlIntention(java.lang.String,int)
com.l2jfrozen.gameserver.ai.CtrlIntention: void <clinit>()
com.l2jfrozen.gameserver.ai.L2AttackableAI
com.l2jfrozen.gameserver.ai.L2AttackableAI: int RANDOM_WALK_RATE
com.l2jfrozen.gameserver.ai.L2AttackableAI: int MAX_ATTACK_TIMEOUT
com.l2jfrozen.gameserver.ai.L2AttackableAI: java.util.concurrent.Future _aiTask
com.l2jfrozen.gameserver.ai.L2AttackableAI: int _attackTimeout
com.l2jfrozen.gameserver.ai.L2AttackableAI: int _globalAggro
com.l2jfrozen.gameserver.ai.L2AttackableAI: boolean _thinking
com.l2jfrozen.gameserver.ai.L2AttackableAI: L2AttackableAI(com.l2jfrozen.gameserver.model.L2Character$AIAccessor)
com.l2jfrozen.gameserver.ai.L2AttackableAI: void run()
com.l2jfrozen.gameserver.ai.L2AttackableAI: boolean autoAttackCondition(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.L2AttackableAI: void startAITask()
com.l2jfrozen.gameserver.ai.L2AttackableAI: void stopAITask()
com.l2jfrozen.gameserver.ai.L2AttackableAI: void onEvtDead()
com.l2jfrozen.gameserver.ai.L2AttackableAI: void changeIntention(com.l2jfrozen.gameserver.ai.CtrlIntention,java.lang.Object,java.lang.Object)
com.l2jfrozen.gameserver.ai.L2AttackableAI: void onIntentionAttack(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.L2AttackableAI: void thinkActive()
com.l2jfrozen.gameserver.ai.L2AttackableAI: void thinkAttack()
com.l2jfrozen.gameserver.ai.L2AttackableAI: void onEvtThink()
com.l2jfrozen.gameserver.ai.L2AttackableAI: void onEvtAttacked(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.L2AttackableAI: void onEvtAggression(com.l2jfrozen.gameserver.model.L2Character,int)
com.l2jfrozen.gameserver.ai.L2AttackableAI: void onIntentionActive()
com.l2jfrozen.gameserver.ai.L2AttackableAI: void setGlobalAggro(int)
com.l2jfrozen.gameserver.ai.L2CharacterAI
com.l2jfrozen.gameserver.ai.L2CharacterAI: int ZONE_PVP
com.l2jfrozen.gameserver.ai.L2CharacterAI: com.l2jfrozen.gameserver.model.L2Skill _skill
com.l2jfrozen.gameserver.ai.L2CharacterAI: void onEvtAttacked(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.L2CharacterAI: L2CharacterAI(com.l2jfrozen.gameserver.model.L2Character$AIAccessor)
com.l2jfrozen.gameserver.ai.L2CharacterAI: void onIntentionIdle()
com.l2jfrozen.gameserver.ai.L2CharacterAI: void onIntentionActive(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.L2CharacterAI: void onIntentionRest()
com.l2jfrozen.gameserver.ai.L2CharacterAI: void onIntentionAttack(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.L2CharacterAI: void onIntentionCast(com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.ai.L2CharacterAI: void onIntentionMoveTo(com.l2jfrozen.gameserver.model.actor.position.L2CharPosition)
com.l2jfrozen.gameserver.ai.L2CharacterAI: void onIntentionMoveToInABoat(com.l2jfrozen.gameserver.model.actor.position.L2CharPosition,com.l2jfrozen.gameserver.model.actor.position.L2CharPosition)
com.l2jfrozen.gameserver.ai.L2CharacterAI: void onIntentionFollow(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.L2CharacterAI: void onIntentionPickUp(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.ai.L2CharacterAI: void onIntentionInteract(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.ai.L2CharacterAI: void onEvtThink()
com.l2jfrozen.gameserver.ai.L2CharacterAI: void onEvtAggression(com.l2jfrozen.gameserver.model.L2Character,int)
com.l2jfrozen.gameserver.ai.L2CharacterAI: void onEvtStunned(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.L2CharacterAI: void onEvtSleeping(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.L2CharacterAI: void onEvtRooted(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.L2CharacterAI: void onEvtConfused(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.L2CharacterAI: void onEvtMuted(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.L2CharacterAI: void onEvtReadyToAct()
com.l2jfrozen.gameserver.ai.L2CharacterAI: void onEvtUserCmd(java.lang.Object,java.lang.Object)
com.l2jfrozen.gameserver.ai.L2CharacterAI: void onEvtArrived()
com.l2jfrozen.gameserver.ai.L2CharacterAI: void onEvtArrivedRevalidate()
com.l2jfrozen.gameserver.ai.L2CharacterAI: void onEvtArrivedBlocked(com.l2jfrozen.gameserver.model.actor.position.L2CharPosition)
com.l2jfrozen.gameserver.ai.L2CharacterAI: void onEvtForgetObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.ai.L2CharacterAI: void onEvtCancel()
com.l2jfrozen.gameserver.ai.L2CharacterAI: void onEvtDead()
com.l2jfrozen.gameserver.ai.L2CharacterAI: void onEvtFakeDeath()
com.l2jfrozen.gameserver.ai.L2CharacterAI: void onEvtFinishCasting()
com.l2jfrozen.gameserver.ai.L2CharacterAI: boolean maybeMoveToPawn(com.l2jfrozen.gameserver.model.L2Object,int)
com.l2jfrozen.gameserver.ai.L2CharacterAI: boolean checkTargetLostOrDead(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.L2CharacterAI: boolean checkTargetLost(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.ai.L2CharacterAI: void onIntentionActive()
com.l2jfrozen.gameserver.ai.L2CharacterAI: com.l2jfrozen.gameserver.model.L2Skill get_skill()
com.l2jfrozen.gameserver.ai.L2CharacterAI: void set_skill(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.ai.L2CharacterAI: com.l2jfrozen.gameserver.ai.L2PlayerAI$IntentionCommand getNextIntention()
com.l2jfrozen.gameserver.ai.L2CharacterAI: com.l2jfrozen.gameserver.ai.CtrlIntention getIntention()
com.l2jfrozen.gameserver.ai.L2CharacterAI: void set_intentionArg1(java.lang.Object)
com.l2jfrozen.gameserver.ai.L2CharacterAI: java.lang.Object get_intentionArg1()
com.l2jfrozen.gameserver.ai.L2CharacterAI: void set_intentionArg0(java.lang.Object)
com.l2jfrozen.gameserver.ai.L2CharacterAI: java.lang.Object get_intentionArg0()
com.l2jfrozen.gameserver.ai.L2CharacterAI: void setAutoAttacking(boolean)
com.l2jfrozen.gameserver.ai.L2CharacterAI: boolean isAutoAttacking()
com.l2jfrozen.gameserver.ai.L2CharacterAI: com.l2jfrozen.gameserver.model.L2Character getAttackTarget()
com.l2jfrozen.gameserver.ai.L2CharacterAI: com.l2jfrozen.gameserver.model.L2Character getCastTarget()
com.l2jfrozen.gameserver.ai.L2CharacterAI: void stopFollow()
com.l2jfrozen.gameserver.ai.L2CharacterAI: void startFollow(com.l2jfrozen.gameserver.model.L2Character,int)
com.l2jfrozen.gameserver.ai.L2CharacterAI: void startFollow(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.L2CharacterAI: void describeStateToPlayer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.ai.L2CharacterAI: void clientStopAutoAttack()
com.l2jfrozen.gameserver.ai.L2CharacterAI: void clientStartAutoAttack()
com.l2jfrozen.gameserver.ai.L2CharacterAI: void moveTo(int,int,int)
com.l2jfrozen.gameserver.ai.L2CharacterAI: void moveToPawn(com.l2jfrozen.gameserver.model.L2Object,int)
com.l2jfrozen.gameserver.ai.L2CharacterAI: void changeIntention(com.l2jfrozen.gameserver.ai.CtrlIntention,java.lang.Object,java.lang.Object)
com.l2jfrozen.gameserver.ai.L2CharacterAI: com.l2jfrozen.gameserver.model.L2Character getActor()
com.l2jfrozen.gameserver.ai.L2ControllableMobAI
com.l2jfrozen.gameserver.ai.L2ControllableMobAI: int AI_IDLE
com.l2jfrozen.gameserver.ai.L2ControllableMobAI: int AI_NORMAL
com.l2jfrozen.gameserver.ai.L2ControllableMobAI: int AI_FORCEATTACK
com.l2jfrozen.gameserver.ai.L2ControllableMobAI: int AI_FOLLOW
com.l2jfrozen.gameserver.ai.L2ControllableMobAI: int AI_CAST
com.l2jfrozen.gameserver.ai.L2ControllableMobAI: int AI_ATTACK_GROUP
com.l2jfrozen.gameserver.ai.L2ControllableMobAI: int _alternateAI
com.l2jfrozen.gameserver.ai.L2ControllableMobAI: boolean _isThinking
com.l2jfrozen.gameserver.ai.L2ControllableMobAI: boolean _isNotMoving
com.l2jfrozen.gameserver.ai.L2ControllableMobAI: com.l2jfrozen.gameserver.model.L2Character _forcedTarget
com.l2jfrozen.gameserver.ai.L2ControllableMobAI: com.l2jfrozen.gameserver.model.MobGroup _targetGroup
com.l2jfrozen.gameserver.ai.L2ControllableMobAI: void thinkFollow()
com.l2jfrozen.gameserver.ai.L2ControllableMobAI: void onEvtThink()
com.l2jfrozen.gameserver.ai.L2ControllableMobAI: void thinkCast()
com.l2jfrozen.gameserver.ai.L2ControllableMobAI: void thinkAttackGroup()
com.l2jfrozen.gameserver.ai.L2ControllableMobAI: void thinkForceAttack()
com.l2jfrozen.gameserver.ai.L2ControllableMobAI: void thinkAttack()
com.l2jfrozen.gameserver.ai.L2ControllableMobAI: void thinkActive()
com.l2jfrozen.gameserver.ai.L2ControllableMobAI: boolean autoAttackCondition(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.L2ControllableMobAI: com.l2jfrozen.gameserver.model.L2Character findNextRndTarget()
com.l2jfrozen.gameserver.ai.L2ControllableMobAI: com.l2jfrozen.gameserver.model.actor.instance.L2ControllableMobInstance findNextGroupTarget()
com.l2jfrozen.gameserver.ai.L2ControllableMobAI: L2ControllableMobAI(com.l2jfrozen.gameserver.model.L2Character$AIAccessor)
com.l2jfrozen.gameserver.ai.L2ControllableMobAI: int getAlternateAI()
com.l2jfrozen.gameserver.ai.L2ControllableMobAI: void setAlternateAI(int)
com.l2jfrozen.gameserver.ai.L2ControllableMobAI: void forceAttack(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.L2ControllableMobAI: void forceAttackGroup(com.l2jfrozen.gameserver.model.MobGroup)
com.l2jfrozen.gameserver.ai.L2ControllableMobAI: void stop()
com.l2jfrozen.gameserver.ai.L2ControllableMobAI: void move(int,int,int)
com.l2jfrozen.gameserver.ai.L2ControllableMobAI: void follow(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.L2ControllableMobAI: boolean isThinking()
com.l2jfrozen.gameserver.ai.L2ControllableMobAI: boolean isNotMoving()
com.l2jfrozen.gameserver.ai.L2ControllableMobAI: void setNotMoving(boolean)
com.l2jfrozen.gameserver.ai.L2ControllableMobAI: void setThinking(boolean)
com.l2jfrozen.gameserver.ai.L2ControllableMobAI: com.l2jfrozen.gameserver.model.L2Character getForcedTarget()
com.l2jfrozen.gameserver.ai.L2ControllableMobAI: com.l2jfrozen.gameserver.model.MobGroup getGroupTarget()
com.l2jfrozen.gameserver.ai.L2ControllableMobAI: void setForcedTarget(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.L2ControllableMobAI: void setGroupTarget(com.l2jfrozen.gameserver.model.MobGroup)
com.l2jfrozen.gameserver.ai.L2DoorAI
com.l2jfrozen.gameserver.ai.L2DoorAI: L2DoorAI(com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance$AIAccessor)
com.l2jfrozen.gameserver.ai.L2DoorAI: void onIntentionIdle()
com.l2jfrozen.gameserver.ai.L2DoorAI: void onIntentionActive()
com.l2jfrozen.gameserver.ai.L2DoorAI: void onIntentionRest()
com.l2jfrozen.gameserver.ai.L2DoorAI: void onIntentionAttack(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.L2DoorAI: void onIntentionCast(com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.ai.L2DoorAI: void onIntentionMoveTo(com.l2jfrozen.gameserver.model.actor.position.L2CharPosition)
com.l2jfrozen.gameserver.ai.L2DoorAI: void onIntentionFollow(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.L2DoorAI: void onIntentionPickUp(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.ai.L2DoorAI: void onIntentionInteract(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.ai.L2DoorAI: void onEvtThink()
com.l2jfrozen.gameserver.ai.L2DoorAI: void onEvtAttacked(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.L2DoorAI: void onEvtAggression(com.l2jfrozen.gameserver.model.L2Character,int)
com.l2jfrozen.gameserver.ai.L2DoorAI: void onEvtStunned(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.L2DoorAI: void onEvtSleeping(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.L2DoorAI: void onEvtRooted(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.L2DoorAI: void onEvtReadyToAct()
com.l2jfrozen.gameserver.ai.L2DoorAI: void onEvtUserCmd(java.lang.Object,java.lang.Object)
com.l2jfrozen.gameserver.ai.L2DoorAI: void onEvtArrived()
com.l2jfrozen.gameserver.ai.L2DoorAI: void onEvtArrivedRevalidate()
com.l2jfrozen.gameserver.ai.L2DoorAI: void onEvtArrivedBlocked(com.l2jfrozen.gameserver.model.actor.position.L2CharPosition)
com.l2jfrozen.gameserver.ai.L2DoorAI: void onEvtForgetObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.ai.L2DoorAI: void onEvtCancel()
com.l2jfrozen.gameserver.ai.L2DoorAI: void onEvtDead()
com.l2jfrozen.gameserver.ai.L2DoorAI$onEventAttackedDoorTask
com.l2jfrozen.gameserver.ai.L2DoorAI$onEventAttackedDoorTask: com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance _door
com.l2jfrozen.gameserver.ai.L2DoorAI$onEventAttackedDoorTask: com.l2jfrozen.gameserver.model.L2Character _attacker
com.l2jfrozen.gameserver.ai.L2DoorAI$onEventAttackedDoorTask: com.l2jfrozen.gameserver.ai.L2DoorAI this$0
com.l2jfrozen.gameserver.ai.L2DoorAI$onEventAttackedDoorTask: L2DoorAI$onEventAttackedDoorTask(com.l2jfrozen.gameserver.ai.L2DoorAI,com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.L2DoorAI$onEventAttackedDoorTask: void run()
com.l2jfrozen.gameserver.ai.L2FortSiegeGuardAI
com.l2jfrozen.gameserver.ai.L2FortSiegeGuardAI: org.apache.log4j.Logger _log1
com.l2jfrozen.gameserver.ai.L2FortSiegeGuardAI: java.util.List pdamSkills
com.l2jfrozen.gameserver.ai.L2FortSiegeGuardAI: java.util.List mdamSkills
com.l2jfrozen.gameserver.ai.L2FortSiegeGuardAI: java.util.List healSkills
com.l2jfrozen.gameserver.ai.L2FortSiegeGuardAI: java.util.List rootSkills
com.l2jfrozen.gameserver.ai.L2FortSiegeGuardAI: boolean hasPDam
com.l2jfrozen.gameserver.ai.L2FortSiegeGuardAI: boolean hasMDam
com.l2jfrozen.gameserver.ai.L2FortSiegeGuardAI: boolean hasHeal
com.l2jfrozen.gameserver.ai.L2FortSiegeGuardAI: boolean hasRoot
com.l2jfrozen.gameserver.ai.L2FortSiegeGuardAI: int MAX_ATTACK_TIMEOUT
com.l2jfrozen.gameserver.ai.L2FortSiegeGuardAI: java.util.concurrent.Future _aiTask
com.l2jfrozen.gameserver.ai.L2FortSiegeGuardAI: int _attackTimeout
com.l2jfrozen.gameserver.ai.L2FortSiegeGuardAI: int _globalAggro
com.l2jfrozen.gameserver.ai.L2FortSiegeGuardAI: boolean _thinking
com.l2jfrozen.gameserver.ai.L2FortSiegeGuardAI: int _attackRange
com.l2jfrozen.gameserver.ai.L2FortSiegeGuardAI: L2FortSiegeGuardAI(com.l2jfrozen.gameserver.model.L2Character$AIAccessor)
com.l2jfrozen.gameserver.ai.L2FortSiegeGuardAI: void run()
com.l2jfrozen.gameserver.ai.L2FortSiegeGuardAI: boolean autoAttackCondition(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.L2FortSiegeGuardAI: void changeIntention(com.l2jfrozen.gameserver.ai.CtrlIntention,java.lang.Object,java.lang.Object)
com.l2jfrozen.gameserver.ai.L2FortSiegeGuardAI: void onIntentionAttack(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.L2FortSiegeGuardAI: void thinkActive()
com.l2jfrozen.gameserver.ai.L2FortSiegeGuardAI: void thinkAttack()
com.l2jfrozen.gameserver.ai.L2FortSiegeGuardAI: void factionNotifyAndSupport()
com.l2jfrozen.gameserver.ai.L2FortSiegeGuardAI: void attackPrepare()
com.l2jfrozen.gameserver.ai.L2FortSiegeGuardAI: void onEvtThink()
com.l2jfrozen.gameserver.ai.L2FortSiegeGuardAI: void onEvtAttacked(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.L2FortSiegeGuardAI: void onEvtAggression(com.l2jfrozen.gameserver.model.L2Character,int)
com.l2jfrozen.gameserver.ai.L2FortSiegeGuardAI: void onEvtDead()
com.l2jfrozen.gameserver.ai.L2FortSiegeGuardAI: void stopAITask()
com.l2jfrozen.gameserver.ai.L2FortSiegeGuardAI: void <clinit>()
com.l2jfrozen.gameserver.ai.L2FortSiegeGuardAI$1
com.l2jfrozen.gameserver.ai.L2FortSiegeGuardAI$1: int[] $SwitchMap$com$l2jfrozen$gameserver$model$SkillType
com.l2jfrozen.gameserver.ai.L2FortSiegeGuardAI$1: void <clinit>()
com.l2jfrozen.gameserver.ai.L2NpcWalkerAI
com.l2jfrozen.gameserver.ai.L2NpcWalkerAI: int DEFAULT_MOVE_DELAY
com.l2jfrozen.gameserver.ai.L2NpcWalkerAI: long _nextMoveTime
com.l2jfrozen.gameserver.ai.L2NpcWalkerAI: boolean _walkingToNextPoint
com.l2jfrozen.gameserver.ai.L2NpcWalkerAI: int _homeX
com.l2jfrozen.gameserver.ai.L2NpcWalkerAI: int _homeY
com.l2jfrozen.gameserver.ai.L2NpcWalkerAI: int _homeZ
com.l2jfrozen.gameserver.ai.L2NpcWalkerAI: javolution.util.FastList _route
com.l2jfrozen.gameserver.ai.L2NpcWalkerAI: int _currentPos
com.l2jfrozen.gameserver.ai.L2NpcWalkerAI: L2NpcWalkerAI(com.l2jfrozen.gameserver.model.L2Character$AIAccessor)
com.l2jfrozen.gameserver.ai.L2NpcWalkerAI: void run()
com.l2jfrozen.gameserver.ai.L2NpcWalkerAI: void onEvtThink()
com.l2jfrozen.gameserver.ai.L2NpcWalkerAI: void onEvtArrivedBlocked(com.l2jfrozen.gameserver.model.actor.position.L2CharPosition)
com.l2jfrozen.gameserver.ai.L2NpcWalkerAI: void checkArrived()
com.l2jfrozen.gameserver.ai.L2NpcWalkerAI: void walkToLocation()
com.l2jfrozen.gameserver.ai.L2NpcWalkerAI: com.l2jfrozen.gameserver.model.actor.instance.L2NpcWalkerInstance getActor()
com.l2jfrozen.gameserver.ai.L2NpcWalkerAI: int getHomeX()
com.l2jfrozen.gameserver.ai.L2NpcWalkerAI: int getHomeY()
com.l2jfrozen.gameserver.ai.L2NpcWalkerAI: int getHomeZ()
com.l2jfrozen.gameserver.ai.L2NpcWalkerAI: void setHomeX(int)
com.l2jfrozen.gameserver.ai.L2NpcWalkerAI: void setHomeY(int)
com.l2jfrozen.gameserver.ai.L2NpcWalkerAI: void setHomeZ(int)
com.l2jfrozen.gameserver.ai.L2NpcWalkerAI: boolean isWalkingToNextPoint()
com.l2jfrozen.gameserver.ai.L2NpcWalkerAI: void setWalkingToNextPoint(boolean)
com.l2jfrozen.gameserver.ai.L2NpcWalkerAI: com.l2jfrozen.gameserver.model.L2Character getActor()
com.l2jfrozen.gameserver.ai.L2PlayerAI
com.l2jfrozen.gameserver.ai.L2PlayerAI: boolean _thinking
com.l2jfrozen.gameserver.ai.L2PlayerAI: java.util.Stack _interuptedIntentions
com.l2jfrozen.gameserver.ai.L2PlayerAI: java.util.Stack getInterruptedIntentions()
com.l2jfrozen.gameserver.ai.L2PlayerAI: L2PlayerAI(com.l2jfrozen.gameserver.model.L2Character$AIAccessor)
com.l2jfrozen.gameserver.ai.L2PlayerAI: void changeIntention(com.l2jfrozen.gameserver.ai.CtrlIntention,java.lang.Object,java.lang.Object)
com.l2jfrozen.gameserver.ai.L2PlayerAI: void onEvtFinishCasting()
com.l2jfrozen.gameserver.ai.L2PlayerAI: void onIntentionRest()
com.l2jfrozen.gameserver.ai.L2PlayerAI: void clientStopMoving(com.l2jfrozen.gameserver.model.actor.position.L2CharPosition)
com.l2jfrozen.gameserver.ai.L2PlayerAI: void onIntentionActive()
com.l2jfrozen.gameserver.ai.L2PlayerAI: void clientNotifyDead()
com.l2jfrozen.gameserver.ai.L2PlayerAI: void thinkAttack()
com.l2jfrozen.gameserver.ai.L2PlayerAI: void thinkCast()
com.l2jfrozen.gameserver.ai.L2PlayerAI: void thinkPickUp()
com.l2jfrozen.gameserver.ai.L2PlayerAI: void thinkInteract()
com.l2jfrozen.gameserver.ai.L2PlayerAI: void onEvtThink()
com.l2jfrozen.gameserver.ai.L2PlayerAI: void onEvtArrivedRevalidate()
com.l2jfrozen.gameserver.ai.L2PlayerAI$IntentionCommand
com.l2jfrozen.gameserver.ai.L2PlayerAI$IntentionCommand: com.l2jfrozen.gameserver.ai.CtrlIntention _crtlIntention
com.l2jfrozen.gameserver.ai.L2PlayerAI$IntentionCommand: java.lang.Object _arg0
com.l2jfrozen.gameserver.ai.L2PlayerAI$IntentionCommand: java.lang.Object _arg1
com.l2jfrozen.gameserver.ai.L2PlayerAI$IntentionCommand: com.l2jfrozen.gameserver.ai.L2PlayerAI this$0
com.l2jfrozen.gameserver.ai.L2PlayerAI$IntentionCommand: L2PlayerAI$IntentionCommand(com.l2jfrozen.gameserver.ai.L2PlayerAI,com.l2jfrozen.gameserver.ai.CtrlIntention,java.lang.Object,java.lang.Object)
com.l2jfrozen.gameserver.ai.L2SiegeGuardAI
com.l2jfrozen.gameserver.ai.L2SiegeGuardAI: int MAX_ATTACK_TIMEOUT
com.l2jfrozen.gameserver.ai.L2SiegeGuardAI: java.util.concurrent.Future _aiTask
com.l2jfrozen.gameserver.ai.L2SiegeGuardAI: int _attackTimeout
com.l2jfrozen.gameserver.ai.L2SiegeGuardAI: int _globalAggro
com.l2jfrozen.gameserver.ai.L2SiegeGuardAI: boolean _thinking
com.l2jfrozen.gameserver.ai.L2SiegeGuardAI: int _attackRange
com.l2jfrozen.gameserver.ai.L2SiegeGuardAI: L2SiegeGuardAI(com.l2jfrozen.gameserver.model.L2Character$AIAccessor)
com.l2jfrozen.gameserver.ai.L2SiegeGuardAI: void run()
com.l2jfrozen.gameserver.ai.L2SiegeGuardAI: boolean autoAttackCondition(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.L2SiegeGuardAI: void changeIntention(com.l2jfrozen.gameserver.ai.CtrlIntention,java.lang.Object,java.lang.Object)
com.l2jfrozen.gameserver.ai.L2SiegeGuardAI: void onIntentionAttack(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.L2SiegeGuardAI: void thinkActive()
com.l2jfrozen.gameserver.ai.L2SiegeGuardAI: void attackPrepare()
com.l2jfrozen.gameserver.ai.L2SiegeGuardAI: void thinkAttack()
com.l2jfrozen.gameserver.ai.L2SiegeGuardAI: void factionNotify()
com.l2jfrozen.gameserver.ai.L2SiegeGuardAI: void onEvtThink()
com.l2jfrozen.gameserver.ai.L2SiegeGuardAI: void onEvtAttacked(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.ai.L2SiegeGuardAI: void onEvtAggression(com.l2jfrozen.gameserver.model.L2Character,int)
com.l2jfrozen.gameserver.ai.L2SiegeGuardAI: void onEvtDead()
com.l2jfrozen.gameserver.ai.L2SiegeGuardAI: void stopAITask()
com.l2jfrozen.gameserver.ai.L2SummonAI
com.l2jfrozen.gameserver.ai.L2SummonAI: boolean _thinking
com.l2jfrozen.gameserver.ai.L2SummonAI: com.l2jfrozen.gameserver.model.L2Summon summon
com.l2jfrozen.gameserver.ai.L2SummonAI: L2SummonAI(com.l2jfrozen.gameserver.model.L2Character$AIAccessor)
com.l2jfrozen.gameserver.ai.L2SummonAI: void onIntentionIdle()
com.l2jfrozen.gameserver.ai.L2SummonAI: void onIntentionActive()
com.l2jfrozen.gameserver.ai.L2SummonAI: void thinkAttack()
com.l2jfrozen.gameserver.ai.L2SummonAI: void thinkCast()
com.l2jfrozen.gameserver.ai.L2SummonAI: void thinkPickUp()
com.l2jfrozen.gameserver.ai.L2SummonAI: void thinkInteract()
com.l2jfrozen.gameserver.ai.L2SummonAI: void onEvtThink()
com.l2jfrozen.gameserver.ai.L2SummonAI: void onEvtFinishCasting()
com.l2jfrozen.gameserver.ai.special.Antharas
com.l2jfrozen.gameserver.ai.special.Antharas: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.ai.special.Antharas: int FWA_ACTIVITYTIMEOFANTHARAS
com.l2jfrozen.gameserver.ai.special.Antharas: boolean FWA_OLDANTHARAS
com.l2jfrozen.gameserver.ai.special.Antharas: boolean FWA_MOVEATRANDOM
com.l2jfrozen.gameserver.ai.special.Antharas: boolean FWA_DOSERVEREARTHQUAKE
com.l2jfrozen.gameserver.ai.special.Antharas: int FWA_LIMITOFWEAK
com.l2jfrozen.gameserver.ai.special.Antharas: int FWA_LIMITOFNORMAL
com.l2jfrozen.gameserver.ai.special.Antharas: int FWA_MAXMOBS
com.l2jfrozen.gameserver.ai.special.Antharas: int FWA_INTERVALOFMOBSWEAK
com.l2jfrozen.gameserver.ai.special.Antharas: int FWA_INTERVALOFMOBSNORMAL
com.l2jfrozen.gameserver.ai.special.Antharas: int FWA_INTERVALOFMOBSSTRONG
com.l2jfrozen.gameserver.ai.special.Antharas: int FWA_PERCENTOFBEHEMOTH
com.l2jfrozen.gameserver.ai.special.Antharas: int FWA_SELFDESTRUCTTIME
com.l2jfrozen.gameserver.ai.special.Antharas: int _teleportCubeId
com.l2jfrozen.gameserver.ai.special.Antharas: int[][] _teleportCubeLocation
com.l2jfrozen.gameserver.ai.special.Antharas: java.util.List _teleportCubeSpawn
com.l2jfrozen.gameserver.ai.special.Antharas: java.util.List _teleportCube
com.l2jfrozen.gameserver.ai.special.Antharas: java.util.HashMap _monsterSpawn
com.l2jfrozen.gameserver.ai.special.Antharas: java.util.List _monsters
com.l2jfrozen.gameserver.ai.special.Antharas: com.l2jfrozen.gameserver.model.actor.instance.L2GrandBossInstance _antharas
com.l2jfrozen.gameserver.ai.special.Antharas: int ANTHARASOLDID
com.l2jfrozen.gameserver.ai.special.Antharas: int ANTHARASWEAKID
com.l2jfrozen.gameserver.ai.special.Antharas: int ANTHARASNORMALID
com.l2jfrozen.gameserver.ai.special.Antharas: int ANTHARASSTRONGID
com.l2jfrozen.gameserver.ai.special.Antharas: java.util.concurrent.ScheduledFuture _cubeSpawnTask
com.l2jfrozen.gameserver.ai.special.Antharas: java.util.concurrent.ScheduledFuture _monsterSpawnTask
com.l2jfrozen.gameserver.ai.special.Antharas: java.util.concurrent.ScheduledFuture _activityCheckTask
com.l2jfrozen.gameserver.ai.special.Antharas: java.util.concurrent.ScheduledFuture _socialTask
com.l2jfrozen.gameserver.ai.special.Antharas: java.util.concurrent.ScheduledFuture _mobiliseTask
com.l2jfrozen.gameserver.ai.special.Antharas: java.util.concurrent.ScheduledFuture _mobsSpawnTask
com.l2jfrozen.gameserver.ai.special.Antharas: java.util.concurrent.ScheduledFuture _selfDestructionTask
com.l2jfrozen.gameserver.ai.special.Antharas: java.util.concurrent.ScheduledFuture _moveAtRandomTask
com.l2jfrozen.gameserver.ai.special.Antharas: java.util.concurrent.ScheduledFuture _movieTask
com.l2jfrozen.gameserver.ai.special.Antharas: int DORMANT
com.l2jfrozen.gameserver.ai.special.Antharas: int WAITING
com.l2jfrozen.gameserver.ai.special.Antharas: int FIGHTING
com.l2jfrozen.gameserver.ai.special.Antharas: int DEAD
com.l2jfrozen.gameserver.ai.special.Antharas: long _LastAction
com.l2jfrozen.gameserver.ai.special.Antharas: com.l2jfrozen.gameserver.model.zone.type.L2BossZone _Zone
com.l2jfrozen.gameserver.ai.special.Antharas: Antharas(int,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.ai.special.Antharas: void init()
com.l2jfrozen.gameserver.ai.special.Antharas: void spawnCube()
com.l2jfrozen.gameserver.ai.special.Antharas: void setAntharasSpawnTask()
com.l2jfrozen.gameserver.ai.special.Antharas: void startMinionSpawns(int)
com.l2jfrozen.gameserver.ai.special.Antharas: void broadcastPacket(com.l2jfrozen.gameserver.network.serverpackets.L2GameServerPacket)
com.l2jfrozen.gameserver.ai.special.Antharas: java.lang.String onAggroRangeEnter(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.ai.special.Antharas: java.lang.String onSpellFinished(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.ai.special.Antharas: void setUnspawn()
com.l2jfrozen.gameserver.ai.special.Antharas: java.lang.String onAttack(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,boolean)
com.l2jfrozen.gameserver.ai.special.Antharas: java.lang.String onKill(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.ai.special.Antharas: void run()
com.l2jfrozen.gameserver.ai.special.Antharas: void <clinit>()
com.l2jfrozen.gameserver.ai.special.Antharas$AntharasSpawn
com.l2jfrozen.gameserver.ai.special.Antharas$AntharasSpawn: int _taskId
com.l2jfrozen.gameserver.ai.special.Antharas$AntharasSpawn: java.util.Collection _players
com.l2jfrozen.gameserver.ai.special.Antharas$AntharasSpawn: com.l2jfrozen.gameserver.ai.special.Antharas this$0
com.l2jfrozen.gameserver.ai.special.Antharas$AntharasSpawn: Antharas$AntharasSpawn(com.l2jfrozen.gameserver.ai.special.Antharas,int)
com.l2jfrozen.gameserver.ai.special.Antharas$AntharasSpawn: void run()
com.l2jfrozen.gameserver.ai.special.Antharas$CheckActivity
com.l2jfrozen.gameserver.ai.special.Antharas$CheckActivity: com.l2jfrozen.gameserver.ai.special.Antharas this$0
com.l2jfrozen.gameserver.ai.special.Antharas$CheckActivity: Antharas$CheckActivity(com.l2jfrozen.gameserver.ai.special.Antharas)
com.l2jfrozen.gameserver.ai.special.Antharas$CheckActivity: void run()
com.l2jfrozen.gameserver.ai.special.Antharas$CubeSpawn
com.l2jfrozen.gameserver.ai.special.Antharas$CubeSpawn: int _type
com.l2jfrozen.gameserver.ai.special.Antharas$CubeSpawn: com.l2jfrozen.gameserver.ai.special.Antharas this$0
com.l2jfrozen.gameserver.ai.special.Antharas$CubeSpawn: Antharas$CubeSpawn(com.l2jfrozen.gameserver.ai.special.Antharas,int)
com.l2jfrozen.gameserver.ai.special.Antharas$CubeSpawn: void run()
com.l2jfrozen.gameserver.ai.special.Antharas$MobsSpawn
com.l2jfrozen.gameserver.ai.special.Antharas$MobsSpawn: com.l2jfrozen.gameserver.ai.special.Antharas this$0
com.l2jfrozen.gameserver.ai.special.Antharas$MobsSpawn: Antharas$MobsSpawn(com.l2jfrozen.gameserver.ai.special.Antharas)
com.l2jfrozen.gameserver.ai.special.Antharas$MobsSpawn: void run()
com.l2jfrozen.gameserver.ai.special.Antharas$MoveAtRandom
com.l2jfrozen.gameserver.ai.special.Antharas$MoveAtRandom: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance _npc
com.l2jfrozen.gameserver.ai.special.Antharas$MoveAtRandom: com.l2jfrozen.gameserver.model.actor.position.L2CharPosition _pos
com.l2jfrozen.gameserver.ai.special.Antharas$MoveAtRandom: Antharas$MoveAtRandom(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.position.L2CharPosition)
com.l2jfrozen.gameserver.ai.special.Antharas$MoveAtRandom: void run()
com.l2jfrozen.gameserver.ai.special.Antharas$SelfDestructionOfBomber
com.l2jfrozen.gameserver.ai.special.Antharas$SelfDestructionOfBomber: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance _bomber
com.l2jfrozen.gameserver.ai.special.Antharas$SelfDestructionOfBomber: com.l2jfrozen.gameserver.ai.special.Antharas this$0
com.l2jfrozen.gameserver.ai.special.Antharas$SelfDestructionOfBomber: Antharas$SelfDestructionOfBomber(com.l2jfrozen.gameserver.ai.special.Antharas,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.ai.special.Antharas$SelfDestructionOfBomber: void run()
com.l2jfrozen.gameserver.ai.special.Antharas$SetMobilised
com.l2jfrozen.gameserver.ai.special.Antharas$SetMobilised: com.l2jfrozen.gameserver.model.actor.instance.L2GrandBossInstance _boss
com.l2jfrozen.gameserver.ai.special.Antharas$SetMobilised: com.l2jfrozen.gameserver.ai.special.Antharas this$0
com.l2jfrozen.gameserver.ai.special.Antharas$SetMobilised: Antharas$SetMobilised(com.l2jfrozen.gameserver.ai.special.Antharas,com.l2jfrozen.gameserver.model.actor.instance.L2GrandBossInstance)
com.l2jfrozen.gameserver.ai.special.Antharas$SetMobilised: void run()
com.l2jfrozen.gameserver.ai.special.Antharas$UnlockAntharas
com.l2jfrozen.gameserver.ai.special.Antharas$UnlockAntharas: int _bossId
com.l2jfrozen.gameserver.ai.special.Antharas$UnlockAntharas: Antharas$UnlockAntharas(int)
com.l2jfrozen.gameserver.ai.special.Antharas$UnlockAntharas: void run()
com.l2jfrozen.gameserver.ai.special.Baium
com.l2jfrozen.gameserver.ai.special.Baium: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.ai.special.Baium: com.l2jfrozen.gameserver.model.L2Character _target
com.l2jfrozen.gameserver.ai.special.Baium: com.l2jfrozen.gameserver.model.L2Skill _skill
com.l2jfrozen.gameserver.ai.special.Baium: int STONE_BAIUM
com.l2jfrozen.gameserver.ai.special.Baium: int ANGELIC_VORTEX
com.l2jfrozen.gameserver.ai.special.Baium: int LIVE_BAIUM
com.l2jfrozen.gameserver.ai.special.Baium: int ARCHANGEL
com.l2jfrozen.gameserver.ai.special.Baium: byte ASLEEP
com.l2jfrozen.gameserver.ai.special.Baium: byte AWAKE
com.l2jfrozen.gameserver.ai.special.Baium: byte DEAD
com.l2jfrozen.gameserver.ai.special.Baium: int[][] ANGEL_LOCATION
com.l2jfrozen.gameserver.ai.special.Baium: long _LastAttackVsBaiumTime
com.l2jfrozen.gameserver.ai.special.Baium: java.util.List _Minions
com.l2jfrozen.gameserver.ai.special.Baium: com.l2jfrozen.gameserver.model.zone.type.L2BossZone _Zone
com.l2jfrozen.gameserver.ai.special.Baium: Baium(int,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.ai.special.Baium: java.lang.String onAdvEvent(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.ai.special.Baium: java.lang.String onTalk(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.ai.special.Baium: java.lang.String onSpellFinished(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.ai.special.Baium: java.lang.String onAttack(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,boolean)
com.l2jfrozen.gameserver.ai.special.Baium: java.lang.String onKill(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.ai.special.Baium: com.l2jfrozen.gameserver.model.L2Character getRandomTarget(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.ai.special.Baium: void callSkillAI(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.ai.special.Baium: int getRandomSkill(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.ai.special.Baium: java.lang.String onSkillUse(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.ai.special.Baium: int getDist(int)
com.l2jfrozen.gameserver.ai.special.Baium: void run()
com.l2jfrozen.gameserver.ai.special.Baium: void <clinit>()
com.l2jfrozen.gameserver.ai.special.Baium$1
com.l2jfrozen.gameserver.ai.special.Baium$1: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance val$_baium
com.l2jfrozen.gameserver.ai.special.Baium$1: int val$hp
com.l2jfrozen.gameserver.ai.special.Baium$1: int val$mp
com.l2jfrozen.gameserver.ai.special.Baium$1: com.l2jfrozen.gameserver.ai.special.Baium this$0
com.l2jfrozen.gameserver.ai.special.Baium$1: Baium$1(com.l2jfrozen.gameserver.ai.special.Baium,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,int,int)
com.l2jfrozen.gameserver.ai.special.Baium$1: void run()
com.l2jfrozen.gameserver.ai.special.Baium$2
com.l2jfrozen.gameserver.ai.special.Baium$2: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance val$baium
com.l2jfrozen.gameserver.ai.special.Baium$2: com.l2jfrozen.gameserver.ai.special.Baium this$0
com.l2jfrozen.gameserver.ai.special.Baium$2: Baium$2(com.l2jfrozen.gameserver.ai.special.Baium,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.ai.special.Baium$2: void run()
com.l2jfrozen.gameserver.ai.special.Baium$3
com.l2jfrozen.gameserver.ai.special.Baium$3: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance val$_baium
com.l2jfrozen.gameserver.ai.special.Baium$3: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance val$player
com.l2jfrozen.gameserver.ai.special.Baium$3: com.l2jfrozen.gameserver.ai.special.Baium this$0
com.l2jfrozen.gameserver.ai.special.Baium$3: Baium$3(com.l2jfrozen.gameserver.ai.special.Baium,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.ai.special.Baium$3: void run()
com.l2jfrozen.gameserver.ai.special.Barakiel
com.l2jfrozen.gameserver.ai.special.Barakiel: int BARAKIEL
com.l2jfrozen.gameserver.ai.special.Barakiel: Barakiel(int,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.ai.special.Barakiel: void run()
com.l2jfrozen.gameserver.ai.special.Core
com.l2jfrozen.gameserver.ai.special.Core: int CORE
com.l2jfrozen.gameserver.ai.special.Core: int DEATH_KNIGHT
com.l2jfrozen.gameserver.ai.special.Core: int DOOM_WRAITH
com.l2jfrozen.gameserver.ai.special.Core: int SUSCEPTOR
com.l2jfrozen.gameserver.ai.special.Core: byte ALIVE
com.l2jfrozen.gameserver.ai.special.Core: byte DEAD
com.l2jfrozen.gameserver.ai.special.Core: boolean _FirstAttacked
com.l2jfrozen.gameserver.ai.special.Core: java.util.List Minions
com.l2jfrozen.gameserver.ai.special.Core: Core(int,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.ai.special.Core: void saveGlobalData()
com.l2jfrozen.gameserver.ai.special.Core: java.lang.String onAdvEvent(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.ai.special.Core: java.lang.String onAttack(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,boolean)
com.l2jfrozen.gameserver.ai.special.Core: java.lang.String onKill(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.ai.special.Core: void spawnBoss(com.l2jfrozen.gameserver.model.actor.instance.L2GrandBossInstance)
com.l2jfrozen.gameserver.ai.special.Core: void run()
com.l2jfrozen.gameserver.ai.special.FairyTrees
com.l2jfrozen.gameserver.ai.special.FairyTrees: int[] trees
com.l2jfrozen.gameserver.ai.special.FairyTrees: FairyTrees(int,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.ai.special.FairyTrees: java.lang.String onKill(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.ai.special.FairyTrees: void run()
com.l2jfrozen.gameserver.ai.special.FairyTrees: void <clinit>()
com.l2jfrozen.gameserver.ai.special.Frintezza
com.l2jfrozen.gameserver.ai.special.Frintezza: int[][] _invadeLoc
com.l2jfrozen.gameserver.ai.special.Frintezza: int[][] _skill
com.l2jfrozen.gameserver.ai.special.Frintezza: int[][] _mobLoc
com.l2jfrozen.gameserver.ai.special.Frintezza: int SCARLET1
com.l2jfrozen.gameserver.ai.special.Frintezza: int SCARLET2
com.l2jfrozen.gameserver.ai.special.Frintezza: int FRINTEZZA
com.l2jfrozen.gameserver.ai.special.Frintezza: int GUIDE
com.l2jfrozen.gameserver.ai.special.Frintezza: int CUBE
com.l2jfrozen.gameserver.ai.special.Frintezza: byte DORMANT
com.l2jfrozen.gameserver.ai.special.Frintezza: byte WAITING
com.l2jfrozen.gameserver.ai.special.Frintezza: byte FIGHTING
com.l2jfrozen.gameserver.ai.special.Frintezza: byte DEAD
com.l2jfrozen.gameserver.ai.special.Frintezza: long _LastAction
com.l2jfrozen.gameserver.ai.special.Frintezza: int _Angle
com.l2jfrozen.gameserver.ai.special.Frintezza: int _Heading
com.l2jfrozen.gameserver.ai.special.Frintezza: int _LocCycle
com.l2jfrozen.gameserver.ai.special.Frintezza: int _Bomber
com.l2jfrozen.gameserver.ai.special.Frintezza: int _CheckDie
com.l2jfrozen.gameserver.ai.special.Frintezza: int _OnCheck
com.l2jfrozen.gameserver.ai.special.Frintezza: int _OnSong
com.l2jfrozen.gameserver.ai.special.Frintezza: int _Abnormal
com.l2jfrozen.gameserver.ai.special.Frintezza: int _OnMorph
com.l2jfrozen.gameserver.ai.special.Frintezza: int _Scarlet_x
com.l2jfrozen.gameserver.ai.special.Frintezza: int _Scarlet_y
com.l2jfrozen.gameserver.ai.special.Frintezza: int _Scarlet_z
com.l2jfrozen.gameserver.ai.special.Frintezza: int _Scarlet_h
com.l2jfrozen.gameserver.ai.special.Frintezza: int _SecondMorph
com.l2jfrozen.gameserver.ai.special.Frintezza: int _ThirdMorph
com.l2jfrozen.gameserver.ai.special.Frintezza: int _KillHallAlarmDevice
com.l2jfrozen.gameserver.ai.special.Frintezza: int _KillDarkChoirPlayer
com.l2jfrozen.gameserver.ai.special.Frintezza: int _KillDarkChoirCaptain
com.l2jfrozen.gameserver.ai.special.Frintezza: com.l2jfrozen.gameserver.model.zone.type.L2BossZone _Zone
com.l2jfrozen.gameserver.ai.special.Frintezza: com.l2jfrozen.gameserver.model.actor.instance.L2GrandBossInstance frintezza
com.l2jfrozen.gameserver.ai.special.Frintezza: com.l2jfrozen.gameserver.model.actor.instance.L2GrandBossInstance weakScarlet
com.l2jfrozen.gameserver.ai.special.Frintezza: com.l2jfrozen.gameserver.model.actor.instance.L2GrandBossInstance strongScarlet
com.l2jfrozen.gameserver.ai.special.Frintezza: com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance demon1
com.l2jfrozen.gameserver.ai.special.Frintezza: com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance demon2
com.l2jfrozen.gameserver.ai.special.Frintezza: com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance demon3
com.l2jfrozen.gameserver.ai.special.Frintezza: com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance demon4
com.l2jfrozen.gameserver.ai.special.Frintezza: com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance portrait1
com.l2jfrozen.gameserver.ai.special.Frintezza: com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance portrait2
com.l2jfrozen.gameserver.ai.special.Frintezza: com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance portrait3
com.l2jfrozen.gameserver.ai.special.Frintezza: com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance portrait4
com.l2jfrozen.gameserver.ai.special.Frintezza: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance _frintezzaDummy
com.l2jfrozen.gameserver.ai.special.Frintezza: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance _overheadDummy
com.l2jfrozen.gameserver.ai.special.Frintezza: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance _portraitDummy1
com.l2jfrozen.gameserver.ai.special.Frintezza: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance _portraitDummy3
com.l2jfrozen.gameserver.ai.special.Frintezza: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance _scarletDummy
com.l2jfrozen.gameserver.ai.special.Frintezza: java.util.List _PlayersInside
com.l2jfrozen.gameserver.ai.special.Frintezza: java.util.List _Room1Mobs
com.l2jfrozen.gameserver.ai.special.Frintezza: java.util.List _Room2Mobs
com.l2jfrozen.gameserver.ai.special.Frintezza: java.util.List Minions
com.l2jfrozen.gameserver.ai.special.Frintezza: Frintezza(int,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.ai.special.Frintezza: java.lang.String onAdvEvent(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.ai.special.Frintezza: java.lang.String onTalk(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.ai.special.Frintezza: java.lang.String onAttack(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,boolean)
com.l2jfrozen.gameserver.ai.special.Frintezza: java.lang.String onKill(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.ai.special.Frintezza: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance addSpawn(int,int,int,int,int,boolean,int)
com.l2jfrozen.gameserver.ai.special.Frintezza: int getXFix(int)
com.l2jfrozen.gameserver.ai.special.Frintezza: int getYFix(int)
com.l2jfrozen.gameserver.ai.special.Frintezza: int getZFix(int)
com.l2jfrozen.gameserver.ai.special.Frintezza: int reverseXFix(int)
com.l2jfrozen.gameserver.ai.special.Frintezza: int reverseYFix(int)
com.l2jfrozen.gameserver.ai.special.Frintezza: int reverseZFix(int)
com.l2jfrozen.gameserver.ai.special.Frintezza: void run()
com.l2jfrozen.gameserver.ai.special.Frintezza: void <clinit>()
com.l2jfrozen.gameserver.ai.special.Golkonda
com.l2jfrozen.gameserver.ai.special.Golkonda: int GOLKONDA
com.l2jfrozen.gameserver.ai.special.Golkonda: Golkonda(int,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.ai.special.Golkonda: void run()
com.l2jfrozen.gameserver.ai.special.Gordon
com.l2jfrozen.gameserver.ai.special.Gordon: int GORDON
com.l2jfrozen.gameserver.ai.special.Gordon: int _npcMoveX
com.l2jfrozen.gameserver.ai.special.Gordon: int _npcMoveY
com.l2jfrozen.gameserver.ai.special.Gordon: int _isWalkTo
com.l2jfrozen.gameserver.ai.special.Gordon: int _npcBlock
com.l2jfrozen.gameserver.ai.special.Gordon: int X
com.l2jfrozen.gameserver.ai.special.Gordon: int Y
com.l2jfrozen.gameserver.ai.special.Gordon: int Z
com.l2jfrozen.gameserver.ai.special.Gordon: int[][] WALKS
com.l2jfrozen.gameserver.ai.special.Gordon: boolean _isAttacked
com.l2jfrozen.gameserver.ai.special.Gordon: boolean _isSpawned
com.l2jfrozen.gameserver.ai.special.Gordon: Gordon(int,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.ai.special.Gordon: java.lang.String onAdvEvent(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.ai.special.Gordon: java.lang.String onSpawn(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.ai.special.Gordon: java.lang.String onAttack(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,boolean)
com.l2jfrozen.gameserver.ai.special.Gordon: java.lang.String onKill(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.ai.special.Gordon: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance findTemplate(int)
com.l2jfrozen.gameserver.ai.special.Gordon: void run()
com.l2jfrozen.gameserver.ai.special.Gordon: void <clinit>()
com.l2jfrozen.gameserver.ai.special.Hallate
com.l2jfrozen.gameserver.ai.special.Hallate: int HALLATE
com.l2jfrozen.gameserver.ai.special.Hallate: Hallate(int,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.ai.special.Hallate: void run()
com.l2jfrozen.gameserver.ai.special.IceFairySirra
com.l2jfrozen.gameserver.ai.special.IceFairySirra: int STEWARD
com.l2jfrozen.gameserver.ai.special.IceFairySirra: int SILVER_HEMOCYTE
com.l2jfrozen.gameserver.ai.special.IceFairySirra: com.l2jfrozen.gameserver.model.zone.type.L2BossZone _freyasZone
com.l2jfrozen.gameserver.ai.special.IceFairySirra: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _player
com.l2jfrozen.gameserver.ai.special.IceFairySirra: javolution.util.FastList _allMobs
com.l2jfrozen.gameserver.ai.special.IceFairySirra: java.util.concurrent.Future _onDeadEventTask
com.l2jfrozen.gameserver.ai.special.IceFairySirra: IceFairySirra(int,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.ai.special.IceFairySirra: java.lang.String onFirstTalk(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.ai.special.IceFairySirra: java.lang.String onAdvEvent(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.ai.special.IceFairySirra: void init()
com.l2jfrozen.gameserver.ai.special.IceFairySirra: void cleanUp()
com.l2jfrozen.gameserver.ai.special.IceFairySirra: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance findTemplate(int)
com.l2jfrozen.gameserver.ai.special.IceFairySirra: void openGates()
com.l2jfrozen.gameserver.ai.special.IceFairySirra: void closeGates()
com.l2jfrozen.gameserver.ai.special.IceFairySirra: boolean checkItems(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.ai.special.IceFairySirra: void destroyItems(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.ai.special.IceFairySirra: void teleportInside(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.ai.special.IceFairySirra: void screenMessage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String,int)
com.l2jfrozen.gameserver.ai.special.IceFairySirra: void doSpawns()
com.l2jfrozen.gameserver.ai.special.IceFairySirra: java.lang.String getHtmlPath(int)
com.l2jfrozen.gameserver.ai.special.IceFairySirra: void sendHtml(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.ai.special.IceFairySirra: void run()
com.l2jfrozen.gameserver.ai.special.IceFairySirra: void <clinit>()
com.l2jfrozen.gameserver.ai.special.Kernon
com.l2jfrozen.gameserver.ai.special.Kernon: int KERNON
com.l2jfrozen.gameserver.ai.special.Kernon: Kernon(int,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.ai.special.Kernon: void run()
com.l2jfrozen.gameserver.ai.special.Monastery
com.l2jfrozen.gameserver.ai.special.Monastery: int[] mobs1
com.l2jfrozen.gameserver.ai.special.Monastery: int[] mobs2
com.l2jfrozen.gameserver.ai.special.Monastery: java.lang.String[] text
com.l2jfrozen.gameserver.ai.special.Monastery: Monastery(int,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.ai.special.Monastery: java.lang.String onAggroRangeEnter(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.ai.special.Monastery: java.lang.String onSpawn(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.ai.special.Monastery: java.lang.String onSpellFinished(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.ai.special.Monastery: void run()
com.l2jfrozen.gameserver.ai.special.Monastery: void <clinit>()
com.l2jfrozen.gameserver.ai.special.Orfen
com.l2jfrozen.gameserver.ai.special.Orfen: int ORFEN
com.l2jfrozen.gameserver.ai.special.Orfen: int LIVE
com.l2jfrozen.gameserver.ai.special.Orfen: int DEAD
com.l2jfrozen.gameserver.ai.special.Orfen: boolean FirstAttacked
com.l2jfrozen.gameserver.ai.special.Orfen: boolean Teleported
com.l2jfrozen.gameserver.ai.special.Orfen: com.l2jfrozen.gameserver.model.actor.instance.L2GrandBossInstance orfen
com.l2jfrozen.gameserver.ai.special.Orfen: Orfen(int,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.ai.special.Orfen: java.lang.String onAdvEvent(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.ai.special.Orfen: java.lang.String onAttack(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,boolean)
com.l2jfrozen.gameserver.ai.special.Orfen: java.lang.String onKill(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.ai.special.Orfen: void run()
com.l2jfrozen.gameserver.ai.special.Orfen$1
com.l2jfrozen.gameserver.ai.special.Orfen$1: int[] $SwitchMap$com$l2jfrozen$gameserver$ai$special$Orfen$Event
com.l2jfrozen.gameserver.ai.special.Orfen$1: void <clinit>()
com.l2jfrozen.gameserver.ai.special.Orfen$Event
com.l2jfrozen.gameserver.ai.special.Orfen$Event: com.l2jfrozen.gameserver.ai.special.Orfen$Event ORFEN_SPAWN
com.l2jfrozen.gameserver.ai.special.Orfen$Event: com.l2jfrozen.gameserver.ai.special.Orfen$Event ORFEN_REFRESH
com.l2jfrozen.gameserver.ai.special.Orfen$Event: com.l2jfrozen.gameserver.ai.special.Orfen$Event ORFEN_RETURN
com.l2jfrozen.gameserver.ai.special.Orfen$Event: com.l2jfrozen.gameserver.ai.special.Orfen$Event[] $VALUES
com.l2jfrozen.gameserver.ai.special.Orfen$Event: com.l2jfrozen.gameserver.ai.special.Orfen$Event[] values()
com.l2jfrozen.gameserver.ai.special.Orfen$Event: com.l2jfrozen.gameserver.ai.special.Orfen$Event valueOf(java.lang.String)
com.l2jfrozen.gameserver.ai.special.Orfen$Event: Orfen$Event(java.lang.String,int)
com.l2jfrozen.gameserver.ai.special.Orfen$Event: void <clinit>()
com.l2jfrozen.gameserver.ai.special.QueenAnt
com.l2jfrozen.gameserver.ai.special.QueenAnt: int QUEEN
com.l2jfrozen.gameserver.ai.special.QueenAnt: int LARVA
com.l2jfrozen.gameserver.ai.special.QueenAnt: int NURSE
com.l2jfrozen.gameserver.ai.special.QueenAnt: int GUARD
com.l2jfrozen.gameserver.ai.special.QueenAnt: int ROYAL
com.l2jfrozen.gameserver.ai.special.QueenAnt: int LIVE
com.l2jfrozen.gameserver.ai.special.QueenAnt: int DEAD
com.l2jfrozen.gameserver.ai.special.QueenAnt: com.l2jfrozen.gameserver.model.zone.type.L2BossZone _Zone
com.l2jfrozen.gameserver.ai.special.QueenAnt: com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance _larva
com.l2jfrozen.gameserver.ai.special.QueenAnt: com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance _queen
com.l2jfrozen.gameserver.ai.special.QueenAnt: java.util.List _Minions
com.l2jfrozen.gameserver.ai.special.QueenAnt: java.util.List _Nurses
com.l2jfrozen.gameserver.ai.special.QueenAnt: QueenAnt(int,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.ai.special.QueenAnt: void spawnBoss(com.l2jfrozen.gameserver.model.actor.instance.L2GrandBossInstance)
com.l2jfrozen.gameserver.ai.special.QueenAnt: java.lang.String onAdvEvent(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.ai.special.QueenAnt: java.lang.String onAttack(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,boolean)
com.l2jfrozen.gameserver.ai.special.QueenAnt: java.lang.String onKill(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.ai.special.QueenAnt: void getIntoPosition(com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance,com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance)
com.l2jfrozen.gameserver.ai.special.QueenAnt: void run()
com.l2jfrozen.gameserver.ai.special.QueenAnt$1
com.l2jfrozen.gameserver.ai.special.QueenAnt$1: int[] $SwitchMap$com$l2jfrozen$gameserver$ai$special$QueenAnt$Event
com.l2jfrozen.gameserver.ai.special.QueenAnt$1: void <clinit>()
com.l2jfrozen.gameserver.ai.special.QueenAnt$Event
com.l2jfrozen.gameserver.ai.special.QueenAnt$Event: com.l2jfrozen.gameserver.ai.special.QueenAnt$Event QUEEN_SPAWN
com.l2jfrozen.gameserver.ai.special.QueenAnt$Event: com.l2jfrozen.gameserver.ai.special.QueenAnt$Event CHECK_MINIONS_ZONE
com.l2jfrozen.gameserver.ai.special.QueenAnt$Event: com.l2jfrozen.gameserver.ai.special.QueenAnt$Event CHECK_NURSE_ALIVE
com.l2jfrozen.gameserver.ai.special.QueenAnt$Event: com.l2jfrozen.gameserver.ai.special.QueenAnt$Event ACTION
com.l2jfrozen.gameserver.ai.special.QueenAnt$Event: com.l2jfrozen.gameserver.ai.special.QueenAnt$Event DESPAWN_MINIONS
com.l2jfrozen.gameserver.ai.special.QueenAnt$Event: com.l2jfrozen.gameserver.ai.special.QueenAnt$Event SPAWN_ROYAL
com.l2jfrozen.gameserver.ai.special.QueenAnt$Event: com.l2jfrozen.gameserver.ai.special.QueenAnt$Event NURSES_SPAWN
com.l2jfrozen.gameserver.ai.special.QueenAnt$Event: com.l2jfrozen.gameserver.ai.special.QueenAnt$Event RESPAWN_ROYAL
com.l2jfrozen.gameserver.ai.special.QueenAnt$Event: com.l2jfrozen.gameserver.ai.special.QueenAnt$Event RESPAWN_NURSE
com.l2jfrozen.gameserver.ai.special.QueenAnt$Event: com.l2jfrozen.gameserver.ai.special.QueenAnt$Event LARVA_DESPAWN
com.l2jfrozen.gameserver.ai.special.QueenAnt$Event: com.l2jfrozen.gameserver.ai.special.QueenAnt$Event HEAL
com.l2jfrozen.gameserver.ai.special.QueenAnt$Event: com.l2jfrozen.gameserver.ai.special.QueenAnt$Event[] $VALUES
com.l2jfrozen.gameserver.ai.special.QueenAnt$Event: com.l2jfrozen.gameserver.ai.special.QueenAnt$Event[] values()
com.l2jfrozen.gameserver.ai.special.QueenAnt$Event: com.l2jfrozen.gameserver.ai.special.QueenAnt$Event valueOf(java.lang.String)
com.l2jfrozen.gameserver.ai.special.QueenAnt$Event: QueenAnt$Event(java.lang.String,int)
com.l2jfrozen.gameserver.ai.special.QueenAnt$Event: void <clinit>()
com.l2jfrozen.gameserver.ai.special.SummonMinions
com.l2jfrozen.gameserver.ai.special.SummonMinions: int HasSpawned
com.l2jfrozen.gameserver.ai.special.SummonMinions: javolution.util.FastSet myTrackingSet
com.l2jfrozen.gameserver.ai.special.SummonMinions: javolution.util.FastMap _attackersList
com.l2jfrozen.gameserver.ai.special.SummonMinions: javolution.util.FastMap MINIONS
com.l2jfrozen.gameserver.ai.special.SummonMinions: SummonMinions(int,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.ai.special.SummonMinions: java.lang.String onAttack(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,boolean)
com.l2jfrozen.gameserver.ai.special.SummonMinions: java.lang.String onKill(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.ai.special.SummonMinions: void run()
com.l2jfrozen.gameserver.ai.special.SummonMinions: void <clinit>()
com.l2jfrozen.gameserver.ai.special.Transform
com.l2jfrozen.gameserver.ai.special.Transform: java.util.ArrayList _mobs
com.l2jfrozen.gameserver.ai.special.Transform: java.lang.String[] Message
com.l2jfrozen.gameserver.ai.special.Transform: Transform(int,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.ai.special.Transform: java.lang.String onAttack(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,boolean)
com.l2jfrozen.gameserver.ai.special.Transform: java.lang.String onKill(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.ai.special.Transform: void run()
com.l2jfrozen.gameserver.ai.special.Transform: void <clinit>()
com.l2jfrozen.gameserver.ai.special.Transform$NPCSpawnTask
com.l2jfrozen.gameserver.ai.special.Transform$NPCSpawnTask: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance spawn
com.l2jfrozen.gameserver.ai.special.Transform$NPCSpawnTask: long spawnEffectTime
com.l2jfrozen.gameserver.ai.special.Transform$NPCSpawnTask: int spawnAbnormalEffect
com.l2jfrozen.gameserver.ai.special.Transform$NPCSpawnTask: com.l2jfrozen.gameserver.ai.special.Transform this$0
com.l2jfrozen.gameserver.ai.special.Transform$NPCSpawnTask: Transform$NPCSpawnTask(com.l2jfrozen.gameserver.ai.special.Transform,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,long,int)
com.l2jfrozen.gameserver.ai.special.Transform$NPCSpawnTask: void run()
com.l2jfrozen.gameserver.ai.special.Transform$Transformer
com.l2jfrozen.gameserver.ai.special.Transform$Transformer: int _id
com.l2jfrozen.gameserver.ai.special.Transform$Transformer: int _idPoly
com.l2jfrozen.gameserver.ai.special.Transform$Transformer: int _chance
com.l2jfrozen.gameserver.ai.special.Transform$Transformer: int _message
com.l2jfrozen.gameserver.ai.special.Transform$Transformer: Transform$Transformer(int,int,int,int)
com.l2jfrozen.gameserver.ai.special.Transform$Transformer: int getId()
com.l2jfrozen.gameserver.ai.special.Transform$Transformer: int getIdPoly()
com.l2jfrozen.gameserver.ai.special.Transform$Transformer: int getChance()
com.l2jfrozen.gameserver.ai.special.Transform$Transformer: int getMessage()
com.l2jfrozen.gameserver.ai.special.Valakas
com.l2jfrozen.gameserver.ai.special.Valakas: int i_ai0
com.l2jfrozen.gameserver.ai.special.Valakas: int i_ai1
com.l2jfrozen.gameserver.ai.special.Valakas: int i_ai2
com.l2jfrozen.gameserver.ai.special.Valakas: int i_ai3
com.l2jfrozen.gameserver.ai.special.Valakas: int i_ai4
com.l2jfrozen.gameserver.ai.special.Valakas: int i_quest0
com.l2jfrozen.gameserver.ai.special.Valakas: long lastAttackTime
com.l2jfrozen.gameserver.ai.special.Valakas: int i_quest2
com.l2jfrozen.gameserver.ai.special.Valakas: int i_quest3
com.l2jfrozen.gameserver.ai.special.Valakas: int i_quest4
com.l2jfrozen.gameserver.ai.special.Valakas: com.l2jfrozen.gameserver.model.L2Character c_quest2
com.l2jfrozen.gameserver.ai.special.Valakas: com.l2jfrozen.gameserver.model.L2Character c_quest3
com.l2jfrozen.gameserver.ai.special.Valakas: com.l2jfrozen.gameserver.model.L2Character c_quest4
com.l2jfrozen.gameserver.ai.special.Valakas: int VALAKAS
com.l2jfrozen.gameserver.ai.special.Valakas: byte DORMANT
com.l2jfrozen.gameserver.ai.special.Valakas: byte WAITING
com.l2jfrozen.gameserver.ai.special.Valakas: byte FIGHTING
com.l2jfrozen.gameserver.ai.special.Valakas: byte DEAD
com.l2jfrozen.gameserver.ai.special.Valakas: com.l2jfrozen.gameserver.model.zone.type.L2BossZone _Zone
com.l2jfrozen.gameserver.ai.special.Valakas: Valakas(int,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.ai.special.Valakas: java.lang.String onAdvEvent(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.ai.special.Valakas: java.lang.String onAttack(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,boolean)
com.l2jfrozen.gameserver.ai.special.Valakas: java.lang.String onKill(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.ai.special.Valakas: void getRandomSkill(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.ai.special.Valakas: void callSkillAI(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.ai.special.Valakas: void broadcastSpawn(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.ai.special.Valakas: com.l2jfrozen.gameserver.model.L2Character getRandomTarget(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.ai.special.Valakas: java.lang.String onSpellFinished(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.ai.special.Valakas: java.lang.String onAggroRangeEnter(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.ai.special.Valakas: java.lang.String onSkillUse(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.ai.special.Valakas: void run()
com.l2jfrozen.gameserver.ai.special.Valakas$1
com.l2jfrozen.gameserver.ai.special.Valakas$1: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance val$_valakas
com.l2jfrozen.gameserver.ai.special.Valakas$1: int val$hp
com.l2jfrozen.gameserver.ai.special.Valakas$1: int val$mp
com.l2jfrozen.gameserver.ai.special.Valakas$1: com.l2jfrozen.gameserver.ai.special.Valakas this$0
com.l2jfrozen.gameserver.ai.special.Valakas$1: Valakas$1(com.l2jfrozen.gameserver.ai.special.Valakas,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,int,int)
com.l2jfrozen.gameserver.ai.special.Valakas$1: void run()
com.l2jfrozen.gameserver.ai.special.Valakas$2
com.l2jfrozen.gameserver.ai.special.Valakas$2: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance val$_valakas
com.l2jfrozen.gameserver.ai.special.Valakas$2: com.l2jfrozen.gameserver.ai.special.Valakas this$0
com.l2jfrozen.gameserver.ai.special.Valakas$2: Valakas$2(com.l2jfrozen.gameserver.ai.special.Valakas,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.ai.special.Valakas$2: void run()
com.l2jfrozen.gameserver.ai.special.VanHalter
com.l2jfrozen.gameserver.ai.special.VanHalter: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.ai.special.VanHalter: java.util.Map _bleedingPlayers
com.l2jfrozen.gameserver.ai.special.VanHalter: java.util.Map _monsterSpawn
com.l2jfrozen.gameserver.ai.special.VanHalter: java.util.List _royalGuardSpawn
com.l2jfrozen.gameserver.ai.special.VanHalter: java.util.List _royalGuardCaptainSpawn
com.l2jfrozen.gameserver.ai.special.VanHalter: java.util.List _royalGuardHelperSpawn
com.l2jfrozen.gameserver.ai.special.VanHalter: java.util.List _triolRevelationSpawn
com.l2jfrozen.gameserver.ai.special.VanHalter: java.util.List _triolRevelationAlive
com.l2jfrozen.gameserver.ai.special.VanHalter: java.util.List _guardOfAltarSpawn
com.l2jfrozen.gameserver.ai.special.VanHalter: java.util.Map _cameraMarkerSpawn
com.l2jfrozen.gameserver.ai.special.VanHalter: com.l2jfrozen.gameserver.model.spawn.L2Spawn _ritualOfferingSpawn
com.l2jfrozen.gameserver.ai.special.VanHalter: com.l2jfrozen.gameserver.model.spawn.L2Spawn _ritualSacrificeSpawn
com.l2jfrozen.gameserver.ai.special.VanHalter: com.l2jfrozen.gameserver.model.spawn.L2Spawn _vanHalterSpawn
com.l2jfrozen.gameserver.ai.special.VanHalter: java.util.List _monsters
com.l2jfrozen.gameserver.ai.special.VanHalter: java.util.List _royalGuard
com.l2jfrozen.gameserver.ai.special.VanHalter: java.util.List _royalGuardCaptain
com.l2jfrozen.gameserver.ai.special.VanHalter: java.util.List _royalGuardHepler
com.l2jfrozen.gameserver.ai.special.VanHalter: java.util.List _triolRevelation
com.l2jfrozen.gameserver.ai.special.VanHalter: java.util.List _guardOfAltar
com.l2jfrozen.gameserver.ai.special.VanHalter: java.util.Map _cameraMarker
com.l2jfrozen.gameserver.ai.special.VanHalter: java.util.List _doorOfAltar
com.l2jfrozen.gameserver.ai.special.VanHalter: java.util.List _doorOfSacrifice
com.l2jfrozen.gameserver.ai.special.VanHalter: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance _ritualOffering
com.l2jfrozen.gameserver.ai.special.VanHalter: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance _ritualSacrifice
com.l2jfrozen.gameserver.ai.special.VanHalter: com.l2jfrozen.gameserver.model.actor.instance.L2RaidBossInstance _vanHalter
com.l2jfrozen.gameserver.ai.special.VanHalter: java.util.concurrent.ScheduledFuture _movieTask
com.l2jfrozen.gameserver.ai.special.VanHalter: java.util.concurrent.ScheduledFuture _closeDoorOfAltarTask
com.l2jfrozen.gameserver.ai.special.VanHalter: java.util.concurrent.ScheduledFuture _openDoorOfAltarTask
com.l2jfrozen.gameserver.ai.special.VanHalter: java.util.concurrent.ScheduledFuture _lockUpDoorOfAltarTask
com.l2jfrozen.gameserver.ai.special.VanHalter: java.util.concurrent.ScheduledFuture _callRoyalGuardHelperTask
com.l2jfrozen.gameserver.ai.special.VanHalter: java.util.concurrent.ScheduledFuture _timeUpTask
com.l2jfrozen.gameserver.ai.special.VanHalter: java.util.concurrent.ScheduledFuture _intervalTask
com.l2jfrozen.gameserver.ai.special.VanHalter: java.util.concurrent.ScheduledFuture _halterEscapeTask
com.l2jfrozen.gameserver.ai.special.VanHalter: java.util.concurrent.ScheduledFuture _setBleedTask
com.l2jfrozen.gameserver.ai.special.VanHalter: boolean _isLocked
com.l2jfrozen.gameserver.ai.special.VanHalter: boolean _isHalterSpawned
com.l2jfrozen.gameserver.ai.special.VanHalter: boolean _isSacrificeSpawned
com.l2jfrozen.gameserver.ai.special.VanHalter: boolean _isCaptainSpawned
com.l2jfrozen.gameserver.ai.special.VanHalter: boolean _isHelperCalled
com.l2jfrozen.gameserver.ai.special.VanHalter: byte INTERVAL
com.l2jfrozen.gameserver.ai.special.VanHalter: byte NOTSPAWN
com.l2jfrozen.gameserver.ai.special.VanHalter: byte ALIVE
com.l2jfrozen.gameserver.ai.special.VanHalter: VanHalter(int,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.ai.special.VanHalter: java.lang.String onAttack(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,boolean)
com.l2jfrozen.gameserver.ai.special.VanHalter: java.lang.String onKill(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.ai.special.VanHalter: void loadRoyalGuard()
com.l2jfrozen.gameserver.ai.special.VanHalter: void spawnRoyalGuard()
com.l2jfrozen.gameserver.ai.special.VanHalter: void deleteRoyalGuard()
com.l2jfrozen.gameserver.ai.special.VanHalter: void loadTriolRevelation()
com.l2jfrozen.gameserver.ai.special.VanHalter: void spawnTriolRevelation()
com.l2jfrozen.gameserver.ai.special.VanHalter: void deleteTriolRevelation()
com.l2jfrozen.gameserver.ai.special.VanHalter: void loadRoyalGuardCaptain()
com.l2jfrozen.gameserver.ai.special.VanHalter: void spawnRoyalGuardCaptain()
com.l2jfrozen.gameserver.ai.special.VanHalter: void deleteRoyalGuardCaptain()
com.l2jfrozen.gameserver.ai.special.VanHalter: void loadRoyalGuardHelper()
com.l2jfrozen.gameserver.ai.special.VanHalter: void spawnRoyalGuardHepler()
com.l2jfrozen.gameserver.ai.special.VanHalter: void deleteRoyalGuardHepler()
com.l2jfrozen.gameserver.ai.special.VanHalter: void loadGuardOfAltar()
com.l2jfrozen.gameserver.ai.special.VanHalter: void spawnGuardOfAltar()
com.l2jfrozen.gameserver.ai.special.VanHalter: void deleteGuardOfAltar()
com.l2jfrozen.gameserver.ai.special.VanHalter: void loadVanHalter()
com.l2jfrozen.gameserver.ai.special.VanHalter: void spawnVanHalter()
com.l2jfrozen.gameserver.ai.special.VanHalter: void deleteVanHalter()
com.l2jfrozen.gameserver.ai.special.VanHalter: void loadRitualOffering()
com.l2jfrozen.gameserver.ai.special.VanHalter: void spawnRitualOffering()
com.l2jfrozen.gameserver.ai.special.VanHalter: void deleteRitualOffering()
com.l2jfrozen.gameserver.ai.special.VanHalter: void loadRitualSacrifice()
com.l2jfrozen.gameserver.ai.special.VanHalter: void spawnRitualSacrifice()
com.l2jfrozen.gameserver.ai.special.VanHalter: void deleteRitualSacrifice()
com.l2jfrozen.gameserver.ai.special.VanHalter: void spawnCameraMarker()
com.l2jfrozen.gameserver.ai.special.VanHalter: void deleteCameraMarker()
com.l2jfrozen.gameserver.ai.special.VanHalter: void intruderDetection(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.ai.special.VanHalter: void openDoorOfAltar(boolean)
com.l2jfrozen.gameserver.ai.special.VanHalter: void closeDoorOfAltar(boolean)
com.l2jfrozen.gameserver.ai.special.VanHalter: void openDoorOfSacrifice()
com.l2jfrozen.gameserver.ai.special.VanHalter: void closeDoorOfSacrifice()
com.l2jfrozen.gameserver.ai.special.VanHalter: void checkTriolRevelationDestroy()
com.l2jfrozen.gameserver.ai.special.VanHalter: void checkRoyalGuardCaptainDestroy()
com.l2jfrozen.gameserver.ai.special.VanHalter: void combatBeginning()
com.l2jfrozen.gameserver.ai.special.VanHalter: void callRoyalGuardHelper()
com.l2jfrozen.gameserver.ai.special.VanHalter: void addBleeding()
com.l2jfrozen.gameserver.ai.special.VanHalter: void removeBleeding(int)
com.l2jfrozen.gameserver.ai.special.VanHalter: void enterInterval()
com.l2jfrozen.gameserver.ai.special.VanHalter: void setupAltar()
com.l2jfrozen.gameserver.ai.special.VanHalter: void run()
com.l2jfrozen.gameserver.ai.special.VanHalter: void <clinit>()
com.l2jfrozen.gameserver.ai.special.VanHalter$Bleeding
com.l2jfrozen.gameserver.ai.special.VanHalter$Bleeding: com.l2jfrozen.gameserver.ai.special.VanHalter this$0
com.l2jfrozen.gameserver.ai.special.VanHalter$Bleeding: VanHalter$Bleeding(com.l2jfrozen.gameserver.ai.special.VanHalter)
com.l2jfrozen.gameserver.ai.special.VanHalter$Bleeding: void run()
com.l2jfrozen.gameserver.ai.special.VanHalter$CallRoyalGuardHelper
com.l2jfrozen.gameserver.ai.special.VanHalter$CallRoyalGuardHelper: com.l2jfrozen.gameserver.ai.special.VanHalter this$0
com.l2jfrozen.gameserver.ai.special.VanHalter$CallRoyalGuardHelper: VanHalter$CallRoyalGuardHelper(com.l2jfrozen.gameserver.ai.special.VanHalter)
com.l2jfrozen.gameserver.ai.special.VanHalter$CallRoyalGuardHelper: void run()
com.l2jfrozen.gameserver.ai.special.VanHalter$CloseDoorOfAltar
com.l2jfrozen.gameserver.ai.special.VanHalter$CloseDoorOfAltar: com.l2jfrozen.gameserver.ai.special.VanHalter this$0
com.l2jfrozen.gameserver.ai.special.VanHalter$CloseDoorOfAltar: VanHalter$CloseDoorOfAltar(com.l2jfrozen.gameserver.ai.special.VanHalter)
com.l2jfrozen.gameserver.ai.special.VanHalter$CloseDoorOfAltar: void run()
com.l2jfrozen.gameserver.ai.special.VanHalter$HalterEscape
com.l2jfrozen.gameserver.ai.special.VanHalter$HalterEscape: com.l2jfrozen.gameserver.ai.special.VanHalter this$0
com.l2jfrozen.gameserver.ai.special.VanHalter$HalterEscape: VanHalter$HalterEscape(com.l2jfrozen.gameserver.ai.special.VanHalter)
com.l2jfrozen.gameserver.ai.special.VanHalter$HalterEscape: void run()
com.l2jfrozen.gameserver.ai.special.VanHalter$Interval
com.l2jfrozen.gameserver.ai.special.VanHalter$Interval: com.l2jfrozen.gameserver.ai.special.VanHalter this$0
com.l2jfrozen.gameserver.ai.special.VanHalter$Interval: VanHalter$Interval(com.l2jfrozen.gameserver.ai.special.VanHalter)
com.l2jfrozen.gameserver.ai.special.VanHalter$Interval: void run()
com.l2jfrozen.gameserver.ai.special.VanHalter$LockUpDoorOfAltar
com.l2jfrozen.gameserver.ai.special.VanHalter$LockUpDoorOfAltar: com.l2jfrozen.gameserver.ai.special.VanHalter this$0
com.l2jfrozen.gameserver.ai.special.VanHalter$LockUpDoorOfAltar: VanHalter$LockUpDoorOfAltar(com.l2jfrozen.gameserver.ai.special.VanHalter)
com.l2jfrozen.gameserver.ai.special.VanHalter$LockUpDoorOfAltar: void run()
com.l2jfrozen.gameserver.ai.special.VanHalter$Movie
com.l2jfrozen.gameserver.ai.special.VanHalter$Movie: int _distance
com.l2jfrozen.gameserver.ai.special.VanHalter$Movie: int _taskId
com.l2jfrozen.gameserver.ai.special.VanHalter$Movie: com.l2jfrozen.gameserver.ai.special.VanHalter this$0
com.l2jfrozen.gameserver.ai.special.VanHalter$Movie: VanHalter$Movie(com.l2jfrozen.gameserver.ai.special.VanHalter,int)
com.l2jfrozen.gameserver.ai.special.VanHalter$Movie: void run()
com.l2jfrozen.gameserver.ai.special.VanHalter$OpenDoorOfAltar
com.l2jfrozen.gameserver.ai.special.VanHalter$OpenDoorOfAltar: com.l2jfrozen.gameserver.ai.special.VanHalter this$0
com.l2jfrozen.gameserver.ai.special.VanHalter$OpenDoorOfAltar: VanHalter$OpenDoorOfAltar(com.l2jfrozen.gameserver.ai.special.VanHalter)
com.l2jfrozen.gameserver.ai.special.VanHalter$OpenDoorOfAltar: void run()
com.l2jfrozen.gameserver.ai.special.VanHalter$TimeUp
com.l2jfrozen.gameserver.ai.special.VanHalter$TimeUp: com.l2jfrozen.gameserver.ai.special.VanHalter this$0
com.l2jfrozen.gameserver.ai.special.VanHalter$TimeUp: VanHalter$TimeUp(com.l2jfrozen.gameserver.ai.special.VanHalter)
com.l2jfrozen.gameserver.ai.special.VanHalter$TimeUp: void run()
com.l2jfrozen.gameserver.ai.special.VarkaKetraAlly
com.l2jfrozen.gameserver.ai.special.VarkaKetraAlly: int[] ketraAllyMark
com.l2jfrozen.gameserver.ai.special.VarkaKetraAlly: int[] varkaAllyMark
com.l2jfrozen.gameserver.ai.special.VarkaKetraAlly: VarkaKetraAlly(int,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.ai.special.VarkaKetraAlly: java.lang.String onAttack(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,boolean)
com.l2jfrozen.gameserver.ai.special.VarkaKetraAlly: java.lang.String onKill(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.ai.special.VarkaKetraAlly: void decreaseAlly(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.ai.special.VarkaKetraAlly: void run()
com.l2jfrozen.gameserver.ai.special.VarkaKetraAlly: void <clinit>()
com.l2jfrozen.gameserver.ai.special.Zaken
com.l2jfrozen.gameserver.ai.special.Zaken: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.ai.special.Zaken: int _1001
com.l2jfrozen.gameserver.ai.special.Zaken: int _ai0
com.l2jfrozen.gameserver.ai.special.Zaken: int _ai1
com.l2jfrozen.gameserver.ai.special.Zaken: int _ai2
com.l2jfrozen.gameserver.ai.special.Zaken: int _ai3
com.l2jfrozen.gameserver.ai.special.Zaken: int _ai4
com.l2jfrozen.gameserver.ai.special.Zaken: int _quest0
com.l2jfrozen.gameserver.ai.special.Zaken: int _quest1
com.l2jfrozen.gameserver.ai.special.Zaken: int _quest2
com.l2jfrozen.gameserver.ai.special.Zaken: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance c_quest0
com.l2jfrozen.gameserver.ai.special.Zaken: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance c_quest1
com.l2jfrozen.gameserver.ai.special.Zaken: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance c_quest2
com.l2jfrozen.gameserver.ai.special.Zaken: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance c_quest3
com.l2jfrozen.gameserver.ai.special.Zaken: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance c_quest4
com.l2jfrozen.gameserver.ai.special.Zaken: int ZAKEN
com.l2jfrozen.gameserver.ai.special.Zaken: int doll_blader_b
com.l2jfrozen.gameserver.ai.special.Zaken: int vale_master_b
com.l2jfrozen.gameserver.ai.special.Zaken: int pirates_zombie_captain_b
com.l2jfrozen.gameserver.ai.special.Zaken: int pirates_zombie_b
com.l2jfrozen.gameserver.ai.special.Zaken: int[] Xcoords
com.l2jfrozen.gameserver.ai.special.Zaken: int[] Ycoords
com.l2jfrozen.gameserver.ai.special.Zaken: int[] Zcoords
com.l2jfrozen.gameserver.ai.special.Zaken: byte ALIVE
com.l2jfrozen.gameserver.ai.special.Zaken: byte DEAD
com.l2jfrozen.gameserver.ai.special.Zaken: com.l2jfrozen.gameserver.model.zone.type.L2BossZone _Zone
com.l2jfrozen.gameserver.ai.special.Zaken: Zaken(int,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.ai.special.Zaken: void spawnBoss(com.l2jfrozen.gameserver.model.actor.instance.L2GrandBossInstance)
com.l2jfrozen.gameserver.ai.special.Zaken: java.lang.String onAdvEvent(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.ai.special.Zaken: java.lang.String onFactionCall(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.ai.special.Zaken: java.lang.String onSpellFinished(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.ai.special.Zaken: java.lang.String onAttack(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,boolean)
com.l2jfrozen.gameserver.ai.special.Zaken: java.lang.String onKill(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.ai.special.Zaken: java.lang.String onAggroRangeEnter(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.ai.special.Zaken: int getTimeHour()
com.l2jfrozen.gameserver.ai.special.Zaken: void run()
com.l2jfrozen.gameserver.ai.special.Zaken: void <clinit>()
com.l2jfrozen.gameserver.ai.special.Zaken$1
com.l2jfrozen.gameserver.ai.special.Zaken$1: com.l2jfrozen.gameserver.ai.special.Zaken this$0
com.l2jfrozen.gameserver.ai.special.Zaken$1: Zaken$1(com.l2jfrozen.gameserver.ai.special.Zaken)
com.l2jfrozen.gameserver.ai.special.Zaken$1: void run()
com.l2jfrozen.gameserver.ai.special.Zaken$1$1
com.l2jfrozen.gameserver.ai.special.Zaken$1$1: com.l2jfrozen.gameserver.ai.special.Zaken$1 this$1
com.l2jfrozen.gameserver.ai.special.Zaken$1$1: Zaken$1$1(com.l2jfrozen.gameserver.ai.special.Zaken$1)
com.l2jfrozen.gameserver.ai.special.Zaken$1$1: void run()
com.l2jfrozen.gameserver.ai.special.ZombieGatekeepers
com.l2jfrozen.gameserver.ai.special.ZombieGatekeepers: javolution.util.FastMap _attackersList
com.l2jfrozen.gameserver.ai.special.ZombieGatekeepers: ZombieGatekeepers(int,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.ai.special.ZombieGatekeepers: java.lang.String onAttack(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,boolean)
com.l2jfrozen.gameserver.ai.special.ZombieGatekeepers: java.lang.String onAggroRangeEnter(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.ai.special.ZombieGatekeepers: java.lang.String onKill(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.ai.special.ZombieGatekeepers: void run()
com.l2jfrozen.gameserver.ai.special.manager.AIExtend
com.l2jfrozen.gameserver.ai.special.manager.AIExtend: javolution.util.FastMap _AI
com.l2jfrozen.gameserver.ai.special.manager.AIExtend: int _idCharacter
com.l2jfrozen.gameserver.ai.special.manager.AIExtend: AIExtend()
com.l2jfrozen.gameserver.ai.special.manager.AIExtend: void addAI(int)
com.l2jfrozen.gameserver.ai.special.manager.AIExtend: void clearAllAI()
com.l2jfrozen.gameserver.ai.special.manager.AIExtend: int getID()
com.l2jfrozen.gameserver.ai.special.manager.AIExtend: com.l2jfrozen.gameserver.templates.L2NpcTemplate addActionId(int,com.l2jfrozen.gameserver.ai.special.manager.Action)
com.l2jfrozen.gameserver.ai.special.manager.AIExtend: java.lang.String onAttack(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,boolean)
com.l2jfrozen.gameserver.ai.special.manager.AIExtend: java.lang.String onKill(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.ai.special.manager.AIExtend: java.lang.String onSkillUse(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.ai.special.manager.AIExtend: java.lang.String onSpellFinished(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.ai.special.manager.AIExtend: java.lang.String onSpawn(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.ai.special.manager.AIExtend: java.lang.String onAggroRangeEnter(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.ai.special.manager.AIExtend: boolean notifyAggroRangeEnter(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.ai.special.manager.AIExtend: boolean notifySpawn(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.ai.special.manager.AIExtend: boolean notifySkillUse(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.ai.special.manager.AIExtend: boolean notifySpellFinished(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.ai.special.manager.AIExtend: boolean notifyKill(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.ai.special.manager.AIExtend: boolean notifyAttack(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,boolean)
com.l2jfrozen.gameserver.ai.special.manager.AIExtend: void run()
com.l2jfrozen.gameserver.ai.special.manager.AIExtend: void <clinit>()
com.l2jfrozen.gameserver.ai.special.manager.AILoader
com.l2jfrozen.gameserver.ai.special.manager.AILoader: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.ai.special.manager.AILoader: AILoader()
com.l2jfrozen.gameserver.ai.special.manager.AILoader: void init()
com.l2jfrozen.gameserver.ai.special.manager.AILoader: void <clinit>()
com.l2jfrozen.gameserver.ai.special.manager.Action
com.l2jfrozen.gameserver.ai.special.manager.Action: com.l2jfrozen.gameserver.ai.special.manager.Action ON_SPELL_FINISHED
com.l2jfrozen.gameserver.ai.special.manager.Action: com.l2jfrozen.gameserver.ai.special.manager.Action ON_AGGRO_RANGE_ENTER
com.l2jfrozen.gameserver.ai.special.manager.Action: com.l2jfrozen.gameserver.ai.special.manager.Action ON_SPAWN
com.l2jfrozen.gameserver.ai.special.manager.Action: com.l2jfrozen.gameserver.ai.special.manager.Action ON_SKILL_USE
com.l2jfrozen.gameserver.ai.special.manager.Action: com.l2jfrozen.gameserver.ai.special.manager.Action ON_KILL
com.l2jfrozen.gameserver.ai.special.manager.Action: com.l2jfrozen.gameserver.ai.special.manager.Action ON_ATTACK
com.l2jfrozen.gameserver.ai.special.manager.Action: boolean _isRegistred
com.l2jfrozen.gameserver.ai.special.manager.Action: com.l2jfrozen.gameserver.ai.special.manager.Action[] $VALUES
com.l2jfrozen.gameserver.ai.special.manager.Action: com.l2jfrozen.gameserver.ai.special.manager.Action[] values()
com.l2jfrozen.gameserver.ai.special.manager.Action: com.l2jfrozen.gameserver.ai.special.manager.Action valueOf(java.lang.String)
com.l2jfrozen.gameserver.ai.special.manager.Action: Action(java.lang.String,int,boolean)
com.l2jfrozen.gameserver.ai.special.manager.Action: boolean isRegistred()
com.l2jfrozen.gameserver.ai.special.manager.Action: void <clinit>()
com.l2jfrozen.gameserver.ai.special.manager.test
com.l2jfrozen.gameserver.ai.special.manager.test: int[] ID_MOB
com.l2jfrozen.gameserver.ai.special.manager.test: test()
com.l2jfrozen.gameserver.ai.special.manager.test: void run()
com.l2jfrozen.gameserver.ai.special.manager.test: void <clinit>()
com.l2jfrozen.gameserver.cache.CrestCache
com.l2jfrozen.gameserver.cache.CrestCache: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.cache.CrestCache: com.l2jfrozen.gameserver.cache.CrestCache _instance
com.l2jfrozen.gameserver.cache.CrestCache: com.l2jfrozen.gameserver.cache.FastMRUCache _cachePledge
com.l2jfrozen.gameserver.cache.CrestCache: com.l2jfrozen.gameserver.cache.FastMRUCache _cachePledgeLarge
com.l2jfrozen.gameserver.cache.CrestCache: com.l2jfrozen.gameserver.cache.FastMRUCache _cacheAlly
com.l2jfrozen.gameserver.cache.CrestCache: int _loadedFiles
com.l2jfrozen.gameserver.cache.CrestCache: long _bytesBuffLen
com.l2jfrozen.gameserver.cache.CrestCache: com.l2jfrozen.gameserver.cache.CrestCache getInstance()
com.l2jfrozen.gameserver.cache.CrestCache: CrestCache()
com.l2jfrozen.gameserver.cache.CrestCache: void reload()
com.l2jfrozen.gameserver.cache.CrestCache: void convertOldPedgeFiles()
com.l2jfrozen.gameserver.cache.CrestCache: float getMemoryUsage()
com.l2jfrozen.gameserver.cache.CrestCache: int getLoadedFiles()
com.l2jfrozen.gameserver.cache.CrestCache: byte[] getPledgeCrest(int)
com.l2jfrozen.gameserver.cache.CrestCache: byte[] getPledgeCrestLarge(int)
com.l2jfrozen.gameserver.cache.CrestCache: byte[] getAllyCrest(int)
com.l2jfrozen.gameserver.cache.CrestCache: void removePledgeCrest(int)
com.l2jfrozen.gameserver.cache.CrestCache: void removePledgeCrestLarge(int)
com.l2jfrozen.gameserver.cache.CrestCache: void removeOldPledgeCrest(int)
com.l2jfrozen.gameserver.cache.CrestCache: void removeAllyCrest(int)
com.l2jfrozen.gameserver.cache.CrestCache: boolean savePledgeCrest(int,byte[])
com.l2jfrozen.gameserver.cache.CrestCache: boolean savePledgeCrestLarge(int,byte[])
com.l2jfrozen.gameserver.cache.CrestCache: boolean saveAllyCrest(int,byte[])
com.l2jfrozen.gameserver.cache.CrestCache: void <clinit>()
com.l2jfrozen.gameserver.cache.CrestCache$BmpFilter
com.l2jfrozen.gameserver.cache.CrestCache$BmpFilter: com.l2jfrozen.gameserver.cache.CrestCache this$0
com.l2jfrozen.gameserver.cache.CrestCache$BmpFilter: CrestCache$BmpFilter(com.l2jfrozen.gameserver.cache.CrestCache)
com.l2jfrozen.gameserver.cache.CrestCache$BmpFilter: boolean accept(java.io.File)
com.l2jfrozen.gameserver.cache.CrestCache$OldPledgeFilter
com.l2jfrozen.gameserver.cache.CrestCache$OldPledgeFilter: com.l2jfrozen.gameserver.cache.CrestCache this$0
com.l2jfrozen.gameserver.cache.CrestCache$OldPledgeFilter: CrestCache$OldPledgeFilter(com.l2jfrozen.gameserver.cache.CrestCache)
com.l2jfrozen.gameserver.cache.CrestCache$OldPledgeFilter: boolean accept(java.io.File)
com.l2jfrozen.gameserver.cache.FastMRUCache
com.l2jfrozen.gameserver.cache.FastMRUCache: long serialVersionUID
com.l2jfrozen.gameserver.cache.FastMRUCache: int DEFAULT_CAPACITY
com.l2jfrozen.gameserver.cache.FastMRUCache: int DEFAULT_FORGET_TIME
com.l2jfrozen.gameserver.cache.FastMRUCache: javolution.util.FastMap _cache
com.l2jfrozen.gameserver.cache.FastMRUCache: javolution.util.FastMap _map
com.l2jfrozen.gameserver.cache.FastMRUCache: javolution.util.FastList _mruList
com.l2jfrozen.gameserver.cache.FastMRUCache: int _cacheSize
com.l2jfrozen.gameserver.cache.FastMRUCache: int _forgetTime
com.l2jfrozen.gameserver.cache.FastMRUCache: javolution.context.ObjectFactory FACTORY
com.l2jfrozen.gameserver.cache.FastMRUCache: com.l2jfrozen.gameserver.cache.FastMRUCache newInstance()
com.l2jfrozen.gameserver.cache.FastMRUCache: FastMRUCache()
com.l2jfrozen.gameserver.cache.FastMRUCache: FastMRUCache(javolution.util.FastMap)
com.l2jfrozen.gameserver.cache.FastMRUCache: FastMRUCache(javolution.util.FastMap,int)
com.l2jfrozen.gameserver.cache.FastMRUCache: FastMRUCache(javolution.util.FastMap,int,int)
com.l2jfrozen.gameserver.cache.FastMRUCache: void reset()
com.l2jfrozen.gameserver.cache.FastMRUCache: java.lang.Object get(java.lang.Object)
com.l2jfrozen.gameserver.cache.FastMRUCache: boolean remove(java.lang.Object)
com.l2jfrozen.gameserver.cache.FastMRUCache: javolution.util.FastMap getContentMap()
com.l2jfrozen.gameserver.cache.FastMRUCache: int size()
com.l2jfrozen.gameserver.cache.FastMRUCache: int capacity()
com.l2jfrozen.gameserver.cache.FastMRUCache: int getForgetTime()
com.l2jfrozen.gameserver.cache.FastMRUCache: void clear()
com.l2jfrozen.gameserver.cache.FastMRUCache: javolution.util.FastCollection$Record head()
com.l2jfrozen.gameserver.cache.FastMRUCache: javolution.util.FastCollection$Record tail()
com.l2jfrozen.gameserver.cache.FastMRUCache: java.lang.Object valueOf(javolution.util.FastCollection$Record)
com.l2jfrozen.gameserver.cache.FastMRUCache: void delete(javolution.util.FastCollection$Record)
com.l2jfrozen.gameserver.cache.FastMRUCache: void <clinit>()
com.l2jfrozen.gameserver.cache.FastMRUCache$1
com.l2jfrozen.gameserver.cache.FastMRUCache$1: FastMRUCache$1()
com.l2jfrozen.gameserver.cache.FastMRUCache$1: java.lang.Object create()
com.l2jfrozen.gameserver.cache.FastMRUCache$1: void cleanup(java.lang.Object)
com.l2jfrozen.gameserver.cache.FastMRUCache$CacheNode
com.l2jfrozen.gameserver.cache.FastMRUCache$CacheNode: long _lastModified
com.l2jfrozen.gameserver.cache.FastMRUCache$CacheNode: java.lang.Object _node
com.l2jfrozen.gameserver.cache.FastMRUCache$CacheNode: com.l2jfrozen.gameserver.cache.FastMRUCache this$0
com.l2jfrozen.gameserver.cache.FastMRUCache$CacheNode: FastMRUCache$CacheNode(com.l2jfrozen.gameserver.cache.FastMRUCache,java.lang.Object)
com.l2jfrozen.gameserver.cache.FastMRUCache$CacheNode: boolean equals(java.lang.Object)
com.l2jfrozen.gameserver.cache.HtmCache
com.l2jfrozen.gameserver.cache.HtmCache: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.cache.HtmCache: com.l2jfrozen.gameserver.cache.HtmCache _instance
com.l2jfrozen.gameserver.cache.HtmCache: javolution.util.FastMap _cache
com.l2jfrozen.gameserver.cache.HtmCache: int _loadedFiles
com.l2jfrozen.gameserver.cache.HtmCache: long _bytesBuffLen
com.l2jfrozen.gameserver.cache.HtmCache: com.l2jfrozen.gameserver.cache.HtmCache getInstance()
com.l2jfrozen.gameserver.cache.HtmCache: HtmCache()
com.l2jfrozen.gameserver.cache.HtmCache: void reload()
com.l2jfrozen.gameserver.cache.HtmCache: void reload(java.io.File)
com.l2jfrozen.gameserver.cache.HtmCache: void reloadPath(java.io.File)
com.l2jfrozen.gameserver.cache.HtmCache: double getMemoryUsage()
com.l2jfrozen.gameserver.cache.HtmCache: int getLoadedFiles()
com.l2jfrozen.gameserver.cache.HtmCache: void parseDir(java.io.File)
com.l2jfrozen.gameserver.cache.HtmCache: java.lang.String loadFile(java.io.File)
com.l2jfrozen.gameserver.cache.HtmCache: java.lang.String getHtmForce(java.lang.String)
com.l2jfrozen.gameserver.cache.HtmCache: java.lang.String getHtm(java.lang.String)
com.l2jfrozen.gameserver.cache.HtmCache: boolean contains(java.lang.String)
com.l2jfrozen.gameserver.cache.HtmCache: boolean isLoadable(java.lang.String)
com.l2jfrozen.gameserver.cache.HtmCache: void <clinit>()
com.l2jfrozen.gameserver.cache.HtmCache$HtmFilter
com.l2jfrozen.gameserver.cache.HtmCache$HtmFilter: com.l2jfrozen.gameserver.cache.HtmCache this$0
com.l2jfrozen.gameserver.cache.HtmCache$HtmFilter: HtmCache$HtmFilter(com.l2jfrozen.gameserver.cache.HtmCache)
com.l2jfrozen.gameserver.cache.HtmCache$HtmFilter: boolean accept(java.io.File)
com.l2jfrozen.gameserver.cache.InfoCache
com.l2jfrozen.gameserver.cache.InfoCache: javolution.util.FastMap _droplistCache
com.l2jfrozen.gameserver.cache.InfoCache: InfoCache()
com.l2jfrozen.gameserver.cache.InfoCache: void addToDroplistCache(int,java.util.List)
com.l2jfrozen.gameserver.cache.InfoCache: java.util.List getFromDroplistCache(int)
com.l2jfrozen.gameserver.cache.InfoCache: void unload()
com.l2jfrozen.gameserver.cache.InfoCache: void <clinit>()
com.l2jfrozen.gameserver.cache.WarehouseCacheManager
com.l2jfrozen.gameserver.cache.WarehouseCacheManager: com.l2jfrozen.gameserver.cache.WarehouseCacheManager _instance
com.l2jfrozen.gameserver.cache.WarehouseCacheManager: javolution.util.FastMap _cachedWh
com.l2jfrozen.gameserver.cache.WarehouseCacheManager: long _cacheTime
com.l2jfrozen.gameserver.cache.WarehouseCacheManager: com.l2jfrozen.gameserver.cache.WarehouseCacheManager getInstance()
com.l2jfrozen.gameserver.cache.WarehouseCacheManager: WarehouseCacheManager()
com.l2jfrozen.gameserver.cache.WarehouseCacheManager: void addCacheTask(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.cache.WarehouseCacheManager: void remCacheTask(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.cache.WarehouseCacheManager$CacheScheduler
com.l2jfrozen.gameserver.cache.WarehouseCacheManager$CacheScheduler: com.l2jfrozen.gameserver.cache.WarehouseCacheManager this$0
com.l2jfrozen.gameserver.cache.WarehouseCacheManager$CacheScheduler: WarehouseCacheManager$CacheScheduler(com.l2jfrozen.gameserver.cache.WarehouseCacheManager)
com.l2jfrozen.gameserver.cache.WarehouseCacheManager$CacheScheduler: void run()
com.l2jfrozen.gameserver.communitybbs.BB.ConstructorType
com.l2jfrozen.gameserver.communitybbs.BB.ConstructorType: com.l2jfrozen.gameserver.communitybbs.BB.ConstructorType RESTORE
com.l2jfrozen.gameserver.communitybbs.BB.ConstructorType: com.l2jfrozen.gameserver.communitybbs.BB.ConstructorType CREATE
com.l2jfrozen.gameserver.communitybbs.BB.ConstructorType: com.l2jfrozen.gameserver.communitybbs.BB.ConstructorType[] $VALUES
com.l2jfrozen.gameserver.communitybbs.BB.ConstructorType: com.l2jfrozen.gameserver.communitybbs.BB.ConstructorType[] values()
com.l2jfrozen.gameserver.communitybbs.BB.ConstructorType: com.l2jfrozen.gameserver.communitybbs.BB.ConstructorType valueOf(java.lang.String)
com.l2jfrozen.gameserver.communitybbs.BB.ConstructorType: ConstructorType(java.lang.String,int)
com.l2jfrozen.gameserver.communitybbs.BB.ConstructorType: void <clinit>()
com.l2jfrozen.gameserver.communitybbs.BB.Forum
com.l2jfrozen.gameserver.communitybbs.BB.Forum: int ROOT
com.l2jfrozen.gameserver.communitybbs.BB.Forum: int NORMAL
com.l2jfrozen.gameserver.communitybbs.BB.Forum: int CLAN
com.l2jfrozen.gameserver.communitybbs.BB.Forum: int MEMO
com.l2jfrozen.gameserver.communitybbs.BB.Forum: int MAIL
com.l2jfrozen.gameserver.communitybbs.BB.Forum: int INVISIBLE
com.l2jfrozen.gameserver.communitybbs.BB.Forum: int ALL
com.l2jfrozen.gameserver.communitybbs.BB.Forum: int CLANMEMBERONLY
com.l2jfrozen.gameserver.communitybbs.BB.Forum: int OWNERONLY
com.l2jfrozen.gameserver.communitybbs.BB.Forum: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.communitybbs.BB.Forum: java.util.List _children
com.l2jfrozen.gameserver.communitybbs.BB.Forum: java.util.Map _topic
com.l2jfrozen.gameserver.communitybbs.BB.Forum: int _forumId
com.l2jfrozen.gameserver.communitybbs.BB.Forum: java.lang.String _forumName
com.l2jfrozen.gameserver.communitybbs.BB.Forum: int _forumType
com.l2jfrozen.gameserver.communitybbs.BB.Forum: int _forumPost
com.l2jfrozen.gameserver.communitybbs.BB.Forum: int _forumPerm
com.l2jfrozen.gameserver.communitybbs.BB.Forum: com.l2jfrozen.gameserver.communitybbs.BB.Forum _fParent
com.l2jfrozen.gameserver.communitybbs.BB.Forum: int _ownerID
com.l2jfrozen.gameserver.communitybbs.BB.Forum: boolean _loaded
com.l2jfrozen.gameserver.communitybbs.BB.Forum: Forum(int,com.l2jfrozen.gameserver.communitybbs.BB.Forum)
com.l2jfrozen.gameserver.communitybbs.BB.Forum: Forum(java.lang.String,com.l2jfrozen.gameserver.communitybbs.BB.Forum,int,int,int)
com.l2jfrozen.gameserver.communitybbs.BB.Forum: void load()
com.l2jfrozen.gameserver.communitybbs.BB.Forum: void getChildren()
com.l2jfrozen.gameserver.communitybbs.BB.Forum: int getTopicSize()
com.l2jfrozen.gameserver.communitybbs.BB.Forum: com.l2jfrozen.gameserver.communitybbs.BB.Topic gettopic(int)
com.l2jfrozen.gameserver.communitybbs.BB.Forum: void addtopic(com.l2jfrozen.gameserver.communitybbs.BB.Topic)
com.l2jfrozen.gameserver.communitybbs.BB.Forum: int getID()
com.l2jfrozen.gameserver.communitybbs.BB.Forum: java.lang.String getName()
com.l2jfrozen.gameserver.communitybbs.BB.Forum: int getType()
com.l2jfrozen.gameserver.communitybbs.BB.Forum: com.l2jfrozen.gameserver.communitybbs.BB.Forum getChildByName(java.lang.String)
com.l2jfrozen.gameserver.communitybbs.BB.Forum: void rmTopicByID(int)
com.l2jfrozen.gameserver.communitybbs.BB.Forum: void insertindb()
com.l2jfrozen.gameserver.communitybbs.BB.Forum: void vload()
com.l2jfrozen.gameserver.communitybbs.BB.Forum: void <clinit>()
com.l2jfrozen.gameserver.communitybbs.BB.Post
com.l2jfrozen.gameserver.communitybbs.BB.Post: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.communitybbs.BB.Post: java.util.List _post
com.l2jfrozen.gameserver.communitybbs.BB.Post: Post(java.lang.String,int,long,int,int,java.lang.String)
com.l2jfrozen.gameserver.communitybbs.BB.Post: void insertindb(com.l2jfrozen.gameserver.communitybbs.BB.Post$CPost)
com.l2jfrozen.gameserver.communitybbs.BB.Post: Post(com.l2jfrozen.gameserver.communitybbs.BB.Topic)
com.l2jfrozen.gameserver.communitybbs.BB.Post: com.l2jfrozen.gameserver.communitybbs.BB.Post$CPost getCPost(int)
com.l2jfrozen.gameserver.communitybbs.BB.Post: void deleteme(com.l2jfrozen.gameserver.communitybbs.BB.Topic)
com.l2jfrozen.gameserver.communitybbs.BB.Post: void load(com.l2jfrozen.gameserver.communitybbs.BB.Topic)
com.l2jfrozen.gameserver.communitybbs.BB.Post: void updatetxt(int)
com.l2jfrozen.gameserver.communitybbs.BB.Post: void <clinit>()
com.l2jfrozen.gameserver.communitybbs.BB.Post$CPost
com.l2jfrozen.gameserver.communitybbs.BB.Post$CPost: int postId
com.l2jfrozen.gameserver.communitybbs.BB.Post$CPost: java.lang.String postOwner
com.l2jfrozen.gameserver.communitybbs.BB.Post$CPost: int postOwnerId
com.l2jfrozen.gameserver.communitybbs.BB.Post$CPost: long postDate
com.l2jfrozen.gameserver.communitybbs.BB.Post$CPost: int postTopicId
com.l2jfrozen.gameserver.communitybbs.BB.Post$CPost: int postForumId
com.l2jfrozen.gameserver.communitybbs.BB.Post$CPost: java.lang.String postTxt
com.l2jfrozen.gameserver.communitybbs.BB.Post$CPost: com.l2jfrozen.gameserver.communitybbs.BB.Post this$0
com.l2jfrozen.gameserver.communitybbs.BB.Post$CPost: Post$CPost(com.l2jfrozen.gameserver.communitybbs.BB.Post)
com.l2jfrozen.gameserver.communitybbs.BB.Topic
com.l2jfrozen.gameserver.communitybbs.BB.Topic: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.communitybbs.BB.Topic: int MORMAL
com.l2jfrozen.gameserver.communitybbs.BB.Topic: int MEMO
com.l2jfrozen.gameserver.communitybbs.BB.Topic: int _id
com.l2jfrozen.gameserver.communitybbs.BB.Topic: int _forumId
com.l2jfrozen.gameserver.communitybbs.BB.Topic: java.lang.String _topicName
com.l2jfrozen.gameserver.communitybbs.BB.Topic: long _date
com.l2jfrozen.gameserver.communitybbs.BB.Topic: java.lang.String _ownerName
com.l2jfrozen.gameserver.communitybbs.BB.Topic: int _ownerId
com.l2jfrozen.gameserver.communitybbs.BB.Topic: int _type
com.l2jfrozen.gameserver.communitybbs.BB.Topic: int _cReply
com.l2jfrozen.gameserver.communitybbs.BB.Topic: Topic(com.l2jfrozen.gameserver.communitybbs.BB.ConstructorType,int,int,java.lang.String,long,java.lang.String,int,int,int)
com.l2jfrozen.gameserver.communitybbs.BB.Topic: void insertindb()
com.l2jfrozen.gameserver.communitybbs.BB.Topic: int getID()
com.l2jfrozen.gameserver.communitybbs.BB.Topic: int getForumID()
com.l2jfrozen.gameserver.communitybbs.BB.Topic: java.lang.String getName()
com.l2jfrozen.gameserver.communitybbs.BB.Topic: java.lang.String getOwnerName()
com.l2jfrozen.gameserver.communitybbs.BB.Topic: void deleteme(com.l2jfrozen.gameserver.communitybbs.BB.Forum)
com.l2jfrozen.gameserver.communitybbs.BB.Topic: long getDate()
com.l2jfrozen.gameserver.communitybbs.BB.Topic: void <clinit>()
com.l2jfrozen.gameserver.communitybbs.CommunityBoard
com.l2jfrozen.gameserver.communitybbs.CommunityBoard: com.l2jfrozen.gameserver.communitybbs.CommunityBoard _instance
com.l2jfrozen.gameserver.communitybbs.CommunityBoard: java.util.Map _handlers
com.l2jfrozen.gameserver.communitybbs.CommunityBoard: CommunityBoard()
com.l2jfrozen.gameserver.communitybbs.CommunityBoard: com.l2jfrozen.gameserver.communitybbs.CommunityBoard getInstance()
com.l2jfrozen.gameserver.communitybbs.CommunityBoard: void registerBBSHandler(com.l2jfrozen.gameserver.handler.IBBSHandler)
com.l2jfrozen.gameserver.communitybbs.CommunityBoard: void handleCommands(com.l2jfrozen.gameserver.network.L2GameClient,java.lang.String)
com.l2jfrozen.gameserver.communitybbs.CommunityBoard: void handleWriteCommands(com.l2jfrozen.gameserver.network.L2GameClient,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.communitybbs.Manager.AdminBBSManager
com.l2jfrozen.gameserver.communitybbs.Manager.AdminBBSManager: com.l2jfrozen.gameserver.communitybbs.Manager.AdminBBSManager _instance
com.l2jfrozen.gameserver.communitybbs.Manager.AdminBBSManager: AdminBBSManager()
com.l2jfrozen.gameserver.communitybbs.Manager.AdminBBSManager: com.l2jfrozen.gameserver.communitybbs.Manager.AdminBBSManager getInstance()
com.l2jfrozen.gameserver.communitybbs.Manager.AdminBBSManager: void parsecmd(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.communitybbs.Manager.AdminBBSManager: void parsewrite(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.communitybbs.Manager.AdminBBSManager: void <clinit>()
com.l2jfrozen.gameserver.communitybbs.Manager.BaseBBSManager
com.l2jfrozen.gameserver.communitybbs.Manager.BaseBBSManager: BaseBBSManager()
com.l2jfrozen.gameserver.communitybbs.Manager.BaseBBSManager: void parsecmd(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.communitybbs.Manager.BaseBBSManager: void parsewrite(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.communitybbs.Manager.BaseBBSManager: void separateAndSend(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.communitybbs.Manager.BaseBBSManager: void send1001(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.communitybbs.Manager.BaseBBSManager: void send1002(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.communitybbs.Manager.BaseBBSManager: void send1002(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.communitybbs.Manager.ClanBBSManager
com.l2jfrozen.gameserver.communitybbs.Manager.ClanBBSManager: com.l2jfrozen.gameserver.communitybbs.Manager.ClanBBSManager _instance
com.l2jfrozen.gameserver.communitybbs.Manager.ClanBBSManager: ClanBBSManager()
com.l2jfrozen.gameserver.communitybbs.Manager.ClanBBSManager: com.l2jfrozen.gameserver.communitybbs.Manager.ClanBBSManager getInstance()
com.l2jfrozen.gameserver.communitybbs.Manager.ClanBBSManager: void parsecmd(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.communitybbs.Manager.ClanBBSManager: void clanNotice(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.communitybbs.Manager.ClanBBSManager: void clanlist(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.communitybbs.Manager.ClanBBSManager: void clanhome(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.communitybbs.Manager.ClanBBSManager: void clanhome(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.communitybbs.Manager.ClanBBSManager: void parsewrite(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.communitybbs.Manager.ClanBBSManager: void <clinit>()
com.l2jfrozen.gameserver.communitybbs.Manager.ForumsBBSManager
com.l2jfrozen.gameserver.communitybbs.Manager.ForumsBBSManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.communitybbs.Manager.ForumsBBSManager: java.util.List _table
com.l2jfrozen.gameserver.communitybbs.Manager.ForumsBBSManager: com.l2jfrozen.gameserver.communitybbs.Manager.ForumsBBSManager _instance
com.l2jfrozen.gameserver.communitybbs.Manager.ForumsBBSManager: int _lastid
com.l2jfrozen.gameserver.communitybbs.Manager.ForumsBBSManager: com.l2jfrozen.gameserver.communitybbs.Manager.ForumsBBSManager getInstance()
com.l2jfrozen.gameserver.communitybbs.Manager.ForumsBBSManager: ForumsBBSManager()
com.l2jfrozen.gameserver.communitybbs.Manager.ForumsBBSManager: void addForum(com.l2jfrozen.gameserver.communitybbs.BB.Forum)
com.l2jfrozen.gameserver.communitybbs.Manager.ForumsBBSManager: void load()
com.l2jfrozen.gameserver.communitybbs.Manager.ForumsBBSManager: void initRoot()
com.l2jfrozen.gameserver.communitybbs.Manager.ForumsBBSManager: void parsecmd(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.communitybbs.Manager.ForumsBBSManager: com.l2jfrozen.gameserver.communitybbs.BB.Forum getForumByName(java.lang.String)
com.l2jfrozen.gameserver.communitybbs.Manager.ForumsBBSManager: com.l2jfrozen.gameserver.communitybbs.BB.Forum createNewForum(java.lang.String,com.l2jfrozen.gameserver.communitybbs.BB.Forum,int,int,int)
com.l2jfrozen.gameserver.communitybbs.Manager.ForumsBBSManager: int getANewID()
com.l2jfrozen.gameserver.communitybbs.Manager.ForumsBBSManager: com.l2jfrozen.gameserver.communitybbs.BB.Forum getForumByID(int)
com.l2jfrozen.gameserver.communitybbs.Manager.ForumsBBSManager: void parsewrite(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.communitybbs.Manager.ForumsBBSManager: void <clinit>()
com.l2jfrozen.gameserver.communitybbs.Manager.PostBBSManager
com.l2jfrozen.gameserver.communitybbs.Manager.PostBBSManager: java.util.Map _postByTopic
com.l2jfrozen.gameserver.communitybbs.Manager.PostBBSManager: com.l2jfrozen.gameserver.communitybbs.Manager.PostBBSManager _instance
com.l2jfrozen.gameserver.communitybbs.Manager.PostBBSManager: com.l2jfrozen.gameserver.communitybbs.Manager.PostBBSManager getInstance()
com.l2jfrozen.gameserver.communitybbs.Manager.PostBBSManager: PostBBSManager()
com.l2jfrozen.gameserver.communitybbs.Manager.PostBBSManager: com.l2jfrozen.gameserver.communitybbs.BB.Post getGPosttByTopic(com.l2jfrozen.gameserver.communitybbs.BB.Topic)
com.l2jfrozen.gameserver.communitybbs.Manager.PostBBSManager: void delPostByTopic(com.l2jfrozen.gameserver.communitybbs.BB.Topic)
com.l2jfrozen.gameserver.communitybbs.Manager.PostBBSManager: void addPostByTopic(com.l2jfrozen.gameserver.communitybbs.BB.Post,com.l2jfrozen.gameserver.communitybbs.BB.Topic)
com.l2jfrozen.gameserver.communitybbs.Manager.PostBBSManager: com.l2jfrozen.gameserver.communitybbs.BB.Post load(com.l2jfrozen.gameserver.communitybbs.BB.Topic)
com.l2jfrozen.gameserver.communitybbs.Manager.PostBBSManager: void parsecmd(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.communitybbs.Manager.PostBBSManager: void showEditPost(com.l2jfrozen.gameserver.communitybbs.BB.Topic,com.l2jfrozen.gameserver.communitybbs.BB.Forum,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.communitybbs.Manager.PostBBSManager: void showPost(com.l2jfrozen.gameserver.communitybbs.BB.Topic,com.l2jfrozen.gameserver.communitybbs.BB.Forum,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.communitybbs.Manager.PostBBSManager: void showHtmlEditPost(com.l2jfrozen.gameserver.communitybbs.BB.Topic,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.communitybbs.BB.Forum,com.l2jfrozen.gameserver.communitybbs.BB.Post)
com.l2jfrozen.gameserver.communitybbs.Manager.PostBBSManager: void showMemoPost(com.l2jfrozen.gameserver.communitybbs.BB.Topic,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.communitybbs.BB.Forum)
com.l2jfrozen.gameserver.communitybbs.Manager.PostBBSManager: void parsewrite(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.communitybbs.Manager.RegionBBSManager
com.l2jfrozen.gameserver.communitybbs.Manager.RegionBBSManager: java.util.logging.Logger _logChat
com.l2jfrozen.gameserver.communitybbs.Manager.RegionBBSManager: com.l2jfrozen.gameserver.communitybbs.Manager.RegionBBSManager _instance
com.l2jfrozen.gameserver.communitybbs.Manager.RegionBBSManager: int _onlineCount
com.l2jfrozen.gameserver.communitybbs.Manager.RegionBBSManager: int _onlineCountGm
com.l2jfrozen.gameserver.communitybbs.Manager.RegionBBSManager: javolution.util.FastMap _onlinePlayers
com.l2jfrozen.gameserver.communitybbs.Manager.RegionBBSManager: javolution.util.FastMap _communityPages
com.l2jfrozen.gameserver.communitybbs.Manager.RegionBBSManager: RegionBBSManager()
com.l2jfrozen.gameserver.communitybbs.Manager.RegionBBSManager: void parsecmd(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.communitybbs.Manager.RegionBBSManager: java.lang.String version()
com.l2jfrozen.gameserver.communitybbs.Manager.RegionBBSManager: void showOldCommunityPI(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.communitybbs.Manager.RegionBBSManager: void showOldCommunity(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.communitybbs.Manager.RegionBBSManager: void parsewrite(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.communitybbs.Manager.RegionBBSManager: com.l2jfrozen.gameserver.communitybbs.Manager.RegionBBSManager getInstance()
com.l2jfrozen.gameserver.communitybbs.Manager.RegionBBSManager: void changeCommunityBoard()
com.l2jfrozen.gameserver.communitybbs.Manager.RegionBBSManager: void addOnlinePlayer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.communitybbs.Manager.RegionBBSManager: void writeCommunityPages()
com.l2jfrozen.gameserver.communitybbs.Manager.RegionBBSManager: int getOnlineCount(java.lang.String)
com.l2jfrozen.gameserver.communitybbs.Manager.RegionBBSManager: javolution.util.FastList getOnlinePlayers(int)
com.l2jfrozen.gameserver.communitybbs.Manager.RegionBBSManager: java.lang.String getCommunityPage(int,java.lang.String)
com.l2jfrozen.gameserver.communitybbs.Manager.RegionBBSManager: void <clinit>()
com.l2jfrozen.gameserver.communitybbs.Manager.RegionBBSManager$1
com.l2jfrozen.gameserver.communitybbs.Manager.RegionBBSManager$1: com.l2jfrozen.gameserver.communitybbs.Manager.RegionBBSManager this$0
com.l2jfrozen.gameserver.communitybbs.Manager.RegionBBSManager$1: RegionBBSManager$1(com.l2jfrozen.gameserver.communitybbs.Manager.RegionBBSManager)
com.l2jfrozen.gameserver.communitybbs.Manager.RegionBBSManager$1: int compare(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.communitybbs.Manager.RegionBBSManager$1: int compare(java.lang.Object,java.lang.Object)
com.l2jfrozen.gameserver.communitybbs.Manager.TopBBSManager
com.l2jfrozen.gameserver.communitybbs.Manager.TopBBSManager: com.l2jfrozen.gameserver.communitybbs.Manager.TopBBSManager _instance
com.l2jfrozen.gameserver.communitybbs.Manager.TopBBSManager: TopBBSManager()
com.l2jfrozen.gameserver.communitybbs.Manager.TopBBSManager: void parsecmd(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.communitybbs.Manager.TopBBSManager: void parsewrite(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.communitybbs.Manager.TopBBSManager: com.l2jfrozen.gameserver.communitybbs.Manager.TopBBSManager getInstance()
com.l2jfrozen.gameserver.communitybbs.Manager.TopBBSManager: void <clinit>()
com.l2jfrozen.gameserver.communitybbs.Manager.TopicBBSManager
com.l2jfrozen.gameserver.communitybbs.Manager.TopicBBSManager: java.util.List _table
com.l2jfrozen.gameserver.communitybbs.Manager.TopicBBSManager: java.util.Map _maxId
com.l2jfrozen.gameserver.communitybbs.Manager.TopicBBSManager: com.l2jfrozen.gameserver.communitybbs.Manager.TopicBBSManager _instance
com.l2jfrozen.gameserver.communitybbs.Manager.TopicBBSManager: com.l2jfrozen.gameserver.communitybbs.Manager.TopicBBSManager getInstance()
com.l2jfrozen.gameserver.communitybbs.Manager.TopicBBSManager: TopicBBSManager()
com.l2jfrozen.gameserver.communitybbs.Manager.TopicBBSManager: void addTopic(com.l2jfrozen.gameserver.communitybbs.BB.Topic)
com.l2jfrozen.gameserver.communitybbs.Manager.TopicBBSManager: void delTopic(com.l2jfrozen.gameserver.communitybbs.BB.Topic)
com.l2jfrozen.gameserver.communitybbs.Manager.TopicBBSManager: void setMaxID(int,com.l2jfrozen.gameserver.communitybbs.BB.Forum)
com.l2jfrozen.gameserver.communitybbs.Manager.TopicBBSManager: int getMaxID(com.l2jfrozen.gameserver.communitybbs.BB.Forum)
com.l2jfrozen.gameserver.communitybbs.Manager.TopicBBSManager: com.l2jfrozen.gameserver.communitybbs.BB.Topic getTopicByID(int)
com.l2jfrozen.gameserver.communitybbs.Manager.TopicBBSManager: void parsewrite(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.communitybbs.Manager.TopicBBSManager: void parsecmd(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.communitybbs.Manager.TopicBBSManager: void showNewTopic(com.l2jfrozen.gameserver.communitybbs.BB.Forum,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.communitybbs.Manager.TopicBBSManager: void showMemoNewTopics(com.l2jfrozen.gameserver.communitybbs.BB.Forum,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.communitybbs.Manager.TopicBBSManager: void showTopics(com.l2jfrozen.gameserver.communitybbs.BB.Forum,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int)
com.l2jfrozen.gameserver.communitybbs.Manager.TopicBBSManager: void showMemoTopics(com.l2jfrozen.gameserver.communitybbs.BB.Forum,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.config.ClassMasterSettings
com.l2jfrozen.gameserver.config.ClassMasterSettings: javolution.util.FastMap _claimItems
com.l2jfrozen.gameserver.config.ClassMasterSettings: javolution.util.FastMap _rewardItems
com.l2jfrozen.gameserver.config.ClassMasterSettings: javolution.util.FastMap _allowedClassChange
com.l2jfrozen.gameserver.config.ClassMasterSettings: ClassMasterSettings(java.lang.String)
com.l2jfrozen.gameserver.config.ClassMasterSettings: void parseConfigLine(java.lang.String)
com.l2jfrozen.gameserver.config.ClassMasterSettings: boolean isAllowed(int)
com.l2jfrozen.gameserver.config.ClassMasterSettings: javolution.util.FastMap getRewardItems(int)
com.l2jfrozen.gameserver.config.ClassMasterSettings: javolution.util.FastMap getRequireItems(int)
com.l2jfrozen.gameserver.config.Config
com.l2jfrozen.gameserver.config.Config: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.config.Config: boolean EVERYBODY_HAS_ADMIN_RIGHTS
com.l2jfrozen.gameserver.config.Config: boolean SHOW_GM_LOGIN
com.l2jfrozen.gameserver.config.Config: boolean GM_STARTUP_INVISIBLE
com.l2jfrozen.gameserver.config.Config: boolean GM_SPECIAL_EFFECT
com.l2jfrozen.gameserver.config.Config: boolean GM_STARTUP_SILENCE
com.l2jfrozen.gameserver.config.Config: boolean GM_STARTUP_AUTO_LIST
com.l2jfrozen.gameserver.config.Config: java.lang.String GM_ADMIN_MENU_STYLE
com.l2jfrozen.gameserver.config.Config: boolean GM_HERO_AURA
com.l2jfrozen.gameserver.config.Config: boolean GM_STARTUP_INVULNERABLE
com.l2jfrozen.gameserver.config.Config: boolean GM_ANNOUNCER_NAME
com.l2jfrozen.gameserver.config.Config: int MASTERACCESS_LEVEL
com.l2jfrozen.gameserver.config.Config: int USERACCESS_LEVEL
com.l2jfrozen.gameserver.config.Config: boolean MASTERACCESS_NAME_COLOR_ENABLED
com.l2jfrozen.gameserver.config.Config: boolean MASTERACCESS_TITLE_COLOR_ENABLED
com.l2jfrozen.gameserver.config.Config: int MASTERACCESS_NAME_COLOR
com.l2jfrozen.gameserver.config.Config: int MASTERACCESS_TITLE_COLOR
com.l2jfrozen.gameserver.config.Config: boolean CHECK_KNOWN
com.l2jfrozen.gameserver.config.Config: java.lang.String DEFAULT_GLOBAL_CHAT
com.l2jfrozen.gameserver.config.Config: java.lang.String DEFAULT_TRADE_CHAT
com.l2jfrozen.gameserver.config.Config: boolean TRADE_CHAT_WITH_PVP
com.l2jfrozen.gameserver.config.Config: int TRADE_PVP_AMOUNT
com.l2jfrozen.gameserver.config.Config: boolean GLOBAL_CHAT_WITH_PVP
com.l2jfrozen.gameserver.config.Config: int GLOBAL_PVP_AMOUNT
com.l2jfrozen.gameserver.config.Config: int BRUT_AVG_TIME
com.l2jfrozen.gameserver.config.Config: int BRUT_LOGON_ATTEMPTS
com.l2jfrozen.gameserver.config.Config: int BRUT_BAN_IP_TIME
com.l2jfrozen.gameserver.config.Config: int MAX_CHAT_LENGTH
com.l2jfrozen.gameserver.config.Config: boolean TRADE_CHAT_IS_NOOBLE
com.l2jfrozen.gameserver.config.Config: boolean PRECISE_DROP_CALCULATION
com.l2jfrozen.gameserver.config.Config: boolean MULTIPLE_ITEM_DROP
com.l2jfrozen.gameserver.config.Config: int DELETE_DAYS
com.l2jfrozen.gameserver.config.Config: int MAX_DRIFT_RANGE
com.l2jfrozen.gameserver.config.Config: boolean ALLOWFISHING
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_MANOR
com.l2jfrozen.gameserver.config.Config: int AUTODESTROY_ITEM_AFTER
com.l2jfrozen.gameserver.config.Config: int HERB_AUTO_DESTROY_TIME
com.l2jfrozen.gameserver.config.Config: boolean ENABLE_AUTOOPENDOOR
com.l2jfrozen.gameserver.config.Config: java.lang.String PROTECTED_ITEMS
com.l2jfrozen.gameserver.config.Config: javolution.util.FastList LIST_PROTECTED_ITEMS
com.l2jfrozen.gameserver.config.Config: boolean DESTROY_DROPPED_PLAYER_ITEM
com.l2jfrozen.gameserver.config.Config: boolean DESTROY_EQUIPABLE_PLAYER_ITEM
com.l2jfrozen.gameserver.config.Config: boolean SAVE_DROPPED_ITEM
com.l2jfrozen.gameserver.config.Config: boolean EMPTY_DROPPED_ITEM_TABLE_AFTER_LOAD
com.l2jfrozen.gameserver.config.Config: int SAVE_DROPPED_ITEM_INTERVAL
com.l2jfrozen.gameserver.config.Config: boolean CLEAR_DROPPED_ITEM_TABLE
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_DISCARDITEM
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_FREIGHT
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_WAREHOUSE
com.l2jfrozen.gameserver.config.Config: boolean WAREHOUSE_CACHE
com.l2jfrozen.gameserver.config.Config: int WAREHOUSE_CACHE_TIME
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_WEAR
com.l2jfrozen.gameserver.config.Config: int WEAR_DELAY
com.l2jfrozen.gameserver.config.Config: int WEAR_PRICE
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_LOTTERY
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_RACE
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_RENTPET
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_BOAT
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_CURSED_WEAPONS
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_NPC_WALKERS
com.l2jfrozen.gameserver.config.Config: int MIN_NPC_ANIMATION
com.l2jfrozen.gameserver.config.Config: int MAX_NPC_ANIMATION
com.l2jfrozen.gameserver.config.Config: int MIN_MONSTER_ANIMATION
com.l2jfrozen.gameserver.config.Config: int MAX_MONSTER_ANIMATION
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_USE_CURSOR_FOR_WALK
com.l2jfrozen.gameserver.config.Config: boolean USE_3D_MAP
com.l2jfrozen.gameserver.config.Config: java.lang.String COMMUNITY_TYPE
com.l2jfrozen.gameserver.config.Config: java.lang.String BBS_DEFAULT
com.l2jfrozen.gameserver.config.Config: boolean SHOW_LEVEL_COMMUNITYBOARD
com.l2jfrozen.gameserver.config.Config: boolean SHOW_STATUS_COMMUNITYBOARD
com.l2jfrozen.gameserver.config.Config: int NAME_PAGE_SIZE_COMMUNITYBOARD
com.l2jfrozen.gameserver.config.Config: int NAME_PER_ROW_COMMUNITYBOARD
com.l2jfrozen.gameserver.config.Config: int PATH_NODE_RADIUS
com.l2jfrozen.gameserver.config.Config: int NEW_NODE_ID
com.l2jfrozen.gameserver.config.Config: int SELECTED_NODE_ID
com.l2jfrozen.gameserver.config.Config: int LINKED_NODE_ID
com.l2jfrozen.gameserver.config.Config: java.lang.String NEW_NODE_TYPE
com.l2jfrozen.gameserver.config.Config: boolean SHOW_NPC_LVL
com.l2jfrozen.gameserver.config.Config: int ZONE_TOWN
com.l2jfrozen.gameserver.config.Config: boolean COUNT_PACKETS
com.l2jfrozen.gameserver.config.Config: boolean DUMP_PACKET_COUNTS
com.l2jfrozen.gameserver.config.Config: int DUMP_INTERVAL_SECONDS
com.l2jfrozen.gameserver.config.Config: int DEFAULT_PUNISH
com.l2jfrozen.gameserver.config.Config: int DEFAULT_PUNISH_PARAM
com.l2jfrozen.gameserver.config.Config: boolean AUTODELETE_INVALID_QUEST_DATA
com.l2jfrozen.gameserver.config.Config: boolean GRIDS_ALWAYS_ON
com.l2jfrozen.gameserver.config.Config: int GRID_NEIGHBOR_TURNON_TIME
com.l2jfrozen.gameserver.config.Config: int GRID_NEIGHBOR_TURNOFF_TIME
com.l2jfrozen.gameserver.config.Config: int MINIMUM_UPDATE_DISTANCE
com.l2jfrozen.gameserver.config.Config: int KNOWNLIST_FORGET_DELAY
com.l2jfrozen.gameserver.config.Config: int MINIMUN_UPDATE_TIME
com.l2jfrozen.gameserver.config.Config: boolean BYPASS_VALIDATION
com.l2jfrozen.gameserver.config.Config: boolean HIGH_RATE_SERVER_DROPS
com.l2jfrozen.gameserver.config.Config: boolean FORCE_COMPLETE_STATUS_UPDATE
com.l2jfrozen.gameserver.config.Config: int PORT_GAME
com.l2jfrozen.gameserver.config.Config: java.lang.String GAMESERVER_HOSTNAME
com.l2jfrozen.gameserver.config.Config: boolean RESERVE_HOST_ON_LOGIN
com.l2jfrozen.gameserver.config.Config: boolean RWHO_LOG
com.l2jfrozen.gameserver.config.Config: int RWHO_FORCE_INC
com.l2jfrozen.gameserver.config.Config: int RWHO_KEEP_STAT
com.l2jfrozen.gameserver.config.Config: int RWHO_MAX_ONLINE
com.l2jfrozen.gameserver.config.Config: boolean RWHO_SEND_TRASH
com.l2jfrozen.gameserver.config.Config: int RWHO_ONLINE_INCREMENT
com.l2jfrozen.gameserver.config.Config: float RWHO_PRIV_STORE_FACTOR
com.l2jfrozen.gameserver.config.Config: int[] RWHO_ARRAY
com.l2jfrozen.gameserver.config.Config: java.io.File DATAPACK_ROOT
com.l2jfrozen.gameserver.config.Config: int GAME_SERVER_LOGIN_PORT
com.l2jfrozen.gameserver.config.Config: java.lang.String GAME_SERVER_LOGIN_HOST
com.l2jfrozen.gameserver.config.Config: int SERVER_LIST_TYPE
com.l2jfrozen.gameserver.config.Config: int SERVER_LIST_AGE
com.l2jfrozen.gameserver.config.Config: java.util.List GAME_SERVER_SUBNETS
com.l2jfrozen.gameserver.config.Config: java.util.List GAME_SERVER_HOSTS
com.l2jfrozen.gameserver.config.Config: java.lang.String SERVER_REVISION
com.l2jfrozen.gameserver.config.Config: java.lang.String SERVER_BUILD_DATE
com.l2jfrozen.gameserver.config.Config: java.lang.String SERVER_VERSION
com.l2jfrozen.gameserver.config.Config: java.lang.String DATAPACK_VERSION
com.l2jfrozen.gameserver.config.Config: java.lang.String DATAPACK_BUILD_DATE
com.l2jfrozen.gameserver.config.Config: com.l2jfrozen.gameserver.config.IdFactoryType IDFACTORY_TYPE
com.l2jfrozen.gameserver.config.Config: boolean BAD_ID_CHECKING
com.l2jfrozen.gameserver.config.Config: com.l2jfrozen.gameserver.config.ObjectMapType MAP_TYPE
com.l2jfrozen.gameserver.config.Config: com.l2jfrozen.gameserver.config.ObjectSetType SET_TYPE
com.l2jfrozen.gameserver.config.Config: int MAX_ITEM_IN_PACKET
com.l2jfrozen.gameserver.config.Config: boolean JAIL_IS_PVP
com.l2jfrozen.gameserver.config.Config: boolean JAIL_DISABLE_CHAT
com.l2jfrozen.gameserver.config.Config: int WYVERN_SPEED
com.l2jfrozen.gameserver.config.Config: int STRIDER_SPEED
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_WYVERN_UPGRADER
com.l2jfrozen.gameserver.config.Config: int INVENTORY_MAXIMUM_NO_DWARF
com.l2jfrozen.gameserver.config.Config: int INVENTORY_MAXIMUM_DWARF
com.l2jfrozen.gameserver.config.Config: int INVENTORY_MAXIMUM_GM
com.l2jfrozen.gameserver.config.Config: int WAREHOUSE_SLOTS_NO_DWARF
com.l2jfrozen.gameserver.config.Config: int WAREHOUSE_SLOTS_DWARF
com.l2jfrozen.gameserver.config.Config: int WAREHOUSE_SLOTS_CLAN
com.l2jfrozen.gameserver.config.Config: int FREIGHT_SLOTS
com.l2jfrozen.gameserver.config.Config: java.lang.String NONDROPPABLE_ITEMS
com.l2jfrozen.gameserver.config.Config: javolution.util.FastList LIST_NONDROPPABLE_ITEMS
com.l2jfrozen.gameserver.config.Config: java.lang.String PET_RENT_NPC
com.l2jfrozen.gameserver.config.Config: javolution.util.FastList LIST_PET_RENT_NPC
com.l2jfrozen.gameserver.config.Config: boolean EFFECT_CANCELING
com.l2jfrozen.gameserver.config.Config: double HP_REGEN_MULTIPLIER
com.l2jfrozen.gameserver.config.Config: double MP_REGEN_MULTIPLIER
com.l2jfrozen.gameserver.config.Config: double CP_REGEN_MULTIPLIER
com.l2jfrozen.gameserver.config.Config: double RAID_HP_REGEN_MULTIPLIER
com.l2jfrozen.gameserver.config.Config: double RAID_MP_REGEN_MULTIPLIER
com.l2jfrozen.gameserver.config.Config: double RAID_P_DEFENCE_MULTIPLIER
com.l2jfrozen.gameserver.config.Config: double RAID_M_DEFENCE_MULTIPLIER
com.l2jfrozen.gameserver.config.Config: double RAID_MINION_RESPAWN_TIMER
com.l2jfrozen.gameserver.config.Config: float RAID_MIN_RESPAWN_MULTIPLIER
com.l2jfrozen.gameserver.config.Config: float RAID_MAX_RESPAWN_MULTIPLIER
com.l2jfrozen.gameserver.config.Config: int STARTING_ADENA
com.l2jfrozen.gameserver.config.Config: int STARTING_AA
com.l2jfrozen.gameserver.config.Config: boolean ENABLE_AIO_SYSTEM
com.l2jfrozen.gameserver.config.Config: java.util.Map AIO_SKILLS
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_AIO_NCOLOR
com.l2jfrozen.gameserver.config.Config: int AIO_NCOLOR
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_AIO_TCOLOR
com.l2jfrozen.gameserver.config.Config: int AIO_TCOLOR
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_AIO_USE_GK
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_AIO_USE_CM
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_AIO_IN_EVENTS
com.l2jfrozen.gameserver.config.Config: boolean ANNOUNCE_CASTLE_LORDS
com.l2jfrozen.gameserver.config.Config: boolean CUSTOM_STARTER_ITEMS_ENABLED
com.l2jfrozen.gameserver.config.Config: java.util.List STARTING_CUSTOM_ITEMS_F
com.l2jfrozen.gameserver.config.Config: java.util.List STARTING_CUSTOM_ITEMS_M
com.l2jfrozen.gameserver.config.Config: boolean DEEPBLUE_DROP_RULES
com.l2jfrozen.gameserver.config.Config: int UNSTUCK_INTERVAL
com.l2jfrozen.gameserver.config.Config: int DEATH_PENALTY_CHANCE
com.l2jfrozen.gameserver.config.Config: int PLAYER_SPAWN_PROTECTION
com.l2jfrozen.gameserver.config.Config: int PLAYER_TELEPORT_PROTECTION
com.l2jfrozen.gameserver.config.Config: boolean EFFECT_TELEPORT_PROTECTION
com.l2jfrozen.gameserver.config.Config: int PLAYER_FAKEDEATH_UP_PROTECTION
com.l2jfrozen.gameserver.config.Config: java.lang.String PARTY_XP_CUTOFF_METHOD
com.l2jfrozen.gameserver.config.Config: int PARTY_XP_CUTOFF_LEVEL
com.l2jfrozen.gameserver.config.Config: double PARTY_XP_CUTOFF_PERCENT
com.l2jfrozen.gameserver.config.Config: double RESPAWN_RESTORE_CP
com.l2jfrozen.gameserver.config.Config: double RESPAWN_RESTORE_HP
com.l2jfrozen.gameserver.config.Config: double RESPAWN_RESTORE_MP
com.l2jfrozen.gameserver.config.Config: boolean RESPAWN_RANDOM_ENABLED
com.l2jfrozen.gameserver.config.Config: int RESPAWN_RANDOM_MAX_OFFSET
com.l2jfrozen.gameserver.config.Config: int MAX_PVTSTORE_SLOTS_DWARF
com.l2jfrozen.gameserver.config.Config: int MAX_PVTSTORE_SLOTS_OTHER
com.l2jfrozen.gameserver.config.Config: boolean PETITIONING_ALLOWED
com.l2jfrozen.gameserver.config.Config: int MAX_PETITIONS_PER_PLAYER
com.l2jfrozen.gameserver.config.Config: int MAX_PETITIONS_PENDING
com.l2jfrozen.gameserver.config.Config: boolean ANNOUNCE_MAMMON_SPAWN
com.l2jfrozen.gameserver.config.Config: boolean ENABLE_MODIFY_SKILL_DURATION
com.l2jfrozen.gameserver.config.Config: javolution.util.FastMap SKILL_DURATION_LIST
com.l2jfrozen.gameserver.config.Config: int CHAT_FILTER_PUNISHMENT_PARAM1
com.l2jfrozen.gameserver.config.Config: int CHAT_FILTER_PUNISHMENT_PARAM2
com.l2jfrozen.gameserver.config.Config: int CHAT_FILTER_PUNISHMENT_PARAM3
com.l2jfrozen.gameserver.config.Config: boolean USE_SAY_FILTER
com.l2jfrozen.gameserver.config.Config: java.lang.String CHAT_FILTER_CHARS
com.l2jfrozen.gameserver.config.Config: java.lang.String CHAT_FILTER_PUNISHMENT
com.l2jfrozen.gameserver.config.Config: java.util.ArrayList FILTER_LIST
com.l2jfrozen.gameserver.config.Config: int FS_TIME_ATTACK
com.l2jfrozen.gameserver.config.Config: int FS_TIME_COOLDOWN
com.l2jfrozen.gameserver.config.Config: int FS_TIME_ENTRY
com.l2jfrozen.gameserver.config.Config: int FS_TIME_WARMUP
com.l2jfrozen.gameserver.config.Config: int FS_PARTY_MEMBER_COUNT
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_QUAKE_SYSTEM
com.l2jfrozen.gameserver.config.Config: boolean ENABLE_ANTI_PVP_FARM_MSG
com.l2jfrozen.gameserver.config.Config: long CLICK_TASK
com.l2jfrozen.gameserver.config.Config: boolean STORE_SKILL_COOLTIME
com.l2jfrozen.gameserver.config.Config: float RATE_XP
com.l2jfrozen.gameserver.config.Config: float RATE_SP
com.l2jfrozen.gameserver.config.Config: float RATE_PARTY_XP
com.l2jfrozen.gameserver.config.Config: float RATE_PARTY_SP
com.l2jfrozen.gameserver.config.Config: float RATE_QUESTS_REWARD
com.l2jfrozen.gameserver.config.Config: float RATE_DROP_ADENA
com.l2jfrozen.gameserver.config.Config: float RATE_CONSUMABLE_COST
com.l2jfrozen.gameserver.config.Config: float RATE_DROP_ITEMS
com.l2jfrozen.gameserver.config.Config: float RATE_DROP_SEAL_STONES
com.l2jfrozen.gameserver.config.Config: float RATE_DROP_SPOIL
com.l2jfrozen.gameserver.config.Config: int RATE_DROP_MANOR
com.l2jfrozen.gameserver.config.Config: float RATE_DROP_QUEST
com.l2jfrozen.gameserver.config.Config: float RATE_KARMA_EXP_LOST
com.l2jfrozen.gameserver.config.Config: float RATE_SIEGE_GUARDS_PRICE
com.l2jfrozen.gameserver.config.Config: float RATE_DROP_COMMON_HERBS
com.l2jfrozen.gameserver.config.Config: float RATE_DROP_MP_HP_HERBS
com.l2jfrozen.gameserver.config.Config: float RATE_DROP_GREATER_HERBS
com.l2jfrozen.gameserver.config.Config: float RATE_DROP_SUPERIOR_HERBS
com.l2jfrozen.gameserver.config.Config: float RATE_DROP_SPECIAL_HERBS
com.l2jfrozen.gameserver.config.Config: int PLAYER_DROP_LIMIT
com.l2jfrozen.gameserver.config.Config: int PLAYER_RATE_DROP
com.l2jfrozen.gameserver.config.Config: int PLAYER_RATE_DROP_ITEM
com.l2jfrozen.gameserver.config.Config: int PLAYER_RATE_DROP_EQUIP
com.l2jfrozen.gameserver.config.Config: int PLAYER_RATE_DROP_EQUIP_WEAPON
com.l2jfrozen.gameserver.config.Config: float PET_XP_RATE
com.l2jfrozen.gameserver.config.Config: int PET_FOOD_RATE
com.l2jfrozen.gameserver.config.Config: float SINEATER_XP_RATE
com.l2jfrozen.gameserver.config.Config: int KARMA_DROP_LIMIT
com.l2jfrozen.gameserver.config.Config: int KARMA_RATE_DROP
com.l2jfrozen.gameserver.config.Config: int KARMA_RATE_DROP_ITEM
com.l2jfrozen.gameserver.config.Config: int KARMA_RATE_DROP_EQUIP
com.l2jfrozen.gameserver.config.Config: int KARMA_RATE_DROP_EQUIP_WEAPON
com.l2jfrozen.gameserver.config.Config: float ADENA_BOSS
com.l2jfrozen.gameserver.config.Config: float ADENA_RAID
com.l2jfrozen.gameserver.config.Config: float ADENA_MINON
com.l2jfrozen.gameserver.config.Config: float ITEMS_BOSS
com.l2jfrozen.gameserver.config.Config: float ITEMS_RAID
com.l2jfrozen.gameserver.config.Config: float ITEMS_MINON
com.l2jfrozen.gameserver.config.Config: float SPOIL_BOSS
com.l2jfrozen.gameserver.config.Config: float SPOIL_RAID
com.l2jfrozen.gameserver.config.Config: float SPOIL_MINON
com.l2jfrozen.gameserver.config.Config: boolean AUTO_LOOT
com.l2jfrozen.gameserver.config.Config: boolean AUTO_LOOT_BOSS
com.l2jfrozen.gameserver.config.Config: boolean AUTO_LOOT_HERBS
com.l2jfrozen.gameserver.config.Config: boolean REMOVE_CASTLE_CIRCLETS
com.l2jfrozen.gameserver.config.Config: double ALT_WEIGHT_LIMIT
com.l2jfrozen.gameserver.config.Config: boolean ALT_GAME_SKILL_LEARN
com.l2jfrozen.gameserver.config.Config: boolean AUTO_LEARN_SKILLS
com.l2jfrozen.gameserver.config.Config: boolean ALT_GAME_CANCEL_BOW
com.l2jfrozen.gameserver.config.Config: boolean ALT_GAME_CANCEL_CAST
com.l2jfrozen.gameserver.config.Config: boolean ALT_GAME_TIREDNESS
com.l2jfrozen.gameserver.config.Config: int ALT_PARTY_RANGE
com.l2jfrozen.gameserver.config.Config: int ALT_PARTY_RANGE2
com.l2jfrozen.gameserver.config.Config: boolean ALT_GAME_SHIELD_BLOCKS
com.l2jfrozen.gameserver.config.Config: int ALT_PERFECT_SHLD_BLOCK
com.l2jfrozen.gameserver.config.Config: boolean ALT_GAME_MOB_ATTACK_AI
com.l2jfrozen.gameserver.config.Config: boolean ALT_MOB_AGRO_IN_PEACEZONE
com.l2jfrozen.gameserver.config.Config: boolean ALT_GAME_FREIGHTS
com.l2jfrozen.gameserver.config.Config: int ALT_GAME_FREIGHT_PRICE
com.l2jfrozen.gameserver.config.Config: float ALT_GAME_SKILL_HIT_RATE
com.l2jfrozen.gameserver.config.Config: boolean ALT_GAME_DELEVEL
com.l2jfrozen.gameserver.config.Config: boolean ALT_GAME_MAGICFAILURES
com.l2jfrozen.gameserver.config.Config: boolean ALT_GAME_FREE_TELEPORT
com.l2jfrozen.gameserver.config.Config: boolean ALT_RECOMMEND
com.l2jfrozen.gameserver.config.Config: boolean ALT_GAME_SUBCLASS_WITHOUT_QUESTS
com.l2jfrozen.gameserver.config.Config: boolean ALT_RESTORE_EFFECTS_ON_SUBCLASS_CHANGE
com.l2jfrozen.gameserver.config.Config: boolean ALT_GAME_VIEWNPC
com.l2jfrozen.gameserver.config.Config: int ALT_CLAN_MEMBERS_FOR_WAR
com.l2jfrozen.gameserver.config.Config: int ALT_CLAN_JOIN_DAYS
com.l2jfrozen.gameserver.config.Config: int ALT_CLAN_CREATE_DAYS
com.l2jfrozen.gameserver.config.Config: int ALT_CLAN_DISSOLVE_DAYS
com.l2jfrozen.gameserver.config.Config: int ALT_ALLY_JOIN_DAYS_WHEN_LEAVED
com.l2jfrozen.gameserver.config.Config: int ALT_ALLY_JOIN_DAYS_WHEN_DISMISSED
com.l2jfrozen.gameserver.config.Config: int ALT_ACCEPT_CLAN_DAYS_WHEN_DISMISSED
com.l2jfrozen.gameserver.config.Config: int ALT_CREATE_ALLY_DAYS_WHEN_DISSOLVED
com.l2jfrozen.gameserver.config.Config: boolean ALT_GAME_NEW_CHAR_ALWAYS_IS_NEWBIE
com.l2jfrozen.gameserver.config.Config: boolean ALT_MEMBERS_CAN_WITHDRAW_FROM_CLANWH
com.l2jfrozen.gameserver.config.Config: int ALT_MAX_NUM_OF_CLANS_IN_ALLY
com.l2jfrozen.gameserver.config.Config: boolean LIFE_CRYSTAL_NEEDED
com.l2jfrozen.gameserver.config.Config: boolean SP_BOOK_NEEDED
com.l2jfrozen.gameserver.config.Config: boolean ES_SP_BOOK_NEEDED
com.l2jfrozen.gameserver.config.Config: boolean ALT_PRIVILEGES_SECURE_CHECK
com.l2jfrozen.gameserver.config.Config: int ALT_PRIVILEGES_DEFAULT_LEVEL
com.l2jfrozen.gameserver.config.Config: int ALT_MANOR_REFRESH_TIME
com.l2jfrozen.gameserver.config.Config: int ALT_MANOR_REFRESH_MIN
com.l2jfrozen.gameserver.config.Config: int ALT_MANOR_APPROVE_TIME
com.l2jfrozen.gameserver.config.Config: int ALT_MANOR_APPROVE_MIN
com.l2jfrozen.gameserver.config.Config: int ALT_MANOR_MAINTENANCE_PERIOD
com.l2jfrozen.gameserver.config.Config: boolean ALT_MANOR_SAVE_ALL_ACTIONS
com.l2jfrozen.gameserver.config.Config: int ALT_MANOR_SAVE_PERIOD_RATE
com.l2jfrozen.gameserver.config.Config: int ALT_LOTTERY_PRIZE
com.l2jfrozen.gameserver.config.Config: int ALT_LOTTERY_TICKET_PRICE
com.l2jfrozen.gameserver.config.Config: float ALT_LOTTERY_5_NUMBER_RATE
com.l2jfrozen.gameserver.config.Config: float ALT_LOTTERY_4_NUMBER_RATE
com.l2jfrozen.gameserver.config.Config: float ALT_LOTTERY_3_NUMBER_RATE
com.l2jfrozen.gameserver.config.Config: int ALT_LOTTERY_2_AND_1_NUMBER_PRIZE
com.l2jfrozen.gameserver.config.Config: int RIFT_MIN_PARTY_SIZE
com.l2jfrozen.gameserver.config.Config: int RIFT_SPAWN_DELAY
com.l2jfrozen.gameserver.config.Config: int RIFT_MAX_JUMPS
com.l2jfrozen.gameserver.config.Config: int RIFT_AUTO_JUMPS_TIME_MIN
com.l2jfrozen.gameserver.config.Config: int RIFT_AUTO_JUMPS_TIME_MAX
com.l2jfrozen.gameserver.config.Config: int RIFT_ENTER_COST_RECRUIT
com.l2jfrozen.gameserver.config.Config: int RIFT_ENTER_COST_SOLDIER
com.l2jfrozen.gameserver.config.Config: int RIFT_ENTER_COST_OFFICER
com.l2jfrozen.gameserver.config.Config: int RIFT_ENTER_COST_CAPTAIN
com.l2jfrozen.gameserver.config.Config: int RIFT_ENTER_COST_COMMANDER
com.l2jfrozen.gameserver.config.Config: int RIFT_ENTER_COST_HERO
com.l2jfrozen.gameserver.config.Config: float RIFT_BOSS_ROOM_TIME_MUTIPLY
com.l2jfrozen.gameserver.config.Config: float ALT_GAME_EXPONENT_XP
com.l2jfrozen.gameserver.config.Config: float ALT_GAME_EXPONENT_SP
com.l2jfrozen.gameserver.config.Config: boolean FORCE_INVENTORY_UPDATE
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_GUARDS
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_CLASS_MASTERS
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_CLASS_MASTERS_FIRST_CLASS
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_CLASS_MASTERS_SECOND_CLASS
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_CLASS_MASTERS_THIRD_CLASS
com.l2jfrozen.gameserver.config.Config: boolean CLASS_MASTER_STRIDER_UPDATE
com.l2jfrozen.gameserver.config.Config: com.l2jfrozen.gameserver.config.ClassMasterSettings CLASS_MASTER_SETTINGS
com.l2jfrozen.gameserver.config.Config: boolean ALT_GAME_KARMA_PLAYER_CAN_BE_KILLED_IN_PEACEZONE
com.l2jfrozen.gameserver.config.Config: boolean ALT_GAME_KARMA_PLAYER_CAN_SHOP
com.l2jfrozen.gameserver.config.Config: boolean ALT_GAME_KARMA_PLAYER_CAN_USE_GK
com.l2jfrozen.gameserver.config.Config: boolean ALT_GAME_KARMA_PLAYER_CAN_TELEPORT
com.l2jfrozen.gameserver.config.Config: boolean ALT_GAME_KARMA_PLAYER_CAN_TRADE
com.l2jfrozen.gameserver.config.Config: boolean ALT_GAME_KARMA_PLAYER_CAN_USE_WAREHOUSE
com.l2jfrozen.gameserver.config.Config: boolean ALT_KARMA_TELEPORT_TO_FLORAN
com.l2jfrozen.gameserver.config.Config: byte BUFFS_MAX_AMOUNT
com.l2jfrozen.gameserver.config.Config: byte DEBUFFS_MAX_AMOUNT
com.l2jfrozen.gameserver.config.Config: boolean AUTO_LEARN_DIVINE_INSPIRATION
com.l2jfrozen.gameserver.config.Config: boolean DIVINE_SP_BOOK_NEEDED
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_REMOTE_CLASS_MASTERS
com.l2jfrozen.gameserver.config.Config: boolean DONT_DESTROY_SS
com.l2jfrozen.gameserver.config.Config: int MAX_LEVEL_NEWBIE
com.l2jfrozen.gameserver.config.Config: int MAX_LEVEL_NEWBIE_STATUS
com.l2jfrozen.gameserver.config.Config: int STANDARD_RESPAWN_DELAY
com.l2jfrozen.gameserver.config.Config: int ALT_RECOMMENDATIONS_NUMBER
com.l2jfrozen.gameserver.config.Config: int RAID_RANKING_1ST
com.l2jfrozen.gameserver.config.Config: int RAID_RANKING_2ND
com.l2jfrozen.gameserver.config.Config: int RAID_RANKING_3RD
com.l2jfrozen.gameserver.config.Config: int RAID_RANKING_4TH
com.l2jfrozen.gameserver.config.Config: int RAID_RANKING_5TH
com.l2jfrozen.gameserver.config.Config: int RAID_RANKING_6TH
com.l2jfrozen.gameserver.config.Config: int RAID_RANKING_7TH
com.l2jfrozen.gameserver.config.Config: int RAID_RANKING_8TH
com.l2jfrozen.gameserver.config.Config: int RAID_RANKING_9TH
com.l2jfrozen.gameserver.config.Config: int RAID_RANKING_10TH
com.l2jfrozen.gameserver.config.Config: int RAID_RANKING_UP_TO_50TH
com.l2jfrozen.gameserver.config.Config: int RAID_RANKING_UP_TO_100TH
com.l2jfrozen.gameserver.config.Config: boolean EXPERTISE_PENALTY
com.l2jfrozen.gameserver.config.Config: boolean MASTERY_PENALTY
com.l2jfrozen.gameserver.config.Config: int LEVEL_TO_GET_PENALITY
com.l2jfrozen.gameserver.config.Config: boolean MASTERY_WEAPON_PENALTY
com.l2jfrozen.gameserver.config.Config: int LEVEL_TO_GET_WEAPON_PENALITY
com.l2jfrozen.gameserver.config.Config: int ACTIVE_AUGMENTS_START_REUSE_TIME
com.l2jfrozen.gameserver.config.Config: boolean NPC_ATTACKABLE
com.l2jfrozen.gameserver.config.Config: java.util.List INVUL_NPC_LIST
com.l2jfrozen.gameserver.config.Config: boolean DISABLE_ATTACK_NPC_TYPE
com.l2jfrozen.gameserver.config.Config: java.lang.String ALLOWED_NPC_TYPES
com.l2jfrozen.gameserver.config.Config: javolution.util.FastList LIST_ALLOWED_NPC_TYPES
com.l2jfrozen.gameserver.config.Config: boolean SELL_BY_ITEM
com.l2jfrozen.gameserver.config.Config: int SELL_ITEM
com.l2jfrozen.gameserver.config.Config: int ALLOWED_SUBCLASS
com.l2jfrozen.gameserver.config.Config: byte BASE_SUBCLASS_LEVEL
com.l2jfrozen.gameserver.config.Config: byte MAX_SUBCLASS_LEVEL
com.l2jfrozen.gameserver.config.Config: java.lang.String DISABLE_BOW_CLASSES_STRING
com.l2jfrozen.gameserver.config.Config: javolution.util.FastList DISABLE_BOW_CLASSES
com.l2jfrozen.gameserver.config.Config: boolean ALT_MOBS_STATS_BONUS
com.l2jfrozen.gameserver.config.Config: boolean ALT_PETS_STATS_BONUS
com.l2jfrozen.gameserver.config.Config: boolean ENABLE_FESTIVAL
com.l2jfrozen.gameserver.config.Config: boolean ALT_GAME_REQUIRE_CASTLE_DAWN
com.l2jfrozen.gameserver.config.Config: boolean ALT_GAME_REQUIRE_CLAN_CASTLE
com.l2jfrozen.gameserver.config.Config: boolean ALT_REQUIRE_WIN_7S
com.l2jfrozen.gameserver.config.Config: int ALT_FESTIVAL_MIN_PLAYER
com.l2jfrozen.gameserver.config.Config: int ALT_MAXIMUM_PLAYER_CONTRIB
com.l2jfrozen.gameserver.config.Config: long ALT_FESTIVAL_MANAGER_START
com.l2jfrozen.gameserver.config.Config: long ALT_FESTIVAL_LENGTH
com.l2jfrozen.gameserver.config.Config: long ALT_FESTIVAL_CYCLE_LENGTH
com.l2jfrozen.gameserver.config.Config: long ALT_FESTIVAL_FIRST_SPAWN
com.l2jfrozen.gameserver.config.Config: long ALT_FESTIVAL_FIRST_SWARM
com.l2jfrozen.gameserver.config.Config: long ALT_FESTIVAL_SECOND_SPAWN
com.l2jfrozen.gameserver.config.Config: long ALT_FESTIVAL_SECOND_SWARM
com.l2jfrozen.gameserver.config.Config: long ALT_FESTIVAL_CHEST_SPAWN
com.l2jfrozen.gameserver.config.Config: long CH_TELE_FEE_RATIO
com.l2jfrozen.gameserver.config.Config: int CH_TELE1_FEE
com.l2jfrozen.gameserver.config.Config: int CH_TELE2_FEE
com.l2jfrozen.gameserver.config.Config: long CH_ITEM_FEE_RATIO
com.l2jfrozen.gameserver.config.Config: int CH_ITEM1_FEE
com.l2jfrozen.gameserver.config.Config: int CH_ITEM2_FEE
com.l2jfrozen.gameserver.config.Config: int CH_ITEM3_FEE
com.l2jfrozen.gameserver.config.Config: long CH_MPREG_FEE_RATIO
com.l2jfrozen.gameserver.config.Config: int CH_MPREG1_FEE
com.l2jfrozen.gameserver.config.Config: int CH_MPREG2_FEE
com.l2jfrozen.gameserver.config.Config: int CH_MPREG3_FEE
com.l2jfrozen.gameserver.config.Config: int CH_MPREG4_FEE
com.l2jfrozen.gameserver.config.Config: int CH_MPREG5_FEE
com.l2jfrozen.gameserver.config.Config: long CH_HPREG_FEE_RATIO
com.l2jfrozen.gameserver.config.Config: int CH_HPREG1_FEE
com.l2jfrozen.gameserver.config.Config: int CH_HPREG2_FEE
com.l2jfrozen.gameserver.config.Config: int CH_HPREG3_FEE
com.l2jfrozen.gameserver.config.Config: int CH_HPREG4_FEE
com.l2jfrozen.gameserver.config.Config: int CH_HPREG5_FEE
com.l2jfrozen.gameserver.config.Config: int CH_HPREG6_FEE
com.l2jfrozen.gameserver.config.Config: int CH_HPREG7_FEE
com.l2jfrozen.gameserver.config.Config: int CH_HPREG8_FEE
com.l2jfrozen.gameserver.config.Config: int CH_HPREG9_FEE
com.l2jfrozen.gameserver.config.Config: int CH_HPREG10_FEE
com.l2jfrozen.gameserver.config.Config: int CH_HPREG11_FEE
com.l2jfrozen.gameserver.config.Config: int CH_HPREG12_FEE
com.l2jfrozen.gameserver.config.Config: int CH_HPREG13_FEE
com.l2jfrozen.gameserver.config.Config: long CH_EXPREG_FEE_RATIO
com.l2jfrozen.gameserver.config.Config: int CH_EXPREG1_FEE
com.l2jfrozen.gameserver.config.Config: int CH_EXPREG2_FEE
com.l2jfrozen.gameserver.config.Config: int CH_EXPREG3_FEE
com.l2jfrozen.gameserver.config.Config: int CH_EXPREG4_FEE
com.l2jfrozen.gameserver.config.Config: int CH_EXPREG5_FEE
com.l2jfrozen.gameserver.config.Config: int CH_EXPREG6_FEE
com.l2jfrozen.gameserver.config.Config: int CH_EXPREG7_FEE
com.l2jfrozen.gameserver.config.Config: long CH_SUPPORT_FEE_RATIO
com.l2jfrozen.gameserver.config.Config: int CH_SUPPORT1_FEE
com.l2jfrozen.gameserver.config.Config: int CH_SUPPORT2_FEE
com.l2jfrozen.gameserver.config.Config: int CH_SUPPORT3_FEE
com.l2jfrozen.gameserver.config.Config: int CH_SUPPORT4_FEE
com.l2jfrozen.gameserver.config.Config: int CH_SUPPORT5_FEE
com.l2jfrozen.gameserver.config.Config: int CH_SUPPORT6_FEE
com.l2jfrozen.gameserver.config.Config: int CH_SUPPORT7_FEE
com.l2jfrozen.gameserver.config.Config: int CH_SUPPORT8_FEE
com.l2jfrozen.gameserver.config.Config: long CH_CURTAIN_FEE_RATIO
com.l2jfrozen.gameserver.config.Config: int CH_CURTAIN1_FEE
com.l2jfrozen.gameserver.config.Config: int CH_CURTAIN2_FEE
com.l2jfrozen.gameserver.config.Config: long CH_FRONT_FEE_RATIO
com.l2jfrozen.gameserver.config.Config: int CH_FRONT1_FEE
com.l2jfrozen.gameserver.config.Config: int CH_FRONT2_FEE
com.l2jfrozen.gameserver.config.Config: int DEVASTATED_DAY
com.l2jfrozen.gameserver.config.Config: int DEVASTATED_HOUR
com.l2jfrozen.gameserver.config.Config: int DEVASTATED_MINUTES
com.l2jfrozen.gameserver.config.Config: int PARTISAN_DAY
com.l2jfrozen.gameserver.config.Config: int PARTISAN_HOUR
com.l2jfrozen.gameserver.config.Config: int PARTISAN_MINUTES
com.l2jfrozen.gameserver.config.Config: boolean L2JMOD_CHAMPION_ENABLE
com.l2jfrozen.gameserver.config.Config: int L2JMOD_CHAMPION_FREQUENCY
com.l2jfrozen.gameserver.config.Config: int L2JMOD_CHAMP_MIN_LVL
com.l2jfrozen.gameserver.config.Config: int L2JMOD_CHAMP_MAX_LVL
com.l2jfrozen.gameserver.config.Config: int L2JMOD_CHAMPION_HP
com.l2jfrozen.gameserver.config.Config: int L2JMOD_CHAMPION_REWARDS
com.l2jfrozen.gameserver.config.Config: int L2JMOD_CHAMPION_ADENAS_REWARDS
com.l2jfrozen.gameserver.config.Config: float L2JMOD_CHAMPION_HP_REGEN
com.l2jfrozen.gameserver.config.Config: float L2JMOD_CHAMPION_ATK
com.l2jfrozen.gameserver.config.Config: float L2JMOD_CHAMPION_SPD_ATK
com.l2jfrozen.gameserver.config.Config: int L2JMOD_CHAMPION_REWARD
com.l2jfrozen.gameserver.config.Config: int L2JMOD_CHAMPION_REWARD_ID
com.l2jfrozen.gameserver.config.Config: int L2JMOD_CHAMPION_REWARD_QTY
com.l2jfrozen.gameserver.config.Config: java.lang.String L2JMOD_CHAMP_TITLE
com.l2jfrozen.gameserver.config.Config: boolean L2JMOD_ALLOW_WEDDING
com.l2jfrozen.gameserver.config.Config: int L2JMOD_WEDDING_PRICE
com.l2jfrozen.gameserver.config.Config: boolean L2JMOD_WEDDING_PUNISH_INFIDELITY
com.l2jfrozen.gameserver.config.Config: boolean L2JMOD_WEDDING_TELEPORT
com.l2jfrozen.gameserver.config.Config: int L2JMOD_WEDDING_TELEPORT_PRICE
com.l2jfrozen.gameserver.config.Config: int L2JMOD_WEDDING_TELEPORT_DURATION
com.l2jfrozen.gameserver.config.Config: int L2JMOD_WEDDING_NAME_COLOR_NORMAL
com.l2jfrozen.gameserver.config.Config: int L2JMOD_WEDDING_NAME_COLOR_GEY
com.l2jfrozen.gameserver.config.Config: int L2JMOD_WEDDING_NAME_COLOR_LESBO
com.l2jfrozen.gameserver.config.Config: boolean L2JMOD_WEDDING_SAMESEX
com.l2jfrozen.gameserver.config.Config: boolean L2JMOD_WEDDING_FORMALWEAR
com.l2jfrozen.gameserver.config.Config: int L2JMOD_WEDDING_DIVORCE_COSTS
com.l2jfrozen.gameserver.config.Config: boolean WEDDING_GIVE_CUPID_BOW
com.l2jfrozen.gameserver.config.Config: boolean ANNOUNCE_WEDDING
com.l2jfrozen.gameserver.config.Config: java.lang.String TVT_EVEN_TEAMS
com.l2jfrozen.gameserver.config.Config: boolean TVT_ALLOW_INTERFERENCE
com.l2jfrozen.gameserver.config.Config: boolean TVT_ALLOW_POTIONS
com.l2jfrozen.gameserver.config.Config: boolean TVT_ALLOW_SUMMON
com.l2jfrozen.gameserver.config.Config: boolean TVT_ON_START_REMOVE_ALL_EFFECTS
com.l2jfrozen.gameserver.config.Config: boolean TVT_ON_START_UNSUMMON_PET
com.l2jfrozen.gameserver.config.Config: boolean TVT_REVIVE_RECOVERY
com.l2jfrozen.gameserver.config.Config: boolean TVT_ANNOUNCE_TEAM_STATS
com.l2jfrozen.gameserver.config.Config: boolean TVT_ANNOUNCE_REWARD
com.l2jfrozen.gameserver.config.Config: boolean TVT_PRICE_NO_KILLS
com.l2jfrozen.gameserver.config.Config: boolean TVT_JOIN_CURSED
com.l2jfrozen.gameserver.config.Config: boolean TVT_COMMAND
com.l2jfrozen.gameserver.config.Config: long TVT_REVIVE_DELAY
com.l2jfrozen.gameserver.config.Config: boolean TVT_OPEN_FORT_DOORS
com.l2jfrozen.gameserver.config.Config: boolean TVT_CLOSE_FORT_DOORS
com.l2jfrozen.gameserver.config.Config: boolean TVT_OPEN_ADEN_COLOSSEUM_DOORS
com.l2jfrozen.gameserver.config.Config: boolean TVT_CLOSE_ADEN_COLOSSEUM_DOORS
com.l2jfrozen.gameserver.config.Config: int TVT_TOP_KILLER_REWARD
com.l2jfrozen.gameserver.config.Config: int TVT_TOP_KILLER_QTY
com.l2jfrozen.gameserver.config.Config: boolean TVT_AURA
com.l2jfrozen.gameserver.config.Config: boolean TVT_STATS_LOGGER
com.l2jfrozen.gameserver.config.Config: boolean TVT_REMOVE_BUFFS_ON_DIE
com.l2jfrozen.gameserver.config.Config: int TW_TOWN_ID
com.l2jfrozen.gameserver.config.Config: boolean TW_ALL_TOWNS
com.l2jfrozen.gameserver.config.Config: int TW_ITEM_ID
com.l2jfrozen.gameserver.config.Config: int TW_ITEM_AMOUNT
com.l2jfrozen.gameserver.config.Config: boolean TW_ALLOW_KARMA
com.l2jfrozen.gameserver.config.Config: boolean TW_DISABLE_GK
com.l2jfrozen.gameserver.config.Config: boolean TW_RESS_ON_DIE
com.l2jfrozen.gameserver.config.Config: boolean REBIRTH_ENABLE
com.l2jfrozen.gameserver.config.Config: java.lang.String[] REBIRTH_ITEM_PRICE
com.l2jfrozen.gameserver.config.Config: java.lang.String[] REBIRTH_MAGE_SKILL
com.l2jfrozen.gameserver.config.Config: java.lang.String[] REBIRTH_FIGHTER_SKILL
com.l2jfrozen.gameserver.config.Config: int REBIRTH_MIN_LEVEL
com.l2jfrozen.gameserver.config.Config: int REBIRTH_MAX
com.l2jfrozen.gameserver.config.Config: int REBIRTH_RETURN_TO_LEVEL
com.l2jfrozen.gameserver.config.Config: boolean PCB_ENABLE
com.l2jfrozen.gameserver.config.Config: int PCB_MIN_LEVEL
com.l2jfrozen.gameserver.config.Config: int PCB_POINT_MIN
com.l2jfrozen.gameserver.config.Config: int PCB_POINT_MAX
com.l2jfrozen.gameserver.config.Config: int PCB_CHANCE_DUAL_POINT
com.l2jfrozen.gameserver.config.Config: int PCB_INTERVAL
com.l2jfrozen.gameserver.config.Config: boolean ALT_DEV_NO_QUESTS
com.l2jfrozen.gameserver.config.Config: boolean ALT_DEV_NO_SPAWNS
com.l2jfrozen.gameserver.config.Config: boolean ALT_DEV_NO_SCRIPT
com.l2jfrozen.gameserver.config.Config: boolean ALT_DEV_NO_RB
com.l2jfrozen.gameserver.config.Config: boolean ALT_DEV_NO_AI
com.l2jfrozen.gameserver.config.Config: boolean SKILLSDEBUG
com.l2jfrozen.gameserver.config.Config: boolean ENABLE_OLYMPIAD_DEBUG
com.l2jfrozen.gameserver.config.Config: boolean DEVELOPER
com.l2jfrozen.gameserver.config.Config: boolean ZONE_DEBUG
com.l2jfrozen.gameserver.config.Config: boolean SERVER_LIST_TESTSERVER
com.l2jfrozen.gameserver.config.Config: boolean BETASERVER
com.l2jfrozen.gameserver.config.Config: boolean SERVER_LIST_BRACKET
com.l2jfrozen.gameserver.config.Config: boolean SERVER_LIST_CLOCK
com.l2jfrozen.gameserver.config.Config: boolean SERVER_GMONLY
com.l2jfrozen.gameserver.config.Config: int REQUEST_ID
com.l2jfrozen.gameserver.config.Config: boolean ACCEPT_ALTERNATE_ID
com.l2jfrozen.gameserver.config.Config: int MAXIMUM_ONLINE_USERS
com.l2jfrozen.gameserver.config.Config: java.lang.String CNAME_TEMPLATE
com.l2jfrozen.gameserver.config.Config: java.lang.String PET_NAME_TEMPLATE
com.l2jfrozen.gameserver.config.Config: java.lang.String CLAN_NAME_TEMPLATE
com.l2jfrozen.gameserver.config.Config: java.lang.String ALLY_NAME_TEMPLATE
com.l2jfrozen.gameserver.config.Config: int MAX_CHARACTERS_NUMBER_PER_IP
com.l2jfrozen.gameserver.config.Config: int MAX_CHARACTERS_NUMBER_PER_ACCOUNT
com.l2jfrozen.gameserver.config.Config: int MIN_PROTOCOL_REVISION
com.l2jfrozen.gameserver.config.Config: int MAX_PROTOCOL_REVISION
com.l2jfrozen.gameserver.config.Config: boolean GMAUDIT
com.l2jfrozen.gameserver.config.Config: boolean LOG_CHAT
com.l2jfrozen.gameserver.config.Config: boolean LOG_ITEMS
com.l2jfrozen.gameserver.config.Config: boolean LOG_HIGH_DAMAGES
com.l2jfrozen.gameserver.config.Config: boolean GAMEGUARD_L2NET_CHECK
com.l2jfrozen.gameserver.config.Config: boolean LAZY_CACHE
com.l2jfrozen.gameserver.config.Config: boolean ENABLE_CACHE_INFO
com.l2jfrozen.gameserver.config.Config: boolean IS_CRAFTING_ENABLED
com.l2jfrozen.gameserver.config.Config: int DWARF_RECIPE_LIMIT
com.l2jfrozen.gameserver.config.Config: int COMMON_RECIPE_LIMIT
com.l2jfrozen.gameserver.config.Config: boolean ALT_GAME_CREATION
com.l2jfrozen.gameserver.config.Config: double ALT_GAME_CREATION_SPEED
com.l2jfrozen.gameserver.config.Config: double ALT_GAME_CREATION_XP_RATE
com.l2jfrozen.gameserver.config.Config: double ALT_GAME_CREATION_SP_RATE
com.l2jfrozen.gameserver.config.Config: boolean ALT_BLACKSMITH_USE_RECIPES
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_AWAY_STATUS
com.l2jfrozen.gameserver.config.Config: int AWAY_TIMER
com.l2jfrozen.gameserver.config.Config: int BACK_TIMER
com.l2jfrozen.gameserver.config.Config: int AWAY_TITLE_COLOR
com.l2jfrozen.gameserver.config.Config: boolean AWAY_PLAYER_TAKE_AGGRO
com.l2jfrozen.gameserver.config.Config: boolean AWAY_PEACE_ZONE
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_FAKE_PLAYERS
com.l2jfrozen.gameserver.config.Config: boolean FAKEPLAYER_SET_NAME_COLOR
com.l2jfrozen.gameserver.config.Config: java.lang.Integer FAKEPLAYER_NAME_COLOR
com.l2jfrozen.gameserver.config.Config: boolean BANKING_SYSTEM_ENABLED
com.l2jfrozen.gameserver.config.Config: int BANKING_SYSTEM_GOLDBARS
com.l2jfrozen.gameserver.config.Config: int BANKING_SYSTEM_ADENA
com.l2jfrozen.gameserver.config.Config: boolean OFFLINE_TRADE_ENABLE
com.l2jfrozen.gameserver.config.Config: boolean OFFLINE_CRAFT_ENABLE
com.l2jfrozen.gameserver.config.Config: boolean OFFLINE_SET_NAME_COLOR
com.l2jfrozen.gameserver.config.Config: int OFFLINE_NAME_COLOR
com.l2jfrozen.gameserver.config.Config: boolean OFFLINE_COMMAND1
com.l2jfrozen.gameserver.config.Config: boolean OFFLINE_COMMAND2
com.l2jfrozen.gameserver.config.Config: boolean OFFLINE_LOGOUT
com.l2jfrozen.gameserver.config.Config: boolean OFFLINE_SLEEP_EFFECT
com.l2jfrozen.gameserver.config.Config: boolean RESTORE_OFFLINERS
com.l2jfrozen.gameserver.config.Config: int OFFLINE_MAX_DAYS
com.l2jfrozen.gameserver.config.Config: boolean OFFLINE_DISCONNECT_FINISHED
com.l2jfrozen.gameserver.config.Config: boolean DM_ALLOW_INTERFERENCE
com.l2jfrozen.gameserver.config.Config: boolean DM_ALLOW_POTIONS
com.l2jfrozen.gameserver.config.Config: boolean DM_ALLOW_SUMMON
com.l2jfrozen.gameserver.config.Config: boolean DM_JOIN_CURSED
com.l2jfrozen.gameserver.config.Config: boolean DM_ON_START_REMOVE_ALL_EFFECTS
com.l2jfrozen.gameserver.config.Config: boolean DM_ON_START_UNSUMMON_PET
com.l2jfrozen.gameserver.config.Config: long DM_REVIVE_DELAY
com.l2jfrozen.gameserver.config.Config: boolean DM_COMMAND
com.l2jfrozen.gameserver.config.Config: boolean DM_ENABLE_KILL_REWARD
com.l2jfrozen.gameserver.config.Config: int DM_KILL_REWARD_ID
com.l2jfrozen.gameserver.config.Config: int DM_KILL_REWARD_AMOUNT
com.l2jfrozen.gameserver.config.Config: boolean DM_ANNOUNCE_REWARD
com.l2jfrozen.gameserver.config.Config: boolean DM_REVIVE_RECOVERY
com.l2jfrozen.gameserver.config.Config: int DM_SPAWN_OFFSET
com.l2jfrozen.gameserver.config.Config: boolean DM_STATS_LOGGER
com.l2jfrozen.gameserver.config.Config: boolean DM_ALLOW_HEALER_CLASSES
com.l2jfrozen.gameserver.config.Config: boolean DM_REMOVE_BUFFS_ON_DIE
com.l2jfrozen.gameserver.config.Config: java.lang.String CTF_EVEN_TEAMS
com.l2jfrozen.gameserver.config.Config: boolean CTF_ALLOW_INTERFERENCE
com.l2jfrozen.gameserver.config.Config: boolean CTF_ALLOW_POTIONS
com.l2jfrozen.gameserver.config.Config: boolean CTF_ALLOW_SUMMON
com.l2jfrozen.gameserver.config.Config: boolean CTF_ON_START_REMOVE_ALL_EFFECTS
com.l2jfrozen.gameserver.config.Config: boolean CTF_ON_START_UNSUMMON_PET
com.l2jfrozen.gameserver.config.Config: boolean CTF_ANNOUNCE_TEAM_STATS
com.l2jfrozen.gameserver.config.Config: boolean CTF_ANNOUNCE_REWARD
com.l2jfrozen.gameserver.config.Config: boolean CTF_JOIN_CURSED
com.l2jfrozen.gameserver.config.Config: boolean CTF_REVIVE_RECOVERY
com.l2jfrozen.gameserver.config.Config: boolean CTF_COMMAND
com.l2jfrozen.gameserver.config.Config: boolean CTF_AURA
com.l2jfrozen.gameserver.config.Config: boolean CTF_STATS_LOGGER
com.l2jfrozen.gameserver.config.Config: int CTF_SPAWN_OFFSET
com.l2jfrozen.gameserver.config.Config: boolean CTF_REMOVE_BUFFS_ON_DIE
com.l2jfrozen.gameserver.config.Config: boolean GM_TRADE_RESTRICTED_ITEMS
com.l2jfrozen.gameserver.config.Config: boolean GM_CRITANNOUNCER_NAME
com.l2jfrozen.gameserver.config.Config: boolean GM_RESTART_FIGHTING
com.l2jfrozen.gameserver.config.Config: boolean PM_MESSAGE_ON_START
com.l2jfrozen.gameserver.config.Config: boolean SERVER_TIME_ON_START
com.l2jfrozen.gameserver.config.Config: java.lang.String PM_SERVER_NAME
com.l2jfrozen.gameserver.config.Config: java.lang.String PM_TEXT1
com.l2jfrozen.gameserver.config.Config: java.lang.String PM_TEXT2
com.l2jfrozen.gameserver.config.Config: boolean NEW_PLAYER_EFFECT
com.l2jfrozen.gameserver.config.Config: boolean ONLINE_PLAYERS_ON_LOGIN
com.l2jfrozen.gameserver.config.Config: boolean SHOW_SERVER_VERSION
com.l2jfrozen.gameserver.config.Config: boolean SUBSTUCK_SKILLS
com.l2jfrozen.gameserver.config.Config: boolean ALT_SERVER_NAME_ENABLED
com.l2jfrozen.gameserver.config.Config: boolean ANNOUNCE_TO_ALL_SPAWN_RB
com.l2jfrozen.gameserver.config.Config: boolean ANNOUNCE_TRY_BANNED_ACCOUNT
com.l2jfrozen.gameserver.config.Config: java.lang.String ALT_Server_Name
com.l2jfrozen.gameserver.config.Config: boolean DONATOR_NAME_COLOR_ENABLED
com.l2jfrozen.gameserver.config.Config: int DONATOR_NAME_COLOR
com.l2jfrozen.gameserver.config.Config: int DONATOR_TITLE_COLOR
com.l2jfrozen.gameserver.config.Config: float DONATOR_XPSP_RATE
com.l2jfrozen.gameserver.config.Config: float DONATOR_ADENA_RATE
com.l2jfrozen.gameserver.config.Config: float DONATOR_DROP_RATE
com.l2jfrozen.gameserver.config.Config: float DONATOR_SPOIL_RATE
com.l2jfrozen.gameserver.config.Config: boolean CUSTOM_SPAWNLIST_TABLE
com.l2jfrozen.gameserver.config.Config: boolean SAVE_GMSPAWN_ON_CUSTOM
com.l2jfrozen.gameserver.config.Config: boolean DELETE_GMSPAWN_ON_CUSTOM
com.l2jfrozen.gameserver.config.Config: boolean CUSTOM_NPC_TABLE
com.l2jfrozen.gameserver.config.Config: boolean CUSTOM_ITEM_TABLES
com.l2jfrozen.gameserver.config.Config: boolean CUSTOM_ARMORSETS_TABLE
com.l2jfrozen.gameserver.config.Config: boolean CUSTOM_TELEPORT_TABLE
com.l2jfrozen.gameserver.config.Config: boolean CUSTOM_DROPLIST_TABLE
com.l2jfrozen.gameserver.config.Config: boolean CUSTOM_MERCHANT_TABLES
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_SIMPLE_STATS_VIEW
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_DETAILED_STATS_VIEW
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_ONLINE_VIEW
com.l2jfrozen.gameserver.config.Config: boolean WELCOME_HTM
com.l2jfrozen.gameserver.config.Config: java.lang.String ALLOWED_SKILLS
com.l2jfrozen.gameserver.config.Config: javolution.util.FastList ALLOWED_SKILLS_LIST
com.l2jfrozen.gameserver.config.Config: boolean PROTECTOR_PLAYER_PK
com.l2jfrozen.gameserver.config.Config: boolean PROTECTOR_PLAYER_PVP
com.l2jfrozen.gameserver.config.Config: int PROTECTOR_RADIUS_ACTION
com.l2jfrozen.gameserver.config.Config: int PROTECTOR_SKILLID
com.l2jfrozen.gameserver.config.Config: int PROTECTOR_SKILLLEVEL
com.l2jfrozen.gameserver.config.Config: int PROTECTOR_SKILLTIME
com.l2jfrozen.gameserver.config.Config: java.lang.String PROTECTOR_MESSAGE
com.l2jfrozen.gameserver.config.Config: boolean CASTLE_SHIELD
com.l2jfrozen.gameserver.config.Config: boolean CLANHALL_SHIELD
com.l2jfrozen.gameserver.config.Config: boolean APELLA_ARMORS
com.l2jfrozen.gameserver.config.Config: boolean OATH_ARMORS
com.l2jfrozen.gameserver.config.Config: boolean CASTLE_CROWN
com.l2jfrozen.gameserver.config.Config: boolean CASTLE_CIRCLETS
com.l2jfrozen.gameserver.config.Config: boolean KEEP_SUBCLASS_SKILLS
com.l2jfrozen.gameserver.config.Config: boolean CHAR_TITLE
com.l2jfrozen.gameserver.config.Config: java.lang.String ADD_CHAR_TITLE
com.l2jfrozen.gameserver.config.Config: boolean NOBLE_CUSTOM_ITEMS
com.l2jfrozen.gameserver.config.Config: boolean HERO_CUSTOM_ITEMS
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_CREATE_LVL
com.l2jfrozen.gameserver.config.Config: int CHAR_CREATE_LVL
com.l2jfrozen.gameserver.config.Config: boolean SPAWN_CHAR
com.l2jfrozen.gameserver.config.Config: int SPAWN_X
com.l2jfrozen.gameserver.config.Config: int SPAWN_Y
com.l2jfrozen.gameserver.config.Config: int SPAWN_Z
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_HERO_SUBSKILL
com.l2jfrozen.gameserver.config.Config: int HERO_COUNT
com.l2jfrozen.gameserver.config.Config: int CRUMA_TOWER_LEVEL_RESTRICT
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_RAID_BOSS_PETRIFIED
com.l2jfrozen.gameserver.config.Config: int ALT_PLAYER_PROTECTION_LEVEL
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_LOW_LEVEL_TRADE
com.l2jfrozen.gameserver.config.Config: boolean USE_CHAT_FILTER
com.l2jfrozen.gameserver.config.Config: int MONSTER_RETURN_DELAY
com.l2jfrozen.gameserver.config.Config: boolean SCROLL_STACKABLE
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_VERSION_COMMAND
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_CHAR_KILL_PROTECT
com.l2jfrozen.gameserver.config.Config: int CLAN_LEADER_COLOR
com.l2jfrozen.gameserver.config.Config: int CLAN_LEADER_COLOR_CLAN_LEVEL
com.l2jfrozen.gameserver.config.Config: boolean CLAN_LEADER_COLOR_ENABLED
com.l2jfrozen.gameserver.config.Config: int CLAN_LEADER_COLORED
com.l2jfrozen.gameserver.config.Config: boolean SAVE_RAIDBOSS_STATUS_INTO_DB
com.l2jfrozen.gameserver.config.Config: boolean DISABLE_WEIGHT_PENALTY
com.l2jfrozen.gameserver.config.Config: int DIFFERENT_Z_CHANGE_OBJECT
com.l2jfrozen.gameserver.config.Config: int DIFFERENT_Z_NEW_MOVIE
com.l2jfrozen.gameserver.config.Config: int HERO_CUSTOM_ITEM_ID
com.l2jfrozen.gameserver.config.Config: int NOOBLE_CUSTOM_ITEM_ID
com.l2jfrozen.gameserver.config.Config: int HERO_CUSTOM_DAY
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_FARM1_COMMAND
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_FARM2_COMMAND
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_PVP1_COMMAND
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_PVP2_COMMAND
com.l2jfrozen.gameserver.config.Config: int FARM1_X
com.l2jfrozen.gameserver.config.Config: int FARM1_Y
com.l2jfrozen.gameserver.config.Config: int FARM1_Z
com.l2jfrozen.gameserver.config.Config: int PVP1_X
com.l2jfrozen.gameserver.config.Config: int PVP1_Y
com.l2jfrozen.gameserver.config.Config: int PVP1_Z
com.l2jfrozen.gameserver.config.Config: int FARM2_X
com.l2jfrozen.gameserver.config.Config: int FARM2_Y
com.l2jfrozen.gameserver.config.Config: int FARM2_Z
com.l2jfrozen.gameserver.config.Config: int PVP2_X
com.l2jfrozen.gameserver.config.Config: int PVP2_Y
com.l2jfrozen.gameserver.config.Config: int PVP2_Z
com.l2jfrozen.gameserver.config.Config: java.lang.String FARM1_CUSTOM_MESSAGE
com.l2jfrozen.gameserver.config.Config: java.lang.String FARM2_CUSTOM_MESSAGE
com.l2jfrozen.gameserver.config.Config: java.lang.String PVP1_CUSTOM_MESSAGE
com.l2jfrozen.gameserver.config.Config: java.lang.String PVP2_CUSTOM_MESSAGE
com.l2jfrozen.gameserver.config.Config: int KARMA_MIN_KARMA
com.l2jfrozen.gameserver.config.Config: int KARMA_MAX_KARMA
com.l2jfrozen.gameserver.config.Config: int KARMA_XP_DIVIDER
com.l2jfrozen.gameserver.config.Config: int KARMA_LOST_BASE
com.l2jfrozen.gameserver.config.Config: boolean KARMA_DROP_GM
com.l2jfrozen.gameserver.config.Config: boolean KARMA_AWARD_PK_KILL
com.l2jfrozen.gameserver.config.Config: int KARMA_PK_LIMIT
com.l2jfrozen.gameserver.config.Config: java.lang.String KARMA_NONDROPPABLE_PET_ITEMS
com.l2jfrozen.gameserver.config.Config: java.lang.String KARMA_NONDROPPABLE_ITEMS
com.l2jfrozen.gameserver.config.Config: javolution.util.FastList KARMA_LIST_NONDROPPABLE_PET_ITEMS
com.l2jfrozen.gameserver.config.Config: javolution.util.FastList KARMA_LIST_NONDROPPABLE_ITEMS
com.l2jfrozen.gameserver.config.Config: int PVP_NORMAL_TIME
com.l2jfrozen.gameserver.config.Config: int PVP_PVP_TIME
com.l2jfrozen.gameserver.config.Config: boolean PVP_COLOR_SYSTEM_ENABLED
com.l2jfrozen.gameserver.config.Config: int PVP_AMOUNT1
com.l2jfrozen.gameserver.config.Config: int PVP_AMOUNT2
com.l2jfrozen.gameserver.config.Config: int PVP_AMOUNT3
com.l2jfrozen.gameserver.config.Config: int PVP_AMOUNT4
com.l2jfrozen.gameserver.config.Config: int PVP_AMOUNT5
com.l2jfrozen.gameserver.config.Config: int NAME_COLOR_FOR_PVP_AMOUNT1
com.l2jfrozen.gameserver.config.Config: int NAME_COLOR_FOR_PVP_AMOUNT2
com.l2jfrozen.gameserver.config.Config: int NAME_COLOR_FOR_PVP_AMOUNT3
com.l2jfrozen.gameserver.config.Config: int NAME_COLOR_FOR_PVP_AMOUNT4
com.l2jfrozen.gameserver.config.Config: int NAME_COLOR_FOR_PVP_AMOUNT5
com.l2jfrozen.gameserver.config.Config: boolean PK_COLOR_SYSTEM_ENABLED
com.l2jfrozen.gameserver.config.Config: int PK_AMOUNT1
com.l2jfrozen.gameserver.config.Config: int PK_AMOUNT2
com.l2jfrozen.gameserver.config.Config: int PK_AMOUNT3
com.l2jfrozen.gameserver.config.Config: int PK_AMOUNT4
com.l2jfrozen.gameserver.config.Config: int PK_AMOUNT5
com.l2jfrozen.gameserver.config.Config: int TITLE_COLOR_FOR_PK_AMOUNT1
com.l2jfrozen.gameserver.config.Config: int TITLE_COLOR_FOR_PK_AMOUNT2
com.l2jfrozen.gameserver.config.Config: int TITLE_COLOR_FOR_PK_AMOUNT3
com.l2jfrozen.gameserver.config.Config: int TITLE_COLOR_FOR_PK_AMOUNT4
com.l2jfrozen.gameserver.config.Config: int TITLE_COLOR_FOR_PK_AMOUNT5
com.l2jfrozen.gameserver.config.Config: boolean PVP_REWARD_ENABLED
com.l2jfrozen.gameserver.config.Config: int PVP_REWARD_ID
com.l2jfrozen.gameserver.config.Config: int PVP_REWARD_AMOUNT
com.l2jfrozen.gameserver.config.Config: boolean PK_REWARD_ENABLED
com.l2jfrozen.gameserver.config.Config: int PK_REWARD_ID
com.l2jfrozen.gameserver.config.Config: int PK_REWARD_AMOUNT
com.l2jfrozen.gameserver.config.Config: int REWARD_PROTECT
com.l2jfrozen.gameserver.config.Config: boolean ENABLE_PK_INFO
com.l2jfrozen.gameserver.config.Config: boolean FLAGED_PLAYER_CAN_USE_GK
com.l2jfrozen.gameserver.config.Config: boolean PVPEXPSP_SYSTEM
com.l2jfrozen.gameserver.config.Config: int ADD_EXP
com.l2jfrozen.gameserver.config.Config: int ADD_SP
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_POTS_IN_PVP
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_SOE_IN_PVP
com.l2jfrozen.gameserver.config.Config: boolean ANNOUNCE_PVP_KILL
com.l2jfrozen.gameserver.config.Config: boolean ANNOUNCE_PK_KILL
com.l2jfrozen.gameserver.config.Config: boolean ANNOUNCE_ALL_KILL
com.l2jfrozen.gameserver.config.Config: int DUEL_SPAWN_X
com.l2jfrozen.gameserver.config.Config: int DUEL_SPAWN_Y
com.l2jfrozen.gameserver.config.Config: int DUEL_SPAWN_Z
com.l2jfrozen.gameserver.config.Config: boolean PVP_PK_TITLE
com.l2jfrozen.gameserver.config.Config: java.lang.String PVP_TITLE_PREFIX
com.l2jfrozen.gameserver.config.Config: java.lang.String PK_TITLE_PREFIX
com.l2jfrozen.gameserver.config.Config: boolean WAR_LEGEND_AURA
com.l2jfrozen.gameserver.config.Config: int KILLS_TO_GET_WAR_LEGEND_AURA
com.l2jfrozen.gameserver.config.Config: boolean ANTI_FARM_ENABLED
com.l2jfrozen.gameserver.config.Config: boolean ANTI_FARM_CLAN_ALLY_ENABLED
com.l2jfrozen.gameserver.config.Config: boolean ANTI_FARM_LVL_DIFF_ENABLED
com.l2jfrozen.gameserver.config.Config: int ANTI_FARM_MAX_LVL_DIFF
com.l2jfrozen.gameserver.config.Config: boolean ANTI_FARM_PDEF_DIFF_ENABLED
com.l2jfrozen.gameserver.config.Config: int ANTI_FARM_MAX_PDEF_DIFF
com.l2jfrozen.gameserver.config.Config: boolean ANTI_FARM_PATK_DIFF_ENABLED
com.l2jfrozen.gameserver.config.Config: int ANTI_FARM_MAX_PATK_DIFF
com.l2jfrozen.gameserver.config.Config: boolean ANTI_FARM_PARTY_ENABLED
com.l2jfrozen.gameserver.config.Config: boolean ANTI_FARM_IP_ENABLED
com.l2jfrozen.gameserver.config.Config: boolean ANTI_FARM_SUMMON
com.l2jfrozen.gameserver.config.Config: int ALT_OLY_NUMBER_HEROS_EACH_CLASS
com.l2jfrozen.gameserver.config.Config: boolean ALT_OLY_LOG_FIGHTS
com.l2jfrozen.gameserver.config.Config: boolean ALT_OLY_SHOW_MONTHLY_WINNERS
com.l2jfrozen.gameserver.config.Config: boolean ALT_OLY_ANNOUNCE_GAMES
com.l2jfrozen.gameserver.config.Config: java.util.List LIST_OLY_RESTRICTED_SKILLS
com.l2jfrozen.gameserver.config.Config: boolean ALT_OLY_AUGMENT_ALLOW
com.l2jfrozen.gameserver.config.Config: int ALT_OLY_TELEPORT_COUNTDOWN
com.l2jfrozen.gameserver.config.Config: int ALT_OLY_START_TIME
com.l2jfrozen.gameserver.config.Config: int ALT_OLY_MIN
com.l2jfrozen.gameserver.config.Config: long ALT_OLY_CPERIOD
com.l2jfrozen.gameserver.config.Config: long ALT_OLY_BATTLE
com.l2jfrozen.gameserver.config.Config: long ALT_OLY_WPERIOD
com.l2jfrozen.gameserver.config.Config: long ALT_OLY_VPERIOD
com.l2jfrozen.gameserver.config.Config: int ALT_OLY_CLASSED
com.l2jfrozen.gameserver.config.Config: int ALT_OLY_NONCLASSED
com.l2jfrozen.gameserver.config.Config: int ALT_OLY_BATTLE_REWARD_ITEM
com.l2jfrozen.gameserver.config.Config: int ALT_OLY_CLASSED_RITEM_C
com.l2jfrozen.gameserver.config.Config: int ALT_OLY_NONCLASSED_RITEM_C
com.l2jfrozen.gameserver.config.Config: int ALT_OLY_GP_PER_POINT
com.l2jfrozen.gameserver.config.Config: int ALT_OLY_MIN_POINT_FOR_EXCH
com.l2jfrozen.gameserver.config.Config: int ALT_OLY_HERO_POINTS
com.l2jfrozen.gameserver.config.Config: java.lang.String ALT_OLY_RESTRICTED_ITEMS
com.l2jfrozen.gameserver.config.Config: java.util.List LIST_OLY_RESTRICTED_ITEMS
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_EVENTS_DURING_OLY
com.l2jfrozen.gameserver.config.Config: boolean ALT_OLY_RECHARGE_SKILLS
com.l2jfrozen.gameserver.config.Config: int ALT_OLY_COMP_RITEM
com.l2jfrozen.gameserver.config.Config: boolean REMOVE_CUBIC_OLYMPIAD
com.l2jfrozen.gameserver.config.Config: boolean ALT_OLY_USE_CUSTOM_PERIOD_SETTINGS
com.l2jfrozen.gameserver.config.Config: com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadPeriod ALT_OLY_PERIOD
com.l2jfrozen.gameserver.config.Config: int ALT_OLY_PERIOD_MULTIPLIER
com.l2jfrozen.gameserver.config.Config: javolution.util.FastMap NORMAL_WEAPON_ENCHANT_LEVEL
com.l2jfrozen.gameserver.config.Config: javolution.util.FastMap BLESS_WEAPON_ENCHANT_LEVEL
com.l2jfrozen.gameserver.config.Config: javolution.util.FastMap CRYSTAL_WEAPON_ENCHANT_LEVEL
com.l2jfrozen.gameserver.config.Config: javolution.util.FastMap NORMAL_ARMOR_ENCHANT_LEVEL
com.l2jfrozen.gameserver.config.Config: javolution.util.FastMap BLESS_ARMOR_ENCHANT_LEVEL
com.l2jfrozen.gameserver.config.Config: javolution.util.FastMap CRYSTAL_ARMOR_ENCHANT_LEVEL
com.l2jfrozen.gameserver.config.Config: javolution.util.FastMap NORMAL_JEWELRY_ENCHANT_LEVEL
com.l2jfrozen.gameserver.config.Config: javolution.util.FastMap BLESS_JEWELRY_ENCHANT_LEVEL
com.l2jfrozen.gameserver.config.Config: javolution.util.FastMap CRYSTAL_JEWELRY_ENCHANT_LEVEL
com.l2jfrozen.gameserver.config.Config: int ENCHANT_SAFE_MAX
com.l2jfrozen.gameserver.config.Config: int ENCHANT_SAFE_MAX_FULL
com.l2jfrozen.gameserver.config.Config: int ENCHANT_WEAPON_MAX
com.l2jfrozen.gameserver.config.Config: int ENCHANT_ARMOR_MAX
com.l2jfrozen.gameserver.config.Config: int ENCHANT_JEWELRY_MAX
com.l2jfrozen.gameserver.config.Config: int CRYSTAL_ENCHANT_MAX
com.l2jfrozen.gameserver.config.Config: int CRYSTAL_ENCHANT_MIN
com.l2jfrozen.gameserver.config.Config: boolean ENABLE_DWARF_ENCHANT_BONUS
com.l2jfrozen.gameserver.config.Config: int DWARF_ENCHANT_MIN_LEVEL
com.l2jfrozen.gameserver.config.Config: int DWARF_ENCHANT_BONUS
com.l2jfrozen.gameserver.config.Config: int AUGMENTATION_NG_SKILL_CHANCE
com.l2jfrozen.gameserver.config.Config: int AUGMENTATION_MID_SKILL_CHANCE
com.l2jfrozen.gameserver.config.Config: int AUGMENTATION_HIGH_SKILL_CHANCE
com.l2jfrozen.gameserver.config.Config: int AUGMENTATION_TOP_SKILL_CHANCE
com.l2jfrozen.gameserver.config.Config: int AUGMENTATION_BASESTAT_CHANCE
com.l2jfrozen.gameserver.config.Config: int AUGMENTATION_NG_GLOW_CHANCE
com.l2jfrozen.gameserver.config.Config: int AUGMENTATION_MID_GLOW_CHANCE
com.l2jfrozen.gameserver.config.Config: int AUGMENTATION_HIGH_GLOW_CHANCE
com.l2jfrozen.gameserver.config.Config: int AUGMENTATION_TOP_GLOW_CHANCE
com.l2jfrozen.gameserver.config.Config: boolean DELETE_AUGM_PASSIVE_ON_CHANGE
com.l2jfrozen.gameserver.config.Config: boolean DELETE_AUGM_ACTIVE_ON_CHANGE
com.l2jfrozen.gameserver.config.Config: boolean ENCHANT_HERO_WEAPON
com.l2jfrozen.gameserver.config.Config: int SOUL_CRYSTAL_BREAK_CHANCE
com.l2jfrozen.gameserver.config.Config: int SOUL_CRYSTAL_LEVEL_CHANCE
com.l2jfrozen.gameserver.config.Config: int SOUL_CRYSTAL_MAX_LEVEL
com.l2jfrozen.gameserver.config.Config: int CUSTOM_ENCHANT_VALUE
com.l2jfrozen.gameserver.config.Config: int ALT_OLY_ENCHANT_LIMIT
com.l2jfrozen.gameserver.config.Config: int BREAK_ENCHANT
com.l2jfrozen.gameserver.config.Config: int GM_OVER_ENCHANT
com.l2jfrozen.gameserver.config.Config: int MAX_ITEM_ENCHANT_KICK
com.l2jfrozen.gameserver.config.Config: com.l2jfrozen.gameserver.config.FloodProtectorConfig FLOOD_PROTECTOR_USE_ITEM
com.l2jfrozen.gameserver.config.Config: com.l2jfrozen.gameserver.config.FloodProtectorConfig FLOOD_PROTECTOR_ROLL_DICE
com.l2jfrozen.gameserver.config.Config: com.l2jfrozen.gameserver.config.FloodProtectorConfig FLOOD_PROTECTOR_FIREWORK
com.l2jfrozen.gameserver.config.Config: com.l2jfrozen.gameserver.config.FloodProtectorConfig FLOOD_PROTECTOR_ITEM_PET_SUMMON
com.l2jfrozen.gameserver.config.Config: com.l2jfrozen.gameserver.config.FloodProtectorConfig FLOOD_PROTECTOR_HERO_VOICE
com.l2jfrozen.gameserver.config.Config: com.l2jfrozen.gameserver.config.FloodProtectorConfig FLOOD_PROTECTOR_GLOBAL_CHAT
com.l2jfrozen.gameserver.config.Config: com.l2jfrozen.gameserver.config.FloodProtectorConfig FLOOD_PROTECTOR_SUBCLASS
com.l2jfrozen.gameserver.config.Config: com.l2jfrozen.gameserver.config.FloodProtectorConfig FLOOD_PROTECTOR_DROP_ITEM
com.l2jfrozen.gameserver.config.Config: com.l2jfrozen.gameserver.config.FloodProtectorConfig FLOOD_PROTECTOR_AUGMENT_SCRIPT
com.l2jfrozen.gameserver.config.Config: com.l2jfrozen.gameserver.config.FloodProtectorConfig FLOOD_PROTECTOR_ENCHANT_ITEM
com.l2jfrozen.gameserver.config.Config: com.l2jfrozen.gameserver.config.FloodProtectorConfig FLOOD_PROTECTOR_SERVER_BYPASS
com.l2jfrozen.gameserver.config.Config: com.l2jfrozen.gameserver.config.FloodProtectorConfig FLOOD_PROTECTOR_MULTISELL
com.l2jfrozen.gameserver.config.Config: com.l2jfrozen.gameserver.config.FloodProtectorConfig FLOOD_PROTECTOR_TRANSACTION
com.l2jfrozen.gameserver.config.Config: com.l2jfrozen.gameserver.config.FloodProtectorConfig FLOOD_PROTECTOR_MANUFACTURE
com.l2jfrozen.gameserver.config.Config: com.l2jfrozen.gameserver.config.FloodProtectorConfig FLOOD_PROTECTOR_MANOR
com.l2jfrozen.gameserver.config.Config: com.l2jfrozen.gameserver.config.FloodProtectorConfig FLOOD_PROTECTOR_CHARACTER_SELECT
com.l2jfrozen.gameserver.config.Config: com.l2jfrozen.gameserver.config.FloodProtectorConfig FLOOD_PROTECTOR_UNKNOWN_PACKETS
com.l2jfrozen.gameserver.config.Config: com.l2jfrozen.gameserver.config.FloodProtectorConfig FLOOD_PROTECTOR_PARTY_INVITATION
com.l2jfrozen.gameserver.config.Config: com.l2jfrozen.gameserver.config.FloodProtectorConfig FLOOD_PROTECTOR_SAY_ACTION
com.l2jfrozen.gameserver.config.Config: com.l2jfrozen.gameserver.config.FloodProtectorConfig FLOOD_PROTECTOR_MOVE_ACTION
com.l2jfrozen.gameserver.config.Config: com.l2jfrozen.gameserver.config.FloodProtectorConfig FLOOD_PROTECTOR_GENERIC_ACTION
com.l2jfrozen.gameserver.config.Config: com.l2jfrozen.gameserver.config.FloodProtectorConfig FLOOD_PROTECTOR_MACRO
com.l2jfrozen.gameserver.config.Config: com.l2jfrozen.gameserver.config.FloodProtectorConfig FLOOD_PROTECTOR_POTION
com.l2jfrozen.gameserver.config.Config: boolean ENABLE_UNK_PACKET_PROTECTION
com.l2jfrozen.gameserver.config.Config: int MAX_UNKNOWN_PACKETS
com.l2jfrozen.gameserver.config.Config: int UNKNOWN_PACKETS_PUNiSHMENT
com.l2jfrozen.gameserver.config.Config: boolean DEBUG_UNKNOWN_PACKETS
com.l2jfrozen.gameserver.config.Config: boolean DEBUG_PACKETS
com.l2jfrozen.gameserver.config.Config: boolean CHECK_SKILLS_ON_ENTER
com.l2jfrozen.gameserver.config.Config: boolean CHECK_NAME_ON_LOGIN
com.l2jfrozen.gameserver.config.Config: boolean L2WALKER_PROTEC
com.l2jfrozen.gameserver.config.Config: boolean PROTECTED_ENCHANT
com.l2jfrozen.gameserver.config.Config: boolean ONLY_GM_ITEMS_FREE
com.l2jfrozen.gameserver.config.Config: boolean ONLY_GM_TELEPORT_FREE
com.l2jfrozen.gameserver.config.Config: boolean BOT_PROTECTOR
com.l2jfrozen.gameserver.config.Config: int BOT_PROTECTOR_FIRST_CHECK
com.l2jfrozen.gameserver.config.Config: int BOT_PROTECTOR_NEXT_CHECK
com.l2jfrozen.gameserver.config.Config: int BOT_PROTECTOR_WAIT_ANSVER
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_DUALBOX
com.l2jfrozen.gameserver.config.Config: int ALLOWED_BOXES
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_DUALBOX_OLY
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_DUALBOX_EVENT
com.l2jfrozen.gameserver.config.Config: java.lang.String USER
com.l2jfrozen.gameserver.config.Config: int KEY
com.l2jfrozen.gameserver.config.Config: int BLOW_ATTACK_FRONT
com.l2jfrozen.gameserver.config.Config: int BLOW_ATTACK_SIDE
com.l2jfrozen.gameserver.config.Config: int BLOW_ATTACK_BEHIND
com.l2jfrozen.gameserver.config.Config: int BACKSTAB_ATTACK_FRONT
com.l2jfrozen.gameserver.config.Config: int BACKSTAB_ATTACK_SIDE
com.l2jfrozen.gameserver.config.Config: int BACKSTAB_ATTACK_BEHIND
com.l2jfrozen.gameserver.config.Config: int MAX_PATK_SPEED
com.l2jfrozen.gameserver.config.Config: int MAX_MATK_SPEED
com.l2jfrozen.gameserver.config.Config: int MAX_PCRIT_RATE
com.l2jfrozen.gameserver.config.Config: int MAX_MCRIT_RATE
com.l2jfrozen.gameserver.config.Config: float MCRIT_RATE_MUL
com.l2jfrozen.gameserver.config.Config: int RUN_SPD_BOOST
com.l2jfrozen.gameserver.config.Config: int MAX_RUN_SPEED
com.l2jfrozen.gameserver.config.Config: float ALT_MAGES_PHYSICAL_DAMAGE_MULTI
com.l2jfrozen.gameserver.config.Config: float ALT_MAGES_MAGICAL_DAMAGE_MULTI
com.l2jfrozen.gameserver.config.Config: float ALT_FIGHTERS_PHYSICAL_DAMAGE_MULTI
com.l2jfrozen.gameserver.config.Config: float ALT_FIGHTERS_MAGICAL_DAMAGE_MULTI
com.l2jfrozen.gameserver.config.Config: float ALT_PETS_PHYSICAL_DAMAGE_MULTI
com.l2jfrozen.gameserver.config.Config: float ALT_PETS_MAGICAL_DAMAGE_MULTI
com.l2jfrozen.gameserver.config.Config: float ALT_NPC_PHYSICAL_DAMAGE_MULTI
com.l2jfrozen.gameserver.config.Config: float ALT_NPC_MAGICAL_DAMAGE_MULTI
com.l2jfrozen.gameserver.config.Config: float ALT_DAGGER_DMG_VS_HEAVY
com.l2jfrozen.gameserver.config.Config: float ALT_DAGGER_DMG_VS_ROBE
com.l2jfrozen.gameserver.config.Config: float ALT_DAGGER_DMG_VS_LIGHT
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_RAID_LETHAL
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_LETHAL_PROTECTION_MOBS
com.l2jfrozen.gameserver.config.Config: java.lang.String LETHAL_PROTECTED_MOBS
com.l2jfrozen.gameserver.config.Config: javolution.util.FastList LIST_LETHAL_PROTECTED_MOBS
com.l2jfrozen.gameserver.config.Config: float MAGIC_CRITICAL_POWER
com.l2jfrozen.gameserver.config.Config: float STUN_CHANCE_MODIFIER
com.l2jfrozen.gameserver.config.Config: float BLEED_CHANCE_MODIFIER
com.l2jfrozen.gameserver.config.Config: float POISON_CHANCE_MODIFIER
com.l2jfrozen.gameserver.config.Config: float PARALYZE_CHANCE_MODIFIER
com.l2jfrozen.gameserver.config.Config: float ROOT_CHANCE_MODIFIER
com.l2jfrozen.gameserver.config.Config: float SLEEP_CHANCE_MODIFIER
com.l2jfrozen.gameserver.config.Config: float FEAR_CHANCE_MODIFIER
com.l2jfrozen.gameserver.config.Config: float CONFUSION_CHANCE_MODIFIER
com.l2jfrozen.gameserver.config.Config: float DEBUFF_CHANCE_MODIFIER
com.l2jfrozen.gameserver.config.Config: float BUFF_CHANCE_MODIFIER
com.l2jfrozen.gameserver.config.Config: boolean SEND_SKILLS_CHANCE_TO_PLAYERS
com.l2jfrozen.gameserver.config.Config: boolean REMOVE_WEAPON_SUBCLASS
com.l2jfrozen.gameserver.config.Config: boolean REMOVE_CHEST_SUBCLASS
com.l2jfrozen.gameserver.config.Config: boolean REMOVE_LEG_SUBCLASS
com.l2jfrozen.gameserver.config.Config: boolean ENABLE_CLASS_DAMAGES
com.l2jfrozen.gameserver.config.Config: boolean ENABLE_CLASS_DAMAGES_IN_OLY
com.l2jfrozen.gameserver.config.Config: boolean ENABLE_CLASS_DAMAGES_LOGGER
com.l2jfrozen.gameserver.config.Config: boolean LEAVE_BUFFS_ON_DIE
com.l2jfrozen.gameserver.config.Config: boolean ALT_RAIDS_STATS_BONUS
com.l2jfrozen.gameserver.config.Config: int GEODATA
com.l2jfrozen.gameserver.config.Config: boolean GEODATA_CELLFINDING
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_PLAYERS_PATHNODE
com.l2jfrozen.gameserver.config.Config: boolean FORCE_GEODATA
com.l2jfrozen.gameserver.config.Config: com.l2jfrozen.gameserver.config.CorrectSpawnsZ GEO_CORRECT_Z
com.l2jfrozen.gameserver.config.Config: boolean ACCEPT_GEOEDITOR_CONN
com.l2jfrozen.gameserver.config.Config: int GEOEDITOR_PORT
com.l2jfrozen.gameserver.config.Config: int WORLD_SIZE_MIN_X
com.l2jfrozen.gameserver.config.Config: int WORLD_SIZE_MAX_X
com.l2jfrozen.gameserver.config.Config: int WORLD_SIZE_MIN_Y
com.l2jfrozen.gameserver.config.Config: int WORLD_SIZE_MAX_Y
com.l2jfrozen.gameserver.config.Config: int WORLD_SIZE_MIN_Z
com.l2jfrozen.gameserver.config.Config: int WORLD_SIZE_MAX_Z
com.l2jfrozen.gameserver.config.Config: int COORD_SYNCHRONIZE
com.l2jfrozen.gameserver.config.Config: boolean FALL_DAMAGE
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_WATER
com.l2jfrozen.gameserver.config.Config: int RBLOCKRAGE
com.l2jfrozen.gameserver.config.Config: boolean PLAYERS_CAN_HEAL_RB
com.l2jfrozen.gameserver.config.Config: java.util.HashMap RBS_SPECIFIC_LOCK_RAGE
com.l2jfrozen.gameserver.config.Config: boolean ALLOW_DIRECT_TP_TO_BOSS_ROOM
com.l2jfrozen.gameserver.config.Config: boolean ANTHARAS_OLD
com.l2jfrozen.gameserver.config.Config: int ANTHARAS_CLOSE
com.l2jfrozen.gameserver.config.Config: int ANTHARAS_DESPAWN_TIME
com.l2jfrozen.gameserver.config.Config: int ANTHARAS_RESP_FIRST
com.l2jfrozen.gameserver.config.Config: int ANTHARAS_RESP_SECOND
com.l2jfrozen.gameserver.config.Config: int ANTHARAS_WAIT_TIME
com.l2jfrozen.gameserver.config.Config: float ANTHARAS_POWER_MULTIPLIER
com.l2jfrozen.gameserver.config.Config: int BAIUM_SLEEP
com.l2jfrozen.gameserver.config.Config: int BAIUM_RESP_FIRST
com.l2jfrozen.gameserver.config.Config: int BAIUM_RESP_SECOND
com.l2jfrozen.gameserver.config.Config: float BAIUM_POWER_MULTIPLIER
com.l2jfrozen.gameserver.config.Config: int CORE_RESP_MINION
com.l2jfrozen.gameserver.config.Config: int CORE_RESP_FIRST
com.l2jfrozen.gameserver.config.Config: int CORE_RESP_SECOND
com.l2jfrozen.gameserver.config.Config: int CORE_LEVEL
com.l2jfrozen.gameserver.config.Config: int CORE_RING_CHANCE
com.l2jfrozen.gameserver.config.Config: float CORE_POWER_MULTIPLIER
com.l2jfrozen.gameserver.config.Config: int QA_RESP_NURSE
com.l2jfrozen.gameserver.config.Config: int QA_RESP_ROYAL
com.l2jfrozen.gameserver.config.Config: int QA_RESP_FIRST
com.l2jfrozen.gameserver.config.Config: int QA_RESP_SECOND
com.l2jfrozen.gameserver.config.Config: int QA_LEVEL
com.l2jfrozen.gameserver.config.Config: int QA_RING_CHANCE
com.l2jfrozen.gameserver.config.Config: float QA_POWER_MULTIPLIER
com.l2jfrozen.gameserver.config.Config: float LEVEL_DIFF_MULTIPLIER_MINION
com.l2jfrozen.gameserver.config.Config: int HPH_FIXINTERVALOFHALTER
com.l2jfrozen.gameserver.config.Config: int HPH_RANDOMINTERVALOFHALTER
com.l2jfrozen.gameserver.config.Config: int HPH_APPTIMEOFHALTER
com.l2jfrozen.gameserver.config.Config: int HPH_ACTIVITYTIMEOFHALTER
com.l2jfrozen.gameserver.config.Config: int HPH_FIGHTTIMEOFHALTER
com.l2jfrozen.gameserver.config.Config: int HPH_CALLROYALGUARDHELPERCOUNT
com.l2jfrozen.gameserver.config.Config: int HPH_CALLROYALGUARDHELPERINTERVAL
com.l2jfrozen.gameserver.config.Config: int HPH_INTERVALOFDOOROFALTER
com.l2jfrozen.gameserver.config.Config: int HPH_TIMEOFLOCKUPDOOROFALTAR
com.l2jfrozen.gameserver.config.Config: int ZAKEN_RESP_FIRST
com.l2jfrozen.gameserver.config.Config: int ZAKEN_RESP_SECOND
com.l2jfrozen.gameserver.config.Config: int ZAKEN_LEVEL
com.l2jfrozen.gameserver.config.Config: int ZAKEN_EARRING_CHANCE
com.l2jfrozen.gameserver.config.Config: float ZAKEN_POWER_MULTIPLIER
com.l2jfrozen.gameserver.config.Config: int ORFEN_RESP_FIRST
com.l2jfrozen.gameserver.config.Config: int ORFEN_RESP_SECOND
com.l2jfrozen.gameserver.config.Config: int ORFEN_LEVEL
com.l2jfrozen.gameserver.config.Config: int ORFEN_EARRING_CHANCE
com.l2jfrozen.gameserver.config.Config: float ORFEN_POWER_MULTIPLIER
com.l2jfrozen.gameserver.config.Config: int VALAKAS_RESP_FIRST
com.l2jfrozen.gameserver.config.Config: int VALAKAS_RESP_SECOND
com.l2jfrozen.gameserver.config.Config: int VALAKAS_WAIT_TIME
com.l2jfrozen.gameserver.config.Config: int VALAKAS_DESPAWN_TIME
com.l2jfrozen.gameserver.config.Config: float VALAKAS_POWER_MULTIPLIER
com.l2jfrozen.gameserver.config.Config: int FRINTEZZA_RESP_FIRST
com.l2jfrozen.gameserver.config.Config: int FRINTEZZA_RESP_SECOND
com.l2jfrozen.gameserver.config.Config: float FRINTEZZA_POWER_MULTIPLIER
com.l2jfrozen.gameserver.config.Config: boolean BYPASS_FRINTEZZA_PARTIES_CHECK
com.l2jfrozen.gameserver.config.Config: int FRINTEZZA_MIN_PARTIES
com.l2jfrozen.gameserver.config.Config: int FRINTEZZA_MAX_PARTIES
com.l2jfrozen.gameserver.config.Config: java.lang.String RAID_INFO_IDS
com.l2jfrozen.gameserver.config.Config: javolution.util.FastList RAID_INFO_IDS_LIST
com.l2jfrozen.gameserver.config.Config: boolean SCRIPT_DEBUG
com.l2jfrozen.gameserver.config.Config: boolean SCRIPT_ALLOW_COMPILATION
com.l2jfrozen.gameserver.config.Config: boolean SCRIPT_CACHE
com.l2jfrozen.gameserver.config.Config: boolean SCRIPT_ERROR_LOG
com.l2jfrozen.gameserver.config.Config: boolean POWERPAK_ENABLED
com.l2jfrozen.gameserver.config.Config: java.util.Map EXTENDERS
com.l2jfrozen.gameserver.config.Config: long AUTOSAVE_INITIAL_TIME
com.l2jfrozen.gameserver.config.Config: long AUTOSAVE_DELAY_TIME
com.l2jfrozen.gameserver.config.Config: long CHECK_CONNECTION_INACTIVITY_TIME
com.l2jfrozen.gameserver.config.Config: long CHECK_CONNECTION_INITIAL_TIME
com.l2jfrozen.gameserver.config.Config: long CHECK_CONNECTION_DELAY_TIME
com.l2jfrozen.gameserver.config.Config: long CLEANDB_INITIAL_TIME
com.l2jfrozen.gameserver.config.Config: long CLEANDB_DELAY_TIME
com.l2jfrozen.gameserver.config.Config: long CHECK_TELEPORT_ZOMBIE_DELAY_TIME
com.l2jfrozen.gameserver.config.Config: long DEADLOCKCHECK_INTIAL_TIME
com.l2jfrozen.gameserver.config.Config: long DEADLOCKCHECK_DELAY_TIME
com.l2jfrozen.gameserver.config.Config: boolean AUTOSAVEMANAGER_LOG
com.l2jfrozen.gameserver.config.Config: java.util.ArrayList QUESTION_LIST
com.l2jfrozen.gameserver.config.Config: java.lang.String HEXID_FILE
com.l2jfrozen.gameserver.config.Config: boolean ENABLE_OLYMPIAD_DISCONNECTION_DEBUG
com.l2jfrozen.gameserver.config.Config: int SERVER_ID
com.l2jfrozen.gameserver.config.Config: byte[] HEX_ID
com.l2jfrozen.gameserver.config.Config: Config()
com.l2jfrozen.gameserver.config.Config: void loadAccessConfig()
com.l2jfrozen.gameserver.config.Config: void loadOptionsConfig()
com.l2jfrozen.gameserver.config.Config: void loadServerConfig()
com.l2jfrozen.gameserver.config.Config: int getServerTypeId(java.lang.String[])
com.l2jfrozen.gameserver.config.Config: void loadServerVersionConfig()
com.l2jfrozen.gameserver.config.Config: void loadDPVersionConfig()
com.l2jfrozen.gameserver.config.Config: void loadIdFactoryConfig()
com.l2jfrozen.gameserver.config.Config: void loadOtherConfig()
com.l2jfrozen.gameserver.config.Config: void loadRatesConfig()
com.l2jfrozen.gameserver.config.Config: void loadAltConfig()
com.l2jfrozen.gameserver.config.Config: void load7sConfig()
com.l2jfrozen.gameserver.config.Config: void loadCHConfig()
com.l2jfrozen.gameserver.config.Config: void loadElitCHConfig()
com.l2jfrozen.gameserver.config.Config: void loadChampionConfig()
com.l2jfrozen.gameserver.config.Config: void loadWeddingConfig()
com.l2jfrozen.gameserver.config.Config: void loadTVTConfig()
com.l2jfrozen.gameserver.config.Config: void loadTWConfig()
com.l2jfrozen.gameserver.config.Config: void loadREBIRTHConfig()
com.l2jfrozen.gameserver.config.Config: void loadPCBPointConfig()
com.l2jfrozen.gameserver.config.Config: void loadDevConfig()
com.l2jfrozen.gameserver.config.Config: void loadCraftConfig()
com.l2jfrozen.gameserver.config.Config: void loadAWAYConfig()
com.l2jfrozen.gameserver.config.Config: void loadFakePlayerConfig()
com.l2jfrozen.gameserver.config.Config: void loadBankingConfig()
com.l2jfrozen.gameserver.config.Config: void loadOfflineConfig()
com.l2jfrozen.gameserver.config.Config: void loadDMConfig()
com.l2jfrozen.gameserver.config.Config: void loadCTFConfig()
com.l2jfrozen.gameserver.config.Config: void loadL2JFrozenConfig()
com.l2jfrozen.gameserver.config.Config: void loadPvpConfig()
com.l2jfrozen.gameserver.config.Config: void loadOlympConfig()
com.l2jfrozen.gameserver.config.Config: void loadEnchantConfig()
com.l2jfrozen.gameserver.config.Config: void loadFloodConfig()
com.l2jfrozen.gameserver.config.Config: void loadFloodProtectorConfigs(com.l2jfrozen.common.L2Properties)
com.l2jfrozen.gameserver.config.Config: void loadFloodProtectorConfig(com.l2jfrozen.common.L2Properties,com.l2jfrozen.gameserver.config.FloodProtectorConfig,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.config.Config: void loadPacketConfig()
com.l2jfrozen.gameserver.config.Config: void loadPOtherConfig()
com.l2jfrozen.gameserver.config.Config: void loadKeyOptions()
com.l2jfrozen.gameserver.config.Config: void loadPHYSICSConfig()
com.l2jfrozen.gameserver.config.Config: void loadgeodataConfig()
com.l2jfrozen.gameserver.config.Config: void loadBossConfig()
com.l2jfrozen.gameserver.config.Config: void loadScriptConfig()
com.l2jfrozen.gameserver.config.Config: void loadPowerPak()
com.l2jfrozen.gameserver.config.Config: void loadDaemonsConf()
com.l2jfrozen.gameserver.config.Config: void loadFilter()
com.l2jfrozen.gameserver.config.Config: void loadQuestion()
com.l2jfrozen.gameserver.config.Config: void loadHexed()
com.l2jfrozen.gameserver.config.Config: void load()
com.l2jfrozen.gameserver.config.Config: boolean setParameterValue(java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.config.Config: void unallocateFilterBuffer()
com.l2jfrozen.gameserver.config.Config: void <clinit>()
com.l2jfrozen.gameserver.config.CorrectSpawnsZ
com.l2jfrozen.gameserver.config.CorrectSpawnsZ: com.l2jfrozen.gameserver.config.CorrectSpawnsZ TOWN
com.l2jfrozen.gameserver.config.CorrectSpawnsZ: com.l2jfrozen.gameserver.config.CorrectSpawnsZ MONSTER
com.l2jfrozen.gameserver.config.CorrectSpawnsZ: com.l2jfrozen.gameserver.config.CorrectSpawnsZ ALL
com.l2jfrozen.gameserver.config.CorrectSpawnsZ: com.l2jfrozen.gameserver.config.CorrectSpawnsZ NONE
com.l2jfrozen.gameserver.config.CorrectSpawnsZ: com.l2jfrozen.gameserver.config.CorrectSpawnsZ[] $VALUES
com.l2jfrozen.gameserver.config.CorrectSpawnsZ: com.l2jfrozen.gameserver.config.CorrectSpawnsZ[] values()
com.l2jfrozen.gameserver.config.CorrectSpawnsZ: com.l2jfrozen.gameserver.config.CorrectSpawnsZ valueOf(java.lang.String)
com.l2jfrozen.gameserver.config.CorrectSpawnsZ: CorrectSpawnsZ(java.lang.String,int)
com.l2jfrozen.gameserver.config.CorrectSpawnsZ: void <clinit>()
com.l2jfrozen.gameserver.config.FService
com.l2jfrozen.gameserver.config.FService: java.lang.String ID_CONFIG_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String EXTENDER_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String SCRIPT_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String DAEMONS_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String PROTECT_KEY_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String FILTER_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String QUESTION_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String HEXID_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String ALT_SETTINGS_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String CLANHALL_CONFIG_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String ENCHANT_CONFIG_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String FORTSIEGE_CONFIGURATION_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String GEODATA_CONFIG_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String OLYMP_CONFIG_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String OPTIONS_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String OTHER_CONFIG_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String RATES_CONFIG_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String SEVENSIGNS_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String SIEGE_CONFIGURATION_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String ELIT_CLANHALL_CONFIG_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String BOSS_CONFIG_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String ACCESS_CONFIGURATION_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String CRAFTING
com.l2jfrozen.gameserver.config.FService: java.lang.String DEVELOPER
com.l2jfrozen.gameserver.config.FService: java.lang.String L2JFROZEN_CONFIG_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String PHYSICS_CONFIGURATION_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String PVP_CONFIG_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String POWERPAK_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String CLASS_DAMAGES_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String PROTECT_FLOOD_CONFIG_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String PROTECT_OTHER_CONFIG_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String PROTECT_PACKET_CONFIG_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String EVENT_CTF_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String EVENT_DM_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String EVENT_TVT_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String EVENT_TW_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String EVENT_MANAGER_CONFIGURATION_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String AWAY_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String BANK_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String EVENT_CHAMPION_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String EVENT_REBIRTH_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String EVENT_WEDDING_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String EVENT_PC_BANG_POINT_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String OFFLINE_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String FAKE_PLAYERS_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String CONFIGURATION_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String IP_CONFIG
com.l2jfrozen.gameserver.config.FService: java.lang.String SERVER_VERSION_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String DATAPACK_VERSION_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String OLYMPIAD_DATA_FILE
com.l2jfrozen.gameserver.config.FService: java.lang.String POWERPACK_CONFIG_FILE
com.l2jfrozen.gameserver.config.FService: FService()
com.l2jfrozen.gameserver.config.FloodProtectorConfig
com.l2jfrozen.gameserver.config.FloodProtectorConfig: java.lang.String FLOOD_PROTECTOR_TYPE
com.l2jfrozen.gameserver.config.FloodProtectorConfig: float FLOOD_PROTECTION_INTERVAL
com.l2jfrozen.gameserver.config.FloodProtectorConfig: boolean LOG_FLOODING
com.l2jfrozen.gameserver.config.FloodProtectorConfig: int PUNISHMENT_LIMIT
com.l2jfrozen.gameserver.config.FloodProtectorConfig: java.lang.String PUNISHMENT_TYPE
com.l2jfrozen.gameserver.config.FloodProtectorConfig: int PUNISHMENT_TIME
com.l2jfrozen.gameserver.config.FloodProtectorConfig: boolean ALTERNATIVE_METHOD
com.l2jfrozen.gameserver.config.FloodProtectorConfig: FloodProtectorConfig(java.lang.String)
com.l2jfrozen.gameserver.config.FloodProtectorConfig: FloodProtectorConfig(java.lang.String,boolean)
com.l2jfrozen.gameserver.config.IPConfigData
com.l2jfrozen.gameserver.config.IPConfigData: java.util.List _subnets
com.l2jfrozen.gameserver.config.IPConfigData: java.util.List _hosts
com.l2jfrozen.gameserver.config.IPConfigData: java.lang.String configFile
com.l2jfrozen.gameserver.config.IPConfigData: IPConfigData(java.lang.String)
com.l2jfrozen.gameserver.config.IPConfigData: void load()
com.l2jfrozen.gameserver.config.IPConfigData: void parseDocument(org.w3c.dom.Document)
com.l2jfrozen.gameserver.config.IPConfigData: void autoIpConfig()
com.l2jfrozen.gameserver.config.IPConfigData: java.util.List getSubnets()
com.l2jfrozen.gameserver.config.IPConfigData: java.util.List getHosts()
com.l2jfrozen.gameserver.config.IPConfigData: int lambda$autoIpConfig$1(int,int)
com.l2jfrozen.gameserver.config.IPConfigData: int lambda$autoIpConfig$0(int,int)
com.l2jfrozen.gameserver.config.IPConfigData: void <clinit>()
com.l2jfrozen.gameserver.config.IdFactoryType
com.l2jfrozen.gameserver.config.IdFactoryType: com.l2jfrozen.gameserver.config.IdFactoryType Compaction
com.l2jfrozen.gameserver.config.IdFactoryType: com.l2jfrozen.gameserver.config.IdFactoryType BitSet
com.l2jfrozen.gameserver.config.IdFactoryType: com.l2jfrozen.gameserver.config.IdFactoryType Stack
com.l2jfrozen.gameserver.config.IdFactoryType: com.l2jfrozen.gameserver.config.IdFactoryType[] $VALUES
com.l2jfrozen.gameserver.config.IdFactoryType: com.l2jfrozen.gameserver.config.IdFactoryType[] values()
com.l2jfrozen.gameserver.config.IdFactoryType: com.l2jfrozen.gameserver.config.IdFactoryType valueOf(java.lang.String)
com.l2jfrozen.gameserver.config.IdFactoryType: IdFactoryType(java.lang.String,int)
com.l2jfrozen.gameserver.config.IdFactoryType: void <clinit>()
com.l2jfrozen.gameserver.config.ObjectMapType
com.l2jfrozen.gameserver.config.ObjectMapType: com.l2jfrozen.gameserver.config.ObjectMapType WorldObjectTree
com.l2jfrozen.gameserver.config.ObjectMapType: com.l2jfrozen.gameserver.config.ObjectMapType WorldObjectMap
com.l2jfrozen.gameserver.config.ObjectMapType: com.l2jfrozen.gameserver.config.ObjectMapType[] $VALUES
com.l2jfrozen.gameserver.config.ObjectMapType: com.l2jfrozen.gameserver.config.ObjectMapType[] values()
com.l2jfrozen.gameserver.config.ObjectMapType: com.l2jfrozen.gameserver.config.ObjectMapType valueOf(java.lang.String)
com.l2jfrozen.gameserver.config.ObjectMapType: ObjectMapType(java.lang.String,int)
com.l2jfrozen.gameserver.config.ObjectMapType: void <clinit>()
com.l2jfrozen.gameserver.config.ObjectSetType
com.l2jfrozen.gameserver.config.ObjectSetType: com.l2jfrozen.gameserver.config.ObjectSetType L2ObjectHashSet
com.l2jfrozen.gameserver.config.ObjectSetType: com.l2jfrozen.gameserver.config.ObjectSetType WorldObjectSet
com.l2jfrozen.gameserver.config.ObjectSetType: com.l2jfrozen.gameserver.config.ObjectSetType[] $VALUES
com.l2jfrozen.gameserver.config.ObjectSetType: com.l2jfrozen.gameserver.config.ObjectSetType[] values()
com.l2jfrozen.gameserver.config.ObjectSetType: com.l2jfrozen.gameserver.config.ObjectSetType valueOf(java.lang.String)
com.l2jfrozen.gameserver.config.ObjectSetType: ObjectSetType(java.lang.String,int)
com.l2jfrozen.gameserver.config.ObjectSetType: void <clinit>()
com.l2jfrozen.gameserver.controllers.GameTimeController
com.l2jfrozen.gameserver.controllers.GameTimeController: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.controllers.GameTimeController: int TICKS_PER_SECOND
com.l2jfrozen.gameserver.controllers.GameTimeController: int MILLIS_IN_TICK
com.l2jfrozen.gameserver.controllers.GameTimeController: com.l2jfrozen.gameserver.controllers.GameTimeController _instance
com.l2jfrozen.gameserver.controllers.GameTimeController: int _gameTicks
com.l2jfrozen.gameserver.controllers.GameTimeController: long _gameStartTime
com.l2jfrozen.gameserver.controllers.GameTimeController: boolean _isNight
com.l2jfrozen.gameserver.controllers.GameTimeController: java.util.List _movingObjects
com.l2jfrozen.gameserver.controllers.GameTimeController: com.l2jfrozen.gameserver.controllers.GameTimeController$TimerThread _timer
com.l2jfrozen.gameserver.controllers.GameTimeController: java.util.concurrent.ScheduledFuture _timerWatcher
com.l2jfrozen.gameserver.controllers.GameTimeController: com.l2jfrozen.gameserver.controllers.GameTimeController getInstance()
com.l2jfrozen.gameserver.controllers.GameTimeController: GameTimeController()
com.l2jfrozen.gameserver.controllers.GameTimeController: boolean isNowNight()
com.l2jfrozen.gameserver.controllers.GameTimeController: int getGameTime()
com.l2jfrozen.gameserver.controllers.GameTimeController: int getGameTicks()
com.l2jfrozen.gameserver.controllers.GameTimeController: void registerMovingObject(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.controllers.GameTimeController: void moveObjects()
com.l2jfrozen.gameserver.controllers.GameTimeController: void stopTimer()
com.l2jfrozen.gameserver.controllers.GameTimeController: void <clinit>()
com.l2jfrozen.gameserver.controllers.GameTimeController$BroadcastSunState
com.l2jfrozen.gameserver.controllers.GameTimeController$BroadcastSunState: com.l2jfrozen.gameserver.controllers.GameTimeController this$0
com.l2jfrozen.gameserver.controllers.GameTimeController$BroadcastSunState: GameTimeController$BroadcastSunState(com.l2jfrozen.gameserver.controllers.GameTimeController)
com.l2jfrozen.gameserver.controllers.GameTimeController$BroadcastSunState: void run()
com.l2jfrozen.gameserver.controllers.GameTimeController$MovingObjectArrived
com.l2jfrozen.gameserver.controllers.GameTimeController$MovingObjectArrived: java.util.List _ended
com.l2jfrozen.gameserver.controllers.GameTimeController$MovingObjectArrived: com.l2jfrozen.gameserver.controllers.GameTimeController this$0
com.l2jfrozen.gameserver.controllers.GameTimeController$MovingObjectArrived: GameTimeController$MovingObjectArrived(com.l2jfrozen.gameserver.controllers.GameTimeController,java.util.List)
com.l2jfrozen.gameserver.controllers.GameTimeController$MovingObjectArrived: void run()
com.l2jfrozen.gameserver.controllers.GameTimeController$TimerThread
com.l2jfrozen.gameserver.controllers.GameTimeController$TimerThread: java.lang.Exception _error
com.l2jfrozen.gameserver.controllers.GameTimeController$TimerThread: com.l2jfrozen.gameserver.controllers.GameTimeController this$0
com.l2jfrozen.gameserver.controllers.GameTimeController$TimerThread: GameTimeController$TimerThread(com.l2jfrozen.gameserver.controllers.GameTimeController)
com.l2jfrozen.gameserver.controllers.GameTimeController$TimerThread: void run()
com.l2jfrozen.gameserver.controllers.GameTimeController$TimerWatcher
com.l2jfrozen.gameserver.controllers.GameTimeController$TimerWatcher: com.l2jfrozen.gameserver.controllers.GameTimeController this$0
com.l2jfrozen.gameserver.controllers.GameTimeController$TimerWatcher: GameTimeController$TimerWatcher(com.l2jfrozen.gameserver.controllers.GameTimeController)
com.l2jfrozen.gameserver.controllers.GameTimeController$TimerWatcher: void run()
com.l2jfrozen.gameserver.controllers.RecipeController
com.l2jfrozen.gameserver.controllers.RecipeController: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.controllers.RecipeController: com.l2jfrozen.gameserver.controllers.RecipeController _instance
com.l2jfrozen.gameserver.controllers.RecipeController: java.util.Map _activeMakers
com.l2jfrozen.gameserver.controllers.RecipeController: RecipeController()
com.l2jfrozen.gameserver.controllers.RecipeController: com.l2jfrozen.gameserver.controllers.RecipeController getInstance()
com.l2jfrozen.gameserver.controllers.RecipeController: void requestBookOpen(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.controllers.RecipeController: void requestMakeItemAbort(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.controllers.RecipeController: void requestManufactureItem(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.controllers.RecipeController: void requestMakeItem(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.controllers.RecipeController: com.l2jfrozen.gameserver.model.L2RecipeList getValidRecipeList(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.controllers.RecipeController: void <clinit>()
com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker
com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker: boolean _isValid
com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker: java.util.List _items
com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker: com.l2jfrozen.gameserver.model.L2RecipeList _recipeList
com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _player
com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _target
com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker: com.l2jfrozen.gameserver.model.L2Skill _skill
com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker: int _skillId
com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker: int _skillLevel
com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker: double _creationPasses
com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker: double _manaRequired
com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker: int _price
com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker: int _totalItems
com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker: int _delay
com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker: com.l2jfrozen.gameserver.controllers.RecipeController this$0
com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker: RecipeController$RecipeItemMaker(com.l2jfrozen.gameserver.controllers.RecipeController,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2RecipeList,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker: void run()
com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker: void finishCrafting()
com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker: void updateMakeInfo(boolean)
com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker: void updateCurLoad()
com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker: void updateCurMp()
com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker: void grabSomeItems()
com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker: boolean validateMp()
com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker: java.util.List listItems(boolean)
com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker: void abort()
com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker: void rewardPlayer()
com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker$TempItem
com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker$TempItem: int _itemId
com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker$TempItem: int _quantity
com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker$TempItem: java.lang.String _itemName
com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker$TempItem: com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker this$1
com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker$TempItem: RecipeController$RecipeItemMaker$TempItem(com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance,int)
com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker$TempItem: int getQuantity()
com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker$TempItem: void setQuantity(int)
com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker$TempItem: int getItemId()
com.l2jfrozen.gameserver.controllers.RecipeController$RecipeItemMaker$TempItem: java.lang.String getItemName()
com.l2jfrozen.gameserver.controllers.TradeController
com.l2jfrozen.gameserver.controllers.TradeController: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.controllers.TradeController: com.l2jfrozen.gameserver.controllers.TradeController _instance
com.l2jfrozen.gameserver.controllers.TradeController: int _nextListId
com.l2jfrozen.gameserver.controllers.TradeController: java.util.Map _lists
com.l2jfrozen.gameserver.controllers.TradeController: java.util.Map _listsTaskItem
com.l2jfrozen.gameserver.controllers.TradeController: com.l2jfrozen.gameserver.controllers.TradeController getInstance()
com.l2jfrozen.gameserver.controllers.TradeController: TradeController()
com.l2jfrozen.gameserver.controllers.TradeController: int parseList(java.lang.String)
com.l2jfrozen.gameserver.controllers.TradeController: com.l2jfrozen.gameserver.model.L2TradeList getBuyList(int)
com.l2jfrozen.gameserver.controllers.TradeController: java.util.List getBuyListByNpcId(int)
com.l2jfrozen.gameserver.controllers.TradeController: void restoreCount(int)
com.l2jfrozen.gameserver.controllers.TradeController: void dataTimerSave(int)
com.l2jfrozen.gameserver.controllers.TradeController: void dataCountStore()
com.l2jfrozen.gameserver.controllers.TradeController: int getNextId()
com.l2jfrozen.gameserver.controllers.TradeController: void reload()
com.l2jfrozen.gameserver.controllers.TradeController: void <clinit>()
com.l2jfrozen.gameserver.controllers.TradeController$RestoreCount
com.l2jfrozen.gameserver.controllers.TradeController$RestoreCount: int _timer
com.l2jfrozen.gameserver.controllers.TradeController$RestoreCount: com.l2jfrozen.gameserver.controllers.TradeController this$0
com.l2jfrozen.gameserver.controllers.TradeController$RestoreCount: TradeController$RestoreCount(com.l2jfrozen.gameserver.controllers.TradeController,int)
com.l2jfrozen.gameserver.controllers.TradeController$RestoreCount: void run()
com.l2jfrozen.gameserver.datatables.AccessLevel
com.l2jfrozen.gameserver.datatables.AccessLevel: int _accessLevel
com.l2jfrozen.gameserver.datatables.AccessLevel: java.lang.String _name
com.l2jfrozen.gameserver.datatables.AccessLevel: int _nameColor
com.l2jfrozen.gameserver.datatables.AccessLevel: int _titleColor
com.l2jfrozen.gameserver.datatables.AccessLevel: boolean _isGm
com.l2jfrozen.gameserver.datatables.AccessLevel: boolean _allowPeaceAttack
com.l2jfrozen.gameserver.datatables.AccessLevel: boolean _allowFixedRes
com.l2jfrozen.gameserver.datatables.AccessLevel: boolean _allowTransaction
com.l2jfrozen.gameserver.datatables.AccessLevel: boolean _allowAltG
com.l2jfrozen.gameserver.datatables.AccessLevel: boolean _giveDamage
com.l2jfrozen.gameserver.datatables.AccessLevel: boolean _takeAggro
com.l2jfrozen.gameserver.datatables.AccessLevel: boolean _gainExp
com.l2jfrozen.gameserver.datatables.AccessLevel: boolean _useNameColor
com.l2jfrozen.gameserver.datatables.AccessLevel: boolean _useTitleColor
com.l2jfrozen.gameserver.datatables.AccessLevel: boolean _canDisableGmStatus
com.l2jfrozen.gameserver.datatables.AccessLevel: AccessLevel(int,java.lang.String,int,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean)
com.l2jfrozen.gameserver.datatables.AccessLevel: int getLevel()
com.l2jfrozen.gameserver.datatables.AccessLevel: java.lang.String getName()
com.l2jfrozen.gameserver.datatables.AccessLevel: int getNameColor()
com.l2jfrozen.gameserver.datatables.AccessLevel: int getTitleColor()
com.l2jfrozen.gameserver.datatables.AccessLevel: boolean isGm()
com.l2jfrozen.gameserver.datatables.AccessLevel: boolean allowPeaceAttack()
com.l2jfrozen.gameserver.datatables.AccessLevel: boolean allowFixedRes()
com.l2jfrozen.gameserver.datatables.AccessLevel: boolean allowTransaction()
com.l2jfrozen.gameserver.datatables.AccessLevel: boolean allowAltG()
com.l2jfrozen.gameserver.datatables.AccessLevel: boolean canGiveDamage()
com.l2jfrozen.gameserver.datatables.AccessLevel: boolean canTakeAggro()
com.l2jfrozen.gameserver.datatables.AccessLevel: boolean canGainExp()
com.l2jfrozen.gameserver.datatables.AccessLevel: boolean useNameColor()
com.l2jfrozen.gameserver.datatables.AccessLevel: boolean useTitleColor()
com.l2jfrozen.gameserver.datatables.AccessLevel: boolean canDisableGmStatus()
com.l2jfrozen.gameserver.datatables.BufferSkillsTable
com.l2jfrozen.gameserver.datatables.BufferSkillsTable: com.l2jfrozen.gameserver.datatables.BufferSkillsTable _instance
com.l2jfrozen.gameserver.datatables.BufferSkillsTable: javolution.util.FastMap _bufferSkillsMap
com.l2jfrozen.gameserver.datatables.BufferSkillsTable: javolution.util.FastList _buffTypes
com.l2jfrozen.gameserver.datatables.BufferSkillsTable: javolution.util.FastMap _buffPrizes
com.l2jfrozen.gameserver.datatables.BufferSkillsTable: javolution.util.FastMap _allSkills
com.l2jfrozen.gameserver.datatables.BufferSkillsTable: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.BufferSkillsTable: java.lang.String SQL_LOAD_SKILLS
com.l2jfrozen.gameserver.datatables.BufferSkillsTable: BufferSkillsTable()
com.l2jfrozen.gameserver.datatables.BufferSkillsTable: void load()
com.l2jfrozen.gameserver.datatables.BufferSkillsTable: javolution.util.FastList getSkillsByType(java.lang.String)
com.l2jfrozen.gameserver.datatables.BufferSkillsTable: javolution.util.FastList getSkillsTypeList()
com.l2jfrozen.gameserver.datatables.BufferSkillsTable: int getSkillLevelById(int)
com.l2jfrozen.gameserver.datatables.BufferSkillsTable: int getSkillFee(int)
com.l2jfrozen.gameserver.datatables.BufferSkillsTable: void reload()
com.l2jfrozen.gameserver.datatables.BufferSkillsTable: com.l2jfrozen.gameserver.datatables.BufferSkillsTable getInstance()
com.l2jfrozen.gameserver.datatables.BufferSkillsTable: void <clinit>()
com.l2jfrozen.gameserver.datatables.BufferSkillsTable$SkillInfo
com.l2jfrozen.gameserver.datatables.BufferSkillsTable$SkillInfo: int _skillLevel
com.l2jfrozen.gameserver.datatables.BufferSkillsTable$SkillInfo: java.lang.String _skillType
com.l2jfrozen.gameserver.datatables.BufferSkillsTable$SkillInfo: com.l2jfrozen.gameserver.datatables.BufferSkillsTable this$0
com.l2jfrozen.gameserver.datatables.BufferSkillsTable$SkillInfo: BufferSkillsTable$SkillInfo(com.l2jfrozen.gameserver.datatables.BufferSkillsTable,int,java.lang.String)
com.l2jfrozen.gameserver.datatables.CharSchemesTable
com.l2jfrozen.gameserver.datatables.CharSchemesTable: javolution.util.FastMap _schemesTable
com.l2jfrozen.gameserver.datatables.CharSchemesTable: com.l2jfrozen.gameserver.datatables.CharSchemesTable _instance
com.l2jfrozen.gameserver.datatables.CharSchemesTable: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.CharSchemesTable: java.lang.String SQL_LOAD_SCHEME
com.l2jfrozen.gameserver.datatables.CharSchemesTable: java.lang.String SQL_DELETE_SCHEME
com.l2jfrozen.gameserver.datatables.CharSchemesTable: java.lang.String SQL_INSERT_SCHEME
com.l2jfrozen.gameserver.datatables.CharSchemesTable: CharSchemesTable()
com.l2jfrozen.gameserver.datatables.CharSchemesTable: void loadScheme(int)
com.l2jfrozen.gameserver.datatables.CharSchemesTable: void onPlayerLogin(int)
com.l2jfrozen.gameserver.datatables.CharSchemesTable: void onServerShutdown()
com.l2jfrozen.gameserver.datatables.CharSchemesTable: void clearDB()
com.l2jfrozen.gameserver.datatables.CharSchemesTable: void saveDataToDB()
com.l2jfrozen.gameserver.datatables.CharSchemesTable: javolution.util.FastList getScheme(int,java.lang.String)
com.l2jfrozen.gameserver.datatables.CharSchemesTable: boolean getSchemeContainsSkill(int,java.lang.String,int)
com.l2jfrozen.gameserver.datatables.CharSchemesTable: void setScheme(int,java.lang.String,javolution.util.FastList)
com.l2jfrozen.gameserver.datatables.CharSchemesTable: javolution.util.FastMap getAllSchemes(int)
com.l2jfrozen.gameserver.datatables.CharSchemesTable: javolution.util.FastMap getSchemesTable()
com.l2jfrozen.gameserver.datatables.CharSchemesTable: com.l2jfrozen.gameserver.datatables.CharSchemesTable getInstance()
com.l2jfrozen.gameserver.datatables.CharSchemesTable: void <clinit>()
com.l2jfrozen.gameserver.datatables.CrownTable
com.l2jfrozen.gameserver.datatables.CrownTable: java.util.List _crownList
com.l2jfrozen.gameserver.datatables.CrownTable: CrownTable()
com.l2jfrozen.gameserver.datatables.CrownTable: java.util.List getCrownList()
com.l2jfrozen.gameserver.datatables.CrownTable: int getCrownId(int)
com.l2jfrozen.gameserver.datatables.CrownTable: void <clinit>()
com.l2jfrozen.gameserver.datatables.DesireTable
com.l2jfrozen.gameserver.datatables.DesireTable: com.l2jfrozen.gameserver.datatables.DesireType[] DEFAULT_DESIRES
com.l2jfrozen.gameserver.datatables.DesireTable: java.util.Map _objectDesireTable
com.l2jfrozen.gameserver.datatables.DesireTable: com.l2jfrozen.gameserver.datatables.DesireTable$Desires _generalDesires
com.l2jfrozen.gameserver.datatables.DesireTable: com.l2jfrozen.gameserver.datatables.DesireType[] _desireTypes
com.l2jfrozen.gameserver.datatables.DesireTable: DesireTable(com.l2jfrozen.gameserver.datatables.DesireType[])
com.l2jfrozen.gameserver.datatables.DesireTable: float getDesireValue(com.l2jfrozen.gameserver.datatables.DesireType)
com.l2jfrozen.gameserver.datatables.DesireTable: float getDesireValue(com.l2jfrozen.gameserver.model.L2Object,com.l2jfrozen.gameserver.datatables.DesireType)
com.l2jfrozen.gameserver.datatables.DesireTable: void addDesireValue(com.l2jfrozen.gameserver.datatables.DesireType,float)
com.l2jfrozen.gameserver.datatables.DesireTable: void addDesireValue(com.l2jfrozen.gameserver.model.L2Object,com.l2jfrozen.gameserver.datatables.DesireType,float)
com.l2jfrozen.gameserver.datatables.DesireTable: void createDesire(com.l2jfrozen.gameserver.datatables.DesireType)
com.l2jfrozen.gameserver.datatables.DesireTable: void deleteDesire(com.l2jfrozen.gameserver.datatables.DesireType)
com.l2jfrozen.gameserver.datatables.DesireTable: void createDesire(com.l2jfrozen.gameserver.model.L2Object,com.l2jfrozen.gameserver.datatables.DesireType)
com.l2jfrozen.gameserver.datatables.DesireTable: void deleteDesire(com.l2jfrozen.gameserver.model.L2Object,com.l2jfrozen.gameserver.datatables.DesireType)
com.l2jfrozen.gameserver.datatables.DesireTable: void addKnownObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.datatables.DesireTable: void addKnownObject(com.l2jfrozen.gameserver.model.L2Object,com.l2jfrozen.gameserver.datatables.DesireType[])
com.l2jfrozen.gameserver.datatables.DesireTable: void <clinit>()
com.l2jfrozen.gameserver.datatables.DesireTable$DesireValue
com.l2jfrozen.gameserver.datatables.DesireTable$DesireValue: float _value
com.l2jfrozen.gameserver.datatables.DesireTable$DesireValue: com.l2jfrozen.gameserver.datatables.DesireTable this$0
com.l2jfrozen.gameserver.datatables.DesireTable$DesireValue: DesireTable$DesireValue(com.l2jfrozen.gameserver.datatables.DesireTable)
com.l2jfrozen.gameserver.datatables.DesireTable$DesireValue: DesireTable$DesireValue(com.l2jfrozen.gameserver.datatables.DesireTable,java.lang.Float)
com.l2jfrozen.gameserver.datatables.DesireTable$DesireValue: void addValue(float)
com.l2jfrozen.gameserver.datatables.DesireTable$DesireValue: float getValue()
com.l2jfrozen.gameserver.datatables.DesireTable$Desires
com.l2jfrozen.gameserver.datatables.DesireTable$Desires: java.util.Map _desireTable
com.l2jfrozen.gameserver.datatables.DesireTable$Desires: com.l2jfrozen.gameserver.datatables.DesireTable this$0
com.l2jfrozen.gameserver.datatables.DesireTable$Desires: DesireTable$Desires(com.l2jfrozen.gameserver.datatables.DesireTable,com.l2jfrozen.gameserver.datatables.DesireType[])
com.l2jfrozen.gameserver.datatables.DesireTable$Desires: com.l2jfrozen.gameserver.datatables.DesireTable$DesireValue getDesireValue(com.l2jfrozen.gameserver.datatables.DesireType)
com.l2jfrozen.gameserver.datatables.DesireTable$Desires: void addValue(com.l2jfrozen.gameserver.datatables.DesireType,float)
com.l2jfrozen.gameserver.datatables.DesireTable$Desires: void createDesire(com.l2jfrozen.gameserver.datatables.DesireType)
com.l2jfrozen.gameserver.datatables.DesireTable$Desires: void deleteDesire(com.l2jfrozen.gameserver.datatables.DesireType)
com.l2jfrozen.gameserver.datatables.DesireType
com.l2jfrozen.gameserver.datatables.DesireType: com.l2jfrozen.gameserver.datatables.DesireType FEAR
com.l2jfrozen.gameserver.datatables.DesireType: com.l2jfrozen.gameserver.datatables.DesireType DISLIKE
com.l2jfrozen.gameserver.datatables.DesireType: com.l2jfrozen.gameserver.datatables.DesireType HATE
com.l2jfrozen.gameserver.datatables.DesireType: com.l2jfrozen.gameserver.datatables.DesireType DAMAGE
com.l2jfrozen.gameserver.datatables.DesireType: com.l2jfrozen.gameserver.datatables.DesireType[] $VALUES
com.l2jfrozen.gameserver.datatables.DesireType: com.l2jfrozen.gameserver.datatables.DesireType[] values()
com.l2jfrozen.gameserver.datatables.DesireType: com.l2jfrozen.gameserver.datatables.DesireType valueOf(java.lang.String)
com.l2jfrozen.gameserver.datatables.DesireType: DesireType(java.lang.String,int)
com.l2jfrozen.gameserver.datatables.DesireType: void <clinit>()
com.l2jfrozen.gameserver.datatables.GmListTable
com.l2jfrozen.gameserver.datatables.GmListTable: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.GmListTable: com.l2jfrozen.gameserver.datatables.GmListTable _instance
com.l2jfrozen.gameserver.datatables.GmListTable: javolution.util.FastMap _gmList
com.l2jfrozen.gameserver.datatables.GmListTable: com.l2jfrozen.gameserver.datatables.GmListTable getInstance()
com.l2jfrozen.gameserver.datatables.GmListTable: void reload()
com.l2jfrozen.gameserver.datatables.GmListTable: javolution.util.FastList getAllGms(boolean)
com.l2jfrozen.gameserver.datatables.GmListTable: javolution.util.FastList getAllGmNames(boolean)
com.l2jfrozen.gameserver.datatables.GmListTable: GmListTable()
com.l2jfrozen.gameserver.datatables.GmListTable: void addGm(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.datatables.GmListTable: void deleteGm(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.datatables.GmListTable: void showGm(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.datatables.GmListTable: void hideGm(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.datatables.GmListTable: boolean isGmOnline(boolean)
com.l2jfrozen.gameserver.datatables.GmListTable: void sendListToPlayer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.datatables.GmListTable: void broadcastToGMs(com.l2jfrozen.gameserver.network.serverpackets.L2GameServerPacket)
com.l2jfrozen.gameserver.datatables.GmListTable: void broadcastMessageToGMs(java.lang.String)
com.l2jfrozen.gameserver.datatables.GmListTable: void <clinit>()
com.l2jfrozen.gameserver.datatables.HeroSkillTable
com.l2jfrozen.gameserver.datatables.HeroSkillTable: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.HeroSkillTable: com.l2jfrozen.gameserver.datatables.HeroSkillTable _instance
com.l2jfrozen.gameserver.datatables.HeroSkillTable: com.l2jfrozen.gameserver.model.L2Skill[] _heroSkills
com.l2jfrozen.gameserver.datatables.HeroSkillTable: HeroSkillTable()
com.l2jfrozen.gameserver.datatables.HeroSkillTable: com.l2jfrozen.gameserver.datatables.HeroSkillTable getInstance()
com.l2jfrozen.gameserver.datatables.HeroSkillTable: com.l2jfrozen.gameserver.model.L2Skill[] getHeroSkills()
com.l2jfrozen.gameserver.datatables.HeroSkillTable: boolean isHeroSkill(int)
com.l2jfrozen.gameserver.datatables.HeroSkillTable: void <clinit>()
com.l2jfrozen.gameserver.datatables.MobGroupTable
com.l2jfrozen.gameserver.datatables.MobGroupTable: com.l2jfrozen.gameserver.datatables.MobGroupTable _instance
com.l2jfrozen.gameserver.datatables.MobGroupTable: java.util.Map _groupMap
com.l2jfrozen.gameserver.datatables.MobGroupTable: int FOLLOW_RANGE
com.l2jfrozen.gameserver.datatables.MobGroupTable: int RANDOM_RANGE
com.l2jfrozen.gameserver.datatables.MobGroupTable: MobGroupTable()
com.l2jfrozen.gameserver.datatables.MobGroupTable: com.l2jfrozen.gameserver.datatables.MobGroupTable getInstance()
com.l2jfrozen.gameserver.datatables.MobGroupTable: void addGroup(int,com.l2jfrozen.gameserver.model.MobGroup)
com.l2jfrozen.gameserver.datatables.MobGroupTable: com.l2jfrozen.gameserver.model.MobGroup getGroup(int)
com.l2jfrozen.gameserver.datatables.MobGroupTable: int getGroupCount()
com.l2jfrozen.gameserver.datatables.MobGroupTable: com.l2jfrozen.gameserver.model.MobGroup getGroupForMob(com.l2jfrozen.gameserver.model.actor.instance.L2ControllableMobInstance)
com.l2jfrozen.gameserver.datatables.MobGroupTable: com.l2jfrozen.gameserver.model.MobGroup[] getGroups()
com.l2jfrozen.gameserver.datatables.MobGroupTable: boolean removeGroup(int)
com.l2jfrozen.gameserver.datatables.NobleSkillTable
com.l2jfrozen.gameserver.datatables.NobleSkillTable: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.NobleSkillTable: com.l2jfrozen.gameserver.datatables.NobleSkillTable _instance
com.l2jfrozen.gameserver.datatables.NobleSkillTable: com.l2jfrozen.gameserver.model.L2Skill[] _nobleSkills
com.l2jfrozen.gameserver.datatables.NobleSkillTable: NobleSkillTable()
com.l2jfrozen.gameserver.datatables.NobleSkillTable: com.l2jfrozen.gameserver.datatables.NobleSkillTable getInstance()
com.l2jfrozen.gameserver.datatables.NobleSkillTable: com.l2jfrozen.gameserver.model.L2Skill[] GetNobleSkills()
com.l2jfrozen.gameserver.datatables.NobleSkillTable: void <clinit>()
com.l2jfrozen.gameserver.datatables.OfflineTradeTable
com.l2jfrozen.gameserver.datatables.OfflineTradeTable: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.OfflineTradeTable: java.lang.String SAVE_OFFLINE_STATUS
com.l2jfrozen.gameserver.datatables.OfflineTradeTable: java.lang.String SAVE_ITEMS
com.l2jfrozen.gameserver.datatables.OfflineTradeTable: java.lang.String DELETE_OFFLINE_TABLE_ALL_ITEMS
com.l2jfrozen.gameserver.datatables.OfflineTradeTable: java.lang.String DELETE_OFFLINE_TRADER
com.l2jfrozen.gameserver.datatables.OfflineTradeTable: java.lang.String CLEAR_OFFLINE_TABLE
com.l2jfrozen.gameserver.datatables.OfflineTradeTable: java.lang.String CLEAR_OFFLINE_TABLE_ITEMS
com.l2jfrozen.gameserver.datatables.OfflineTradeTable: java.lang.String LOAD_OFFLINE_STATUS
com.l2jfrozen.gameserver.datatables.OfflineTradeTable: java.lang.String LOAD_OFFLINE_ITEMS
com.l2jfrozen.gameserver.datatables.OfflineTradeTable: OfflineTradeTable()
com.l2jfrozen.gameserver.datatables.OfflineTradeTable: void storeOffliners()
com.l2jfrozen.gameserver.datatables.OfflineTradeTable: void restoreOfflineTraders()
com.l2jfrozen.gameserver.datatables.OfflineTradeTable: void storeOffliner(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.datatables.OfflineTradeTable: void <clinit>()
com.l2jfrozen.gameserver.datatables.OfflineTradeTable$OfflineTraderInfo
com.l2jfrozen.gameserver.datatables.OfflineTradeTable$OfflineTraderInfo: java.lang.Integer charId
com.l2jfrozen.gameserver.datatables.OfflineTradeTable$OfflineTraderInfo: long time
com.l2jfrozen.gameserver.datatables.OfflineTradeTable$OfflineTraderInfo: int type
com.l2jfrozen.gameserver.datatables.OfflineTradeTable$OfflineTraderInfo: java.lang.String title
com.l2jfrozen.gameserver.datatables.OfflineTradeTable$OfflineTraderInfo: java.util.List items
com.l2jfrozen.gameserver.datatables.OfflineTradeTable$OfflineTraderInfo: OfflineTradeTable$OfflineTraderInfo(java.lang.Integer,long,int,java.lang.String)
com.l2jfrozen.gameserver.datatables.OfflineTradeTable$OfflineTraderInfo: java.lang.Integer getCharId()
com.l2jfrozen.gameserver.datatables.OfflineTradeTable$OfflineTraderInfo: long getTime()
com.l2jfrozen.gameserver.datatables.OfflineTradeTable$OfflineTraderInfo: int getType()
com.l2jfrozen.gameserver.datatables.OfflineTradeTable$OfflineTraderInfo: java.lang.String getTitle()
com.l2jfrozen.gameserver.datatables.OfflineTradeTable$OfflineTraderInfo: java.util.List getItems()
com.l2jfrozen.gameserver.datatables.OfflineTradeTable$OfflineTraderItem
com.l2jfrozen.gameserver.datatables.OfflineTradeTable$OfflineTraderItem: java.lang.Integer charId
com.l2jfrozen.gameserver.datatables.OfflineTradeTable$OfflineTraderItem: java.lang.Integer item
com.l2jfrozen.gameserver.datatables.OfflineTradeTable$OfflineTraderItem: java.lang.Integer count
com.l2jfrozen.gameserver.datatables.OfflineTradeTable$OfflineTraderItem: java.lang.Integer price
com.l2jfrozen.gameserver.datatables.OfflineTradeTable$OfflineTraderItem: java.lang.Integer enchant
com.l2jfrozen.gameserver.datatables.OfflineTradeTable$OfflineTraderItem: OfflineTradeTable$OfflineTraderItem(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
com.l2jfrozen.gameserver.datatables.OfflineTradeTable$OfflineTraderItem: java.lang.Integer getCharId()
com.l2jfrozen.gameserver.datatables.OfflineTradeTable$OfflineTraderItem: java.lang.Integer getItem()
com.l2jfrozen.gameserver.datatables.OfflineTradeTable$OfflineTraderItem: java.lang.Integer getCount()
com.l2jfrozen.gameserver.datatables.OfflineTradeTable$OfflineTraderItem: java.lang.Integer getPrice()
com.l2jfrozen.gameserver.datatables.OfflineTradeTable$OfflineTraderItem: java.lang.Integer getEnchant()
com.l2jfrozen.gameserver.datatables.SkillTable
com.l2jfrozen.gameserver.datatables.SkillTable: com.l2jfrozen.gameserver.datatables.SkillTable _instance
com.l2jfrozen.gameserver.datatables.SkillTable: java.util.HashMap _skills
com.l2jfrozen.gameserver.datatables.SkillTable: boolean _initialized
com.l2jfrozen.gameserver.datatables.SkillTable: com.l2jfrozen.gameserver.templates.L2WeaponType[] weaponDbMasks
com.l2jfrozen.gameserver.datatables.SkillTable: com.l2jfrozen.gameserver.datatables.SkillTable getInstance()
com.l2jfrozen.gameserver.datatables.SkillTable: SkillTable()
com.l2jfrozen.gameserver.datatables.SkillTable: void reload()
com.l2jfrozen.gameserver.datatables.SkillTable: boolean isInitialized()
com.l2jfrozen.gameserver.datatables.SkillTable: int getSkillHashCode(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.datatables.SkillTable: int getSkillHashCode(int,int)
com.l2jfrozen.gameserver.datatables.SkillTable: com.l2jfrozen.gameserver.model.L2Skill getInfo(int,int)
com.l2jfrozen.gameserver.datatables.SkillTable: int getMaxLevel(int,int)
com.l2jfrozen.gameserver.datatables.SkillTable: int calcWeaponsAllowed(int)
com.l2jfrozen.gameserver.datatables.SkillTable: void <clinit>()
com.l2jfrozen.gameserver.datatables.csv.DoorTable
com.l2jfrozen.gameserver.datatables.csv.DoorTable: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.csv.DoorTable: java.util.Map _staticItems
com.l2jfrozen.gameserver.datatables.csv.DoorTable: com.l2jfrozen.gameserver.datatables.csv.DoorTable _instance
com.l2jfrozen.gameserver.datatables.csv.DoorTable: boolean _initialized
com.l2jfrozen.gameserver.datatables.csv.DoorTable: com.l2jfrozen.gameserver.datatables.csv.DoorTable getInstance()
com.l2jfrozen.gameserver.datatables.csv.DoorTable: DoorTable()
com.l2jfrozen.gameserver.datatables.csv.DoorTable: void reloadAll()
com.l2jfrozen.gameserver.datatables.csv.DoorTable: void respawn()
com.l2jfrozen.gameserver.datatables.csv.DoorTable: void parseData()
com.l2jfrozen.gameserver.datatables.csv.DoorTable: com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance parseList(java.lang.String)
com.l2jfrozen.gameserver.datatables.csv.DoorTable: boolean isInitialized()
com.l2jfrozen.gameserver.datatables.csv.DoorTable: com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance getDoor(java.lang.Integer)
com.l2jfrozen.gameserver.datatables.csv.DoorTable: void putDoor(com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance)
com.l2jfrozen.gameserver.datatables.csv.DoorTable: com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance[] getDoors()
com.l2jfrozen.gameserver.datatables.csv.DoorTable: void checkAutoOpen()
com.l2jfrozen.gameserver.datatables.csv.DoorTable: boolean checkIfDoorsBetween(com.l2jfrozen.gameserver.geo.pathfinding.Node,com.l2jfrozen.gameserver.geo.pathfinding.Node)
com.l2jfrozen.gameserver.datatables.csv.DoorTable: boolean checkIfDoorsBetween(int,int,int,int,int,int)
com.l2jfrozen.gameserver.datatables.csv.DoorTable: void <clinit>()
com.l2jfrozen.gameserver.datatables.csv.ExtractableItemsData
com.l2jfrozen.gameserver.datatables.csv.ExtractableItemsData: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.csv.ExtractableItemsData: java.util.Map _items
com.l2jfrozen.gameserver.datatables.csv.ExtractableItemsData: com.l2jfrozen.gameserver.datatables.csv.ExtractableItemsData _instance
com.l2jfrozen.gameserver.datatables.csv.ExtractableItemsData: com.l2jfrozen.gameserver.datatables.csv.ExtractableItemsData getInstance()
com.l2jfrozen.gameserver.datatables.csv.ExtractableItemsData: ExtractableItemsData()
com.l2jfrozen.gameserver.datatables.csv.ExtractableItemsData: com.l2jfrozen.gameserver.model.L2ExtractableItem getExtractableItem(int)
com.l2jfrozen.gameserver.datatables.csv.ExtractableItemsData: int[] itemIDs()
com.l2jfrozen.gameserver.datatables.csv.ExtractableItemsData: void <clinit>()
com.l2jfrozen.gameserver.datatables.csv.FishTable
com.l2jfrozen.gameserver.datatables.csv.FishTable: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.csv.FishTable: com.l2jfrozen.gameserver.datatables.csv.FishTable _instance
com.l2jfrozen.gameserver.datatables.csv.FishTable: java.util.List _fishsNormal
com.l2jfrozen.gameserver.datatables.csv.FishTable: java.util.List _fishsEasy
com.l2jfrozen.gameserver.datatables.csv.FishTable: java.util.List _fishsHard
com.l2jfrozen.gameserver.datatables.csv.FishTable: com.l2jfrozen.gameserver.model.FishData fish
com.l2jfrozen.gameserver.datatables.csv.FishTable: com.l2jfrozen.gameserver.datatables.csv.FishTable getInstance()
com.l2jfrozen.gameserver.datatables.csv.FishTable: FishTable()
com.l2jfrozen.gameserver.datatables.csv.FishTable: java.util.List getfish(int,int,int)
com.l2jfrozen.gameserver.datatables.csv.FishTable: void <clinit>()
com.l2jfrozen.gameserver.datatables.csv.HennaTable
com.l2jfrozen.gameserver.datatables.csv.HennaTable: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.csv.HennaTable: com.l2jfrozen.gameserver.datatables.csv.HennaTable _instance
com.l2jfrozen.gameserver.datatables.csv.HennaTable: java.util.Map _henna
com.l2jfrozen.gameserver.datatables.csv.HennaTable: boolean _initialized
com.l2jfrozen.gameserver.datatables.csv.HennaTable: com.l2jfrozen.gameserver.datatables.csv.HennaTable getInstance()
com.l2jfrozen.gameserver.datatables.csv.HennaTable: HennaTable()
com.l2jfrozen.gameserver.datatables.csv.HennaTable: void restoreHennaData()
com.l2jfrozen.gameserver.datatables.csv.HennaTable: boolean isInitialized()
com.l2jfrozen.gameserver.datatables.csv.HennaTable: com.l2jfrozen.gameserver.templates.L2Henna getTemplate(int)
com.l2jfrozen.gameserver.datatables.csv.HennaTable: void <clinit>()
com.l2jfrozen.gameserver.datatables.csv.MapRegionTable
com.l2jfrozen.gameserver.datatables.csv.MapRegionTable: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.csv.MapRegionTable: com.l2jfrozen.gameserver.datatables.csv.MapRegionTable _instance
com.l2jfrozen.gameserver.datatables.csv.MapRegionTable: int[][] _regions
com.l2jfrozen.gameserver.datatables.csv.MapRegionTable: int[][] _pointsWithKarmas
com.l2jfrozen.gameserver.datatables.csv.MapRegionTable: com.l2jfrozen.gameserver.datatables.csv.MapRegionTable getInstance()
com.l2jfrozen.gameserver.datatables.csv.MapRegionTable: MapRegionTable()
com.l2jfrozen.gameserver.datatables.csv.MapRegionTable: int getMapRegion(int,int)
com.l2jfrozen.gameserver.datatables.csv.MapRegionTable: int getMapRegionX(int)
com.l2jfrozen.gameserver.datatables.csv.MapRegionTable: int getMapRegionY(int)
com.l2jfrozen.gameserver.datatables.csv.MapRegionTable: int getAreaCastle(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.datatables.csv.MapRegionTable: int getClosestTownNumber(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.datatables.csv.MapRegionTable: java.lang.String getClosestTownName(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.datatables.csv.MapRegionTable: com.l2jfrozen.gameserver.model.Location getTeleToLocation(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.datatables.csv.TeleportWhereType)
com.l2jfrozen.gameserver.datatables.csv.MapRegionTable: void <clinit>()
com.l2jfrozen.gameserver.datatables.csv.NpcWalkerRoutesTable
com.l2jfrozen.gameserver.datatables.csv.NpcWalkerRoutesTable: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.csv.NpcWalkerRoutesTable: com.l2jfrozen.gameserver.datatables.csv.NpcWalkerRoutesTable _instance
com.l2jfrozen.gameserver.datatables.csv.NpcWalkerRoutesTable: javolution.util.FastList _routes
com.l2jfrozen.gameserver.datatables.csv.NpcWalkerRoutesTable: com.l2jfrozen.gameserver.datatables.csv.NpcWalkerRoutesTable getInstance()
com.l2jfrozen.gameserver.datatables.csv.NpcWalkerRoutesTable: NpcWalkerRoutesTable()
com.l2jfrozen.gameserver.datatables.csv.NpcWalkerRoutesTable: void load()
com.l2jfrozen.gameserver.datatables.csv.NpcWalkerRoutesTable: javolution.util.FastList getRouteForNpc(int)
com.l2jfrozen.gameserver.datatables.csv.NpcWalkerRoutesTable: void <clinit>()
com.l2jfrozen.gameserver.datatables.csv.RecipeTable
com.l2jfrozen.gameserver.datatables.csv.RecipeTable: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.csv.RecipeTable: java.util.Map _lists
com.l2jfrozen.gameserver.datatables.csv.RecipeTable: com.l2jfrozen.gameserver.datatables.csv.RecipeTable instance
com.l2jfrozen.gameserver.datatables.csv.RecipeTable: com.l2jfrozen.gameserver.datatables.csv.RecipeTable getInstance()
com.l2jfrozen.gameserver.datatables.csv.RecipeTable: RecipeTable()
com.l2jfrozen.gameserver.datatables.csv.RecipeTable: void parseList(java.lang.String)
com.l2jfrozen.gameserver.datatables.csv.RecipeTable: int getRecipesCount()
com.l2jfrozen.gameserver.datatables.csv.RecipeTable: com.l2jfrozen.gameserver.model.L2RecipeList getRecipeList(int)
com.l2jfrozen.gameserver.datatables.csv.RecipeTable: com.l2jfrozen.gameserver.model.L2RecipeList getRecipeByItemId(int)
com.l2jfrozen.gameserver.datatables.csv.RecipeTable: com.l2jfrozen.gameserver.model.L2RecipeList getRecipeById(int)
com.l2jfrozen.gameserver.datatables.csv.RecipeTable: void <clinit>()
com.l2jfrozen.gameserver.datatables.csv.StaticObjects
com.l2jfrozen.gameserver.datatables.csv.StaticObjects: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.csv.StaticObjects: com.l2jfrozen.gameserver.datatables.csv.StaticObjects _instance
com.l2jfrozen.gameserver.datatables.csv.StaticObjects: java.util.Map _staticObjects
com.l2jfrozen.gameserver.datatables.csv.StaticObjects: com.l2jfrozen.gameserver.datatables.csv.StaticObjects getInstance()
com.l2jfrozen.gameserver.datatables.csv.StaticObjects: StaticObjects()
com.l2jfrozen.gameserver.datatables.csv.StaticObjects: void parseData()
com.l2jfrozen.gameserver.datatables.csv.StaticObjects: com.l2jfrozen.gameserver.model.actor.instance.L2StaticObjectInstance parse(java.lang.String)
com.l2jfrozen.gameserver.datatables.csv.StaticObjects: void <clinit>()
com.l2jfrozen.gameserver.datatables.csv.SummonItemsData
com.l2jfrozen.gameserver.datatables.csv.SummonItemsData: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.csv.SummonItemsData: javolution.util.FastMap _summonitems
com.l2jfrozen.gameserver.datatables.csv.SummonItemsData: com.l2jfrozen.gameserver.datatables.csv.SummonItemsData _instance
com.l2jfrozen.gameserver.datatables.csv.SummonItemsData: com.l2jfrozen.gameserver.datatables.csv.SummonItemsData getInstance()
com.l2jfrozen.gameserver.datatables.csv.SummonItemsData: SummonItemsData()
com.l2jfrozen.gameserver.datatables.csv.SummonItemsData: com.l2jfrozen.gameserver.model.L2SummonItem getSummonItem(int)
com.l2jfrozen.gameserver.datatables.csv.SummonItemsData: int[] itemIDs()
com.l2jfrozen.gameserver.datatables.csv.SummonItemsData: void <clinit>()
com.l2jfrozen.gameserver.datatables.csv.TeleportWhereType
com.l2jfrozen.gameserver.datatables.csv.TeleportWhereType: com.l2jfrozen.gameserver.datatables.csv.TeleportWhereType Castle
com.l2jfrozen.gameserver.datatables.csv.TeleportWhereType: com.l2jfrozen.gameserver.datatables.csv.TeleportWhereType ClanHall
com.l2jfrozen.gameserver.datatables.csv.TeleportWhereType: com.l2jfrozen.gameserver.datatables.csv.TeleportWhereType SiegeFlag
com.l2jfrozen.gameserver.datatables.csv.TeleportWhereType: com.l2jfrozen.gameserver.datatables.csv.TeleportWhereType Town
com.l2jfrozen.gameserver.datatables.csv.TeleportWhereType: com.l2jfrozen.gameserver.datatables.csv.TeleportWhereType Fortress
com.l2jfrozen.gameserver.datatables.csv.TeleportWhereType: com.l2jfrozen.gameserver.datatables.csv.TeleportWhereType[] $VALUES
com.l2jfrozen.gameserver.datatables.csv.TeleportWhereType: com.l2jfrozen.gameserver.datatables.csv.TeleportWhereType[] values()
com.l2jfrozen.gameserver.datatables.csv.TeleportWhereType: com.l2jfrozen.gameserver.datatables.csv.TeleportWhereType valueOf(java.lang.String)
com.l2jfrozen.gameserver.datatables.csv.TeleportWhereType: TeleportWhereType(java.lang.String,int)
com.l2jfrozen.gameserver.datatables.csv.TeleportWhereType: void <clinit>()
com.l2jfrozen.gameserver.datatables.sql.AccessLevels
com.l2jfrozen.gameserver.datatables.sql.AccessLevels: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.sql.AccessLevels: com.l2jfrozen.gameserver.datatables.sql.AccessLevels _instance
com.l2jfrozen.gameserver.datatables.sql.AccessLevels: com.l2jfrozen.gameserver.datatables.AccessLevel _masterAccessLevel
com.l2jfrozen.gameserver.datatables.sql.AccessLevels: com.l2jfrozen.gameserver.datatables.AccessLevel _userAccessLevel
com.l2jfrozen.gameserver.datatables.sql.AccessLevels: javolution.util.FastMap _accessLevels
com.l2jfrozen.gameserver.datatables.sql.AccessLevels: AccessLevels()
com.l2jfrozen.gameserver.datatables.sql.AccessLevels: com.l2jfrozen.gameserver.datatables.sql.AccessLevels getInstance()
com.l2jfrozen.gameserver.datatables.sql.AccessLevels: com.l2jfrozen.gameserver.datatables.AccessLevel getAccessLevel(int)
com.l2jfrozen.gameserver.datatables.sql.AccessLevels: void addBanAccessLevel(int)
com.l2jfrozen.gameserver.datatables.sql.AccessLevels: void reload()
com.l2jfrozen.gameserver.datatables.sql.AccessLevels: void <clinit>()
com.l2jfrozen.gameserver.datatables.sql.AdminCommandAccessRights
com.l2jfrozen.gameserver.datatables.sql.AdminCommandAccessRights: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.sql.AdminCommandAccessRights: com.l2jfrozen.gameserver.datatables.sql.AdminCommandAccessRights _instance
com.l2jfrozen.gameserver.datatables.sql.AdminCommandAccessRights: java.util.Map adminCommandAccessRights
com.l2jfrozen.gameserver.datatables.sql.AdminCommandAccessRights: AdminCommandAccessRights()
com.l2jfrozen.gameserver.datatables.sql.AdminCommandAccessRights: com.l2jfrozen.gameserver.datatables.sql.AdminCommandAccessRights getInstance()
com.l2jfrozen.gameserver.datatables.sql.AdminCommandAccessRights: void reload()
com.l2jfrozen.gameserver.datatables.sql.AdminCommandAccessRights: int accessRightForCommand(java.lang.String)
com.l2jfrozen.gameserver.datatables.sql.AdminCommandAccessRights: boolean hasAccess(java.lang.String,com.l2jfrozen.gameserver.datatables.AccessLevel)
com.l2jfrozen.gameserver.datatables.sql.AdminCommandAccessRights: void <clinit>()
com.l2jfrozen.gameserver.datatables.sql.ArmorSetsTable
com.l2jfrozen.gameserver.datatables.sql.ArmorSetsTable: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.sql.ArmorSetsTable: com.l2jfrozen.gameserver.datatables.sql.ArmorSetsTable _instance
com.l2jfrozen.gameserver.datatables.sql.ArmorSetsTable: javolution.util.FastMap armorSets
com.l2jfrozen.gameserver.datatables.sql.ArmorSetsTable: javolution.util.FastMap cusArmorSets
com.l2jfrozen.gameserver.datatables.sql.ArmorSetsTable: com.l2jfrozen.gameserver.datatables.sql.ArmorSetsTable getInstance()
com.l2jfrozen.gameserver.datatables.sql.ArmorSetsTable: ArmorSetsTable()
com.l2jfrozen.gameserver.datatables.sql.ArmorSetsTable: void loadData()
com.l2jfrozen.gameserver.datatables.sql.ArmorSetsTable: boolean setExists(int)
com.l2jfrozen.gameserver.datatables.sql.ArmorSetsTable: com.l2jfrozen.gameserver.model.L2ArmorSet getSet(int)
com.l2jfrozen.gameserver.datatables.sql.ArmorSetsTable: void addObj(int,com.l2jfrozen.gameserver.model.L2ArmorSet)
com.l2jfrozen.gameserver.datatables.sql.ArmorSetsTable: com.l2jfrozen.gameserver.datatables.sql.ArmorSetsTable$ArmorDummy getCusArmorSets(int)
com.l2jfrozen.gameserver.datatables.sql.ArmorSetsTable: void <clinit>()
com.l2jfrozen.gameserver.datatables.sql.ArmorSetsTable$ArmorDummy
com.l2jfrozen.gameserver.datatables.sql.ArmorSetsTable$ArmorDummy: int _chest
com.l2jfrozen.gameserver.datatables.sql.ArmorSetsTable$ArmorDummy: int _legs
com.l2jfrozen.gameserver.datatables.sql.ArmorSetsTable$ArmorDummy: int _head
com.l2jfrozen.gameserver.datatables.sql.ArmorSetsTable$ArmorDummy: int _gloves
com.l2jfrozen.gameserver.datatables.sql.ArmorSetsTable$ArmorDummy: int _feet
com.l2jfrozen.gameserver.datatables.sql.ArmorSetsTable$ArmorDummy: int _skill_id
com.l2jfrozen.gameserver.datatables.sql.ArmorSetsTable$ArmorDummy: int _shield
com.l2jfrozen.gameserver.datatables.sql.ArmorSetsTable$ArmorDummy: com.l2jfrozen.gameserver.datatables.sql.ArmorSetsTable this$0
com.l2jfrozen.gameserver.datatables.sql.ArmorSetsTable$ArmorDummy: ArmorSetsTable$ArmorDummy(com.l2jfrozen.gameserver.datatables.sql.ArmorSetsTable,int,int,int,int,int,int,int)
com.l2jfrozen.gameserver.datatables.sql.ArmorSetsTable$ArmorDummy: int getChest()
com.l2jfrozen.gameserver.datatables.sql.ArmorSetsTable$ArmorDummy: int getLegs()
com.l2jfrozen.gameserver.datatables.sql.ArmorSetsTable$ArmorDummy: int getHead()
com.l2jfrozen.gameserver.datatables.sql.ArmorSetsTable$ArmorDummy: int getGloves()
com.l2jfrozen.gameserver.datatables.sql.ArmorSetsTable$ArmorDummy: int getFeet()
com.l2jfrozen.gameserver.datatables.sql.ArmorSetsTable$ArmorDummy: int getSkill_id()
com.l2jfrozen.gameserver.datatables.sql.ArmorSetsTable$ArmorDummy: int getShield()
com.l2jfrozen.gameserver.datatables.sql.CharNameTable
com.l2jfrozen.gameserver.datatables.sql.CharNameTable: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.sql.CharNameTable: com.l2jfrozen.gameserver.datatables.sql.CharNameTable _instance
com.l2jfrozen.gameserver.datatables.sql.CharNameTable: CharNameTable()
com.l2jfrozen.gameserver.datatables.sql.CharNameTable: com.l2jfrozen.gameserver.datatables.sql.CharNameTable getInstance()
com.l2jfrozen.gameserver.datatables.sql.CharNameTable: boolean doesCharNameExist(java.lang.String)
com.l2jfrozen.gameserver.datatables.sql.CharNameTable: int accountCharNumber(java.lang.String)
com.l2jfrozen.gameserver.datatables.sql.CharNameTable: void <clinit>()
com.l2jfrozen.gameserver.datatables.sql.CharTemplateTable
com.l2jfrozen.gameserver.datatables.sql.CharTemplateTable: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.sql.CharTemplateTable: com.l2jfrozen.gameserver.datatables.sql.CharTemplateTable _instance
com.l2jfrozen.gameserver.datatables.sql.CharTemplateTable: java.lang.String[] CHAR_CLASSES
com.l2jfrozen.gameserver.datatables.sql.CharTemplateTable: java.util.Map _templates
com.l2jfrozen.gameserver.datatables.sql.CharTemplateTable: com.l2jfrozen.gameserver.datatables.sql.CharTemplateTable getInstance()
com.l2jfrozen.gameserver.datatables.sql.CharTemplateTable: CharTemplateTable()
com.l2jfrozen.gameserver.datatables.sql.CharTemplateTable: com.l2jfrozen.gameserver.templates.L2PcTemplate getTemplate(com.l2jfrozen.gameserver.model.base.ClassId)
com.l2jfrozen.gameserver.datatables.sql.CharTemplateTable: com.l2jfrozen.gameserver.templates.L2PcTemplate getTemplate(int)
com.l2jfrozen.gameserver.datatables.sql.CharTemplateTable: java.lang.String getClassNameById(int)
com.l2jfrozen.gameserver.datatables.sql.CharTemplateTable: int getClassIdByName(java.lang.String)
com.l2jfrozen.gameserver.datatables.sql.CharTemplateTable: void <clinit>()
com.l2jfrozen.gameserver.datatables.sql.ClanTable
com.l2jfrozen.gameserver.datatables.sql.ClanTable: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.sql.ClanTable: com.l2jfrozen.gameserver.datatables.sql.ClanTable _instance
com.l2jfrozen.gameserver.datatables.sql.ClanTable: java.util.Map _clans
com.l2jfrozen.gameserver.datatables.sql.ClanTable: com.l2jfrozen.gameserver.datatables.sql.ClanTable getInstance()
com.l2jfrozen.gameserver.datatables.sql.ClanTable: void reload()
com.l2jfrozen.gameserver.datatables.sql.ClanTable: com.l2jfrozen.gameserver.model.L2Clan[] getClans()
com.l2jfrozen.gameserver.datatables.sql.ClanTable: int getTopRate(int)
com.l2jfrozen.gameserver.datatables.sql.ClanTable: ClanTable()
com.l2jfrozen.gameserver.datatables.sql.ClanTable: com.l2jfrozen.gameserver.model.L2Clan getClan(int)
com.l2jfrozen.gameserver.datatables.sql.ClanTable: com.l2jfrozen.gameserver.model.L2Clan getClanByName(java.lang.String)
com.l2jfrozen.gameserver.datatables.sql.ClanTable: com.l2jfrozen.gameserver.model.L2Clan createClan(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.datatables.sql.ClanTable: boolean isValidCalnName(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.datatables.sql.ClanTable: void destroyClan(int)
com.l2jfrozen.gameserver.datatables.sql.ClanTable: void scheduleRemoveClan(int)
com.l2jfrozen.gameserver.datatables.sql.ClanTable: boolean isAllyExists(java.lang.String)
com.l2jfrozen.gameserver.datatables.sql.ClanTable: void storeclanswars(int,int)
com.l2jfrozen.gameserver.datatables.sql.ClanTable: void deleteclanswars(int,int)
com.l2jfrozen.gameserver.datatables.sql.ClanTable: void checkSurrender(com.l2jfrozen.gameserver.model.L2Clan,com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.datatables.sql.ClanTable: void restorewars()
com.l2jfrozen.gameserver.datatables.sql.ClanTable: void <clinit>()
com.l2jfrozen.gameserver.datatables.sql.ClanTable$1
com.l2jfrozen.gameserver.datatables.sql.ClanTable$1: int val$clanId
com.l2jfrozen.gameserver.datatables.sql.ClanTable$1: com.l2jfrozen.gameserver.datatables.sql.ClanTable this$0
com.l2jfrozen.gameserver.datatables.sql.ClanTable$1: ClanTable$1(com.l2jfrozen.gameserver.datatables.sql.ClanTable,int)
com.l2jfrozen.gameserver.datatables.sql.ClanTable$1: void run()
com.l2jfrozen.gameserver.datatables.sql.CustomArmorSetsTable
com.l2jfrozen.gameserver.datatables.sql.CustomArmorSetsTable: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.sql.CustomArmorSetsTable: com.l2jfrozen.gameserver.datatables.sql.CustomArmorSetsTable _instance
com.l2jfrozen.gameserver.datatables.sql.CustomArmorSetsTable: com.l2jfrozen.gameserver.datatables.sql.CustomArmorSetsTable getInstance()
com.l2jfrozen.gameserver.datatables.sql.CustomArmorSetsTable: CustomArmorSetsTable()
com.l2jfrozen.gameserver.datatables.sql.CustomArmorSetsTable: void <clinit>()
com.l2jfrozen.gameserver.datatables.sql.HelperBuffTable
com.l2jfrozen.gameserver.datatables.sql.HelperBuffTable: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.sql.HelperBuffTable: com.l2jfrozen.gameserver.datatables.sql.HelperBuffTable _instance
com.l2jfrozen.gameserver.datatables.sql.HelperBuffTable: java.util.List helperBuff
com.l2jfrozen.gameserver.datatables.sql.HelperBuffTable: boolean _initialized
com.l2jfrozen.gameserver.datatables.sql.HelperBuffTable: int _magicClassLowestLevel
com.l2jfrozen.gameserver.datatables.sql.HelperBuffTable: int _physicClassLowestLevel
com.l2jfrozen.gameserver.datatables.sql.HelperBuffTable: int _magicClassHighestLevel
com.l2jfrozen.gameserver.datatables.sql.HelperBuffTable: int _physicClassHighestLevel
com.l2jfrozen.gameserver.datatables.sql.HelperBuffTable: com.l2jfrozen.gameserver.datatables.sql.HelperBuffTable getInstance()
com.l2jfrozen.gameserver.datatables.sql.HelperBuffTable: void reload()
com.l2jfrozen.gameserver.datatables.sql.HelperBuffTable: HelperBuffTable()
com.l2jfrozen.gameserver.datatables.sql.HelperBuffTable: void restoreHelperBuffData()
com.l2jfrozen.gameserver.datatables.sql.HelperBuffTable: void fillHelperBuffTable(java.sql.ResultSet)
com.l2jfrozen.gameserver.datatables.sql.HelperBuffTable: boolean isInitialized()
com.l2jfrozen.gameserver.datatables.sql.HelperBuffTable: com.l2jfrozen.gameserver.templates.L2HelperBuff getHelperBuffTableItem(int)
com.l2jfrozen.gameserver.datatables.sql.HelperBuffTable: java.util.List getHelperBuffTable()
com.l2jfrozen.gameserver.datatables.sql.HelperBuffTable: int getMagicClassHighestLevel()
com.l2jfrozen.gameserver.datatables.sql.HelperBuffTable: void setMagicClassHighestLevel(int)
com.l2jfrozen.gameserver.datatables.sql.HelperBuffTable: int getMagicClassLowestLevel()
com.l2jfrozen.gameserver.datatables.sql.HelperBuffTable: void setMagicClassLowestLevel(int)
com.l2jfrozen.gameserver.datatables.sql.HelperBuffTable: int getPhysicClassHighestLevel()
com.l2jfrozen.gameserver.datatables.sql.HelperBuffTable: void setPhysicClassHighestLevel(int)
com.l2jfrozen.gameserver.datatables.sql.HelperBuffTable: int getPhysicClassLowestLevel()
com.l2jfrozen.gameserver.datatables.sql.HelperBuffTable: void setPhysicClassLowestLevel(int)
com.l2jfrozen.gameserver.datatables.sql.HelperBuffTable: void <clinit>()
com.l2jfrozen.gameserver.datatables.sql.HennaTreeTable
com.l2jfrozen.gameserver.datatables.sql.HennaTreeTable: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.sql.HennaTreeTable: com.l2jfrozen.gameserver.datatables.sql.HennaTreeTable _instance
com.l2jfrozen.gameserver.datatables.sql.HennaTreeTable: java.util.Map _hennaTrees
com.l2jfrozen.gameserver.datatables.sql.HennaTreeTable: boolean _initialized
com.l2jfrozen.gameserver.datatables.sql.HennaTreeTable: com.l2jfrozen.gameserver.datatables.sql.HennaTreeTable getInstance()
com.l2jfrozen.gameserver.datatables.sql.HennaTreeTable: HennaTreeTable()
com.l2jfrozen.gameserver.datatables.sql.HennaTreeTable: com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance[] getAvailableHenna(com.l2jfrozen.gameserver.model.base.ClassId)
com.l2jfrozen.gameserver.datatables.sql.HennaTreeTable: boolean isInitialized()
com.l2jfrozen.gameserver.datatables.sql.HennaTreeTable: void <clinit>()
com.l2jfrozen.gameserver.datatables.sql.ItemTable
com.l2jfrozen.gameserver.datatables.sql.ItemTable: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.sql.ItemTable: java.util.logging.Logger _logItems
com.l2jfrozen.gameserver.datatables.sql.ItemTable: java.util.Map _crystalTypes
com.l2jfrozen.gameserver.datatables.sql.ItemTable: java.util.Map _weaponTypes
com.l2jfrozen.gameserver.datatables.sql.ItemTable: java.util.Map _armorTypes
com.l2jfrozen.gameserver.datatables.sql.ItemTable: java.util.Map _slots
com.l2jfrozen.gameserver.datatables.sql.ItemTable: com.l2jfrozen.gameserver.templates.L2Item[] _allTemplates
com.l2jfrozen.gameserver.datatables.sql.ItemTable: boolean _initialized
com.l2jfrozen.gameserver.datatables.sql.ItemTable: com.l2jfrozen.gameserver.datatables.sql.ItemTable _instance
com.l2jfrozen.gameserver.datatables.sql.ItemTable: java.lang.String[] SQL_ITEM_SELECTS
com.l2jfrozen.gameserver.datatables.sql.ItemTable: java.lang.String[] SQL_CUSTOM_ITEM_SELECTS
com.l2jfrozen.gameserver.datatables.sql.ItemTable: java.util.Map itemData
com.l2jfrozen.gameserver.datatables.sql.ItemTable: java.util.Map weaponData
com.l2jfrozen.gameserver.datatables.sql.ItemTable: java.util.Map armorData
com.l2jfrozen.gameserver.datatables.sql.ItemTable: com.l2jfrozen.gameserver.datatables.sql.ItemTable getInstance()
com.l2jfrozen.gameserver.datatables.sql.ItemTable: com.l2jfrozen.gameserver.model.Item newItem()
com.l2jfrozen.gameserver.datatables.sql.ItemTable: ItemTable()
com.l2jfrozen.gameserver.datatables.sql.ItemTable: com.l2jfrozen.gameserver.model.Item readWeapon(java.sql.ResultSet)
com.l2jfrozen.gameserver.datatables.sql.ItemTable: com.l2jfrozen.gameserver.model.Item readArmor(java.sql.ResultSet)
com.l2jfrozen.gameserver.datatables.sql.ItemTable: com.l2jfrozen.gameserver.model.Item readItem(java.sql.ResultSet)
com.l2jfrozen.gameserver.datatables.sql.ItemTable: boolean isInitialized()
com.l2jfrozen.gameserver.datatables.sql.ItemTable: void buildFastLookupTable(java.util.Map,java.util.Map,java.util.Map)
com.l2jfrozen.gameserver.datatables.sql.ItemTable: com.l2jfrozen.gameserver.templates.L2Item getTemplate(int)
com.l2jfrozen.gameserver.datatables.sql.ItemTable: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance createItem(java.lang.String,int,int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.datatables.sql.ItemTable: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance createItem(java.lang.String,int,int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.datatables.sql.ItemTable: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance createDummyItem(int)
com.l2jfrozen.gameserver.datatables.sql.ItemTable: void destroyItem(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.datatables.sql.ItemTable: void reload()
com.l2jfrozen.gameserver.datatables.sql.ItemTable: void <clinit>()
com.l2jfrozen.gameserver.datatables.sql.ItemTable$resetOwner
com.l2jfrozen.gameserver.datatables.sql.ItemTable$resetOwner: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance _item
com.l2jfrozen.gameserver.datatables.sql.ItemTable$resetOwner: com.l2jfrozen.gameserver.datatables.sql.ItemTable this$0
com.l2jfrozen.gameserver.datatables.sql.ItemTable$resetOwner: ItemTable$resetOwner(com.l2jfrozen.gameserver.datatables.sql.ItemTable,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.datatables.sql.ItemTable$resetOwner: void run()
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable _instance
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: java.util.Map _petTable
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable getInstance()
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: L2PetDataTable()
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: void loadPetsData()
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: void addPetData(com.l2jfrozen.gameserver.model.L2PetData)
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: void addPetData(com.l2jfrozen.gameserver.model.L2PetData[])
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: com.l2jfrozen.gameserver.model.L2PetData getPetData(int,int)
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: boolean isWolf(int)
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: boolean isSinEater(int)
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: boolean isHatchling(int)
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: boolean isStrider(int)
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: boolean isWyvern(int)
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: boolean isBaby(int)
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: boolean isPetFood(int)
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: boolean isWolfFood(int)
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: boolean isSinEaterFood(int)
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: boolean isHatchlingFood(int)
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: boolean isStriderFood(int)
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: boolean isWyvernFood(int)
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: boolean isBabyFood(int)
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: int getFoodItemId(int)
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: int getPetIdByItemId(int)
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: int getHatchlingWindId()
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: int getHatchlingStarId()
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: int getHatchlingTwilightId()
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: int getStriderWindId()
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: int getStriderStarId()
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: int getStriderTwilightId()
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: int getWyvernItemId()
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: int getStriderWindItemId()
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: int getStriderStarItemId()
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: int getStriderTwilightItemId()
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: int getSinEaterItemId()
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: boolean isPetItem(int)
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: int[] getPetItemsAsNpc(int)
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: boolean isMountable(int)
com.l2jfrozen.gameserver.datatables.sql.L2PetDataTable: void <clinit>()
com.l2jfrozen.gameserver.datatables.sql.LevelUpData
com.l2jfrozen.gameserver.datatables.sql.LevelUpData: java.lang.String SELECT_ALL
com.l2jfrozen.gameserver.datatables.sql.LevelUpData: java.lang.String CLASS_LVL
com.l2jfrozen.gameserver.datatables.sql.LevelUpData: java.lang.String MP_MOD
com.l2jfrozen.gameserver.datatables.sql.LevelUpData: java.lang.String MP_ADD
com.l2jfrozen.gameserver.datatables.sql.LevelUpData: java.lang.String MP_BASE
com.l2jfrozen.gameserver.datatables.sql.LevelUpData: java.lang.String HP_MOD
com.l2jfrozen.gameserver.datatables.sql.LevelUpData: java.lang.String HP_ADD
com.l2jfrozen.gameserver.datatables.sql.LevelUpData: java.lang.String HP_BASE
com.l2jfrozen.gameserver.datatables.sql.LevelUpData: java.lang.String CP_MOD
com.l2jfrozen.gameserver.datatables.sql.LevelUpData: java.lang.String CP_ADD
com.l2jfrozen.gameserver.datatables.sql.LevelUpData: java.lang.String CP_BASE
com.l2jfrozen.gameserver.datatables.sql.LevelUpData: java.lang.String CLASS_ID
com.l2jfrozen.gameserver.datatables.sql.LevelUpData: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.sql.LevelUpData: com.l2jfrozen.gameserver.datatables.sql.LevelUpData _instance
com.l2jfrozen.gameserver.datatables.sql.LevelUpData: java.util.Map lvlTable
com.l2jfrozen.gameserver.datatables.sql.LevelUpData: com.l2jfrozen.gameserver.datatables.sql.LevelUpData getInstance()
com.l2jfrozen.gameserver.datatables.sql.LevelUpData: LevelUpData()
com.l2jfrozen.gameserver.datatables.sql.LevelUpData: com.l2jfrozen.gameserver.model.L2LvlupData getTemplate(int)
com.l2jfrozen.gameserver.datatables.sql.LevelUpData: com.l2jfrozen.gameserver.model.L2LvlupData getTemplate(com.l2jfrozen.gameserver.model.base.ClassId)
com.l2jfrozen.gameserver.datatables.sql.LevelUpData: void <clinit>()
com.l2jfrozen.gameserver.datatables.sql.NpcTable
com.l2jfrozen.gameserver.datatables.sql.NpcTable: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.sql.NpcTable: com.l2jfrozen.gameserver.datatables.sql.NpcTable _instance
com.l2jfrozen.gameserver.datatables.sql.NpcTable: java.util.Map npcs
com.l2jfrozen.gameserver.datatables.sql.NpcTable: boolean _initialized
com.l2jfrozen.gameserver.datatables.sql.NpcTable: com.l2jfrozen.gameserver.datatables.sql.NpcTable getInstance()
com.l2jfrozen.gameserver.datatables.sql.NpcTable: NpcTable()
com.l2jfrozen.gameserver.datatables.sql.NpcTable: void restoreNpcData()
com.l2jfrozen.gameserver.datatables.sql.NpcTable: void fillNpcTable(java.sql.ResultSet,boolean)
com.l2jfrozen.gameserver.datatables.sql.NpcTable: void reloadNpc(int)
com.l2jfrozen.gameserver.datatables.sql.NpcTable: void reloadAllNpc()
com.l2jfrozen.gameserver.datatables.sql.NpcTable: void saveNpc(com.l2jfrozen.gameserver.templates.StatsSet)
com.l2jfrozen.gameserver.datatables.sql.NpcTable: boolean isInitialized()
com.l2jfrozen.gameserver.datatables.sql.NpcTable: void replaceTemplate(com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.datatables.sql.NpcTable: com.l2jfrozen.gameserver.templates.L2NpcTemplate getTemplate(int)
com.l2jfrozen.gameserver.datatables.sql.NpcTable: com.l2jfrozen.gameserver.templates.L2NpcTemplate getTemplateByName(java.lang.String)
com.l2jfrozen.gameserver.datatables.sql.NpcTable: com.l2jfrozen.gameserver.templates.L2NpcTemplate[] getAllOfLevel(int)
com.l2jfrozen.gameserver.datatables.sql.NpcTable: com.l2jfrozen.gameserver.templates.L2NpcTemplate[] getAllMonstersOfLevel(int)
com.l2jfrozen.gameserver.datatables.sql.NpcTable: com.l2jfrozen.gameserver.templates.L2NpcTemplate[] getAllNpcStartingWith(java.lang.String)
com.l2jfrozen.gameserver.datatables.sql.NpcTable: java.util.Set getAllNpcOfClassType(java.lang.String)
com.l2jfrozen.gameserver.datatables.sql.NpcTable: java.util.Set getAllNpcOfL2jClass(java.lang.Class)
com.l2jfrozen.gameserver.datatables.sql.NpcTable: java.util.Set getAllNpcOfAiType(java.lang.String)
com.l2jfrozen.gameserver.datatables.sql.NpcTable: java.util.Map getAllTemplates()
com.l2jfrozen.gameserver.datatables.sql.NpcTable: void FillDropList()
com.l2jfrozen.gameserver.datatables.sql.NpcTable: void <clinit>()
com.l2jfrozen.gameserver.datatables.sql.PetNameTable
com.l2jfrozen.gameserver.datatables.sql.PetNameTable: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.sql.PetNameTable: com.l2jfrozen.gameserver.datatables.sql.PetNameTable _instance
com.l2jfrozen.gameserver.datatables.sql.PetNameTable: PetNameTable()
com.l2jfrozen.gameserver.datatables.sql.PetNameTable: com.l2jfrozen.gameserver.datatables.sql.PetNameTable getInstance()
com.l2jfrozen.gameserver.datatables.sql.PetNameTable: boolean doesPetNameExist(java.lang.String,int)
com.l2jfrozen.gameserver.datatables.sql.PetNameTable: boolean isValidPetName(java.lang.String)
com.l2jfrozen.gameserver.datatables.sql.PetNameTable: boolean isAlphaNumeric(java.lang.String)
com.l2jfrozen.gameserver.datatables.sql.PetNameTable: void <clinit>()
com.l2jfrozen.gameserver.datatables.sql.SkillSpellbookTable
com.l2jfrozen.gameserver.datatables.sql.SkillSpellbookTable: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.sql.SkillSpellbookTable: com.l2jfrozen.gameserver.datatables.sql.SkillSpellbookTable _instance
com.l2jfrozen.gameserver.datatables.sql.SkillSpellbookTable: java.util.Map skillSpellbooks
com.l2jfrozen.gameserver.datatables.sql.SkillSpellbookTable: com.l2jfrozen.gameserver.datatables.sql.SkillSpellbookTable getInstance()
com.l2jfrozen.gameserver.datatables.sql.SkillSpellbookTable: SkillSpellbookTable()
com.l2jfrozen.gameserver.datatables.sql.SkillSpellbookTable: int getBookForSkill(int,int)
com.l2jfrozen.gameserver.datatables.sql.SkillSpellbookTable: int getBookForSkill(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.datatables.sql.SkillSpellbookTable: int getBookForSkill(com.l2jfrozen.gameserver.model.L2Skill,int)
com.l2jfrozen.gameserver.datatables.sql.SkillSpellbookTable: void <clinit>()
com.l2jfrozen.gameserver.datatables.sql.SkillTreeTable
com.l2jfrozen.gameserver.datatables.sql.SkillTreeTable: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.sql.SkillTreeTable: com.l2jfrozen.gameserver.datatables.sql.SkillTreeTable _instance
com.l2jfrozen.gameserver.datatables.sql.SkillTreeTable: java.util.Map _skillTrees
com.l2jfrozen.gameserver.datatables.sql.SkillTreeTable: java.util.List _fishingSkillTrees
com.l2jfrozen.gameserver.datatables.sql.SkillTreeTable: java.util.List _expandDwarfCraftSkillTrees
com.l2jfrozen.gameserver.datatables.sql.SkillTreeTable: java.util.List _pledgeSkillTrees
com.l2jfrozen.gameserver.datatables.sql.SkillTreeTable: java.util.List _enchantSkillTrees
com.l2jfrozen.gameserver.datatables.sql.SkillTreeTable: SkillTreeTable()
com.l2jfrozen.gameserver.datatables.sql.SkillTreeTable: com.l2jfrozen.gameserver.datatables.sql.SkillTreeTable getInstance()
com.l2jfrozen.gameserver.datatables.sql.SkillTreeTable: int getExpertiseLevel(int)
com.l2jfrozen.gameserver.datatables.sql.SkillTreeTable: int getMinSkillLevel(int,com.l2jfrozen.gameserver.model.base.ClassId,int)
com.l2jfrozen.gameserver.datatables.sql.SkillTreeTable: int getMinSkillLevel(int,int)
com.l2jfrozen.gameserver.datatables.sql.SkillTreeTable: java.util.Map getSkillTrees()
com.l2jfrozen.gameserver.datatables.sql.SkillTreeTable: com.l2jfrozen.gameserver.model.L2SkillLearn[] getAvailableSkills(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.base.ClassId)
com.l2jfrozen.gameserver.datatables.sql.SkillTreeTable: java.util.List getAvailableSkills(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.base.ClassId,com.l2jfrozen.gameserver.skills.holders.ISkillsHolder)
com.l2jfrozen.gameserver.datatables.sql.SkillTreeTable: com.l2jfrozen.gameserver.model.L2SkillLearn[] getAvailableSkills(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.datatables.sql.SkillTreeTable: com.l2jfrozen.gameserver.model.L2EnchantSkillLearn[] getAvailableEnchantSkills(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.datatables.sql.SkillTreeTable: com.l2jfrozen.gameserver.model.L2PledgeSkillLearn[] getAvailablePledgeSkills(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.datatables.sql.SkillTreeTable: java.util.Collection getAllowedSkills(com.l2jfrozen.gameserver.model.base.ClassId)
com.l2jfrozen.gameserver.datatables.sql.SkillTreeTable: int getMinLevelForNewSkill(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.base.ClassId)
com.l2jfrozen.gameserver.datatables.sql.SkillTreeTable: int getMinLevelForNewSkill(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.datatables.sql.SkillTreeTable: int getSkillCost(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.datatables.sql.SkillTreeTable: int getSkillSpCost(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.datatables.sql.SkillTreeTable: int getSkillExpCost(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.datatables.sql.SkillTreeTable: byte getSkillRate(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.datatables.sql.SkillTreeTable: java.util.Collection getAllAvailableSkills(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.base.ClassId)
com.l2jfrozen.gameserver.datatables.sql.SkillTreeTable: void <clinit>()
com.l2jfrozen.gameserver.datatables.sql.SpawnTable
com.l2jfrozen.gameserver.datatables.sql.SpawnTable: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.sql.SpawnTable: com.l2jfrozen.gameserver.datatables.sql.SpawnTable _instance
com.l2jfrozen.gameserver.datatables.sql.SpawnTable: java.util.Map spawntable
com.l2jfrozen.gameserver.datatables.sql.SpawnTable: int npcSpawnCount
com.l2jfrozen.gameserver.datatables.sql.SpawnTable: int customSpawnCount
com.l2jfrozen.gameserver.datatables.sql.SpawnTable: int _highestId
com.l2jfrozen.gameserver.datatables.sql.SpawnTable: com.l2jfrozen.gameserver.datatables.sql.SpawnTable getInstance()
com.l2jfrozen.gameserver.datatables.sql.SpawnTable: SpawnTable()
com.l2jfrozen.gameserver.datatables.sql.SpawnTable: java.util.Map getSpawnTable()
com.l2jfrozen.gameserver.datatables.sql.SpawnTable: void fillSpawnTable()
com.l2jfrozen.gameserver.datatables.sql.SpawnTable: com.l2jfrozen.gameserver.model.spawn.L2Spawn getTemplate(int)
com.l2jfrozen.gameserver.datatables.sql.SpawnTable: void addNewSpawn(com.l2jfrozen.gameserver.model.spawn.L2Spawn,boolean)
com.l2jfrozen.gameserver.datatables.sql.SpawnTable: void deleteSpawn(com.l2jfrozen.gameserver.model.spawn.L2Spawn,boolean)
com.l2jfrozen.gameserver.datatables.sql.SpawnTable: void reloadAll()
com.l2jfrozen.gameserver.datatables.sql.SpawnTable: void findNPCInstances(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int)
com.l2jfrozen.gameserver.datatables.sql.SpawnTable: java.util.Map getAllTemplates()
com.l2jfrozen.gameserver.datatables.sql.SpawnTable: void <clinit>()
com.l2jfrozen.gameserver.datatables.sql.TeleportLocationTable
com.l2jfrozen.gameserver.datatables.sql.TeleportLocationTable: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.sql.TeleportLocationTable: com.l2jfrozen.gameserver.datatables.sql.TeleportLocationTable _instance
com.l2jfrozen.gameserver.datatables.sql.TeleportLocationTable: java.util.Map teleports
com.l2jfrozen.gameserver.datatables.sql.TeleportLocationTable: com.l2jfrozen.gameserver.datatables.sql.TeleportLocationTable getInstance()
com.l2jfrozen.gameserver.datatables.sql.TeleportLocationTable: TeleportLocationTable()
com.l2jfrozen.gameserver.datatables.sql.TeleportLocationTable: void reloadAll()
com.l2jfrozen.gameserver.datatables.sql.TeleportLocationTable: com.l2jfrozen.gameserver.model.L2TeleportLocation getTemplate(int)
com.l2jfrozen.gameserver.datatables.sql.TeleportLocationTable: void <clinit>()
com.l2jfrozen.gameserver.datatables.sql.TerritoryTable
com.l2jfrozen.gameserver.datatables.sql.TerritoryTable: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.sql.TerritoryTable: java.util.Map _territory
com.l2jfrozen.gameserver.datatables.sql.TerritoryTable: com.l2jfrozen.gameserver.datatables.sql.TerritoryTable getInstance()
com.l2jfrozen.gameserver.datatables.sql.TerritoryTable: TerritoryTable()
com.l2jfrozen.gameserver.datatables.sql.TerritoryTable: int[] getRandomPoint(java.lang.Integer)
com.l2jfrozen.gameserver.datatables.sql.TerritoryTable: int getProcMax(java.lang.Integer)
com.l2jfrozen.gameserver.datatables.sql.TerritoryTable: void reload_data()
com.l2jfrozen.gameserver.datatables.sql.TerritoryTable: void <clinit>()
com.l2jfrozen.gameserver.datatables.sql.TerritoryTable$SingletonHolder
com.l2jfrozen.gameserver.datatables.sql.TerritoryTable$SingletonHolder: com.l2jfrozen.gameserver.datatables.sql.TerritoryTable _instance
com.l2jfrozen.gameserver.datatables.sql.TerritoryTable$SingletonHolder: TerritoryTable$SingletonHolder()
com.l2jfrozen.gameserver.datatables.sql.TerritoryTable$SingletonHolder: void <clinit>()
com.l2jfrozen.gameserver.datatables.sql.TradeListTable
com.l2jfrozen.gameserver.datatables.sql.TradeListTable: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.sql.TradeListTable: com.l2jfrozen.gameserver.datatables.sql.TradeListTable _instance
com.l2jfrozen.gameserver.datatables.sql.TradeListTable: int _nextListId
com.l2jfrozen.gameserver.datatables.sql.TradeListTable: javolution.util.FastMap _lists
com.l2jfrozen.gameserver.datatables.sql.TradeListTable: com.l2jfrozen.gameserver.datatables.sql.TradeListTable getInstance()
com.l2jfrozen.gameserver.datatables.sql.TradeListTable: TradeListTable()
com.l2jfrozen.gameserver.datatables.sql.TradeListTable: void load(boolean)
com.l2jfrozen.gameserver.datatables.sql.TradeListTable: void load()
com.l2jfrozen.gameserver.datatables.sql.TradeListTable: void reloadAll()
com.l2jfrozen.gameserver.datatables.sql.TradeListTable: com.l2jfrozen.gameserver.model.L2TradeList getBuyList(int)
com.l2jfrozen.gameserver.datatables.sql.TradeListTable: javolution.util.FastList getBuyListByNpcId(int)
com.l2jfrozen.gameserver.datatables.sql.TradeListTable: void restoreCount(int)
com.l2jfrozen.gameserver.datatables.sql.TradeListTable: void dataTimerSave(int)
com.l2jfrozen.gameserver.datatables.sql.TradeListTable: void dataCountStore()
com.l2jfrozen.gameserver.datatables.sql.TradeListTable: void <clinit>()
com.l2jfrozen.gameserver.datatables.sql.TradeListTable$RestoreCount
com.l2jfrozen.gameserver.datatables.sql.TradeListTable$RestoreCount: int timer
com.l2jfrozen.gameserver.datatables.sql.TradeListTable$RestoreCount: com.l2jfrozen.gameserver.datatables.sql.TradeListTable this$0
com.l2jfrozen.gameserver.datatables.sql.TradeListTable$RestoreCount: TradeListTable$RestoreCount(com.l2jfrozen.gameserver.datatables.sql.TradeListTable,int)
com.l2jfrozen.gameserver.datatables.sql.TradeListTable$RestoreCount: void run()
com.l2jfrozen.gameserver.datatables.xml.AugmentationData
com.l2jfrozen.gameserver.datatables.xml.AugmentationData: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.xml.AugmentationData: com.l2jfrozen.gameserver.datatables.xml.AugmentationData _instance
com.l2jfrozen.gameserver.datatables.xml.AugmentationData: int STAT_START
com.l2jfrozen.gameserver.datatables.xml.AugmentationData: int STAT_END
com.l2jfrozen.gameserver.datatables.xml.AugmentationData: int STAT_BLOCKSIZE
com.l2jfrozen.gameserver.datatables.xml.AugmentationData: int STAT_SUBBLOCKSIZE
com.l2jfrozen.gameserver.datatables.xml.AugmentationData: int BLUE_START
com.l2jfrozen.gameserver.datatables.xml.AugmentationData: int SKILLS_BLOCKSIZE
com.l2jfrozen.gameserver.datatables.xml.AugmentationData: int BASESTAT_STR
com.l2jfrozen.gameserver.datatables.xml.AugmentationData: int BASESTAT_CON
com.l2jfrozen.gameserver.datatables.xml.AugmentationData: int BASESTAT_INT
com.l2jfrozen.gameserver.datatables.xml.AugmentationData: int BASESTAT_MEN
com.l2jfrozen.gameserver.datatables.xml.AugmentationData: javolution.util.FastList[] _augmentationStats
com.l2jfrozen.gameserver.datatables.xml.AugmentationData: java.util.Map _blueSkills
com.l2jfrozen.gameserver.datatables.xml.AugmentationData: java.util.Map _purpleSkills
com.l2jfrozen.gameserver.datatables.xml.AugmentationData: java.util.Map _redSkills
com.l2jfrozen.gameserver.datatables.xml.AugmentationData: com.l2jfrozen.gameserver.datatables.xml.AugmentationData getInstance()
com.l2jfrozen.gameserver.datatables.xml.AugmentationData: AugmentationData()
com.l2jfrozen.gameserver.datatables.xml.AugmentationData: void reload()
com.l2jfrozen.gameserver.datatables.xml.AugmentationData: void load()
com.l2jfrozen.gameserver.datatables.xml.AugmentationData: com.l2jfrozen.gameserver.model.L2Augmentation generateRandomAugmentation(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance,int,int)
com.l2jfrozen.gameserver.datatables.xml.AugmentationData: javolution.util.FastList getAugStatsById(int)
com.l2jfrozen.gameserver.datatables.xml.AugmentationData: void <clinit>()
com.l2jfrozen.gameserver.datatables.xml.AugmentationData$AugStat
com.l2jfrozen.gameserver.datatables.xml.AugmentationData$AugStat: com.l2jfrozen.gameserver.skills.Stats _stat
com.l2jfrozen.gameserver.datatables.xml.AugmentationData$AugStat: float _value
com.l2jfrozen.gameserver.datatables.xml.AugmentationData$AugStat: com.l2jfrozen.gameserver.datatables.xml.AugmentationData this$0
com.l2jfrozen.gameserver.datatables.xml.AugmentationData$AugStat: AugmentationData$AugStat(com.l2jfrozen.gameserver.datatables.xml.AugmentationData,com.l2jfrozen.gameserver.skills.Stats,float)
com.l2jfrozen.gameserver.datatables.xml.AugmentationData$AugStat: com.l2jfrozen.gameserver.skills.Stats getStat()
com.l2jfrozen.gameserver.datatables.xml.AugmentationData$AugStat: float getValue()
com.l2jfrozen.gameserver.datatables.xml.AugmentationData$augmentationSkill
com.l2jfrozen.gameserver.datatables.xml.AugmentationData$augmentationSkill: int _skillId
com.l2jfrozen.gameserver.datatables.xml.AugmentationData$augmentationSkill: int _maxSkillLevel
com.l2jfrozen.gameserver.datatables.xml.AugmentationData$augmentationSkill: int _augmentationSkillId
com.l2jfrozen.gameserver.datatables.xml.AugmentationData$augmentationSkill: com.l2jfrozen.gameserver.datatables.xml.AugmentationData this$0
com.l2jfrozen.gameserver.datatables.xml.AugmentationData$augmentationSkill: AugmentationData$augmentationSkill(com.l2jfrozen.gameserver.datatables.xml.AugmentationData,int,int,int)
com.l2jfrozen.gameserver.datatables.xml.AugmentationData$augmentationSkill: com.l2jfrozen.gameserver.model.L2Skill getSkill(int)
com.l2jfrozen.gameserver.datatables.xml.AugmentationData$augmentationSkill: int getAugmentationSkillId()
com.l2jfrozen.gameserver.datatables.xml.AugmentationData$augmentationStat
com.l2jfrozen.gameserver.datatables.xml.AugmentationData$augmentationStat: com.l2jfrozen.gameserver.skills.Stats _stat
com.l2jfrozen.gameserver.datatables.xml.AugmentationData$augmentationStat: int _singleSize
com.l2jfrozen.gameserver.datatables.xml.AugmentationData$augmentationStat: int _combinedSize
com.l2jfrozen.gameserver.datatables.xml.AugmentationData$augmentationStat: float[] _singleValues
com.l2jfrozen.gameserver.datatables.xml.AugmentationData$augmentationStat: float[] _combinedValues
com.l2jfrozen.gameserver.datatables.xml.AugmentationData$augmentationStat: com.l2jfrozen.gameserver.datatables.xml.AugmentationData this$0
com.l2jfrozen.gameserver.datatables.xml.AugmentationData$augmentationStat: AugmentationData$augmentationStat(com.l2jfrozen.gameserver.datatables.xml.AugmentationData,com.l2jfrozen.gameserver.skills.Stats,float[],float[])
com.l2jfrozen.gameserver.datatables.xml.AugmentationData$augmentationStat: int getSingleStatSize()
com.l2jfrozen.gameserver.datatables.xml.AugmentationData$augmentationStat: int getCombinedStatSize()
com.l2jfrozen.gameserver.datatables.xml.AugmentationData$augmentationStat: float getSingleStatValue(int)
com.l2jfrozen.gameserver.datatables.xml.AugmentationData$augmentationStat: float getCombinedStatValue(int)
com.l2jfrozen.gameserver.datatables.xml.AugmentationData$augmentationStat: com.l2jfrozen.gameserver.skills.Stats getStat()
com.l2jfrozen.gameserver.datatables.xml.ExperienceData
com.l2jfrozen.gameserver.datatables.xml.ExperienceData: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.xml.ExperienceData: byte MAX_LEVEL
com.l2jfrozen.gameserver.datatables.xml.ExperienceData: byte MAX_PET_LEVEL
com.l2jfrozen.gameserver.datatables.xml.ExperienceData: java.util.Map _expTable
com.l2jfrozen.gameserver.datatables.xml.ExperienceData: ExperienceData()
com.l2jfrozen.gameserver.datatables.xml.ExperienceData: void loadData()
com.l2jfrozen.gameserver.datatables.xml.ExperienceData: long getExpForLevel(int)
com.l2jfrozen.gameserver.datatables.xml.ExperienceData: byte getMaxLevel()
com.l2jfrozen.gameserver.datatables.xml.ExperienceData: byte getMaxPetLevel()
com.l2jfrozen.gameserver.datatables.xml.ExperienceData: com.l2jfrozen.gameserver.datatables.xml.ExperienceData getInstance()
com.l2jfrozen.gameserver.datatables.xml.ExperienceData: ExperienceData(com.l2jfrozen.gameserver.datatables.xml.ExperienceData$1)
com.l2jfrozen.gameserver.datatables.xml.ExperienceData: void <clinit>()
com.l2jfrozen.gameserver.datatables.xml.ExperienceData$1
com.l2jfrozen.gameserver.datatables.xml.ExperienceData$SingletonHolder
com.l2jfrozen.gameserver.datatables.xml.ExperienceData$SingletonHolder: com.l2jfrozen.gameserver.datatables.xml.ExperienceData _instance
com.l2jfrozen.gameserver.datatables.xml.ExperienceData$SingletonHolder: ExperienceData$SingletonHolder()
com.l2jfrozen.gameserver.datatables.xml.ExperienceData$SingletonHolder: void <clinit>()
com.l2jfrozen.gameserver.datatables.xml.ZoneData
com.l2jfrozen.gameserver.datatables.xml.ZoneData: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.datatables.xml.ZoneData: com.l2jfrozen.gameserver.datatables.xml.ZoneData _instance
com.l2jfrozen.gameserver.datatables.xml.ZoneData: com.l2jfrozen.gameserver.datatables.xml.ZoneData getInstance()
com.l2jfrozen.gameserver.datatables.xml.ZoneData: ZoneData()
com.l2jfrozen.gameserver.datatables.xml.ZoneData: void reload()
com.l2jfrozen.gameserver.datatables.xml.ZoneData: void load()
com.l2jfrozen.gameserver.datatables.xml.ZoneData: void <clinit>()
com.l2jfrozen.gameserver.geo.GeoData
com.l2jfrozen.gameserver.geo.GeoData: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.geo.GeoData: GeoData()
com.l2jfrozen.gameserver.geo.GeoData: com.l2jfrozen.gameserver.geo.GeoData getInstance()
com.l2jfrozen.gameserver.geo.GeoData: short getType(int,int)
com.l2jfrozen.gameserver.geo.GeoData: short getHeight(int,int,int)
com.l2jfrozen.gameserver.geo.GeoData: short getSpawnHeight(int,int,int,int,int)
com.l2jfrozen.gameserver.geo.GeoData: java.lang.String geoPosition(int,int)
com.l2jfrozen.gameserver.geo.GeoData: boolean canSeeTarget(com.l2jfrozen.gameserver.model.L2Object,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.geo.GeoData: boolean canSeeTarget(com.l2jfrozen.gameserver.model.L2Object,com.l2jfrozen.common.util.Point3D)
com.l2jfrozen.gameserver.geo.GeoData: boolean canSeeTarget(int,int,int,int,int,int)
com.l2jfrozen.gameserver.geo.GeoData: boolean canSeeTargetDebug(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.geo.GeoData: short getNSWE(int,int,int)
com.l2jfrozen.gameserver.geo.GeoData: com.l2jfrozen.gameserver.model.Location moveCheck(int,int,int,int,int,int)
com.l2jfrozen.gameserver.geo.GeoData: boolean canMoveFromToTarget(int,int,int,int,int,int)
com.l2jfrozen.gameserver.geo.GeoData: void addGeoDataBug(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.geo.GeoData: void unloadGeodata(byte,byte)
com.l2jfrozen.gameserver.geo.GeoData: boolean loadGeodataFile(byte,byte)
com.l2jfrozen.gameserver.geo.GeoData: boolean hasGeo(int,int)
com.l2jfrozen.gameserver.geo.GeoData: com.l2jfrozen.gameserver.geo.pathfinding.Node[] getNeighbors(com.l2jfrozen.gameserver.geo.pathfinding.Node)
com.l2jfrozen.gameserver.geo.GeoData: void <clinit>()
com.l2jfrozen.gameserver.geo.GeoData$SingletonHolder
com.l2jfrozen.gameserver.geo.GeoData$SingletonHolder: com.l2jfrozen.gameserver.geo.GeoData INSTANCE
com.l2jfrozen.gameserver.geo.GeoData$SingletonHolder: GeoData$SingletonHolder()
com.l2jfrozen.gameserver.geo.GeoData$SingletonHolder: void <clinit>()
com.l2jfrozen.gameserver.geo.GeoEngine
com.l2jfrozen.gameserver.geo.GeoEngine: byte _e
com.l2jfrozen.gameserver.geo.GeoEngine: byte _w
com.l2jfrozen.gameserver.geo.GeoEngine: byte _s
com.l2jfrozen.gameserver.geo.GeoEngine: byte _n
com.l2jfrozen.gameserver.geo.GeoEngine: com.l2jfrozen.gameserver.geo.util.LookupTable _geodata
com.l2jfrozen.gameserver.geo.GeoEngine: com.l2jfrozen.gameserver.geo.util.LookupTable _geodataIndex
com.l2jfrozen.gameserver.geo.GeoEngine: java.io.BufferedOutputStream _geoBugsOut
com.l2jfrozen.gameserver.geo.GeoEngine: com.l2jfrozen.gameserver.geo.GeoEngine getInstance()
com.l2jfrozen.gameserver.geo.GeoEngine: GeoEngine()
com.l2jfrozen.gameserver.geo.GeoEngine: short getType(int,int)
com.l2jfrozen.gameserver.geo.GeoEngine: short getHeight(int,int,int)
com.l2jfrozen.gameserver.geo.GeoEngine: short getSpawnHeight(int,int,int,int,int)
com.l2jfrozen.gameserver.geo.GeoEngine: java.lang.String geoPosition(int,int)
com.l2jfrozen.gameserver.geo.GeoEngine: boolean canSeeTarget(com.l2jfrozen.gameserver.model.L2Object,com.l2jfrozen.common.util.Point3D)
com.l2jfrozen.gameserver.geo.GeoEngine: boolean canSeeTarget(com.l2jfrozen.gameserver.model.L2Object,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.geo.GeoEngine: boolean canSeeTargetDebug(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.geo.GeoEngine: short getNSWE(int,int,int)
com.l2jfrozen.gameserver.geo.GeoEngine: boolean canMoveFromToTarget(int,int,int,int,int,int)
com.l2jfrozen.gameserver.geo.GeoEngine: com.l2jfrozen.gameserver.model.Location moveCheck(int,int,int,int,int,int)
com.l2jfrozen.gameserver.geo.GeoEngine: void addGeoDataBug(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.geo.GeoEngine: boolean canSeeTarget(int,int,int,int,int,int)
com.l2jfrozen.gameserver.geo.GeoEngine: boolean hasGeo(int,int)
com.l2jfrozen.gameserver.geo.GeoEngine: boolean canSee(int,int,double,int,int,int)
com.l2jfrozen.gameserver.geo.GeoEngine: boolean canSeeDebug(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int,double,int,int,int)
com.l2jfrozen.gameserver.geo.GeoEngine: com.l2jfrozen.gameserver.model.Location moveCheck(com.l2jfrozen.gameserver.model.Location,com.l2jfrozen.gameserver.model.Location,int,int,double,int,int,int)
com.l2jfrozen.gameserver.geo.GeoEngine: byte sign(int)
com.l2jfrozen.gameserver.geo.GeoEngine: void nInitGeodata()
com.l2jfrozen.gameserver.geo.GeoEngine: void unloadGeodata(byte,byte)
com.l2jfrozen.gameserver.geo.GeoEngine: boolean loadGeodataFile(byte,byte)
com.l2jfrozen.gameserver.geo.GeoEngine: short getRegionOffset(int,int)
com.l2jfrozen.gameserver.geo.GeoEngine: int getBlock(int)
com.l2jfrozen.gameserver.geo.GeoEngine: int getCell(int)
com.l2jfrozen.gameserver.geo.GeoEngine: short nGetType(int,int)
com.l2jfrozen.gameserver.geo.GeoEngine: short nGetHeight(int,int,int)
com.l2jfrozen.gameserver.geo.GeoEngine: short nGetUpperHeight(int,int,int)
com.l2jfrozen.gameserver.geo.GeoEngine: short nGetSpawnHeight(int,int,int,int,int)
com.l2jfrozen.gameserver.geo.GeoEngine: double nCanMoveNext(int,int,int,int,int,int)
com.l2jfrozen.gameserver.geo.GeoEngine: boolean nLOS(int,int,int,int,int,double,int,boolean)
com.l2jfrozen.gameserver.geo.GeoEngine: short nGetNSWE(int,int,int)
com.l2jfrozen.gameserver.geo.GeoEngine: com.l2jfrozen.gameserver.geo.pathfinding.Node[] getNeighbors(com.l2jfrozen.gameserver.geo.pathfinding.Node)
com.l2jfrozen.gameserver.geo.GeoEngine: boolean checkNSWE(short,int,int,int,int)
com.l2jfrozen.gameserver.geo.GeoEngine$SingletonHolder
com.l2jfrozen.gameserver.geo.GeoEngine$SingletonHolder: com.l2jfrozen.gameserver.geo.GeoEngine INSTANCE
com.l2jfrozen.gameserver.geo.GeoEngine$SingletonHolder: GeoEngine$SingletonHolder()
com.l2jfrozen.gameserver.geo.GeoEngine$SingletonHolder: void <clinit>()
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorListener
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorListener: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorListener: int PORT
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorListener: java.net.ServerSocket _serverSocket
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorListener: com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorThread _geoEditor
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorListener: com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorListener getInstance()
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorListener: GeoEditorListener()
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorListener: com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorThread getThread()
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorListener: java.lang.String getStatus()
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorListener: void run()
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorListener: void <clinit>()
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorListener$SingletonHolder
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorListener$SingletonHolder: com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorListener INSTANCE
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorListener$SingletonHolder: GeoEditorListener$SingletonHolder()
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorListener$SingletonHolder: void <clinit>()
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorThread
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorThread: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorThread: boolean _working
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorThread: int _mode
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorThread: int _sendDelay
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorThread: java.net.Socket _geSocket
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorThread: java.io.OutputStream _out
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorThread: javolution.util.FastList _gms
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorThread: GeoEditorThread(java.net.Socket)
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorThread: void interrupt()
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorThread: void run()
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorThread: void sendGmPosition(int,int,short)
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorThread: void sendGmPosition(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorThread: void sendPing()
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorThread: void writeD(int)
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorThread: void writeH(int)
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorThread: void writeC(int)
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorThread: void setMode(int)
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorThread: void setTimer(int)
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorThread: void addGM(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorThread: void removeGM(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorThread: boolean isSend(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorThread: boolean isConnected()
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorThread: boolean isWorking()
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorThread: int getMode()
com.l2jfrozen.gameserver.geo.geoeditorcon.GeoEditorThread: void <clinit>()
com.l2jfrozen.gameserver.geo.pathfinding.Node
com.l2jfrozen.gameserver.geo.pathfinding.Node: int _neighborsIdx
com.l2jfrozen.gameserver.geo.pathfinding.Node: com.l2jfrozen.gameserver.geo.pathfinding.Node[] _neighbors
com.l2jfrozen.gameserver.geo.pathfinding.Node: com.l2jfrozen.gameserver.geo.pathfinding.Node _parent
com.l2jfrozen.gameserver.geo.pathfinding.Node: short _cost
com.l2jfrozen.gameserver.geo.pathfinding.Node: Node(int)
com.l2jfrozen.gameserver.geo.pathfinding.Node: void setParent(com.l2jfrozen.gameserver.geo.pathfinding.Node)
com.l2jfrozen.gameserver.geo.pathfinding.Node: void setCost(int)
com.l2jfrozen.gameserver.geo.pathfinding.Node: void attachNeighbors()
com.l2jfrozen.gameserver.geo.pathfinding.Node: com.l2jfrozen.gameserver.geo.pathfinding.Node[] getNeighbors()
com.l2jfrozen.gameserver.geo.pathfinding.Node: com.l2jfrozen.gameserver.geo.pathfinding.Node getParent()
com.l2jfrozen.gameserver.geo.pathfinding.Node: short getCost()
com.l2jfrozen.gameserver.geo.pathfinding.Node: int getX()
com.l2jfrozen.gameserver.geo.pathfinding.Node: int getY()
com.l2jfrozen.gameserver.geo.pathfinding.Node: short getZ()
com.l2jfrozen.gameserver.geo.pathfinding.Node: void setZ(short)
com.l2jfrozen.gameserver.geo.pathfinding.Node: int getNodeX()
com.l2jfrozen.gameserver.geo.pathfinding.Node: int getNodeY()
com.l2jfrozen.gameserver.geo.pathfinding.Node: int hashCode()
com.l2jfrozen.gameserver.geo.pathfinding.Node: boolean equals(java.lang.Object)
com.l2jfrozen.gameserver.geo.pathfinding.Node: int hash(int)
com.l2jfrozen.gameserver.geo.pathfinding.PathFinding
com.l2jfrozen.gameserver.geo.pathfinding.PathFinding: PathFinding()
com.l2jfrozen.gameserver.geo.pathfinding.PathFinding: com.l2jfrozen.gameserver.geo.pathfinding.PathFinding getInstance()
com.l2jfrozen.gameserver.geo.pathfinding.PathFinding: com.l2jfrozen.gameserver.geo.pathfinding.Node[] findPath(int,int,int,int,int,int)
com.l2jfrozen.gameserver.geo.pathfinding.PathFinding: com.l2jfrozen.gameserver.geo.pathfinding.Node[] readNeighbors(com.l2jfrozen.gameserver.geo.pathfinding.Node,int)
com.l2jfrozen.gameserver.geo.pathfinding.PathFinding: com.l2jfrozen.gameserver.geo.pathfinding.Node[] search(com.l2jfrozen.gameserver.geo.pathfinding.Node,com.l2jfrozen.gameserver.geo.pathfinding.Node)
com.l2jfrozen.gameserver.geo.pathfinding.PathFinding: com.l2jfrozen.gameserver.geo.pathfinding.Node[] searchByClosest(com.l2jfrozen.gameserver.geo.pathfinding.Node,com.l2jfrozen.gameserver.geo.pathfinding.Node)
com.l2jfrozen.gameserver.geo.pathfinding.PathFinding: com.l2jfrozen.gameserver.geo.pathfinding.Node[] searchByClosest2(com.l2jfrozen.gameserver.geo.pathfinding.Node,com.l2jfrozen.gameserver.geo.pathfinding.Node)
com.l2jfrozen.gameserver.geo.pathfinding.PathFinding: com.l2jfrozen.gameserver.geo.pathfinding.Node[] searchAStar(com.l2jfrozen.gameserver.geo.pathfinding.Node,com.l2jfrozen.gameserver.geo.pathfinding.Node)
com.l2jfrozen.gameserver.geo.pathfinding.PathFinding: com.l2jfrozen.gameserver.geo.pathfinding.Node[] constructPath(com.l2jfrozen.gameserver.geo.pathfinding.Node)
com.l2jfrozen.gameserver.geo.pathfinding.PathFinding: com.l2jfrozen.gameserver.geo.pathfinding.Node[] constructPath2(com.l2jfrozen.gameserver.geo.pathfinding.Node)
com.l2jfrozen.gameserver.geo.pathfinding.PathFinding: short getNodePos(int)
com.l2jfrozen.gameserver.geo.pathfinding.PathFinding: short getNodeBlock(int)
com.l2jfrozen.gameserver.geo.pathfinding.PathFinding: byte getRegionX(int)
com.l2jfrozen.gameserver.geo.pathfinding.PathFinding: byte getRegionY(int)
com.l2jfrozen.gameserver.geo.pathfinding.PathFinding: short getRegionOffset(byte,byte)
com.l2jfrozen.gameserver.geo.pathfinding.PathFinding: int calculateWorldX(short)
com.l2jfrozen.gameserver.geo.pathfinding.PathFinding: int calculateWorldY(short)
com.l2jfrozen.gameserver.geo.pathfinding.cellnodes.CellNode
com.l2jfrozen.gameserver.geo.pathfinding.cellnodes.CellNode: int _x
com.l2jfrozen.gameserver.geo.pathfinding.cellnodes.CellNode: int _y
com.l2jfrozen.gameserver.geo.pathfinding.cellnodes.CellNode: short _z
com.l2jfrozen.gameserver.geo.pathfinding.cellnodes.CellNode: CellNode(int,int,short,int)
com.l2jfrozen.gameserver.geo.pathfinding.cellnodes.CellNode: int getX()
com.l2jfrozen.gameserver.geo.pathfinding.cellnodes.CellNode: int getY()
com.l2jfrozen.gameserver.geo.pathfinding.cellnodes.CellNode: short getZ()
com.l2jfrozen.gameserver.geo.pathfinding.cellnodes.CellNode: void setZ(short)
com.l2jfrozen.gameserver.geo.pathfinding.cellnodes.CellNode: int getNodeX()
com.l2jfrozen.gameserver.geo.pathfinding.cellnodes.CellNode: int getNodeY()
com.l2jfrozen.gameserver.geo.pathfinding.cellnodes.CellPathFinding
com.l2jfrozen.gameserver.geo.pathfinding.cellnodes.CellPathFinding: com.l2jfrozen.gameserver.geo.pathfinding.cellnodes.CellPathFinding getInstance()
com.l2jfrozen.gameserver.geo.pathfinding.cellnodes.CellPathFinding: com.l2jfrozen.gameserver.geo.pathfinding.Node[] findPath(int,int,int,int,int,int)
com.l2jfrozen.gameserver.geo.pathfinding.cellnodes.CellPathFinding: com.l2jfrozen.gameserver.geo.pathfinding.Node[] readNeighbors(com.l2jfrozen.gameserver.geo.pathfinding.Node,int)
com.l2jfrozen.gameserver.geo.pathfinding.cellnodes.CellPathFinding: com.l2jfrozen.gameserver.geo.pathfinding.Node readNode(int,int,short)
com.l2jfrozen.gameserver.geo.pathfinding.cellnodes.CellPathFinding: CellPathFinding()
com.l2jfrozen.gameserver.geo.pathfinding.cellnodes.CellPathFinding$SingletonHolder
com.l2jfrozen.gameserver.geo.pathfinding.cellnodes.CellPathFinding$SingletonHolder: com.l2jfrozen.gameserver.geo.pathfinding.cellnodes.CellPathFinding INSTANCE
com.l2jfrozen.gameserver.geo.pathfinding.cellnodes.CellPathFinding$SingletonHolder: CellPathFinding$SingletonHolder()
com.l2jfrozen.gameserver.geo.pathfinding.cellnodes.CellPathFinding$SingletonHolder: void <clinit>()
com.l2jfrozen.gameserver.geo.pathfinding.geonodes.GeoNode
com.l2jfrozen.gameserver.geo.pathfinding.geonodes.GeoNode: short _x
com.l2jfrozen.gameserver.geo.pathfinding.geonodes.GeoNode: short _y
com.l2jfrozen.gameserver.geo.pathfinding.geonodes.GeoNode: short _z
com.l2jfrozen.gameserver.geo.pathfinding.geonodes.GeoNode: GeoNode(short,short,short,int)
com.l2jfrozen.gameserver.geo.pathfinding.geonodes.GeoNode: int getX()
com.l2jfrozen.gameserver.geo.pathfinding.geonodes.GeoNode: int getY()
com.l2jfrozen.gameserver.geo.pathfinding.geonodes.GeoNode: short getZ()
com.l2jfrozen.gameserver.geo.pathfinding.geonodes.GeoNode: void setZ(short)
com.l2jfrozen.gameserver.geo.pathfinding.geonodes.GeoNode: int getNodeX()
com.l2jfrozen.gameserver.geo.pathfinding.geonodes.GeoNode: int getNodeY()
com.l2jfrozen.gameserver.geo.pathfinding.geonodes.GeoPathFinding
com.l2jfrozen.gameserver.geo.pathfinding.geonodes.GeoPathFinding: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.geo.pathfinding.geonodes.GeoPathFinding: com.l2jfrozen.gameserver.geo.util.LookupTable _pathNodes
com.l2jfrozen.gameserver.geo.pathfinding.geonodes.GeoPathFinding: com.l2jfrozen.gameserver.geo.util.LookupTable _pathNodesIndex
com.l2jfrozen.gameserver.geo.pathfinding.geonodes.GeoPathFinding: com.l2jfrozen.gameserver.geo.pathfinding.geonodes.GeoPathFinding getInstance()
com.l2jfrozen.gameserver.geo.pathfinding.geonodes.GeoPathFinding: boolean pathNodesExist(short)
com.l2jfrozen.gameserver.geo.pathfinding.geonodes.GeoPathFinding: com.l2jfrozen.gameserver.geo.pathfinding.Node[] findPath(int,int,int,int,int,int)
com.l2jfrozen.gameserver.geo.pathfinding.geonodes.GeoPathFinding: com.l2jfrozen.gameserver.geo.pathfinding.Node[] readNeighbors(com.l2jfrozen.gameserver.geo.pathfinding.Node,int)
com.l2jfrozen.gameserver.geo.pathfinding.geonodes.GeoPathFinding: com.l2jfrozen.gameserver.geo.pathfinding.Node readNode(short,short,byte)
com.l2jfrozen.gameserver.geo.pathfinding.geonodes.GeoPathFinding: com.l2jfrozen.gameserver.geo.pathfinding.Node readNode(int,int,short)
com.l2jfrozen.gameserver.geo.pathfinding.geonodes.GeoPathFinding: GeoPathFinding()
com.l2jfrozen.gameserver.geo.pathfinding.geonodes.GeoPathFinding: void LoadPathNodeFile(byte,byte)
com.l2jfrozen.gameserver.geo.pathfinding.geonodes.GeoPathFinding: void <clinit>()
com.l2jfrozen.gameserver.geo.pathfinding.geonodes.GeoPathFinding$SingletonHolder
com.l2jfrozen.gameserver.geo.pathfinding.geonodes.GeoPathFinding$SingletonHolder: com.l2jfrozen.gameserver.geo.pathfinding.geonodes.GeoPathFinding INSTANCE
com.l2jfrozen.gameserver.geo.pathfinding.geonodes.GeoPathFinding$SingletonHolder: GeoPathFinding$SingletonHolder()
com.l2jfrozen.gameserver.geo.pathfinding.geonodes.GeoPathFinding$SingletonHolder: void <clinit>()
com.l2jfrozen.gameserver.geo.pathfinding.utils.BinaryNodeHeap
com.l2jfrozen.gameserver.geo.pathfinding.utils.BinaryNodeHeap: com.l2jfrozen.gameserver.geo.pathfinding.Node[] _list
com.l2jfrozen.gameserver.geo.pathfinding.utils.BinaryNodeHeap: com.l2jfrozen.gameserver.geo.util.L2FastSet _set
com.l2jfrozen.gameserver.geo.pathfinding.utils.BinaryNodeHeap: int _size
com.l2jfrozen.gameserver.geo.pathfinding.utils.BinaryNodeHeap: com.l2jfrozen.gameserver.geo.util.ObjectPool POOL
com.l2jfrozen.gameserver.geo.pathfinding.utils.BinaryNodeHeap: BinaryNodeHeap()
com.l2jfrozen.gameserver.geo.pathfinding.utils.BinaryNodeHeap: void add(com.l2jfrozen.gameserver.geo.pathfinding.Node)
com.l2jfrozen.gameserver.geo.pathfinding.utils.BinaryNodeHeap: com.l2jfrozen.gameserver.geo.pathfinding.Node removeFirst()
com.l2jfrozen.gameserver.geo.pathfinding.utils.BinaryNodeHeap: boolean contains(com.l2jfrozen.gameserver.geo.pathfinding.Node)
com.l2jfrozen.gameserver.geo.pathfinding.utils.BinaryNodeHeap: boolean isEmpty()
com.l2jfrozen.gameserver.geo.pathfinding.utils.BinaryNodeHeap: com.l2jfrozen.gameserver.geo.pathfinding.utils.BinaryNodeHeap newInstance()
com.l2jfrozen.gameserver.geo.pathfinding.utils.BinaryNodeHeap: void recycle(com.l2jfrozen.gameserver.geo.pathfinding.utils.BinaryNodeHeap)
com.l2jfrozen.gameserver.geo.pathfinding.utils.BinaryNodeHeap: void <clinit>()
com.l2jfrozen.gameserver.geo.pathfinding.utils.BinaryNodeHeap$1
com.l2jfrozen.gameserver.geo.pathfinding.utils.BinaryNodeHeap$1: BinaryNodeHeap$1()
com.l2jfrozen.gameserver.geo.pathfinding.utils.BinaryNodeHeap$1: void reset(com.l2jfrozen.gameserver.geo.pathfinding.utils.BinaryNodeHeap)
com.l2jfrozen.gameserver.geo.pathfinding.utils.BinaryNodeHeap$1: com.l2jfrozen.gameserver.geo.pathfinding.utils.BinaryNodeHeap create()
com.l2jfrozen.gameserver.geo.pathfinding.utils.BinaryNodeHeap$1: java.lang.Object create()
com.l2jfrozen.gameserver.geo.pathfinding.utils.BinaryNodeHeap$1: void reset(java.lang.Object)
com.l2jfrozen.gameserver.geo.pathfinding.utils.CellNodeMap
com.l2jfrozen.gameserver.geo.pathfinding.utils.CellNodeMap: com.l2jfrozen.gameserver.geo.util.L2FastSet _cellIndex
com.l2jfrozen.gameserver.geo.pathfinding.utils.CellNodeMap: com.l2jfrozen.gameserver.geo.util.ObjectPool POOL
com.l2jfrozen.gameserver.geo.pathfinding.utils.CellNodeMap: CellNodeMap()
com.l2jfrozen.gameserver.geo.pathfinding.utils.CellNodeMap: void add(com.l2jfrozen.gameserver.geo.pathfinding.Node)
com.l2jfrozen.gameserver.geo.pathfinding.utils.CellNodeMap: boolean contains(com.l2jfrozen.gameserver.geo.pathfinding.Node)
com.l2jfrozen.gameserver.geo.pathfinding.utils.CellNodeMap: com.l2jfrozen.gameserver.geo.pathfinding.utils.CellNodeMap newInstance()
com.l2jfrozen.gameserver.geo.pathfinding.utils.CellNodeMap: void recycle(com.l2jfrozen.gameserver.geo.pathfinding.utils.CellNodeMap)
com.l2jfrozen.gameserver.geo.pathfinding.utils.CellNodeMap: void <clinit>()
com.l2jfrozen.gameserver.geo.pathfinding.utils.CellNodeMap$1
com.l2jfrozen.gameserver.geo.pathfinding.utils.CellNodeMap$1: CellNodeMap$1()
com.l2jfrozen.gameserver.geo.pathfinding.utils.CellNodeMap$1: void reset(com.l2jfrozen.gameserver.geo.pathfinding.utils.CellNodeMap)
com.l2jfrozen.gameserver.geo.pathfinding.utils.CellNodeMap$1: com.l2jfrozen.gameserver.geo.pathfinding.utils.CellNodeMap create()
com.l2jfrozen.gameserver.geo.pathfinding.utils.CellNodeMap$1: java.lang.Object create()
com.l2jfrozen.gameserver.geo.pathfinding.utils.CellNodeMap$1: void reset(java.lang.Object)
com.l2jfrozen.gameserver.geo.util.Bunch
com.l2jfrozen.gameserver.geo.util.Bunch: int size()
com.l2jfrozen.gameserver.geo.util.Bunch: com.l2jfrozen.gameserver.geo.util.Bunch add(java.lang.Object)
com.l2jfrozen.gameserver.geo.util.Bunch: com.l2jfrozen.gameserver.geo.util.Bunch remove(java.lang.Object)
com.l2jfrozen.gameserver.geo.util.Bunch: void clear()
com.l2jfrozen.gameserver.geo.util.Bunch: boolean isEmpty()
com.l2jfrozen.gameserver.geo.util.Bunch: java.lang.Object get(int)
com.l2jfrozen.gameserver.geo.util.Bunch: java.lang.Object set(int,java.lang.Object)
com.l2jfrozen.gameserver.geo.util.Bunch: java.lang.Object remove(int)
com.l2jfrozen.gameserver.geo.util.Bunch: boolean contains(java.lang.Object)
com.l2jfrozen.gameserver.geo.util.Bunch: com.l2jfrozen.gameserver.geo.util.Bunch addAll(java.lang.Iterable)
com.l2jfrozen.gameserver.geo.util.Bunch: com.l2jfrozen.gameserver.geo.util.Bunch addAll(java.lang.Object[])
com.l2jfrozen.gameserver.geo.util.Bunch: java.lang.Object[] moveToArray()
com.l2jfrozen.gameserver.geo.util.Bunch: java.lang.Object[] moveToArray(java.lang.Object[])
com.l2jfrozen.gameserver.geo.util.Bunch: java.lang.Object[] moveToArray(java.lang.Class)
com.l2jfrozen.gameserver.geo.util.Bunch: java.util.List moveToList(java.util.List)
com.l2jfrozen.gameserver.geo.util.Bunch: com.l2jfrozen.gameserver.geo.util.Bunch cleanByFilter(com.l2jfrozen.gameserver.geo.util.L2Collections$Filter)
com.l2jfrozen.gameserver.geo.util.L2Arrays
com.l2jfrozen.gameserver.geo.util.L2Arrays: L2Arrays()
com.l2jfrozen.gameserver.geo.util.L2Arrays: int countNull(java.lang.Object[])
com.l2jfrozen.gameserver.geo.util.L2Arrays: int countNotNull(java.lang.Object[])
com.l2jfrozen.gameserver.geo.util.L2Arrays: java.lang.Object[] compact(java.lang.Object[])
com.l2jfrozen.gameserver.geo.util.L2Arrays: java.util.List asForeachSafeList(java.lang.Object[])
com.l2jfrozen.gameserver.geo.util.L2Arrays: java.util.List asForeachSafeList(boolean,java.lang.Object[])
com.l2jfrozen.gameserver.geo.util.L2Arrays: java.lang.Iterable iterable(java.lang.Object[])
com.l2jfrozen.gameserver.geo.util.L2Arrays: java.lang.Iterable iterable(java.lang.Object[],boolean)
com.l2jfrozen.gameserver.geo.util.L2Arrays: java.util.Iterator iterator(java.lang.Object[])
com.l2jfrozen.gameserver.geo.util.L2Arrays: java.util.Iterator iterator(java.lang.Object[],boolean)
com.l2jfrozen.gameserver.geo.util.L2Arrays$ArrayIterable
com.l2jfrozen.gameserver.geo.util.L2Arrays$ArrayIterable: java.lang.Object[] _array
com.l2jfrozen.gameserver.geo.util.L2Arrays$ArrayIterable: L2Arrays$ArrayIterable(java.lang.Object[])
com.l2jfrozen.gameserver.geo.util.L2Arrays$ArrayIterable: java.util.Iterator iterator()
com.l2jfrozen.gameserver.geo.util.L2Arrays$ArrayIterator
com.l2jfrozen.gameserver.geo.util.L2Arrays$ArrayIterator: java.lang.Object[] _array
com.l2jfrozen.gameserver.geo.util.L2Arrays$ArrayIterator: int _index
com.l2jfrozen.gameserver.geo.util.L2Arrays$ArrayIterator: L2Arrays$ArrayIterator(java.lang.Object[])
com.l2jfrozen.gameserver.geo.util.L2Arrays$ArrayIterator: boolean allowElement(java.lang.Object)
com.l2jfrozen.gameserver.geo.util.L2Arrays$ArrayIterator: boolean hasNext()
com.l2jfrozen.gameserver.geo.util.L2Arrays$ArrayIterator: java.lang.Object next()
com.l2jfrozen.gameserver.geo.util.L2Arrays$ArrayIterator: void remove()
com.l2jfrozen.gameserver.geo.util.L2Arrays$NullFreeArrayIterable
com.l2jfrozen.gameserver.geo.util.L2Arrays$NullFreeArrayIterable: L2Arrays$NullFreeArrayIterable(java.lang.Object[])
com.l2jfrozen.gameserver.geo.util.L2Arrays$NullFreeArrayIterable: java.util.Iterator iterator()
com.l2jfrozen.gameserver.geo.util.L2Arrays$NullFreeArrayIterator
com.l2jfrozen.gameserver.geo.util.L2Arrays$NullFreeArrayIterator: L2Arrays$NullFreeArrayIterator(java.lang.Object[])
com.l2jfrozen.gameserver.geo.util.L2Arrays$NullFreeArrayIterator: boolean allowElement(java.lang.Object)
com.l2jfrozen.gameserver.geo.util.L2Collections
com.l2jfrozen.gameserver.geo.util.L2Collections: java.lang.Object[] EMPTY_ARRAY
com.l2jfrozen.gameserver.geo.util.L2Collections: com.l2jfrozen.gameserver.geo.util.ObjectPool ARRAY_LISTS
com.l2jfrozen.gameserver.geo.util.L2Collections: com.l2jfrozen.gameserver.geo.util.ObjectPool L2_FAST_SETS
com.l2jfrozen.gameserver.geo.util.L2Collections: L2Collections()
com.l2jfrozen.gameserver.geo.util.L2Collections: java.util.ListIterator emptyListIterator()
com.l2jfrozen.gameserver.geo.util.L2Collections: java.util.Collection emptyCollection()
com.l2jfrozen.gameserver.geo.util.L2Collections: java.util.Set emptySet()
com.l2jfrozen.gameserver.geo.util.L2Collections: java.util.List emptyList()
com.l2jfrozen.gameserver.geo.util.L2Collections: java.util.Map emptyMap()
com.l2jfrozen.gameserver.geo.util.L2Collections: com.l2jfrozen.gameserver.geo.util.Bunch emptyBunch()
com.l2jfrozen.gameserver.geo.util.L2Collections: java.lang.Iterable filteredIterable(java.lang.Class,java.lang.Iterable)
com.l2jfrozen.gameserver.geo.util.L2Collections: java.lang.Iterable filteredIterable(java.lang.Class,java.lang.Iterable,com.l2jfrozen.gameserver.geo.util.L2Collections$Filter)
com.l2jfrozen.gameserver.geo.util.L2Collections: java.util.Iterator filteredIterator(java.lang.Class,java.lang.Iterable)
com.l2jfrozen.gameserver.geo.util.L2Collections: java.util.Iterator filteredIterator(java.lang.Class,java.lang.Iterable,com.l2jfrozen.gameserver.geo.util.L2Collections$Filter)
com.l2jfrozen.gameserver.geo.util.L2Collections: java.lang.Iterable convertingIterable(java.lang.Iterable,com.l2jfrozen.gameserver.geo.util.L2Collections$Converter)
com.l2jfrozen.gameserver.geo.util.L2Collections: java.util.Iterator convertingIterator(java.lang.Iterable,com.l2jfrozen.gameserver.geo.util.L2Collections$Converter)
com.l2jfrozen.gameserver.geo.util.L2Collections: java.lang.Iterable concatenatedIterable(java.lang.Iterable,java.lang.Iterable)
com.l2jfrozen.gameserver.geo.util.L2Collections: java.lang.Iterable concatenatedIterable(java.lang.Iterable,java.lang.Iterable,java.lang.Iterable)
com.l2jfrozen.gameserver.geo.util.L2Collections: java.lang.Iterable concatenatedIterable(java.lang.Iterable[])
com.l2jfrozen.gameserver.geo.util.L2Collections: java.util.Iterator concatenatedIterator(java.lang.Iterable,java.lang.Iterable)
com.l2jfrozen.gameserver.geo.util.L2Collections: java.util.Iterator concatenatedIterator(java.lang.Iterable,java.lang.Iterable,java.lang.Iterable)
com.l2jfrozen.gameserver.geo.util.L2Collections: java.util.Iterator concatenatedIterator(java.lang.Iterable[])
com.l2jfrozen.gameserver.geo.util.L2Collections: java.util.ArrayList newArrayList()
com.l2jfrozen.gameserver.geo.util.L2Collections: void recycle(java.util.ArrayList)
com.l2jfrozen.gameserver.geo.util.L2Collections: com.l2jfrozen.gameserver.geo.util.L2FastSet newL2FastSet()
com.l2jfrozen.gameserver.geo.util.L2Collections: void recycle(com.l2jfrozen.gameserver.geo.util.L2FastSet)
com.l2jfrozen.gameserver.geo.util.L2Collections: void <clinit>()
com.l2jfrozen.gameserver.geo.util.L2Collections$1
com.l2jfrozen.gameserver.geo.util.L2Collections$1: L2Collections$1()
com.l2jfrozen.gameserver.geo.util.L2Collections$1: void reset(java.util.ArrayList)
com.l2jfrozen.gameserver.geo.util.L2Collections$1: java.util.ArrayList create()
com.l2jfrozen.gameserver.geo.util.L2Collections$1: java.lang.Object create()
com.l2jfrozen.gameserver.geo.util.L2Collections$1: void reset(java.lang.Object)
com.l2jfrozen.gameserver.geo.util.L2Collections$2
com.l2jfrozen.gameserver.geo.util.L2Collections$2: L2Collections$2()
com.l2jfrozen.gameserver.geo.util.L2Collections$2: void reset(com.l2jfrozen.gameserver.geo.util.L2FastSet)
com.l2jfrozen.gameserver.geo.util.L2Collections$2: com.l2jfrozen.gameserver.geo.util.L2FastSet create()
com.l2jfrozen.gameserver.geo.util.L2Collections$2: java.lang.Object create()
com.l2jfrozen.gameserver.geo.util.L2Collections$2: void reset(java.lang.Object)
com.l2jfrozen.gameserver.geo.util.L2Collections$ConcatenatedIterable
com.l2jfrozen.gameserver.geo.util.L2Collections$ConcatenatedIterable: java.lang.Iterable[] _iterables
com.l2jfrozen.gameserver.geo.util.L2Collections$ConcatenatedIterable: L2Collections$ConcatenatedIterable(java.lang.Iterable[])
com.l2jfrozen.gameserver.geo.util.L2Collections$ConcatenatedIterable: java.util.Iterator iterator()
com.l2jfrozen.gameserver.geo.util.L2Collections$ConcatenatedIterator
com.l2jfrozen.gameserver.geo.util.L2Collections$ConcatenatedIterator: java.lang.Iterable[] _iterables
com.l2jfrozen.gameserver.geo.util.L2Collections$ConcatenatedIterator: java.util.Iterator _iterator
com.l2jfrozen.gameserver.geo.util.L2Collections$ConcatenatedIterator: int _index
com.l2jfrozen.gameserver.geo.util.L2Collections$ConcatenatedIterator: L2Collections$ConcatenatedIterator(java.lang.Iterable[])
com.l2jfrozen.gameserver.geo.util.L2Collections$ConcatenatedIterator: boolean hasNext()
com.l2jfrozen.gameserver.geo.util.L2Collections$ConcatenatedIterator: java.lang.Object next()
com.l2jfrozen.gameserver.geo.util.L2Collections$ConcatenatedIterator: void validateIterator()
com.l2jfrozen.gameserver.geo.util.L2Collections$ConcatenatedIterator: void remove()
com.l2jfrozen.gameserver.geo.util.L2Collections$Converter
com.l2jfrozen.gameserver.geo.util.L2Collections$Converter: java.lang.Object convert(java.lang.Object)
com.l2jfrozen.gameserver.geo.util.L2Collections$ConvertingIterable
com.l2jfrozen.gameserver.geo.util.L2Collections$ConvertingIterable: java.lang.Iterable _iterable
com.l2jfrozen.gameserver.geo.util.L2Collections$ConvertingIterable: com.l2jfrozen.gameserver.geo.util.L2Collections$Converter _converter
com.l2jfrozen.gameserver.geo.util.L2Collections$ConvertingIterable: L2Collections$ConvertingIterable(java.lang.Iterable,com.l2jfrozen.gameserver.geo.util.L2Collections$Converter)
com.l2jfrozen.gameserver.geo.util.L2Collections$ConvertingIterable: java.util.Iterator iterator()
com.l2jfrozen.gameserver.geo.util.L2Collections$ConvertingIterator
com.l2jfrozen.gameserver.geo.util.L2Collections$ConvertingIterator: java.util.Iterator _iterator
com.l2jfrozen.gameserver.geo.util.L2Collections$ConvertingIterator: com.l2jfrozen.gameserver.geo.util.L2Collections$Converter _converter
com.l2jfrozen.gameserver.geo.util.L2Collections$ConvertingIterator: java.lang.Object _next
com.l2jfrozen.gameserver.geo.util.L2Collections$ConvertingIterator: L2Collections$ConvertingIterator(java.lang.Iterable,com.l2jfrozen.gameserver.geo.util.L2Collections$Converter)
com.l2jfrozen.gameserver.geo.util.L2Collections$ConvertingIterator: boolean hasNext()
com.l2jfrozen.gameserver.geo.util.L2Collections$ConvertingIterator: java.lang.Object next()
com.l2jfrozen.gameserver.geo.util.L2Collections$ConvertingIterator: void step()
com.l2jfrozen.gameserver.geo.util.L2Collections$ConvertingIterator: void remove()
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyBunch
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyBunch: com.l2jfrozen.gameserver.geo.util.Bunch INSTANCE
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyBunch: L2Collections$EmptyBunch()
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyBunch: com.l2jfrozen.gameserver.geo.util.Bunch add(java.lang.Object)
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyBunch: com.l2jfrozen.gameserver.geo.util.Bunch addAll(java.lang.Iterable)
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyBunch: com.l2jfrozen.gameserver.geo.util.Bunch addAll(java.lang.Object[])
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyBunch: void clear()
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyBunch: boolean contains(java.lang.Object)
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyBunch: java.lang.Object get(int)
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyBunch: boolean isEmpty()
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyBunch: java.lang.Object[] moveToArray()
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyBunch: java.lang.Object[] moveToArray(java.lang.Object[])
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyBunch: java.lang.Object[] moveToArray(java.lang.Class)
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyBunch: java.util.List moveToList(java.util.List)
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyBunch: com.l2jfrozen.gameserver.geo.util.Bunch remove(java.lang.Object)
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyBunch: java.lang.Object remove(int)
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyBunch: java.lang.Object set(int,java.lang.Object)
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyBunch: int size()
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyBunch: com.l2jfrozen.gameserver.geo.util.Bunch cleanByFilter(com.l2jfrozen.gameserver.geo.util.L2Collections$Filter)
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyBunch: void <clinit>()
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyCollection
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyCollection: java.util.Collection INSTANCE
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyCollection: L2Collections$EmptyCollection()
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyCollection: boolean add(java.lang.Object)
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyCollection: boolean addAll(java.util.Collection)
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyCollection: void clear()
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyCollection: boolean contains(java.lang.Object)
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyCollection: boolean containsAll(java.util.Collection)
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyCollection: boolean isEmpty()
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyCollection: java.util.Iterator iterator()
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyCollection: boolean remove(java.lang.Object)
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyCollection: boolean removeAll(java.util.Collection)
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyCollection: boolean retainAll(java.util.Collection)
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyCollection: int size()
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyCollection: java.lang.Object[] toArray()
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyCollection: java.lang.Object[] toArray(java.lang.Object[])
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyCollection: void <clinit>()
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyList
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyList: java.util.List INSTANCE
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyList: L2Collections$EmptyList()
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyList: void add(int,java.lang.Object)
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyList: boolean addAll(int,java.util.Collection)
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyList: java.lang.Object get(int)
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyList: int indexOf(java.lang.Object)
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyList: int lastIndexOf(java.lang.Object)
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyList: java.util.ListIterator listIterator()
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyList: java.util.ListIterator listIterator(int)
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyList: java.lang.Object remove(int)
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyList: java.lang.Object set(int,java.lang.Object)
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyList: java.util.List subList(int,int)
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyList: void <clinit>()
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyListIterator
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyListIterator: java.util.ListIterator INSTANCE
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyListIterator: L2Collections$EmptyListIterator()
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyListIterator: boolean hasNext()
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyListIterator: java.lang.Object next()
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyListIterator: boolean hasPrevious()
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyListIterator: java.lang.Object previous()
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyListIterator: int nextIndex()
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyListIterator: int previousIndex()
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyListIterator: void add(java.lang.Object)
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyListIterator: void set(java.lang.Object)
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyListIterator: void remove()
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyListIterator: void <clinit>()
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyMap
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyMap: java.util.Map INSTANCE
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyMap: L2Collections$EmptyMap()
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyMap: void clear()
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyMap: boolean containsKey(java.lang.Object)
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyMap: boolean containsValue(java.lang.Object)
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyMap: java.util.Set entrySet()
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyMap: java.lang.Object get(java.lang.Object)
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyMap: boolean isEmpty()
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyMap: java.util.Set keySet()
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyMap: java.lang.Object put(java.lang.Object,java.lang.Object)
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyMap: void putAll(java.util.Map)
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyMap: java.lang.Object remove(java.lang.Object)
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyMap: int size()
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyMap: java.util.Collection values()
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptyMap: void <clinit>()
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptySet
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptySet: java.util.Set INSTANCE
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptySet: L2Collections$EmptySet()
com.l2jfrozen.gameserver.geo.util.L2Collections$EmptySet: void <clinit>()
com.l2jfrozen.gameserver.geo.util.L2Collections$Filter
com.l2jfrozen.gameserver.geo.util.L2Collections$Filter: boolean accept(java.lang.Object)
com.l2jfrozen.gameserver.geo.util.L2Collections$FilteredIterable
com.l2jfrozen.gameserver.geo.util.L2Collections$FilteredIterable: java.lang.Iterable _iterable
com.l2jfrozen.gameserver.geo.util.L2Collections$FilteredIterable: com.l2jfrozen.gameserver.geo.util.L2Collections$Filter _filter
com.l2jfrozen.gameserver.geo.util.L2Collections$FilteredIterable: java.lang.Class _clazz
com.l2jfrozen.gameserver.geo.util.L2Collections$FilteredIterable: L2Collections$FilteredIterable(java.lang.Class,java.lang.Iterable,com.l2jfrozen.gameserver.geo.util.L2Collections$Filter)
com.l2jfrozen.gameserver.geo.util.L2Collections$FilteredIterable: java.util.Iterator iterator()
com.l2jfrozen.gameserver.geo.util.L2Collections$FilteredIterator
com.l2jfrozen.gameserver.geo.util.L2Collections$FilteredIterator: java.util.Iterator _iterator
com.l2jfrozen.gameserver.geo.util.L2Collections$FilteredIterator: com.l2jfrozen.gameserver.geo.util.L2Collections$Filter _filter
com.l2jfrozen.gameserver.geo.util.L2Collections$FilteredIterator: java.lang.Class _clazz
com.l2jfrozen.gameserver.geo.util.L2Collections$FilteredIterator: java.lang.Object _next
com.l2jfrozen.gameserver.geo.util.L2Collections$FilteredIterator: L2Collections$FilteredIterator(java.lang.Class,java.lang.Iterable,com.l2jfrozen.gameserver.geo.util.L2Collections$Filter)
com.l2jfrozen.gameserver.geo.util.L2Collections$FilteredIterator: boolean hasNext()
com.l2jfrozen.gameserver.geo.util.L2Collections$FilteredIterator: java.lang.Object next()
com.l2jfrozen.gameserver.geo.util.L2Collections$FilteredIterator: void step()
com.l2jfrozen.gameserver.geo.util.L2Collections$FilteredIterator: void remove()
com.l2jfrozen.gameserver.geo.util.L2FastCollection
com.l2jfrozen.gameserver.geo.util.L2FastCollection: L2FastCollection()
com.l2jfrozen.gameserver.geo.util.L2FastCollection: javolution.util.FastCollection$Record head()
com.l2jfrozen.gameserver.geo.util.L2FastCollection: javolution.util.FastCollection$Record tail()
com.l2jfrozen.gameserver.geo.util.L2FastCollection: java.lang.Object valueOf(javolution.util.FastCollection$Record)
com.l2jfrozen.gameserver.geo.util.L2FastCollection: void delete(javolution.util.FastCollection$Record)
com.l2jfrozen.gameserver.geo.util.L2FastCollection: void delete(javolution.util.FastCollection$Record,java.lang.Object)
com.l2jfrozen.gameserver.geo.util.L2FastCollection: java.lang.Object getFirst()
com.l2jfrozen.gameserver.geo.util.L2FastCollection: java.lang.Object getLast()
com.l2jfrozen.gameserver.geo.util.L2FastCollection: java.lang.Object removeFirst()
com.l2jfrozen.gameserver.geo.util.L2FastCollection: java.lang.Object removeLast()
com.l2jfrozen.gameserver.geo.util.L2FastCollection: boolean addAll(java.lang.Object[])
com.l2jfrozen.gameserver.geo.util.L2FastCollection: boolean addAll(java.util.Collection)
com.l2jfrozen.gameserver.geo.util.L2FastCollection: boolean addAll(java.lang.Iterable)
com.l2jfrozen.gameserver.geo.util.L2FastCollection: boolean addAll(com.l2jfrozen.gameserver.geo.util.L2FastCollection)
com.l2jfrozen.gameserver.geo.util.L2FastCollection: boolean addAll(javolution.util.FastCollection)
com.l2jfrozen.gameserver.geo.util.L2FastCollection: boolean addAll(java.util.List)
com.l2jfrozen.gameserver.geo.util.L2FastCollection: boolean containsAll(java.lang.Object[])
com.l2jfrozen.gameserver.geo.util.L2FastCollection: boolean containsAll(java.util.Collection)
com.l2jfrozen.gameserver.geo.util.L2FastCollection: boolean containsAll(java.lang.Iterable)
com.l2jfrozen.gameserver.geo.util.L2FastCollection: boolean containsAll(com.l2jfrozen.gameserver.geo.util.L2FastCollection)
com.l2jfrozen.gameserver.geo.util.L2FastCollection: boolean containsAll(javolution.util.FastCollection)
com.l2jfrozen.gameserver.geo.util.L2FastCollection: boolean containsAll(java.util.List)
com.l2jfrozen.gameserver.geo.util.L2FastCollection: boolean removeAll(java.util.Collection)
com.l2jfrozen.gameserver.geo.util.L2FastCollection: boolean retainAll(java.util.Collection)
com.l2jfrozen.gameserver.geo.util.L2FastCollection: java.lang.Object[] toArray()
com.l2jfrozen.gameserver.geo.util.L2FastCollection: java.lang.Object[] toArray(java.lang.Object[])
com.l2jfrozen.gameserver.geo.util.L2FastSet
com.l2jfrozen.gameserver.geo.util.L2FastSet: java.lang.Object NULL
com.l2jfrozen.gameserver.geo.util.L2FastSet: javolution.util.FastMap _map
com.l2jfrozen.gameserver.geo.util.L2FastSet: L2FastSet()
com.l2jfrozen.gameserver.geo.util.L2FastSet: L2FastSet(int)
com.l2jfrozen.gameserver.geo.util.L2FastSet: L2FastSet(java.util.Set)
com.l2jfrozen.gameserver.geo.util.L2FastSet: com.l2jfrozen.gameserver.geo.util.L2FastSet setShared(boolean)
com.l2jfrozen.gameserver.geo.util.L2FastSet: boolean isShared()
com.l2jfrozen.gameserver.geo.util.L2FastSet: javolution.util.FastCollection$Record head()
com.l2jfrozen.gameserver.geo.util.L2FastSet: javolution.util.FastCollection$Record tail()
com.l2jfrozen.gameserver.geo.util.L2FastSet: java.lang.Object valueOf(javolution.util.FastCollection$Record)
com.l2jfrozen.gameserver.geo.util.L2FastSet: void delete(javolution.util.FastCollection$Record)
com.l2jfrozen.gameserver.geo.util.L2FastSet: void delete(javolution.util.FastCollection$Record,java.lang.Object)
com.l2jfrozen.gameserver.geo.util.L2FastSet: boolean add(java.lang.Object)
com.l2jfrozen.gameserver.geo.util.L2FastSet: void clear()
com.l2jfrozen.gameserver.geo.util.L2FastSet: boolean contains(java.lang.Object)
com.l2jfrozen.gameserver.geo.util.L2FastSet: boolean isEmpty()
com.l2jfrozen.gameserver.geo.util.L2FastSet: java.util.Iterator iterator()
com.l2jfrozen.gameserver.geo.util.L2FastSet: boolean remove(java.lang.Object)
com.l2jfrozen.gameserver.geo.util.L2FastSet: int size()
com.l2jfrozen.gameserver.geo.util.L2FastSet: void <clinit>()
com.l2jfrozen.gameserver.geo.util.LookupTable
com.l2jfrozen.gameserver.geo.util.LookupTable: java.lang.Object[] EMPTY_ARRAY
com.l2jfrozen.gameserver.geo.util.LookupTable: java.lang.Object[] _array
com.l2jfrozen.gameserver.geo.util.LookupTable: int _offset
com.l2jfrozen.gameserver.geo.util.LookupTable: int _size
com.l2jfrozen.gameserver.geo.util.LookupTable: LookupTable()
com.l2jfrozen.gameserver.geo.util.LookupTable: int size()
com.l2jfrozen.gameserver.geo.util.LookupTable: boolean isEmpty()
com.l2jfrozen.gameserver.geo.util.LookupTable: void clear(boolean)
com.l2jfrozen.gameserver.geo.util.LookupTable: java.lang.Object get(int)
com.l2jfrozen.gameserver.geo.util.LookupTable: void set(int,java.lang.Object)
com.l2jfrozen.gameserver.geo.util.LookupTable: void replacedValue(int,java.lang.Object,java.lang.Object)
com.l2jfrozen.gameserver.geo.util.LookupTable: java.util.Iterator iterator()
com.l2jfrozen.gameserver.geo.util.LookupTable: void <clinit>()
com.l2jfrozen.gameserver.geo.util.ObjectPool
com.l2jfrozen.gameserver.geo.util.ObjectPool: java.util.WeakHashMap POOLS
com.l2jfrozen.gameserver.geo.util.ObjectPool: java.util.concurrent.locks.ReentrantLock _lock
com.l2jfrozen.gameserver.geo.util.ObjectPool: java.lang.Object[] _elements
com.l2jfrozen.gameserver.geo.util.ObjectPool: long[] _access
com.l2jfrozen.gameserver.geo.util.ObjectPool: int _size
com.l2jfrozen.gameserver.geo.util.ObjectPool: ObjectPool()
com.l2jfrozen.gameserver.geo.util.ObjectPool: int getCurrentSize()
com.l2jfrozen.gameserver.geo.util.ObjectPool: int getMaximumSize()
com.l2jfrozen.gameserver.geo.util.ObjectPool: long getMaxLifeTime()
com.l2jfrozen.gameserver.geo.util.ObjectPool: void clear()
com.l2jfrozen.gameserver.geo.util.ObjectPool: void store(java.lang.Object)
com.l2jfrozen.gameserver.geo.util.ObjectPool: void reset(java.lang.Object)
com.l2jfrozen.gameserver.geo.util.ObjectPool: java.lang.Object get()
com.l2jfrozen.gameserver.geo.util.ObjectPool: java.lang.Object create()
com.l2jfrozen.gameserver.geo.util.ObjectPool: void purge()
com.l2jfrozen.gameserver.geo.util.ObjectPool: void <clinit>()
com.l2jfrozen.gameserver.geo.util.ObjectPool$1
com.l2jfrozen.gameserver.geo.util.ObjectPool$1: ObjectPool$1(java.lang.String)
com.l2jfrozen.gameserver.geo.util.ObjectPool$1: void runTurn()
com.l2jfrozen.gameserver.geo.util.ObjectPool$1: void sleepTurn()
com.l2jfrozen.gameserver.handler.AdminCommandHandler
com.l2jfrozen.gameserver.handler.AdminCommandHandler: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.AdminCommandHandler: com.l2jfrozen.gameserver.handler.AdminCommandHandler _instance
com.l2jfrozen.gameserver.handler.AdminCommandHandler: javolution.util.FastMap _datatable
com.l2jfrozen.gameserver.handler.AdminCommandHandler: com.l2jfrozen.gameserver.handler.AdminCommandHandler getInstance()
com.l2jfrozen.gameserver.handler.AdminCommandHandler: AdminCommandHandler()
com.l2jfrozen.gameserver.handler.AdminCommandHandler: void registerAdminCommandHandler(com.l2jfrozen.gameserver.handler.IAdminCommandHandler)
com.l2jfrozen.gameserver.handler.AdminCommandHandler: com.l2jfrozen.gameserver.handler.IAdminCommandHandler getAdminCommandHandler(java.lang.String)
com.l2jfrozen.gameserver.handler.AdminCommandHandler: void <clinit>()
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler: com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler _instance
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler: long DEFAULT_ANNOUNCEMENT_DELAY
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler: java.util.Map _registeredAnnouncements
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler: AutoAnnouncementHandler()
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler: void restoreAnnouncementData()
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler: void listAutoAnnouncements(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler: com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler getInstance()
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler: int size()
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler: com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler$AutoAnnouncementInstance registerGlobalAnnouncement(int,java.lang.String,long)
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler: com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler$AutoAnnouncementInstance registerAnnouncment(int,java.lang.String,long)
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler: com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler$AutoAnnouncementInstance registerAnnouncment(java.lang.String,long)
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler: int nextAutoAnnouncmentId()
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler: com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler$AutoAnnouncementInstance registerAnnouncement(int,java.lang.String,long)
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler: java.util.Collection values()
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler: boolean removeAnnouncement(int)
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler: boolean removeAnnouncement(com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler$AutoAnnouncementInstance)
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler: com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler$AutoAnnouncementInstance getAutoAnnouncementInstance(int)
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler: void setAutoAnnouncementActive(boolean)
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler: void <clinit>()
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler$AutoAnnouncementInstance
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler$AutoAnnouncementInstance: long _defaultDelay
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler$AutoAnnouncementInstance: java.lang.String _defaultTexts
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler$AutoAnnouncementInstance: boolean _defaultRandom
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler$AutoAnnouncementInstance: java.lang.Integer _defaultId
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler$AutoAnnouncementInstance: boolean _isActive
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler$AutoAnnouncementInstance: java.util.concurrent.ScheduledFuture _chatTask
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler$AutoAnnouncementInstance: com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler this$0
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler$AutoAnnouncementInstance: AutoAnnouncementHandler$AutoAnnouncementInstance(com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler,int,java.lang.String,long)
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler$AutoAnnouncementInstance: boolean isActive()
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler$AutoAnnouncementInstance: boolean isDefaultRandom()
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler$AutoAnnouncementInstance: long getDefaultDelay()
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler$AutoAnnouncementInstance: java.lang.String getDefaultTexts()
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler$AutoAnnouncementInstance: java.lang.Integer getDefaultId()
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler$AutoAnnouncementInstance: void setDefaultChatDelay(long)
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler$AutoAnnouncementInstance: void setDefaultChatTexts(java.lang.String)
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler$AutoAnnouncementInstance: void setDefaultRandom(boolean)
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler$AutoAnnouncementInstance: void setActive(boolean)
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler$AutoAnnouncementInstance$AutoAnnouncementRunner
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler$AutoAnnouncementInstance$AutoAnnouncementRunner: int id
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler$AutoAnnouncementInstance$AutoAnnouncementRunner: com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler$AutoAnnouncementInstance this$1
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler$AutoAnnouncementInstance$AutoAnnouncementRunner: AutoAnnouncementHandler$AutoAnnouncementInstance$AutoAnnouncementRunner(com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler$AutoAnnouncementInstance,int)
com.l2jfrozen.gameserver.handler.AutoAnnouncementHandler$AutoAnnouncementInstance$AutoAnnouncementRunner: void run()
com.l2jfrozen.gameserver.handler.AutoChatHandler
com.l2jfrozen.gameserver.handler.AutoChatHandler: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.AutoChatHandler: com.l2jfrozen.gameserver.handler.AutoChatHandler _instance
com.l2jfrozen.gameserver.handler.AutoChatHandler: long DEFAULT_CHAT_DELAY
com.l2jfrozen.gameserver.handler.AutoChatHandler: java.util.Map _registeredChats
com.l2jfrozen.gameserver.handler.AutoChatHandler: AutoChatHandler()
com.l2jfrozen.gameserver.handler.AutoChatHandler: void restoreChatData()
com.l2jfrozen.gameserver.handler.AutoChatHandler: com.l2jfrozen.gameserver.handler.AutoChatHandler getInstance()
com.l2jfrozen.gameserver.handler.AutoChatHandler: int size()
com.l2jfrozen.gameserver.handler.AutoChatHandler: com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance registerGlobalChat(int,java.lang.String[],long)
com.l2jfrozen.gameserver.handler.AutoChatHandler: com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance registerChat(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,java.lang.String[],long)
com.l2jfrozen.gameserver.handler.AutoChatHandler: com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance registerChat(int,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,java.lang.String[],long)
com.l2jfrozen.gameserver.handler.AutoChatHandler: boolean removeChat(int)
com.l2jfrozen.gameserver.handler.AutoChatHandler: boolean removeChat(com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance)
com.l2jfrozen.gameserver.handler.AutoChatHandler: com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance getAutoChatInstance(int,boolean)
com.l2jfrozen.gameserver.handler.AutoChatHandler: void setAutoChatActive(boolean)
com.l2jfrozen.gameserver.handler.AutoChatHandler: void npcSpawned(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.handler.AutoChatHandler: void <clinit>()
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance: int _npcId
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance: long _defaultDelay
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance: java.lang.String[] _defaultTexts
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance: boolean _defaultRandom
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance: boolean _globalChat
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance: boolean _isActive
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance: java.util.Map _chatDefinitions
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance: java.util.concurrent.ScheduledFuture _chatTask
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance: com.l2jfrozen.gameserver.handler.AutoChatHandler this$0
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance: AutoChatHandler$AutoChatInstance(com.l2jfrozen.gameserver.handler.AutoChatHandler,int,java.lang.String[],long,boolean)
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance: com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance$AutoChatDefinition getChatDefinition(int)
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance: com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance$AutoChatDefinition[] getChatDefinitions()
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance: int addChatDefinition(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance: int addChatDefinition(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,java.lang.String[],long)
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance: boolean removeChatDefinition(int)
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance: boolean isActive()
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance: boolean isGlobal()
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance: boolean isDefaultRandom()
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance: boolean isRandomChat(int)
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance: int getNPCId()
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance: int getDefinitionCount()
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance[] getNPCInstanceList()
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance: long getDefaultDelay()
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance: java.lang.String[] getDefaultTexts()
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance: void setDefaultChatDelay(long)
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance: void setDefaultChatTexts(java.lang.String[])
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance: void setDefaultRandom(boolean)
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance: void setChatDelay(int,long)
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance: void setChatTexts(int,java.lang.String[])
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance: void setRandomChat(int,boolean)
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance: void setActive(boolean)
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance$AutoChatDefinition
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance$AutoChatDefinition: int _chatIndex
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance$AutoChatDefinition: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance _npcInstance
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance$AutoChatDefinition: com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance _chatInstance
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance$AutoChatDefinition: long _chatDelay
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance$AutoChatDefinition: java.lang.String[] _chatTexts
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance$AutoChatDefinition: boolean _isActiveDefinition
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance$AutoChatDefinition: boolean _randomChat
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance$AutoChatDefinition: com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance this$1
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance$AutoChatDefinition: AutoChatHandler$AutoChatInstance$AutoChatDefinition(com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance,com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,java.lang.String[],long)
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance$AutoChatDefinition: java.lang.String[] getChatTexts()
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance$AutoChatDefinition: long getChatDelay()
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance$AutoChatDefinition: boolean isActive()
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance$AutoChatDefinition: boolean isRandomChat()
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance$AutoChatDefinition: void setRandomChat(boolean)
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance$AutoChatDefinition: void setChatDelay(long)
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance$AutoChatDefinition: void setChatTexts(java.lang.String[])
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance$AutoChatDefinition: void setActive(boolean)
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance$AutoChatRunner
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance$AutoChatRunner: int _runnerNpcId
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance$AutoChatRunner: int _objectId
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance$AutoChatRunner: com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance this$1
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance$AutoChatRunner: AutoChatHandler$AutoChatInstance$AutoChatRunner(com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance,int,int)
com.l2jfrozen.gameserver.handler.AutoChatHandler$AutoChatInstance$AutoChatRunner: void run()
com.l2jfrozen.gameserver.handler.AutoVoteRewardHandler
com.l2jfrozen.gameserver.handler.AutoVoteRewardHandler: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.AutoVoteRewardHandler: int _l2networkVotesCount
com.l2jfrozen.gameserver.handler.AutoVoteRewardHandler: int _hopzoneVotesCount
com.l2jfrozen.gameserver.handler.AutoVoteRewardHandler: int _topzoneVotesCount
com.l2jfrozen.gameserver.handler.AutoVoteRewardHandler: java.util.List _already_rewarded
com.l2jfrozen.gameserver.handler.AutoVoteRewardHandler: boolean _l2network
com.l2jfrozen.gameserver.handler.AutoVoteRewardHandler: boolean _topzone
com.l2jfrozen.gameserver.handler.AutoVoteRewardHandler: boolean _hopzone
com.l2jfrozen.gameserver.handler.AutoVoteRewardHandler: AutoVoteRewardHandler()
com.l2jfrozen.gameserver.handler.AutoVoteRewardHandler: boolean checkSingleBox(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.AutoVoteRewardHandler: int getHopZoneVotes()
com.l2jfrozen.gameserver.handler.AutoVoteRewardHandler: int getTopZoneVotes()
com.l2jfrozen.gameserver.handler.AutoVoteRewardHandler: int getL2NetworkVotes()
com.l2jfrozen.gameserver.handler.AutoVoteRewardHandler: void setHopZoneVoteCount(int)
com.l2jfrozen.gameserver.handler.AutoVoteRewardHandler: int getHopZoneVoteCount()
com.l2jfrozen.gameserver.handler.AutoVoteRewardHandler: void setTopZoneVoteCount(int)
com.l2jfrozen.gameserver.handler.AutoVoteRewardHandler: int getTopZoneVoteCount()
com.l2jfrozen.gameserver.handler.AutoVoteRewardHandler: void setL2NetworkVoteCount(int)
com.l2jfrozen.gameserver.handler.AutoVoteRewardHandler: int getL2NetworkVoteCount()
com.l2jfrozen.gameserver.handler.AutoVoteRewardHandler: com.l2jfrozen.gameserver.handler.AutoVoteRewardHandler getInstance()
com.l2jfrozen.gameserver.handler.AutoVoteRewardHandler: AutoVoteRewardHandler(com.l2jfrozen.gameserver.handler.AutoVoteRewardHandler$1)
com.l2jfrozen.gameserver.handler.AutoVoteRewardHandler: void <clinit>()
com.l2jfrozen.gameserver.handler.AutoVoteRewardHandler$1
com.l2jfrozen.gameserver.handler.AutoVoteRewardHandler$AutoReward
com.l2jfrozen.gameserver.handler.AutoVoteRewardHandler$AutoReward: com.l2jfrozen.gameserver.handler.AutoVoteRewardHandler this$0
com.l2jfrozen.gameserver.handler.AutoVoteRewardHandler$AutoReward: AutoVoteRewardHandler$AutoReward(com.l2jfrozen.gameserver.handler.AutoVoteRewardHandler)
com.l2jfrozen.gameserver.handler.AutoVoteRewardHandler$AutoReward: void run()
com.l2jfrozen.gameserver.handler.AutoVoteRewardHandler$SingletonHolder
com.l2jfrozen.gameserver.handler.AutoVoteRewardHandler$SingletonHolder: com.l2jfrozen.gameserver.handler.AutoVoteRewardHandler _instance
com.l2jfrozen.gameserver.handler.AutoVoteRewardHandler$SingletonHolder: AutoVoteRewardHandler$SingletonHolder()
com.l2jfrozen.gameserver.handler.AutoVoteRewardHandler$SingletonHolder: void <clinit>()
com.l2jfrozen.gameserver.handler.IAdminCommandHandler
com.l2jfrozen.gameserver.handler.IAdminCommandHandler: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.IAdminCommandHandler: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.IBBSHandler
com.l2jfrozen.gameserver.handler.IBBSHandler: java.lang.String[] getBBSCommands()
com.l2jfrozen.gameserver.handler.IBBSHandler: void handleCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.ICustomByPassHandler
com.l2jfrozen.gameserver.handler.ICustomByPassHandler: java.lang.String[] getByPassCommands()
com.l2jfrozen.gameserver.handler.ICustomByPassHandler: void handleCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.IItemHandler
com.l2jfrozen.gameserver.handler.IItemHandler: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.IItemHandler: int[] getItemIds()
com.l2jfrozen.gameserver.handler.ISkillHandler
com.l2jfrozen.gameserver.handler.ISkillHandler: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.handler.ISkillHandler: com.l2jfrozen.gameserver.model.SkillType[] getSkillIds()
com.l2jfrozen.gameserver.handler.IUserCommandHandler
com.l2jfrozen.gameserver.handler.IUserCommandHandler: boolean useUserCommand(int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.IUserCommandHandler: int[] getUserCommandList()
com.l2jfrozen.gameserver.handler.IVoicedCommandHandler
com.l2jfrozen.gameserver.handler.IVoicedCommandHandler: boolean useVoicedCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.IVoicedCommandHandler: java.lang.String[] getVoicedCommandList()
com.l2jfrozen.gameserver.handler.ItemHandler
com.l2jfrozen.gameserver.handler.ItemHandler: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.ItemHandler: com.l2jfrozen.gameserver.handler.ItemHandler _instance
com.l2jfrozen.gameserver.handler.ItemHandler: java.util.Map _datatable
com.l2jfrozen.gameserver.handler.ItemHandler: com.l2jfrozen.gameserver.handler.ItemHandler getInstance()
com.l2jfrozen.gameserver.handler.ItemHandler: int size()
com.l2jfrozen.gameserver.handler.ItemHandler: ItemHandler()
com.l2jfrozen.gameserver.handler.ItemHandler: void registerItemHandler(com.l2jfrozen.gameserver.handler.IItemHandler)
com.l2jfrozen.gameserver.handler.ItemHandler: com.l2jfrozen.gameserver.handler.IItemHandler getItemHandler(int)
com.l2jfrozen.gameserver.handler.ItemHandler: void <clinit>()
com.l2jfrozen.gameserver.handler.SkillHandler
com.l2jfrozen.gameserver.handler.SkillHandler: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.SkillHandler: com.l2jfrozen.gameserver.handler.SkillHandler _instance
com.l2jfrozen.gameserver.handler.SkillHandler: java.util.Map _datatable
com.l2jfrozen.gameserver.handler.SkillHandler: com.l2jfrozen.gameserver.handler.SkillHandler getInstance()
com.l2jfrozen.gameserver.handler.SkillHandler: SkillHandler()
com.l2jfrozen.gameserver.handler.SkillHandler: void registerSkillHandler(com.l2jfrozen.gameserver.handler.ISkillHandler)
com.l2jfrozen.gameserver.handler.SkillHandler: com.l2jfrozen.gameserver.handler.ISkillHandler getSkillHandler(com.l2jfrozen.gameserver.model.SkillType)
com.l2jfrozen.gameserver.handler.SkillHandler: int size()
com.l2jfrozen.gameserver.handler.SkillHandler: void <clinit>()
com.l2jfrozen.gameserver.handler.UserCommandHandler
com.l2jfrozen.gameserver.handler.UserCommandHandler: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.UserCommandHandler: com.l2jfrozen.gameserver.handler.UserCommandHandler _instance
com.l2jfrozen.gameserver.handler.UserCommandHandler: java.util.Map _datatable
com.l2jfrozen.gameserver.handler.UserCommandHandler: com.l2jfrozen.gameserver.handler.UserCommandHandler getInstance()
com.l2jfrozen.gameserver.handler.UserCommandHandler: UserCommandHandler()
com.l2jfrozen.gameserver.handler.UserCommandHandler: void registerUserCommandHandler(com.l2jfrozen.gameserver.handler.IUserCommandHandler)
com.l2jfrozen.gameserver.handler.UserCommandHandler: com.l2jfrozen.gameserver.handler.IUserCommandHandler getUserCommandHandler(int)
com.l2jfrozen.gameserver.handler.UserCommandHandler: int size()
com.l2jfrozen.gameserver.handler.UserCommandHandler: void <clinit>()
com.l2jfrozen.gameserver.handler.VoicedCommandHandler
com.l2jfrozen.gameserver.handler.VoicedCommandHandler: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.VoicedCommandHandler: com.l2jfrozen.gameserver.handler.VoicedCommandHandler _instance
com.l2jfrozen.gameserver.handler.VoicedCommandHandler: java.util.Map _datatable
com.l2jfrozen.gameserver.handler.VoicedCommandHandler: com.l2jfrozen.gameserver.handler.VoicedCommandHandler getInstance()
com.l2jfrozen.gameserver.handler.VoicedCommandHandler: VoicedCommandHandler()
com.l2jfrozen.gameserver.handler.VoicedCommandHandler: void registerVoicedCommandHandler(com.l2jfrozen.gameserver.handler.IVoicedCommandHandler)
com.l2jfrozen.gameserver.handler.VoicedCommandHandler: com.l2jfrozen.gameserver.handler.IVoicedCommandHandler getVoicedCommandHandler(java.lang.String)
com.l2jfrozen.gameserver.handler.VoicedCommandHandler: int size()
com.l2jfrozen.gameserver.handler.VoicedCommandHandler: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.ActionEnum
com.l2jfrozen.gameserver.handler.admincommandhandlers.ActionEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.ActionEnum create
com.l2jfrozen.gameserver.handler.admincommandhandlers.ActionEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.ActionEnum dismiss
com.l2jfrozen.gameserver.handler.admincommandhandlers.ActionEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.ActionEnum info
com.l2jfrozen.gameserver.handler.admincommandhandlers.ActionEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.ActionEnum setlevel
com.l2jfrozen.gameserver.handler.admincommandhandlers.ActionEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.ActionEnum rep
com.l2jfrozen.gameserver.handler.admincommandhandlers.ActionEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.ActionEnum[] $VALUES
com.l2jfrozen.gameserver.handler.admincommandhandlers.ActionEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.ActionEnum[] values()
com.l2jfrozen.gameserver.handler.admincommandhandlers.ActionEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.ActionEnum valueOf(java.lang.String)
com.l2jfrozen.gameserver.handler.admincommandhandlers.ActionEnum: ActionEnum(java.lang.String,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.ActionEnum: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminAdmin
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminAdmin: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminAdmin: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminAdmin: AdminAdmin()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminAdmin: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminAdmin: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminAdmin: void showMainPage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminAdmin: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminAdmin$1
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminAdmin$1: int[] $SwitchMap$com$l2jfrozen$gameserver$handler$admincommandhandlers$CommandEnum
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminAdmin$1: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminAio
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminAio: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminAio: java.lang.String[] _adminCommands
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminAio: AdminAio()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminAio: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminAio: void doAio(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminAio: void removeAio(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminAio: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminAio: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminAio$1
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminAio$1: int[] $SwitchMap$com$l2jfrozen$gameserver$handler$admincommandhandlers$CommandEnum
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminAio$1: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminAnnouncements
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminAnnouncements: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminAnnouncements: AdminAnnouncements()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminAnnouncements: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminAnnouncements: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminAnnouncements: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminAnnouncements$1
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminAnnouncements$1: int[] $SwitchMap$com$l2jfrozen$gameserver$handler$admincommandhandlers$CommandEnum
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminAnnouncements$1: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminBBS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminBBS: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminBBS: AdminBBS()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminBBS: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminBBS: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminBBS: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminBan
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminBan: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminBan: AdminBan()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminBan: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminBan: void auditAction(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminBan: void banChatOfflinePlayer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String,int,boolean)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminBan: void jailOfflinePlayer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminBan: void unjailOfflinePlayer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminBan: boolean changeCharAccessLevel(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminBan: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminBan: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminBoat
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminBoat: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminBoat: AdminBoat()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminBoat: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminBoat: void showUsage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminBoat: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminBoat: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminBuffs
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminBuffs: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminBuffs: AdminBuffs()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminBuffs: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminBuffs: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminBuffs: void showBuffs(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminBuffs: void removeBuff(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminBuffs: void removeAllBuffs(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminBuffs: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminBuffs$1
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminBuffs$1: int[] $SwitchMap$com$l2jfrozen$gameserver$handler$admincommandhandlers$CommandEnum
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminBuffs$1: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCTFEngine
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCTFEngine: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCTFEngine: AdminCTFEngine()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCTFEngine: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCTFEngine: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCTFEngine: void showEditPage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCTFEngine: void showControlPage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCTFEngine: void showMainPage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCTFEngine: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCTFEngine$1
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCTFEngine$1: int[] $SwitchMap$com$l2jfrozen$gameserver$handler$admincommandhandlers$CommandEnum
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCTFEngine$1: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCache
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCache: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCache: AdminCache()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCache: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCache: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCache: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCache$1
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCache$1: int[] $SwitchMap$com$l2jfrozen$gameserver$handler$admincommandhandlers$CommandEnum
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCache$1: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminChangeAccessLevel
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminChangeAccessLevel: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminChangeAccessLevel: AdminChangeAccessLevel()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminChangeAccessLevel: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminChangeAccessLevel: void handleChangeLevel(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminChangeAccessLevel: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminChangeAccessLevel: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCharSupervision
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCharSupervision: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCharSupervision: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCharSupervision: AdminCharSupervision()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCharSupervision: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCharSupervision: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCharSupervision: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCharSupervision$1
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCharSupervision$1: int[] $SwitchMap$com$l2jfrozen$gameserver$handler$admincommandhandlers$CommandEnum
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCharSupervision$1: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminChristmas
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminChristmas: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminChristmas: AdminChristmas()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminChristmas: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminChristmas: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminChristmas: void startChristmas(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminChristmas: void endChristmas(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminChristmas: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCreateItem
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCreateItem: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCreateItem: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCreateItem: AdminCreateItem()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCreateItem: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCreateItem: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCreateItem: void createItem(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCreateItem: void massCreateItem(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCreateItem: void removeAllItems(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCreateItem: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCreateItem$1
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCreateItem$1: int[] $SwitchMap$com$l2jfrozen$gameserver$handler$admincommandhandlers$CommandEnum
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCreateItem$1: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCursedWeapons
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCursedWeapons: com.l2jfrozen.gameserver.managers.CursedWeaponsManager cursedWeaponsManager
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCursedWeapons: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCursedWeapons: AdminCursedWeapons()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCursedWeapons: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCursedWeapons: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminCursedWeapons: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDMEngine
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDMEngine: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDMEngine: AdminDMEngine()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDMEngine: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDMEngine: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDMEngine: void showMainPage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDMEngine: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDelete
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDelete: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDelete: AdminDelete()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDelete: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDelete: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDelete: void handleDelete(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDelete: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDisconnect
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDisconnect: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDisconnect: AdminDisconnect()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDisconnect: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDisconnect: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDisconnect: void disconnectCharacter(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDisconnect: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDonator
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDonator: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDonator: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDonator: java.lang.String INSERT_DATA
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDonator: java.lang.String DEL_DATA
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDonator: AdminDonator()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDonator: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDonator: void sendMessages(boolean,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean,boolean)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDonator: void updateDatabase(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDonator: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDonator: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDoorControl
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDoorControl: com.l2jfrozen.gameserver.datatables.csv.DoorTable _doorTable
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDoorControl: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDoorControl: AdminDoorControl()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDoorControl: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDoorControl: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminDoorControl: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditChar
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditChar: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditChar: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditChar: AdminEditChar()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditChar: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditChar: void listCharacters(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditChar: void gatherCharacterInfo(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditChar: void setTargetKarma(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditChar: void adminModifyCharacter(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditChar: void editCharacter(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditChar: void findCharacter(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditChar: void findMultibox(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditChar: void findCharactersPerIp(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditChar: void findCharactersPerAccount(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditChar: void showCharacterInfo(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditChar: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditChar: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditChar$1
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditChar$1: java.util.Map val$dualboxIPs
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditChar$1: com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditChar this$0
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditChar$1: AdminEditChar$1(com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditChar,java.util.Map)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditChar$1: int compare(java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditChar$1: int compare(java.lang.Object,java.lang.Object)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditChar$2
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditChar$2: int[] $SwitchMap$com$l2jfrozen$gameserver$handler$admincommandhandlers$CommandEnum
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditChar$2: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditNpc
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditNpc: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditNpc: int PAGE_LIMIT
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditNpc: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditNpc: AdminEditNpc()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditNpc: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditNpc: void editShopItem(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String[])
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditNpc: void delShopItem(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String[])
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditNpc: void addShopItem(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String[])
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditNpc: void showShopList(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditNpc: javolution.text.TextBuilder itemListHtml(com.l2jfrozen.gameserver.model.L2TradeList,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditNpc: void showShop(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditNpc: void storeTradeList(int,int,int,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditNpc: void updateTradeList(int,int,int,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditNpc: void deleteTradeList(int,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditNpc: int findOrderTradeList(int,int,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditNpc: java.util.List getTradeLists(int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditNpc: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditNpc: void Show_Npc_Property(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditNpc: void save_npc_property(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String[])
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditNpc: void showNpcDropList(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditNpc: void showEditDropData(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditNpc: void showAddDropData(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditNpc: void updateDropData(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int,int,int,int,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditNpc: void addDropData(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int,int,int,int,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditNpc: void deleteDropData(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditNpc: void reLoadNpcDropList(int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditNpc: void showNpcSkillList(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditNpc: void showNpcSkillEdit(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditNpc: void updateNpcSkillData(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditNpc: void showNpcSkillAdd(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditNpc: void addNpcSkillData(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditNpc: void deleteNpcSkillData(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditNpc: void reLoadNpcSkillList(int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEditNpc: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEffects
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEffects: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEffects: AdminEffects()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEffects: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEffects: boolean performAbnormal(int,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEffects: boolean performSocial(int,com.l2jfrozen.gameserver.model.L2Object,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEffects: void adminAtmosphere(java.lang.String,java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEffects: void playAdminSound(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEffects: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEffects: void showMainPage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEffects: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEnchant
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEnchant: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEnchant: AdminEnchant()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEnchant: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEnchant: void setEnchant(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEnchant: void showMainPage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEnchant: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEnchant: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEventEngine
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEventEngine: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEventEngine: java.lang.String tempBuffer
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEventEngine: java.lang.String tempName
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEventEngine: java.lang.String tempName2
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEventEngine: boolean npcsDeleted
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEventEngine: AdminEventEngine()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEventEngine: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEventEngine: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEventEngine: java.lang.String showStoredEvents()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEventEngine: void showMainPage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEventEngine: void showNewEventPage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEventEngine: void showEventParameters(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEventEngine: void muestraNpcConInfoAPlayers(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEventEngine: void showEventControl(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEventEngine: java.lang.String getMaxLeveledPlayer()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEventEngine: void destroyEventNpcs()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEventEngine: void teleportTeam(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEventEngine: void sitTeam(int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEventEngine: void killTeam(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEventEngine: void resTeam(int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEventEngine: void polyTeam(int,java.lang.String)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEventEngine: void unpolyTeam(int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEventEngine: void createItem(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEventEngine: void regardTeam(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int,int,java.lang.String)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEventEngine: void telePlayersBack(int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminEventEngine: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminExpSp
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminExpSp: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminExpSp: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminExpSp: AdminExpSp()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminExpSp: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminExpSp: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminExpSp: void addExpSp(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminExpSp: boolean adminAddExpSp(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminExpSp: boolean adminRemoveExpSP(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminExpSp: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminFakePlayerOnline
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminFakePlayerOnline: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminFakePlayerOnline: AdminFakePlayerOnline()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminFakePlayerOnline: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminFakePlayerOnline: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminFakePlayerOnline: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminFightCalculator
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminFightCalculator: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminFightCalculator: AdminFightCalculator()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminFightCalculator: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminFightCalculator: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminFightCalculator: void handleStart(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminFightCalculator: void handleShow(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminFightCalculator: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminFortSiege
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminFortSiege: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminFortSiege: AdminFortSiege()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminFortSiege: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminFortSiege: void showFortSelectPage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminFortSiege: void showFortSiegePage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminFortSiege: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminFortSiege: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminGeodata
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminGeodata: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminGeodata: AdminGeodata()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminGeodata: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminGeodata: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminGeodata: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminGeodata$1
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminGeodata$1: int[] $SwitchMap$com$l2jfrozen$gameserver$handler$admincommandhandlers$CommandEnum
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminGeodata$1: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminGm
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminGm: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminGm: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminGm: AdminGm()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminGm: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminGm: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminGm: void handleGm(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminGm: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminGmChat
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminGmChat: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminGmChat: AdminGmChat()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminGmChat: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminGmChat: void snoop(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminGmChat: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminGmChat: void handleGmChat(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminGmChat: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminHeal
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminHeal: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminHeal: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminHeal: AdminHeal()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminHeal: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminHeal: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminHeal: void handleRes(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminHeal: void handleRes(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminHeal: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminHelpPage
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminHelpPage: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminHelpPage: AdminHelpPage()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminHelpPage: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminHelpPage: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminHelpPage: void showHelpPage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminHelpPage: void showSubMenuPage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminHelpPage: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminInvul
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminInvul: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminInvul: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminInvul: AdminInvul()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminInvul: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminInvul: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminInvul: void handleInvul(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminInvul: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminKick
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminKick: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminKick: AdminKick()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminKick: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminKick: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminKick: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminKill
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminKill: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminKill: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminKill: AdminKill()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminKill: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminKill: void kill(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminKill: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminKill: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminLevel
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminLevel: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminLevel: AdminLevel()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminLevel: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminLevel: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminLevel: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminLogin
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminLogin: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminLogin: AdminLogin()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminLogin: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminLogin: void showMainPage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminLogin: void allowToAll()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminLogin: void gmOnly()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminLogin: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminLogin: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMammon
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMammon: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMammon: boolean _isSealValidation
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMammon: AdminMammon()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMammon: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMammon: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMammon: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminManor
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminManor: java.lang.String[] _adminCommands
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminManor: AdminManor()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminManor: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminManor: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminManor: void showMainPage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminManor: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMassControl
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMassControl: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMassControl: AdminMassControl()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMassControl: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMassControl: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMassControl: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMassRecall
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMassRecall: java.lang.String[] _adminCommands
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMassRecall: AdminMassRecall()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMassRecall: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMassRecall: void Teleport(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int,int,java.lang.String)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMassRecall: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMassRecall: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMenu
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMenu: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMenu: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMenu: AdminMenu()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMenu: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMenu: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMenu: void handleKill(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMenu: void handleKill(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMenu: void teleportCharacter(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int,int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMenu: void teleportToCharacter(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMenu: void showMainPage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMenu: void setAccountAccessLevel(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMenu: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMobGroup
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMobGroup: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMobGroup: AdminMobGroup()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMobGroup: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMobGroup: void showMainPage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMobGroup: void returnToChar(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMobGroup: void idle(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMobGroup: void setNormal(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMobGroup: void attack(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMobGroup: void follow(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMobGroup: void createGroup(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMobGroup: void removeGroup(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMobGroup: void spawnGroup(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMobGroup: void unspawnGroup(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMobGroup: void killGroup(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMobGroup: void setCasting(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMobGroup: void noMove(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMobGroup: void doAnimation(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMobGroup: void attackGrp(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMobGroup: void invul(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMobGroup: void teleportGroup(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMobGroup: void showGroupList(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMobGroup: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMobGroup: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMonsterRace
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMonsterRace: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMonsterRace: int state
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMonsterRace: AdminMonsterRace()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMonsterRace: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMonsterRace: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMonsterRace: void handleSendPacket(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMonsterRace: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMonsterRace$RunEnd
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMonsterRace$RunEnd: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance activeChar
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMonsterRace$RunEnd: com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMonsterRace this$0
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMonsterRace$RunEnd: AdminMonsterRace$RunEnd(com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMonsterRace,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMonsterRace$RunEnd: void run()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMonsterRace$RunRace
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMonsterRace$RunRace: int[][] codes
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMonsterRace$RunRace: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance activeChar
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMonsterRace$RunRace: com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMonsterRace this$0
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMonsterRace$RunRace: AdminMonsterRace$RunRace(com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMonsterRace,int[][],com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminMonsterRace$RunRace: void run()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminNoble
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminNoble: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminNoble: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminNoble: java.lang.String INSERT_DATA
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminNoble: java.lang.String DEL_DATA
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminNoble: AdminNoble()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminNoble: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminNoble: void sendMessages(boolean,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean,boolean)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminNoble: void updateDatabase(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminNoble: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminNoble: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPForge
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPForge: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPForge: AdminPForge()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPForge: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPForge: void showMainPage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPForge: void showPage2(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPForge: void showPage3(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPForge: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPForge: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPetition
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPetition: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPetition: AdminPetition()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPetition: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPetition: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPetition: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPetition$1
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPetition$1: int[] $SwitchMap$com$l2jfrozen$gameserver$handler$admincommandhandlers$CommandEnum
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPetition$1: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPledge
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPledge: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPledge: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPledge: AdminPledge()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPledge: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPledge: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPledge: void showMainPage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPledge: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPledge$1
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPledge$1: int[] $SwitchMap$com$l2jfrozen$gameserver$handler$admincommandhandlers$ActionEnum
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPledge$1: int[] $SwitchMap$com$l2jfrozen$gameserver$handler$admincommandhandlers$CommandEnum
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPledge$1: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPolymorph
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPolymorph: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPolymorph: AdminPolymorph()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPolymorph: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPolymorph: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPolymorph: void doPolymorph(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Object,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPolymorph: void doUnpoly(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPolymorph: void showMainPage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminPolymorph: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminQuest
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminQuest: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminQuest: AdminQuest()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminQuest: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminQuest: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminQuest: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminReload
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminReload: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminReload: AdminReload()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminReload: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminReload: void sendReloadPage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminReload: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminReload: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminRepairChar
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminRepairChar: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminRepairChar: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminRepairChar: AdminRepairChar()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminRepairChar: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminRepairChar: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminRepairChar: void handleRepair(java.lang.String)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminRepairChar: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminRes
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminRes: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminRes: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminRes: AdminRes()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminRes: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminRes: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminRes: void handleRes(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminRes: void handleRes(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminRes: void handleNonPlayerRes(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminRes: void handleNonPlayerRes(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminRes: void doResurrect(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminRes: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminRideWyvern
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminRideWyvern: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminRideWyvern: int _petRideId
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminRideWyvern: AdminRideWyvern()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminRideWyvern: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminRideWyvern: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminRideWyvern: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminScript
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminScript: java.io.File SCRIPT_FOLDER
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminScript: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminScript: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminScript: AdminScript()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminScript: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminScript: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminScript: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminShop
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminShop: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminShop: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminShop: AdminShop()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminShop: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminShop: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminShop: void handleBuyRequest(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminShop: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminShutdown
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminShutdown: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminShutdown: AdminShutdown()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminShutdown: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminShutdown: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminShutdown: void sendHtmlForm(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminShutdown: void serverShutdown(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,boolean)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminShutdown: void serverAbort(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminShutdown: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminShutdown$1
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminShutdown$1: int[] $SwitchMap$com$l2jfrozen$gameserver$handler$admincommandhandlers$CommandEnum
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminShutdown$1: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminSiege
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminSiege: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminSiege: AdminSiege()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminSiege: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminSiege: void showCastleSelectPage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminSiege: void showSiegePage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminSiege: void showClanHallPage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.entity.ClanHall)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminSiege: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminSiege: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminSkill
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminSkill: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminSkill: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminSkill: com.l2jfrozen.gameserver.model.L2Skill[] adminSkills
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminSkill: AdminSkill()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminSkill: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminSkill: void adminGiveAllSkills(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminSkill: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminSkill: void removeSkillsPage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminSkill: void showMainPage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminSkill: void adminGetSkills(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminSkill: void adminResetSkills(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminSkill: void adminAddSkill(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminSkill: void adminRemoveSkill(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminSkill: void adminAddClanSkill(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminSkill: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminSpawn
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminSpawn: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminSpawn: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminSpawn: AdminSpawn()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminSpawn: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminSpawn: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminSpawn: void spawnMonster(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String,int,int,boolean)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminSpawn: void showMonsters(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminSpawn: void showNpcs(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminSpawn: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTarget
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTarget: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTarget: AdminTarget()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTarget: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTarget: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTarget: void handleTarget(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTarget: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTeleport
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTeleport: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTeleport: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTeleport: AdminTeleport()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTeleport: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTeleport: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTeleport: void teleportTo(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTeleport: void showTeleportWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTeleport: void showTeleportCharWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTeleport: void teleportToCharacter(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTeleport: void recallNPC(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTeleport: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTeleport$1
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTeleport$1: int[] $SwitchMap$com$l2jfrozen$gameserver$handler$admincommandhandlers$CommandEnum
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTeleport$1: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTest
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTest: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTest: AdminTest()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTest: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTest: void adminTestSkill(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTest: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTest: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTownWar
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTownWar: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTownWar: com.l2jfrozen.gameserver.model.L2Object _activeObject
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTownWar: AdminTownWar()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTownWar: com.l2jfrozen.gameserver.model.L2Object getActiveObject()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTownWar: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTownWar: void startTW(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTownWar: void endTW(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTownWar: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTownWar: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTvTEngine
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTvTEngine: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTvTEngine: AdminTvTEngine()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTvTEngine: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTvTEngine: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTvTEngine: void showMainPage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminTvTEngine: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminUnblockIp
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminUnblockIp: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminUnblockIp: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminUnblockIp: AdminUnblockIp()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminUnblockIp: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminUnblockIp: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminUnblockIp: boolean unblockIp(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminUnblockIp: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminWalker
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminWalker: int _npcid
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminWalker: int _point
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminWalker: java.lang.String _text
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminWalker: int _mode
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminWalker: int _routeid
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminWalker: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminWalker: AdminWalker()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminWalker: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminWalker: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminWalker: void setPoint(int,int,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminWalker: void mainMenu(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminWalker: void addMenu(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminWalker: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminWho
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminWho: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminWho: AdminWho()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminWho: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminWho: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminWho: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminZone
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminZone: java.lang.String[] ADMIN_COMMANDS
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminZone: AdminZone()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminZone: boolean useAdminCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminZone: java.lang.String[] getAdminCommandList()
com.l2jfrozen.gameserver.handler.admincommandhandlers.AdminZone: void <clinit>()
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_admin
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_admin1
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_admin2
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_admin3
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_admin4
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_admin5
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_gmliston
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_gmlistoff
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_silence
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_diet
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_set
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_set_menu
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_set_mod
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_saveolymp
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_manualhero
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_list_announcements
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_reload_announcements
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_announce_announcements
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_add_announcement
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_del_announcement
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_announce
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_critannounce
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_announce_menu
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_list_autoannouncements
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_add_autoannouncement
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_del_autoannouncement
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_autoannounce
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_setaio
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_removeaio
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_getbuffs
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_stopbuff
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_stopallbuffs
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_areacancel
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_cache_htm_rebuild
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_cache_htm_reload
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_cache_reload_path
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_cache_reload_file
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_cache_crest_rebuild
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_cache_crest_reload
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_cache_crest_fix
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_start_monitor_char
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_stop_monitor_char
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_block_char_packet
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_restore_char_packet
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_l2jfrozen
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_itemcreate
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_create_item
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_mass_create
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_clear_inventory
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_ctf
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_ctf_name
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_ctf_desc
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_ctf_join_loc
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_ctf_edit
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_ctf_control
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_ctf_minlvl
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_ctf_maxlvl
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_ctf_tele_npc
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_ctf_tele_team
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_ctf_tele_flag
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_ctf_npc
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_ctf_npc_pos
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_ctf_reward
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_ctf_reward_amount
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_ctf_team_add
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_ctf_team_remove
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_ctf_team_pos
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_ctf_team_color
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_ctf_team_flag
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_ctf_join
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_ctf_teleport
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_ctf_start
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_ctf_startevent
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_ctf_abort
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_ctf_finish
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_ctf_sit
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_ctf_dump
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_ctf_save
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_ctf_load
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_ctf_jointime
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_ctf_eventtime
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_ctf_autoevent
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_ctf_minplayers
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_ctf_maxplayers
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_ctf_interval
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_changename
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_setname
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_edit_character
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_current_player
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_nokarma
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_setkarma
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_character_list
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_character_info
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_show_characters
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_find_character
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_find_dualbox
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_find_ip
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_find_account
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_save_modifications
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_rec
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_setclass
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_settitle
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_setsex
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_setcolor
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_fullfood
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_remclanwait
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_setcp
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_sethp
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_setmp
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_setchar_cp
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_setchar_hp
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_setchar_mp
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_sethero
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_geo_z
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_geo_type
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_geo_nswe
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_geo_los
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_geo_position
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_geo_bug
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_geo_load
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_geo_unload
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_view_petitions
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_view_petition
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_accept_petition
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_reject_petition
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_reset_petitions
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_pledge
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_server_shutdown
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_server_restart
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_server_abort
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_show_moves
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_show_moves_other
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_show_teleport
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_teleport_to_character
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_teleportto
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_move_to
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_teleport_character
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_recall
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_walk
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_recall_npc
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_gonorth
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_gosouth
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_goeast
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_gowest
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_goup
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_godown
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_instant_move
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_sendhome
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_tele
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_teleto
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum admin_recall_party
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum[] $VALUES
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum[] values()
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum valueOf(java.lang.String)
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: CommandEnum(java.lang.String,int)
com.l2jfrozen.gameserver.handler.admincommandhandlers.CommandEnum: void <clinit>()
com.l2jfrozen.gameserver.handler.custom.CustomBypassHandler
com.l2jfrozen.gameserver.handler.custom.CustomBypassHandler: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.custom.CustomBypassHandler: com.l2jfrozen.gameserver.handler.custom.CustomBypassHandler _instance
com.l2jfrozen.gameserver.handler.custom.CustomBypassHandler: java.util.Map _handlers
com.l2jfrozen.gameserver.handler.custom.CustomBypassHandler: CustomBypassHandler()
com.l2jfrozen.gameserver.handler.custom.CustomBypassHandler: com.l2jfrozen.gameserver.handler.custom.CustomBypassHandler getInstance()
com.l2jfrozen.gameserver.handler.custom.CustomBypassHandler: void registerCustomBypassHandler(com.l2jfrozen.gameserver.handler.ICustomByPassHandler)
com.l2jfrozen.gameserver.handler.custom.CustomBypassHandler: void handleBypass(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.custom.CustomBypassHandler: void <clinit>()
com.l2jfrozen.gameserver.handler.custom.CustomWorldHandler
com.l2jfrozen.gameserver.handler.custom.CustomWorldHandler: com.l2jfrozen.gameserver.handler.custom.CustomWorldHandler _instance
com.l2jfrozen.gameserver.handler.custom.CustomWorldHandler: CustomWorldHandler()
com.l2jfrozen.gameserver.handler.custom.CustomWorldHandler: com.l2jfrozen.gameserver.handler.custom.CustomWorldHandler getInstance()
com.l2jfrozen.gameserver.handler.custom.CustomWorldHandler: void enterWorld(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.custom.CustomWorldHandler: void exitWorld(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.custom.CustomWorldHandler: void <clinit>()
com.l2jfrozen.gameserver.handler.custom.ExtractableByPassHandler
com.l2jfrozen.gameserver.handler.custom.ExtractableByPassHandler: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.custom.ExtractableByPassHandler: java.lang.String[] _IDS
com.l2jfrozen.gameserver.handler.custom.ExtractableByPassHandler: ExtractableByPassHandler()
com.l2jfrozen.gameserver.handler.custom.ExtractableByPassHandler: java.lang.String[] getByPassCommands()
com.l2jfrozen.gameserver.handler.custom.ExtractableByPassHandler: void handleCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.custom.ExtractableByPassHandler: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.BeastSoulShot
com.l2jfrozen.gameserver.handler.itemhandlers.BeastSoulShot: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.BeastSoulShot: BeastSoulShot()
com.l2jfrozen.gameserver.handler.itemhandlers.BeastSoulShot: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.BeastSoulShot: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.BeastSoulShot: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.BeastSpice
com.l2jfrozen.gameserver.handler.itemhandlers.BeastSpice: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.BeastSpice: BeastSpice()
com.l2jfrozen.gameserver.handler.itemhandlers.BeastSpice: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.BeastSpice: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.BeastSpice: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.BeastSpiritShot
com.l2jfrozen.gameserver.handler.itemhandlers.BeastSpiritShot: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.BeastSpiritShot: BeastSpiritShot()
com.l2jfrozen.gameserver.handler.itemhandlers.BeastSpiritShot: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.BeastSpiritShot: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.BeastSpiritShot: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.BlessedSpiritShot
com.l2jfrozen.gameserver.handler.itemhandlers.BlessedSpiritShot: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.BlessedSpiritShot: int[] SKILL_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.BlessedSpiritShot: BlessedSpiritShot()
com.l2jfrozen.gameserver.handler.itemhandlers.BlessedSpiritShot: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.BlessedSpiritShot: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.BlessedSpiritShot: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.Book
com.l2jfrozen.gameserver.handler.itemhandlers.Book: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.Book: Book()
com.l2jfrozen.gameserver.handler.itemhandlers.Book: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.Book: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.Book: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.BreakingArrow
com.l2jfrozen.gameserver.handler.itemhandlers.BreakingArrow: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.BreakingArrow: BreakingArrow()
com.l2jfrozen.gameserver.handler.itemhandlers.BreakingArrow: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.BreakingArrow: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.BreakingArrow: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.CharChangePotions
com.l2jfrozen.gameserver.handler.itemhandlers.CharChangePotions: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.CharChangePotions: CharChangePotions()
com.l2jfrozen.gameserver.handler.itemhandlers.CharChangePotions: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.CharChangePotions: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.CharChangePotions: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.ChestKey
com.l2jfrozen.gameserver.handler.itemhandlers.ChestKey: int INTERACTION_DISTANCE
com.l2jfrozen.gameserver.handler.itemhandlers.ChestKey: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.ChestKey: ChestKey()
com.l2jfrozen.gameserver.handler.itemhandlers.ChestKey: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.ChestKey: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.ChestKey: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.ChristmasTree
com.l2jfrozen.gameserver.handler.itemhandlers.ChristmasTree: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.ChristmasTree: int[] NPC_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.ChristmasTree: ChristmasTree()
com.l2jfrozen.gameserver.handler.itemhandlers.ChristmasTree: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.ChristmasTree: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.ChristmasTree: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.ChristmasTree$DeSpawn
com.l2jfrozen.gameserver.handler.itemhandlers.ChristmasTree$DeSpawn: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance _npc
com.l2jfrozen.gameserver.handler.itemhandlers.ChristmasTree$DeSpawn: com.l2jfrozen.gameserver.handler.itemhandlers.ChristmasTree this$0
com.l2jfrozen.gameserver.handler.itemhandlers.ChristmasTree$DeSpawn: ChristmasTree$DeSpawn(com.l2jfrozen.gameserver.handler.itemhandlers.ChristmasTree,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.ChristmasTree$DeSpawn: void run()
com.l2jfrozen.gameserver.handler.itemhandlers.CompBlessedSpiritShotPacks
com.l2jfrozen.gameserver.handler.itemhandlers.CompBlessedSpiritShotPacks: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.CompBlessedSpiritShotPacks: CompBlessedSpiritShotPacks()
com.l2jfrozen.gameserver.handler.itemhandlers.CompBlessedSpiritShotPacks: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.CompBlessedSpiritShotPacks: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.CompBlessedSpiritShotPacks: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.CompShotPacks
com.l2jfrozen.gameserver.handler.itemhandlers.CompShotPacks: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.CompShotPacks: CompShotPacks()
com.l2jfrozen.gameserver.handler.itemhandlers.CompShotPacks: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.CompShotPacks: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.CompShotPacks: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.CompSpiritShotPacks
com.l2jfrozen.gameserver.handler.itemhandlers.CompSpiritShotPacks: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.CompSpiritShotPacks: CompSpiritShotPacks()
com.l2jfrozen.gameserver.handler.itemhandlers.CompSpiritShotPacks: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.CompSpiritShotPacks: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.CompSpiritShotPacks: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.CrystalCarol
com.l2jfrozen.gameserver.handler.itemhandlers.CrystalCarol: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.CrystalCarol: CrystalCarol()
com.l2jfrozen.gameserver.handler.itemhandlers.CrystalCarol: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.CrystalCarol: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.CrystalCarol: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.Crystals
com.l2jfrozen.gameserver.handler.itemhandlers.Crystals: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.itemhandlers.Crystals: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.Crystals: Crystals()
com.l2jfrozen.gameserver.handler.itemhandlers.Crystals: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.Crystals: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.Crystals: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.CustomPotions
com.l2jfrozen.gameserver.handler.itemhandlers.CustomPotions: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.CustomPotions: CustomPotions()
com.l2jfrozen.gameserver.handler.itemhandlers.CustomPotions: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.CustomPotions: boolean usePotion(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int)
com.l2jfrozen.gameserver.handler.itemhandlers.CustomPotions: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.CustomPotions: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.EnchantScrolls
com.l2jfrozen.gameserver.handler.itemhandlers.EnchantScrolls: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.EnchantScrolls: EnchantScrolls()
com.l2jfrozen.gameserver.handler.itemhandlers.EnchantScrolls: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.EnchantScrolls: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.EnchantScrolls: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.EnergyStone
com.l2jfrozen.gameserver.handler.itemhandlers.EnergyStone: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.EnergyStone: com.l2jfrozen.gameserver.skills.effects.EffectCharge _effect
com.l2jfrozen.gameserver.handler.itemhandlers.EnergyStone: com.l2jfrozen.gameserver.skills.l2skills.L2SkillCharge _skill
com.l2jfrozen.gameserver.handler.itemhandlers.EnergyStone: EnergyStone()
com.l2jfrozen.gameserver.handler.itemhandlers.EnergyStone: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.EnergyStone: com.l2jfrozen.gameserver.skills.l2skills.L2SkillCharge getChargeSkill(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.EnergyStone: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.EnergyStone: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.ExtractableItems
com.l2jfrozen.gameserver.handler.itemhandlers.ExtractableItems: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.itemhandlers.ExtractableItems: ExtractableItems()
com.l2jfrozen.gameserver.handler.itemhandlers.ExtractableItems: void doExtract(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance,int)
com.l2jfrozen.gameserver.handler.itemhandlers.ExtractableItems: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.ExtractableItems: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.ExtractableItems: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.Firework
com.l2jfrozen.gameserver.handler.itemhandlers.Firework: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.Firework: Firework()
com.l2jfrozen.gameserver.handler.itemhandlers.Firework: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.Firework: void useFw(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int)
com.l2jfrozen.gameserver.handler.itemhandlers.Firework: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.Firework: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.FishShots
com.l2jfrozen.gameserver.handler.itemhandlers.FishShots: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.FishShots: int[] SKILL_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.FishShots: FishShots()
com.l2jfrozen.gameserver.handler.itemhandlers.FishShots: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.FishShots: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.FishShots: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.Harvester
com.l2jfrozen.gameserver.handler.itemhandlers.Harvester: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.Harvester: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.handler.itemhandlers.Harvester: com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance _target
com.l2jfrozen.gameserver.handler.itemhandlers.Harvester: Harvester()
com.l2jfrozen.gameserver.handler.itemhandlers.Harvester: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.Harvester: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.Harvester: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.HeroCustomItem
com.l2jfrozen.gameserver.handler.itemhandlers.HeroCustomItem: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.itemhandlers.HeroCustomItem: java.lang.String INSERT_DATA
com.l2jfrozen.gameserver.handler.itemhandlers.HeroCustomItem: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.HeroCustomItem: HeroCustomItem()
com.l2jfrozen.gameserver.handler.itemhandlers.HeroCustomItem: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.HeroCustomItem: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.HeroCustomItem: void updateDatabase(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,long)
com.l2jfrozen.gameserver.handler.itemhandlers.HeroCustomItem: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.JackpotSeed
com.l2jfrozen.gameserver.handler.itemhandlers.JackpotSeed: com.l2jfrozen.gameserver.model.actor.instance.L2GourdInstance _gourd
com.l2jfrozen.gameserver.handler.itemhandlers.JackpotSeed: int[] _itemIds
com.l2jfrozen.gameserver.handler.itemhandlers.JackpotSeed: int[] _npcIds
com.l2jfrozen.gameserver.handler.itemhandlers.JackpotSeed: JackpotSeed()
com.l2jfrozen.gameserver.handler.itemhandlers.JackpotSeed: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.JackpotSeed: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.JackpotSeed: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.MOSKey
com.l2jfrozen.gameserver.handler.itemhandlers.MOSKey: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.MOSKey: int INTERACTION_DISTANCE
com.l2jfrozen.gameserver.handler.itemhandlers.MOSKey: long LAST_OPEN
com.l2jfrozen.gameserver.handler.itemhandlers.MOSKey: MOSKey()
com.l2jfrozen.gameserver.handler.itemhandlers.MOSKey: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.MOSKey: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.MOSKey: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.MapForestOfTheDead
com.l2jfrozen.gameserver.handler.itemhandlers.MapForestOfTheDead: int[] _itemIds
com.l2jfrozen.gameserver.handler.itemhandlers.MapForestOfTheDead: MapForestOfTheDead()
com.l2jfrozen.gameserver.handler.itemhandlers.MapForestOfTheDead: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.MapForestOfTheDead: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.MapForestOfTheDead: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.Maps
com.l2jfrozen.gameserver.handler.itemhandlers.Maps: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.Maps: Maps()
com.l2jfrozen.gameserver.handler.itemhandlers.Maps: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.Maps: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.Maps: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.MercTicket
com.l2jfrozen.gameserver.handler.itemhandlers.MercTicket: java.lang.String[] MESSAGES
com.l2jfrozen.gameserver.handler.itemhandlers.MercTicket: MercTicket()
com.l2jfrozen.gameserver.handler.itemhandlers.MercTicket: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.MercTicket: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.MercTicket: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.MysteryPotion
com.l2jfrozen.gameserver.handler.itemhandlers.MysteryPotion: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.MysteryPotion: int BIGHEAD_EFFECT
com.l2jfrozen.gameserver.handler.itemhandlers.MysteryPotion: int MYSTERY_POTION_SKILL
com.l2jfrozen.gameserver.handler.itemhandlers.MysteryPotion: int EFFECT_DURATION
com.l2jfrozen.gameserver.handler.itemhandlers.MysteryPotion: MysteryPotion()
com.l2jfrozen.gameserver.handler.itemhandlers.MysteryPotion: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.MysteryPotion: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.MysteryPotion: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.MysteryPotion$MysteryPotionStop
com.l2jfrozen.gameserver.handler.itemhandlers.MysteryPotion$MysteryPotionStop: com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance _playable
com.l2jfrozen.gameserver.handler.itemhandlers.MysteryPotion$MysteryPotionStop: com.l2jfrozen.gameserver.handler.itemhandlers.MysteryPotion this$0
com.l2jfrozen.gameserver.handler.itemhandlers.MysteryPotion$MysteryPotionStop: MysteryPotion$MysteryPotionStop(com.l2jfrozen.gameserver.handler.itemhandlers.MysteryPotion,com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.MysteryPotion$MysteryPotionStop: void run()
com.l2jfrozen.gameserver.handler.itemhandlers.Nectar
com.l2jfrozen.gameserver.handler.itemhandlers.Nectar: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.Nectar: Nectar()
com.l2jfrozen.gameserver.handler.itemhandlers.Nectar: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.Nectar: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.Nectar: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.NobleCustomItem
com.l2jfrozen.gameserver.handler.itemhandlers.NobleCustomItem: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.NobleCustomItem: NobleCustomItem()
com.l2jfrozen.gameserver.handler.itemhandlers.NobleCustomItem: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.NobleCustomItem: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.NobleCustomItem: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.PaganKeys
com.l2jfrozen.gameserver.handler.itemhandlers.PaganKeys: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.PaganKeys: int INTERACTION_DISTANCE
com.l2jfrozen.gameserver.handler.itemhandlers.PaganKeys: PaganKeys()
com.l2jfrozen.gameserver.handler.itemhandlers.PaganKeys: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.PaganKeys: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.PaganKeys: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.Potions
com.l2jfrozen.gameserver.handler.itemhandlers.Potions: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.itemhandlers.Potions: int _herbstask
com.l2jfrozen.gameserver.handler.itemhandlers.Potions: javolution.util.FastMap potions
com.l2jfrozen.gameserver.handler.itemhandlers.Potions: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.Potions: Potions()
com.l2jfrozen.gameserver.handler.itemhandlers.Potions: void loadPotions()
com.l2jfrozen.gameserver.handler.itemhandlers.Potions: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills get_skills_for_potion(java.lang.Integer)
com.l2jfrozen.gameserver.handler.itemhandlers.Potions: java.util.List get_potions_for_skill(java.lang.Integer,java.lang.Integer)
com.l2jfrozen.gameserver.handler.itemhandlers.Potions: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.Potions: boolean isEffectReplaceable(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,java.lang.Enum,int)
com.l2jfrozen.gameserver.handler.itemhandlers.Potions: boolean usePotion(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,int,int)
com.l2jfrozen.gameserver.handler.itemhandlers.Potions: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.Potions: void delete_Potion_Item(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,java.lang.Integer,java.lang.Integer)
com.l2jfrozen.gameserver.handler.itemhandlers.Potions: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$HerbTask
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$HerbTask: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$HerbTask: int _magicId
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$HerbTask: int _level
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$HerbTask: com.l2jfrozen.gameserver.handler.itemhandlers.Potions this$0
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$HerbTask: Potions$HerbTask(com.l2jfrozen.gameserver.handler.itemhandlers.Potions,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int)
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$HerbTask: void run()
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills mana_drug
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills mana_potion
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills red_potion
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills healing_drug
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills healing_potion_ring
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills quick_step_potion
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills swift_attack_potion
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills lesser_healing_potion
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills beginner_s_potion
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills healing_potion
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills haste_potion
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills adv_quick_step_potion
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills adv_swift_attack_potion
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills greater_healing_potion
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills quick_healing_potion
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills bless_of_eva
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills endeavor_potion
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills potion_of_critical_escape
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills rsk_damage_shield_potion
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills Rice_Cake
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills CP
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills Greater_CP
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills Magic_Haste_Potion
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills Greater_Magic_Haste_Potion
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills elixir_of_Life_nog
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills elixir_of_Life_d
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills elixir_of_Life_c
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills elixir_of_Life_b
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills elixir_of_Life_a
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills elixir_of_Life_s
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills elixir_of_Strength_nog
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills elixir_of_Strength_d
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills elixir_of_Strength_c
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills elixir_of_Strength_b
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills elixir_of_Strength_a
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills elixir_of_Strength_s
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills elixir_of_cp_nog
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills elixir_of_cp_d
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills elixir_of_cp_c
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills elixir_of_cp_b
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills elixir_of_cp_a
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills elixir_of_cp_s
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills Amulet_Protection_of_Valakas
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills Amulet_Flames_of_Valakas_1
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills Amulet_Flames_of_Valakas_2
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills Amulet_Slay_Valakas
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills Herb_of_Life
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills Greater_Herb_of_Life
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills Superior_Herb_of_Life
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills Herb_of_Mana
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills Greater_Herb_of_Mane
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills Superior_Herb_of_Mane
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills Herb_of_Strength
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills Herb_of_Magic
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills Herb_of_Atk_Spd
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills Herb_of_Casting_Spd
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills Herb_of_Critical_Attack
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills Herb_of_Speed
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills Herb_of_Warrior
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills Herb_of_Mystic
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills Herb_of_Recovery
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills Fisherman_s_Potion_Green
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills Fisherman_s_Potion_Jade
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills Fisherman_s_Potion_Blue
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills Fisherman_s_Potion_Yellow
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills Fisherman_s_Potion_Orange
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills Fisherman_s_Potion_Purple
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills Fisherman_s_Potion_Red
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills Fisherman_s_Potion_White
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills Fisherman_s_Potion_Black
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills Fishing_Potion
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills Primeval_Potion
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills Primeval_Potion1
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: java.lang.Integer potion_id
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: javolution.util.FastMap skills
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills[] $VALUES
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills[] values()
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills valueOf(java.lang.String)
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: Potions$PotionsSkills(java.lang.String,int,int,int,int)
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: Potions$PotionsSkills(java.lang.String,int,int,java.lang.Integer[],java.lang.Integer[])
com.l2jfrozen.gameserver.handler.itemhandlers.Potions$PotionsSkills: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.Recipes
com.l2jfrozen.gameserver.handler.itemhandlers.Recipes: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.Recipes: Recipes()
com.l2jfrozen.gameserver.handler.itemhandlers.Recipes: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.Recipes: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.Remedy
com.l2jfrozen.gameserver.handler.itemhandlers.Remedy: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.Remedy: Remedy()
com.l2jfrozen.gameserver.handler.itemhandlers.Remedy: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.Remedy: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.Remedy: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.RollingDice
com.l2jfrozen.gameserver.handler.itemhandlers.RollingDice: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.RollingDice: RollingDice()
com.l2jfrozen.gameserver.handler.itemhandlers.RollingDice: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.RollingDice: int rollDice(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.RollingDice: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.RollingDice: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.ScrollOfEscape
com.l2jfrozen.gameserver.handler.itemhandlers.ScrollOfEscape: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.ScrollOfEscape: ScrollOfEscape()
com.l2jfrozen.gameserver.handler.itemhandlers.ScrollOfEscape: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.ScrollOfEscape: boolean checkConditions(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.ScrollOfEscape: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.ScrollOfEscape: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.ScrollOfEscape$EscapeFinalizer
com.l2jfrozen.gameserver.handler.itemhandlers.ScrollOfEscape$EscapeFinalizer: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.handler.itemhandlers.ScrollOfEscape$EscapeFinalizer: int _itemId
com.l2jfrozen.gameserver.handler.itemhandlers.ScrollOfEscape$EscapeFinalizer: ScrollOfEscape$EscapeFinalizer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.handler.itemhandlers.ScrollOfEscape$EscapeFinalizer: void run()
com.l2jfrozen.gameserver.handler.itemhandlers.ScrollOfResurrection
com.l2jfrozen.gameserver.handler.itemhandlers.ScrollOfResurrection: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.ScrollOfResurrection: ScrollOfResurrection()
com.l2jfrozen.gameserver.handler.itemhandlers.ScrollOfResurrection: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.ScrollOfResurrection: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.ScrollOfResurrection: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.Scrolls
com.l2jfrozen.gameserver.handler.itemhandlers.Scrolls: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.Scrolls: Scrolls()
com.l2jfrozen.gameserver.handler.itemhandlers.Scrolls: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.Scrolls: void useScroll(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int)
com.l2jfrozen.gameserver.handler.itemhandlers.Scrolls: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.Scrolls: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.Seed
com.l2jfrozen.gameserver.handler.itemhandlers.Seed: int[] _itemIds
com.l2jfrozen.gameserver.handler.itemhandlers.Seed: int _seedId
com.l2jfrozen.gameserver.handler.itemhandlers.Seed: com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance _target
com.l2jfrozen.gameserver.handler.itemhandlers.Seed: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.handler.itemhandlers.Seed: Seed()
com.l2jfrozen.gameserver.handler.itemhandlers.Seed: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.Seed: boolean areaValid(int)
com.l2jfrozen.gameserver.handler.itemhandlers.Seed: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.Seed: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.SevenSignsRecord
com.l2jfrozen.gameserver.handler.itemhandlers.SevenSignsRecord: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.SevenSignsRecord: SevenSignsRecord()
com.l2jfrozen.gameserver.handler.itemhandlers.SevenSignsRecord: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.SevenSignsRecord: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.SevenSignsRecord: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.SoulCrystals
com.l2jfrozen.gameserver.handler.itemhandlers.SoulCrystals: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.SoulCrystals: SoulCrystals()
com.l2jfrozen.gameserver.handler.itemhandlers.SoulCrystals: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.SoulCrystals: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.SoulCrystals: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.SoulCrystals$CrystalFinalizer
com.l2jfrozen.gameserver.handler.itemhandlers.SoulCrystals$CrystalFinalizer: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.handler.itemhandlers.SoulCrystals$CrystalFinalizer: com.l2jfrozen.gameserver.model.L2Attackable _target
com.l2jfrozen.gameserver.handler.itemhandlers.SoulCrystals$CrystalFinalizer: int _crystalId
com.l2jfrozen.gameserver.handler.itemhandlers.SoulCrystals$CrystalFinalizer: SoulCrystals$CrystalFinalizer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Object,int)
com.l2jfrozen.gameserver.handler.itemhandlers.SoulCrystals$CrystalFinalizer: void run()
com.l2jfrozen.gameserver.handler.itemhandlers.SoulShots
com.l2jfrozen.gameserver.handler.itemhandlers.SoulShots: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.SoulShots: int[] SKILL_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.SoulShots: SoulShots()
com.l2jfrozen.gameserver.handler.itemhandlers.SoulShots: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.SoulShots: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.SoulShots: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.SpecialXMas
com.l2jfrozen.gameserver.handler.itemhandlers.SpecialXMas: int[] _itemIds
com.l2jfrozen.gameserver.handler.itemhandlers.SpecialXMas: SpecialXMas()
com.l2jfrozen.gameserver.handler.itemhandlers.SpecialXMas: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.SpecialXMas: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.SpecialXMas: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.SpiritShot
com.l2jfrozen.gameserver.handler.itemhandlers.SpiritShot: int[] ITEM_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.SpiritShot: int[] SKILL_IDS
com.l2jfrozen.gameserver.handler.itemhandlers.SpiritShot: SpiritShot()
com.l2jfrozen.gameserver.handler.itemhandlers.SpiritShot: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.SpiritShot: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.SpiritShot: void <clinit>()
com.l2jfrozen.gameserver.handler.itemhandlers.SummonItems
com.l2jfrozen.gameserver.handler.itemhandlers.SummonItems: SummonItems()
com.l2jfrozen.gameserver.handler.itemhandlers.SummonItems: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.SummonItems: int[] getItemIds()
com.l2jfrozen.gameserver.handler.itemhandlers.SummonItems$PetSummonFeedWait
com.l2jfrozen.gameserver.handler.itemhandlers.SummonItems$PetSummonFeedWait: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.handler.itemhandlers.SummonItems$PetSummonFeedWait: com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance _petSummon
com.l2jfrozen.gameserver.handler.itemhandlers.SummonItems$PetSummonFeedWait: SummonItems$PetSummonFeedWait(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.SummonItems$PetSummonFeedWait: void run()
com.l2jfrozen.gameserver.handler.itemhandlers.SummonItems$PetSummonFinalizer
com.l2jfrozen.gameserver.handler.itemhandlers.SummonItems$PetSummonFinalizer: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.handler.itemhandlers.SummonItems$PetSummonFinalizer: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance _item
com.l2jfrozen.gameserver.handler.itemhandlers.SummonItems$PetSummonFinalizer: com.l2jfrozen.gameserver.templates.L2NpcTemplate _npcTemplate
com.l2jfrozen.gameserver.handler.itemhandlers.SummonItems$PetSummonFinalizer: SummonItems$PetSummonFinalizer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.templates.L2NpcTemplate,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.handler.itemhandlers.SummonItems$PetSummonFinalizer: void run()
com.l2jfrozen.gameserver.handler.skillhandlers.BalanceLife
com.l2jfrozen.gameserver.handler.skillhandlers.BalanceLife: com.l2jfrozen.gameserver.model.SkillType[] SKILL_IDS
com.l2jfrozen.gameserver.handler.skillhandlers.BalanceLife: BalanceLife()
com.l2jfrozen.gameserver.handler.skillhandlers.BalanceLife: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.handler.skillhandlers.BalanceLife: com.l2jfrozen.gameserver.model.SkillType[] getSkillIds()
com.l2jfrozen.gameserver.handler.skillhandlers.BalanceLife: void <clinit>()
com.l2jfrozen.gameserver.handler.skillhandlers.BeastFeed
com.l2jfrozen.gameserver.handler.skillhandlers.BeastFeed: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.skillhandlers.BeastFeed: com.l2jfrozen.gameserver.model.SkillType[] SKILL_IDS
com.l2jfrozen.gameserver.handler.skillhandlers.BeastFeed: BeastFeed()
com.l2jfrozen.gameserver.handler.skillhandlers.BeastFeed: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.handler.skillhandlers.BeastFeed: com.l2jfrozen.gameserver.model.SkillType[] getSkillIds()
com.l2jfrozen.gameserver.handler.skillhandlers.BeastFeed: void <clinit>()
com.l2jfrozen.gameserver.handler.skillhandlers.Blow
com.l2jfrozen.gameserver.handler.skillhandlers.Blow: com.l2jfrozen.gameserver.model.SkillType[] SKILL_IDS
com.l2jfrozen.gameserver.handler.skillhandlers.Blow: Blow()
com.l2jfrozen.gameserver.handler.skillhandlers.Blow: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.handler.skillhandlers.Blow: com.l2jfrozen.gameserver.model.SkillType[] getSkillIds()
com.l2jfrozen.gameserver.handler.skillhandlers.Blow: void <clinit>()
com.l2jfrozen.gameserver.handler.skillhandlers.Charge
com.l2jfrozen.gameserver.handler.skillhandlers.Charge: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.skillhandlers.Charge: com.l2jfrozen.gameserver.model.SkillType[] SKILL_IDS
com.l2jfrozen.gameserver.handler.skillhandlers.Charge: Charge()
com.l2jfrozen.gameserver.handler.skillhandlers.Charge: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.handler.skillhandlers.Charge: com.l2jfrozen.gameserver.model.SkillType[] getSkillIds()
com.l2jfrozen.gameserver.handler.skillhandlers.Charge: void <clinit>()
com.l2jfrozen.gameserver.handler.skillhandlers.ClanGate
com.l2jfrozen.gameserver.handler.skillhandlers.ClanGate: com.l2jfrozen.gameserver.model.SkillType[] SKILL_IDS
com.l2jfrozen.gameserver.handler.skillhandlers.ClanGate: ClanGate()
com.l2jfrozen.gameserver.handler.skillhandlers.ClanGate: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.handler.skillhandlers.ClanGate: com.l2jfrozen.gameserver.model.SkillType[] getSkillIds()
com.l2jfrozen.gameserver.handler.skillhandlers.ClanGate: void <clinit>()
com.l2jfrozen.gameserver.handler.skillhandlers.ClanGate$RemoveClanGate
com.l2jfrozen.gameserver.handler.skillhandlers.ClanGate$RemoveClanGate: int castle
com.l2jfrozen.gameserver.handler.skillhandlers.ClanGate$RemoveClanGate: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance player
com.l2jfrozen.gameserver.handler.skillhandlers.ClanGate$RemoveClanGate: com.l2jfrozen.gameserver.handler.skillhandlers.ClanGate this$0
com.l2jfrozen.gameserver.handler.skillhandlers.ClanGate$RemoveClanGate: ClanGate$RemoveClanGate(com.l2jfrozen.gameserver.handler.skillhandlers.ClanGate,int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.skillhandlers.ClanGate$RemoveClanGate: void run()
com.l2jfrozen.gameserver.handler.skillhandlers.CombatPointHeal
com.l2jfrozen.gameserver.handler.skillhandlers.CombatPointHeal: com.l2jfrozen.gameserver.model.SkillType[] SKILL_IDS
com.l2jfrozen.gameserver.handler.skillhandlers.CombatPointHeal: CombatPointHeal()
com.l2jfrozen.gameserver.handler.skillhandlers.CombatPointHeal: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.handler.skillhandlers.CombatPointHeal: com.l2jfrozen.gameserver.model.SkillType[] getSkillIds()
com.l2jfrozen.gameserver.handler.skillhandlers.CombatPointHeal: void <clinit>()
com.l2jfrozen.gameserver.handler.skillhandlers.Continuous
com.l2jfrozen.gameserver.handler.skillhandlers.Continuous: com.l2jfrozen.gameserver.model.SkillType[] SKILL_IDS
com.l2jfrozen.gameserver.handler.skillhandlers.Continuous: com.l2jfrozen.gameserver.model.L2Skill _skill
com.l2jfrozen.gameserver.handler.skillhandlers.Continuous: Continuous()
com.l2jfrozen.gameserver.handler.skillhandlers.Continuous: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.handler.skillhandlers.Continuous: com.l2jfrozen.gameserver.model.SkillType[] getSkillIds()
com.l2jfrozen.gameserver.handler.skillhandlers.Continuous: void <clinit>()
com.l2jfrozen.gameserver.handler.skillhandlers.CpDam
com.l2jfrozen.gameserver.handler.skillhandlers.CpDam: com.l2jfrozen.gameserver.model.SkillType[] SKILL_IDS
com.l2jfrozen.gameserver.handler.skillhandlers.CpDam: CpDam()
com.l2jfrozen.gameserver.handler.skillhandlers.CpDam: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.handler.skillhandlers.CpDam: com.l2jfrozen.gameserver.model.SkillType[] getSkillIds()
com.l2jfrozen.gameserver.handler.skillhandlers.CpDam: void <clinit>()
com.l2jfrozen.gameserver.handler.skillhandlers.Craft
com.l2jfrozen.gameserver.handler.skillhandlers.Craft: com.l2jfrozen.gameserver.model.SkillType[] SKILL_IDS
com.l2jfrozen.gameserver.handler.skillhandlers.Craft: Craft()
com.l2jfrozen.gameserver.handler.skillhandlers.Craft: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.handler.skillhandlers.Craft: com.l2jfrozen.gameserver.model.SkillType[] getSkillIds()
com.l2jfrozen.gameserver.handler.skillhandlers.Craft: void <clinit>()
com.l2jfrozen.gameserver.handler.skillhandlers.DeluxeKey
com.l2jfrozen.gameserver.handler.skillhandlers.DeluxeKey: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.skillhandlers.DeluxeKey: com.l2jfrozen.gameserver.model.SkillType[] SKILL_IDS
com.l2jfrozen.gameserver.handler.skillhandlers.DeluxeKey: DeluxeKey()
com.l2jfrozen.gameserver.handler.skillhandlers.DeluxeKey: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.handler.skillhandlers.DeluxeKey: com.l2jfrozen.gameserver.model.SkillType[] getSkillIds()
com.l2jfrozen.gameserver.handler.skillhandlers.DeluxeKey: void <clinit>()
com.l2jfrozen.gameserver.handler.skillhandlers.Disablers
com.l2jfrozen.gameserver.handler.skillhandlers.Disablers: com.l2jfrozen.gameserver.model.SkillType[] SKILL_IDS
com.l2jfrozen.gameserver.handler.skillhandlers.Disablers: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.skillhandlers.Disablers: java.lang.String[] _negateSkillTypes
com.l2jfrozen.gameserver.handler.skillhandlers.Disablers: java.lang.String[] _negateEffectTypes
com.l2jfrozen.gameserver.handler.skillhandlers.Disablers: float _negatePower
com.l2jfrozen.gameserver.handler.skillhandlers.Disablers: int _negateId
com.l2jfrozen.gameserver.handler.skillhandlers.Disablers: Disablers()
com.l2jfrozen.gameserver.handler.skillhandlers.Disablers: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.handler.skillhandlers.Disablers: void negateEffect(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.SkillType,double)
com.l2jfrozen.gameserver.handler.skillhandlers.Disablers: void negateEffect(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.SkillType,double,int)
com.l2jfrozen.gameserver.handler.skillhandlers.Disablers: com.l2jfrozen.gameserver.model.SkillType[] getSkillIds()
com.l2jfrozen.gameserver.handler.skillhandlers.Disablers: void <clinit>()
com.l2jfrozen.gameserver.handler.skillhandlers.Disablers$1
com.l2jfrozen.gameserver.handler.skillhandlers.Disablers$1: int[] $SwitchMap$com$l2jfrozen$gameserver$model$EffectType
com.l2jfrozen.gameserver.handler.skillhandlers.Disablers$1: int[] $SwitchMap$com$l2jfrozen$gameserver$model$SkillType
com.l2jfrozen.gameserver.handler.skillhandlers.Disablers$1: void <clinit>()
com.l2jfrozen.gameserver.handler.skillhandlers.DrainSoul
com.l2jfrozen.gameserver.handler.skillhandlers.DrainSoul: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.skillhandlers.DrainSoul: com.l2jfrozen.gameserver.model.SkillType[] SKILL_IDS
com.l2jfrozen.gameserver.handler.skillhandlers.DrainSoul: DrainSoul()
com.l2jfrozen.gameserver.handler.skillhandlers.DrainSoul: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.handler.skillhandlers.DrainSoul: com.l2jfrozen.gameserver.model.SkillType[] getSkillIds()
com.l2jfrozen.gameserver.handler.skillhandlers.DrainSoul: void <clinit>()
com.l2jfrozen.gameserver.handler.skillhandlers.Fishing
com.l2jfrozen.gameserver.handler.skillhandlers.Fishing: com.l2jfrozen.gameserver.model.SkillType[] SKILL_IDS
com.l2jfrozen.gameserver.handler.skillhandlers.Fishing: Fishing()
com.l2jfrozen.gameserver.handler.skillhandlers.Fishing: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.handler.skillhandlers.Fishing: com.l2jfrozen.gameserver.model.SkillType[] getSkillIds()
com.l2jfrozen.gameserver.handler.skillhandlers.Fishing: void <clinit>()
com.l2jfrozen.gameserver.handler.skillhandlers.FishingSkill
com.l2jfrozen.gameserver.handler.skillhandlers.FishingSkill: com.l2jfrozen.gameserver.model.SkillType[] SKILL_IDS
com.l2jfrozen.gameserver.handler.skillhandlers.FishingSkill: FishingSkill()
com.l2jfrozen.gameserver.handler.skillhandlers.FishingSkill: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.handler.skillhandlers.FishingSkill: com.l2jfrozen.gameserver.model.SkillType[] getSkillIds()
com.l2jfrozen.gameserver.handler.skillhandlers.FishingSkill: void <clinit>()
com.l2jfrozen.gameserver.handler.skillhandlers.GetPlayer
com.l2jfrozen.gameserver.handler.skillhandlers.GetPlayer: com.l2jfrozen.gameserver.model.SkillType[] SKILL_IDS
com.l2jfrozen.gameserver.handler.skillhandlers.GetPlayer: GetPlayer()
com.l2jfrozen.gameserver.handler.skillhandlers.GetPlayer: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.handler.skillhandlers.GetPlayer: com.l2jfrozen.gameserver.model.SkillType[] getSkillIds()
com.l2jfrozen.gameserver.handler.skillhandlers.GetPlayer: void <clinit>()
com.l2jfrozen.gameserver.handler.skillhandlers.GiveSp
com.l2jfrozen.gameserver.handler.skillhandlers.GiveSp: com.l2jfrozen.gameserver.model.SkillType[] SKILL_IDS
com.l2jfrozen.gameserver.handler.skillhandlers.GiveSp: GiveSp()
com.l2jfrozen.gameserver.handler.skillhandlers.GiveSp: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.handler.skillhandlers.GiveSp: com.l2jfrozen.gameserver.model.SkillType[] getSkillIds()
com.l2jfrozen.gameserver.handler.skillhandlers.GiveSp: void <clinit>()
com.l2jfrozen.gameserver.handler.skillhandlers.Harvest
com.l2jfrozen.gameserver.handler.skillhandlers.Harvest: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.skillhandlers.Harvest: com.l2jfrozen.gameserver.model.SkillType[] SKILL_IDS
com.l2jfrozen.gameserver.handler.skillhandlers.Harvest: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.handler.skillhandlers.Harvest: com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance _target
com.l2jfrozen.gameserver.handler.skillhandlers.Harvest: Harvest()
com.l2jfrozen.gameserver.handler.skillhandlers.Harvest: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.handler.skillhandlers.Harvest: boolean calcSuccess()
com.l2jfrozen.gameserver.handler.skillhandlers.Harvest: com.l2jfrozen.gameserver.model.SkillType[] getSkillIds()
com.l2jfrozen.gameserver.handler.skillhandlers.Harvest: void <clinit>()
com.l2jfrozen.gameserver.handler.skillhandlers.Heal
com.l2jfrozen.gameserver.handler.skillhandlers.Heal: com.l2jfrozen.gameserver.model.SkillType[] SKILL_IDS
com.l2jfrozen.gameserver.handler.skillhandlers.Heal: Heal()
com.l2jfrozen.gameserver.handler.skillhandlers.Heal: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.handler.skillhandlers.Heal: com.l2jfrozen.gameserver.model.SkillType[] getSkillIds()
com.l2jfrozen.gameserver.handler.skillhandlers.Heal: void <clinit>()
com.l2jfrozen.gameserver.handler.skillhandlers.ManaHeal
com.l2jfrozen.gameserver.handler.skillhandlers.ManaHeal: com.l2jfrozen.gameserver.model.SkillType[] SKILL_IDS
com.l2jfrozen.gameserver.handler.skillhandlers.ManaHeal: ManaHeal()
com.l2jfrozen.gameserver.handler.skillhandlers.ManaHeal: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.handler.skillhandlers.ManaHeal: com.l2jfrozen.gameserver.model.SkillType[] getSkillIds()
com.l2jfrozen.gameserver.handler.skillhandlers.ManaHeal: void <clinit>()
com.l2jfrozen.gameserver.handler.skillhandlers.Manadam
com.l2jfrozen.gameserver.handler.skillhandlers.Manadam: com.l2jfrozen.gameserver.model.SkillType[] SKILL_IDS
com.l2jfrozen.gameserver.handler.skillhandlers.Manadam: Manadam()
com.l2jfrozen.gameserver.handler.skillhandlers.Manadam: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.handler.skillhandlers.Manadam: com.l2jfrozen.gameserver.model.SkillType[] getSkillIds()
com.l2jfrozen.gameserver.handler.skillhandlers.Manadam: void <clinit>()
com.l2jfrozen.gameserver.handler.skillhandlers.Mdam
com.l2jfrozen.gameserver.handler.skillhandlers.Mdam: com.l2jfrozen.gameserver.model.SkillType[] SKILL_IDS
com.l2jfrozen.gameserver.handler.skillhandlers.Mdam: Mdam()
com.l2jfrozen.gameserver.handler.skillhandlers.Mdam: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.handler.skillhandlers.Mdam: com.l2jfrozen.gameserver.model.SkillType[] getSkillIds()
com.l2jfrozen.gameserver.handler.skillhandlers.Mdam: void <clinit>()
com.l2jfrozen.gameserver.handler.skillhandlers.Pdam
com.l2jfrozen.gameserver.handler.skillhandlers.Pdam: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.skillhandlers.Pdam: com.l2jfrozen.gameserver.model.SkillType[] SKILL_IDS
com.l2jfrozen.gameserver.handler.skillhandlers.Pdam: Pdam()
com.l2jfrozen.gameserver.handler.skillhandlers.Pdam: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.handler.skillhandlers.Pdam: com.l2jfrozen.gameserver.model.SkillType[] getSkillIds()
com.l2jfrozen.gameserver.handler.skillhandlers.Pdam: void <clinit>()
com.l2jfrozen.gameserver.handler.skillhandlers.Recall
com.l2jfrozen.gameserver.handler.skillhandlers.Recall: com.l2jfrozen.gameserver.model.SkillType[] SKILL_IDS
com.l2jfrozen.gameserver.handler.skillhandlers.Recall: Recall()
com.l2jfrozen.gameserver.handler.skillhandlers.Recall: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.handler.skillhandlers.Recall: com.l2jfrozen.gameserver.model.SkillType[] getSkillIds()
com.l2jfrozen.gameserver.handler.skillhandlers.Recall: void <clinit>()
com.l2jfrozen.gameserver.handler.skillhandlers.Resurrect
com.l2jfrozen.gameserver.handler.skillhandlers.Resurrect: com.l2jfrozen.gameserver.model.SkillType[] SKILL_IDS
com.l2jfrozen.gameserver.handler.skillhandlers.Resurrect: Resurrect()
com.l2jfrozen.gameserver.handler.skillhandlers.Resurrect: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.handler.skillhandlers.Resurrect: com.l2jfrozen.gameserver.model.SkillType[] getSkillIds()
com.l2jfrozen.gameserver.handler.skillhandlers.Resurrect: void <clinit>()
com.l2jfrozen.gameserver.handler.skillhandlers.SiegeFlag
com.l2jfrozen.gameserver.handler.skillhandlers.SiegeFlag: com.l2jfrozen.gameserver.model.SkillType[] SKILL_IDS
com.l2jfrozen.gameserver.handler.skillhandlers.SiegeFlag: SiegeFlag()
com.l2jfrozen.gameserver.handler.skillhandlers.SiegeFlag: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.handler.skillhandlers.SiegeFlag: com.l2jfrozen.gameserver.model.SkillType[] getSkillIds()
com.l2jfrozen.gameserver.handler.skillhandlers.SiegeFlag: boolean checkIfOkToPlaceFlag(com.l2jfrozen.gameserver.model.L2Character,boolean)
com.l2jfrozen.gameserver.handler.skillhandlers.SiegeFlag: boolean checkIfOkToPlaceFlag(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.entity.siege.Castle,boolean)
com.l2jfrozen.gameserver.handler.skillhandlers.SiegeFlag: boolean checkIfOkToPlaceFlag(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.entity.siege.Fort,boolean)
com.l2jfrozen.gameserver.handler.skillhandlers.SiegeFlag: void <clinit>()
com.l2jfrozen.gameserver.handler.skillhandlers.Sow
com.l2jfrozen.gameserver.handler.skillhandlers.Sow: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.skillhandlers.Sow: com.l2jfrozen.gameserver.model.SkillType[] SKILL_IDS
com.l2jfrozen.gameserver.handler.skillhandlers.Sow: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.handler.skillhandlers.Sow: com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance _target
com.l2jfrozen.gameserver.handler.skillhandlers.Sow: int _seedId
com.l2jfrozen.gameserver.handler.skillhandlers.Sow: Sow()
com.l2jfrozen.gameserver.handler.skillhandlers.Sow: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.handler.skillhandlers.Sow: boolean calcSuccess()
com.l2jfrozen.gameserver.handler.skillhandlers.Sow: com.l2jfrozen.gameserver.model.SkillType[] getSkillIds()
com.l2jfrozen.gameserver.handler.skillhandlers.Sow: void <clinit>()
com.l2jfrozen.gameserver.handler.skillhandlers.Spoil
com.l2jfrozen.gameserver.handler.skillhandlers.Spoil: com.l2jfrozen.gameserver.model.SkillType[] SKILL_IDS
com.l2jfrozen.gameserver.handler.skillhandlers.Spoil: Spoil()
com.l2jfrozen.gameserver.handler.skillhandlers.Spoil: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.handler.skillhandlers.Spoil: com.l2jfrozen.gameserver.model.SkillType[] getSkillIds()
com.l2jfrozen.gameserver.handler.skillhandlers.Spoil: void <clinit>()
com.l2jfrozen.gameserver.handler.skillhandlers.StrSiegeAssault
com.l2jfrozen.gameserver.handler.skillhandlers.StrSiegeAssault: com.l2jfrozen.gameserver.model.SkillType[] SKILL_IDS
com.l2jfrozen.gameserver.handler.skillhandlers.StrSiegeAssault: StrSiegeAssault()
com.l2jfrozen.gameserver.handler.skillhandlers.StrSiegeAssault: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.handler.skillhandlers.StrSiegeAssault: com.l2jfrozen.gameserver.model.SkillType[] getSkillIds()
com.l2jfrozen.gameserver.handler.skillhandlers.StrSiegeAssault: boolean checkIfOkToUseStriderSiegeAssault(com.l2jfrozen.gameserver.model.L2Character,boolean)
com.l2jfrozen.gameserver.handler.skillhandlers.StrSiegeAssault: boolean checkIfOkToUseStriderSiegeAssault(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.entity.siege.Castle,boolean)
com.l2jfrozen.gameserver.handler.skillhandlers.StrSiegeAssault: boolean checkIfOkToUseStriderSiegeAssault(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.entity.siege.Fort,boolean)
com.l2jfrozen.gameserver.handler.skillhandlers.StrSiegeAssault: void <clinit>()
com.l2jfrozen.gameserver.handler.skillhandlers.SummonFriend
com.l2jfrozen.gameserver.handler.skillhandlers.SummonFriend: com.l2jfrozen.gameserver.model.SkillType[] SKILL_IDS
com.l2jfrozen.gameserver.handler.skillhandlers.SummonFriend: SummonFriend()
com.l2jfrozen.gameserver.handler.skillhandlers.SummonFriend: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.handler.skillhandlers.SummonFriend: com.l2jfrozen.gameserver.model.SkillType[] getSkillIds()
com.l2jfrozen.gameserver.handler.skillhandlers.SummonFriend: void <clinit>()
com.l2jfrozen.gameserver.handler.skillhandlers.SummonTreasureKey
com.l2jfrozen.gameserver.handler.skillhandlers.SummonTreasureKey: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.skillhandlers.SummonTreasureKey: com.l2jfrozen.gameserver.model.SkillType[] SKILL_IDS
com.l2jfrozen.gameserver.handler.skillhandlers.SummonTreasureKey: SummonTreasureKey()
com.l2jfrozen.gameserver.handler.skillhandlers.SummonTreasureKey: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.handler.skillhandlers.SummonTreasureKey: com.l2jfrozen.gameserver.model.SkillType[] getSkillIds()
com.l2jfrozen.gameserver.handler.skillhandlers.SummonTreasureKey: void <clinit>()
com.l2jfrozen.gameserver.handler.skillhandlers.Sweep
com.l2jfrozen.gameserver.handler.skillhandlers.Sweep: com.l2jfrozen.gameserver.model.SkillType[] SKILL_IDS
com.l2jfrozen.gameserver.handler.skillhandlers.Sweep: Sweep()
com.l2jfrozen.gameserver.handler.skillhandlers.Sweep: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.handler.skillhandlers.Sweep: com.l2jfrozen.gameserver.model.SkillType[] getSkillIds()
com.l2jfrozen.gameserver.handler.skillhandlers.Sweep: void <clinit>()
com.l2jfrozen.gameserver.handler.skillhandlers.TakeCastle
com.l2jfrozen.gameserver.handler.skillhandlers.TakeCastle: com.l2jfrozen.gameserver.model.SkillType[] SKILL_IDS
com.l2jfrozen.gameserver.handler.skillhandlers.TakeCastle: TakeCastle()
com.l2jfrozen.gameserver.handler.skillhandlers.TakeCastle: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.handler.skillhandlers.TakeCastle: com.l2jfrozen.gameserver.model.SkillType[] getSkillIds()
com.l2jfrozen.gameserver.handler.skillhandlers.TakeCastle: boolean checkIfOkToCastSealOfRule(com.l2jfrozen.gameserver.model.L2Character,boolean)
com.l2jfrozen.gameserver.handler.skillhandlers.TakeCastle: boolean checkIfOkToCastSealOfRule(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.entity.siege.Castle,boolean)
com.l2jfrozen.gameserver.handler.skillhandlers.TakeCastle: boolean checkIfOkToCastFlagDisplay(com.l2jfrozen.gameserver.model.L2Character,boolean)
com.l2jfrozen.gameserver.handler.skillhandlers.TakeCastle: boolean checkIfOkToCastFlagDisplay(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.entity.siege.Fort,boolean)
com.l2jfrozen.gameserver.handler.skillhandlers.TakeCastle: void <clinit>()
com.l2jfrozen.gameserver.handler.skillhandlers.Unlock
com.l2jfrozen.gameserver.handler.skillhandlers.Unlock: com.l2jfrozen.gameserver.model.SkillType[] SKILL_IDS
com.l2jfrozen.gameserver.handler.skillhandlers.Unlock: Unlock()
com.l2jfrozen.gameserver.handler.skillhandlers.Unlock: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.handler.skillhandlers.Unlock: com.l2jfrozen.gameserver.model.SkillType[] getSkillIds()
com.l2jfrozen.gameserver.handler.skillhandlers.Unlock: void <clinit>()
com.l2jfrozen.gameserver.handler.skillhandlers.ZakenPlayer
com.l2jfrozen.gameserver.handler.skillhandlers.ZakenPlayer: com.l2jfrozen.gameserver.model.SkillType[] SKILL_IDS
com.l2jfrozen.gameserver.handler.skillhandlers.ZakenPlayer: ZakenPlayer()
com.l2jfrozen.gameserver.handler.skillhandlers.ZakenPlayer: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.handler.skillhandlers.ZakenPlayer: com.l2jfrozen.gameserver.model.SkillType[] getSkillIds()
com.l2jfrozen.gameserver.handler.skillhandlers.ZakenPlayer: void <clinit>()
com.l2jfrozen.gameserver.handler.skillhandlers.ZakenSelf
com.l2jfrozen.gameserver.handler.skillhandlers.ZakenSelf: com.l2jfrozen.gameserver.model.SkillType[] SKILL_IDS
com.l2jfrozen.gameserver.handler.skillhandlers.ZakenSelf: ZakenSelf()
com.l2jfrozen.gameserver.handler.skillhandlers.ZakenSelf: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.handler.skillhandlers.ZakenSelf: com.l2jfrozen.gameserver.model.SkillType[] getSkillIds()
com.l2jfrozen.gameserver.handler.skillhandlers.ZakenSelf: void <clinit>()
com.l2jfrozen.gameserver.handler.usercommandhandlers.ChannelDelete
com.l2jfrozen.gameserver.handler.usercommandhandlers.ChannelDelete: int[] COMMAND_IDS
com.l2jfrozen.gameserver.handler.usercommandhandlers.ChannelDelete: ChannelDelete()
com.l2jfrozen.gameserver.handler.usercommandhandlers.ChannelDelete: boolean useUserCommand(int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.usercommandhandlers.ChannelDelete: int[] getUserCommandList()
com.l2jfrozen.gameserver.handler.usercommandhandlers.ChannelDelete: void <clinit>()
com.l2jfrozen.gameserver.handler.usercommandhandlers.ChannelLeave
com.l2jfrozen.gameserver.handler.usercommandhandlers.ChannelLeave: int[] COMMAND_IDS
com.l2jfrozen.gameserver.handler.usercommandhandlers.ChannelLeave: ChannelLeave()
com.l2jfrozen.gameserver.handler.usercommandhandlers.ChannelLeave: boolean useUserCommand(int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.usercommandhandlers.ChannelLeave: int[] getUserCommandList()
com.l2jfrozen.gameserver.handler.usercommandhandlers.ChannelLeave: void <clinit>()
com.l2jfrozen.gameserver.handler.usercommandhandlers.ChannelListUpdate
com.l2jfrozen.gameserver.handler.usercommandhandlers.ChannelListUpdate: int[] COMMAND_IDS
com.l2jfrozen.gameserver.handler.usercommandhandlers.ChannelListUpdate: ChannelListUpdate()
com.l2jfrozen.gameserver.handler.usercommandhandlers.ChannelListUpdate: boolean useUserCommand(int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.usercommandhandlers.ChannelListUpdate: int[] getUserCommandList()
com.l2jfrozen.gameserver.handler.usercommandhandlers.ChannelListUpdate: void <clinit>()
com.l2jfrozen.gameserver.handler.usercommandhandlers.ClanPenalty
com.l2jfrozen.gameserver.handler.usercommandhandlers.ClanPenalty: int[] COMMAND_IDS
com.l2jfrozen.gameserver.handler.usercommandhandlers.ClanPenalty: ClanPenalty()
com.l2jfrozen.gameserver.handler.usercommandhandlers.ClanPenalty: boolean useUserCommand(int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.usercommandhandlers.ClanPenalty: int[] getUserCommandList()
com.l2jfrozen.gameserver.handler.usercommandhandlers.ClanPenalty: void <clinit>()
com.l2jfrozen.gameserver.handler.usercommandhandlers.ClanWarsList
com.l2jfrozen.gameserver.handler.usercommandhandlers.ClanWarsList: int[] COMMAND_IDS
com.l2jfrozen.gameserver.handler.usercommandhandlers.ClanWarsList: ClanWarsList()
com.l2jfrozen.gameserver.handler.usercommandhandlers.ClanWarsList: boolean useUserCommand(int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.usercommandhandlers.ClanWarsList: int[] getUserCommandList()
com.l2jfrozen.gameserver.handler.usercommandhandlers.ClanWarsList: void <clinit>()
com.l2jfrozen.gameserver.handler.usercommandhandlers.DisMount
com.l2jfrozen.gameserver.handler.usercommandhandlers.DisMount: int[] COMMAND_IDS
com.l2jfrozen.gameserver.handler.usercommandhandlers.DisMount: DisMount()
com.l2jfrozen.gameserver.handler.usercommandhandlers.DisMount: boolean useUserCommand(int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.usercommandhandlers.DisMount: int[] getUserCommandList()
com.l2jfrozen.gameserver.handler.usercommandhandlers.DisMount: void <clinit>()
com.l2jfrozen.gameserver.handler.usercommandhandlers.Escape
com.l2jfrozen.gameserver.handler.usercommandhandlers.Escape: int[] COMMAND_IDS
com.l2jfrozen.gameserver.handler.usercommandhandlers.Escape: Escape()
com.l2jfrozen.gameserver.handler.usercommandhandlers.Escape: boolean useUserCommand(int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.usercommandhandlers.Escape: int[] getUserCommandList()
com.l2jfrozen.gameserver.handler.usercommandhandlers.Escape: void <clinit>()
com.l2jfrozen.gameserver.handler.usercommandhandlers.Escape$EscapeFinalizer
com.l2jfrozen.gameserver.handler.usercommandhandlers.Escape$EscapeFinalizer: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.handler.usercommandhandlers.Escape$EscapeFinalizer: Escape$EscapeFinalizer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.usercommandhandlers.Escape$EscapeFinalizer: void run()
com.l2jfrozen.gameserver.handler.usercommandhandlers.Loc
com.l2jfrozen.gameserver.handler.usercommandhandlers.Loc: int[] COMMAND_IDS
com.l2jfrozen.gameserver.handler.usercommandhandlers.Loc: Loc()
com.l2jfrozen.gameserver.handler.usercommandhandlers.Loc: boolean useUserCommand(int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.usercommandhandlers.Loc: int[] getUserCommandList()
com.l2jfrozen.gameserver.handler.usercommandhandlers.Loc: void <clinit>()
com.l2jfrozen.gameserver.handler.usercommandhandlers.Mount
com.l2jfrozen.gameserver.handler.usercommandhandlers.Mount: int[] COMMAND_IDS
com.l2jfrozen.gameserver.handler.usercommandhandlers.Mount: Mount()
com.l2jfrozen.gameserver.handler.usercommandhandlers.Mount: boolean useUserCommand(int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.usercommandhandlers.Mount: int[] getUserCommandList()
com.l2jfrozen.gameserver.handler.usercommandhandlers.Mount: void <clinit>()
com.l2jfrozen.gameserver.handler.usercommandhandlers.OfflineShop
com.l2jfrozen.gameserver.handler.usercommandhandlers.OfflineShop: int[] COMMAND_IDS
com.l2jfrozen.gameserver.handler.usercommandhandlers.OfflineShop: OfflineShop()
com.l2jfrozen.gameserver.handler.usercommandhandlers.OfflineShop: boolean useUserCommand(int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.usercommandhandlers.OfflineShop: int[] getUserCommandList()
com.l2jfrozen.gameserver.handler.usercommandhandlers.OfflineShop: void <clinit>()
com.l2jfrozen.gameserver.handler.usercommandhandlers.OlympiadStat
com.l2jfrozen.gameserver.handler.usercommandhandlers.OlympiadStat: int[] COMMAND_IDS
com.l2jfrozen.gameserver.handler.usercommandhandlers.OlympiadStat: OlympiadStat()
com.l2jfrozen.gameserver.handler.usercommandhandlers.OlympiadStat: boolean useUserCommand(int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.usercommandhandlers.OlympiadStat: int[] getUserCommandList()
com.l2jfrozen.gameserver.handler.usercommandhandlers.OlympiadStat: void <clinit>()
com.l2jfrozen.gameserver.handler.usercommandhandlers.PartyInfo
com.l2jfrozen.gameserver.handler.usercommandhandlers.PartyInfo: int[] COMMAND_IDS
com.l2jfrozen.gameserver.handler.usercommandhandlers.PartyInfo: PartyInfo()
com.l2jfrozen.gameserver.handler.usercommandhandlers.PartyInfo: boolean useUserCommand(int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.usercommandhandlers.PartyInfo: int[] getUserCommandList()
com.l2jfrozen.gameserver.handler.usercommandhandlers.PartyInfo: void <clinit>()
com.l2jfrozen.gameserver.handler.usercommandhandlers.SiegeStatus
com.l2jfrozen.gameserver.handler.usercommandhandlers.SiegeStatus: int[] COMMAND_IDS
com.l2jfrozen.gameserver.handler.usercommandhandlers.SiegeStatus: SiegeStatus()
com.l2jfrozen.gameserver.handler.usercommandhandlers.SiegeStatus: boolean useUserCommand(int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.usercommandhandlers.SiegeStatus: int[] getUserCommandList()
com.l2jfrozen.gameserver.handler.usercommandhandlers.SiegeStatus: void <clinit>()
com.l2jfrozen.gameserver.handler.usercommandhandlers.Time
com.l2jfrozen.gameserver.handler.usercommandhandlers.Time: int[] COMMAND_IDS
com.l2jfrozen.gameserver.handler.usercommandhandlers.Time: Time()
com.l2jfrozen.gameserver.handler.usercommandhandlers.Time: boolean useUserCommand(int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.usercommandhandlers.Time: int[] getUserCommandList()
com.l2jfrozen.gameserver.handler.usercommandhandlers.Time: void <clinit>()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.AwayCmd
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.AwayCmd: java.lang.String[] VOICED_COMMANDS
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.AwayCmd: int ZONE_PEACE
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.AwayCmd: AwayCmd()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.AwayCmd: boolean useVoicedCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.AwayCmd: boolean away(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.AwayCmd: boolean back(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.AwayCmd: java.lang.String[] getVoicedCommandList()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.AwayCmd: void <clinit>()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.BankingCmd
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.BankingCmd: java.lang.String[] _voicedCommands
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.BankingCmd: BankingCmd()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.BankingCmd: boolean useVoicedCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.BankingCmd: java.lang.String[] getVoicedCommandList()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.BankingCmd: void <clinit>()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.CTFCmd
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.CTFCmd: java.lang.String[] VOICED_COMMANDS
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.CTFCmd: CTFCmd()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.CTFCmd: boolean useVoicedCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.CTFCmd: java.lang.String[] getVoicedCommandList()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.CTFCmd: boolean JoinCTF(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.CTFCmd: boolean LeaveCTF(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.CTFCmd: boolean CTFinfo(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.CTFCmd: void <clinit>()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.CastleCmd
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.CastleCmd: java.lang.String[] VOICED_COMMANDS
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.CastleCmd: CastleCmd()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.CastleCmd: boolean useVoicedCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.CastleCmd: java.lang.String[] getVoicedCommandList()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.CastleCmd: void <clinit>()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.CommandEnum
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.voicedcommandhandlers.CommandEnum repair
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.voicedcommandhandlers.CommandEnum repair_close_win
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.voicedcommandhandlers.CommandEnum[] $VALUES
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.voicedcommandhandlers.CommandEnum[] values()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.CommandEnum: com.l2jfrozen.gameserver.handler.voicedcommandhandlers.CommandEnum valueOf(java.lang.String)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.CommandEnum: CommandEnum(java.lang.String,int)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.CommandEnum: void <clinit>()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.DMCmd
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.DMCmd: java.lang.String[] VOICED_COMMANDS
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.DMCmd: DMCmd()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.DMCmd: boolean useVoicedCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.DMCmd: java.lang.String[] getVoicedCommandList()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.DMCmd: boolean JoinDM(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.DMCmd: boolean LeaveDM(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.DMCmd: boolean DMinfo(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.DMCmd: void <clinit>()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.FarmPvpCmd
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.FarmPvpCmd: java.lang.String[] VOICED_COMMANDS
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.FarmPvpCmd: FarmPvpCmd()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.FarmPvpCmd: boolean useVoicedCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.FarmPvpCmd: java.lang.String[] getVoicedCommandList()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.FarmPvpCmd: void <clinit>()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.FarmPvpCmd$teleportTask
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.FarmPvpCmd$teleportTask: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.FarmPvpCmd$teleportTask: int _x
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.FarmPvpCmd$teleportTask: int _y
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.FarmPvpCmd$teleportTask: int _z
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.FarmPvpCmd$teleportTask: java.lang.String _message
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.FarmPvpCmd$teleportTask: com.l2jfrozen.gameserver.handler.voicedcommandhandlers.FarmPvpCmd this$0
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.FarmPvpCmd$teleportTask: FarmPvpCmd$teleportTask(com.l2jfrozen.gameserver.handler.voicedcommandhandlers.FarmPvpCmd,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int,int,java.lang.String)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.FarmPvpCmd$teleportTask: void run()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.OfflineShop
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.OfflineShop: java.lang.String[] _voicedCommands
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.OfflineShop: OfflineShop()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.OfflineShop: boolean useVoicedCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.OfflineShop: java.lang.String[] getVoicedCommandList()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.OfflineShop: void <clinit>()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Online
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Online: java.lang.String[] _voicedCommands
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Online: Online()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Online: boolean useVoicedCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Online: java.lang.String[] getVoicedCommandList()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Online: void <clinit>()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Repair
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Repair: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Repair: java.lang.String[] _voicedCommands
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Repair: java.lang.String[] _BYPASSCMD
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Repair: Repair()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Repair: boolean useVoicedCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Repair: java.lang.String getCharList(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Repair: boolean checkAcc(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Repair: boolean checkPunish(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Repair: boolean checkKarma(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Repair: boolean checkChar(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Repair: void repairBadCharacter(java.lang.String)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Repair: java.lang.String[] getVoicedCommandList()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Repair: java.lang.String[] getByPassCommands()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Repair: void handleCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Repair: void <clinit>()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Repair$1
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Repair$1: int[] $SwitchMap$com$l2jfrozen$gameserver$handler$voicedcommandhandlers$CommandEnum
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Repair$1: void <clinit>()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.SetClanCmd
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.SetClanCmd: java.lang.String[] VOICED_COMMANDS
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.SetClanCmd: SetClanCmd()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.SetClanCmd: boolean useVoicedCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.SetClanCmd: java.lang.String[] getVoicedCommandList()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.SetClanCmd: void <clinit>()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.StatsCmd
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.StatsCmd: java.lang.String[] VOICED_COMMANDS
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.StatsCmd: StatsCmd()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.StatsCmd: boolean useVoicedCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.StatsCmd: java.lang.String[] getVoicedCommandList()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.StatsCmd: void <clinit>()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.TvTCmd
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.TvTCmd: java.lang.String[] VOICED_COMMANDS
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.TvTCmd: TvTCmd()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.TvTCmd: boolean useVoicedCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.TvTCmd: java.lang.String[] getVoicedCommandList()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.TvTCmd: boolean JoinTvT(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.TvTCmd: boolean LeaveTvT(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.TvTCmd: boolean TvTinfo(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.TvTCmd: void <clinit>()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.VersionCmd
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.VersionCmd: java.lang.String[] _voicedCommands
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.VersionCmd: VersionCmd()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.VersionCmd: boolean useVoicedCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.VersionCmd: java.lang.String[] getVoicedCommandList()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.VersionCmd: void <clinit>()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Voting
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Voting: java.lang.String[] _voicedCommands
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Voting: Voting()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Voting: boolean useVoicedCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Voting: java.lang.String[] getVoicedCommandList()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Voting: void <clinit>()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Wedding
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Wedding: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Wedding: java.lang.String[] _voicedCommands
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Wedding: Wedding()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Wedding: boolean useVoicedCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Wedding: boolean Divorce(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Wedding: boolean Engage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Wedding: boolean GoToLove(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Wedding: java.lang.String[] getVoicedCommandList()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Wedding: void <clinit>()
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Wedding$EscapeFinalizer
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Wedding$EscapeFinalizer: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Wedding$EscapeFinalizer: int _partnerx
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Wedding$EscapeFinalizer: int _partnery
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Wedding$EscapeFinalizer: int _partnerz
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Wedding$EscapeFinalizer: boolean _to7sDungeon
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Wedding$EscapeFinalizer: Wedding$EscapeFinalizer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int,int,boolean)
com.l2jfrozen.gameserver.handler.voicedcommandhandlers.Wedding$EscapeFinalizer: void run()
com.l2jfrozen.gameserver.idfactory.BitSetIDFactory
com.l2jfrozen.gameserver.idfactory.BitSetIDFactory: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.idfactory.BitSetIDFactory: java.util.BitSet _freeIds
com.l2jfrozen.gameserver.idfactory.BitSetIDFactory: java.util.concurrent.atomic.AtomicInteger _freeIdCount
com.l2jfrozen.gameserver.idfactory.BitSetIDFactory: java.util.concurrent.atomic.AtomicInteger _nextFreeId
com.l2jfrozen.gameserver.idfactory.BitSetIDFactory: BitSetIDFactory()
com.l2jfrozen.gameserver.idfactory.BitSetIDFactory: void initialize()
com.l2jfrozen.gameserver.idfactory.BitSetIDFactory: void releaseId(int)
com.l2jfrozen.gameserver.idfactory.BitSetIDFactory: int getNextId()
com.l2jfrozen.gameserver.idfactory.BitSetIDFactory: int size()
com.l2jfrozen.gameserver.idfactory.BitSetIDFactory: int usedIdCount()
com.l2jfrozen.gameserver.idfactory.BitSetIDFactory: boolean reachingBitSetCapacity()
com.l2jfrozen.gameserver.idfactory.BitSetIDFactory: void increaseBitSetCapacity()
com.l2jfrozen.gameserver.idfactory.BitSetIDFactory: void <clinit>()
com.l2jfrozen.gameserver.idfactory.BitSetIDFactory$BitSetCapacityCheck
com.l2jfrozen.gameserver.idfactory.BitSetIDFactory$BitSetCapacityCheck: com.l2jfrozen.gameserver.idfactory.BitSetIDFactory this$0
com.l2jfrozen.gameserver.idfactory.BitSetIDFactory$BitSetCapacityCheck: BitSetIDFactory$BitSetCapacityCheck(com.l2jfrozen.gameserver.idfactory.BitSetIDFactory)
com.l2jfrozen.gameserver.idfactory.BitSetIDFactory$BitSetCapacityCheck: void run()
com.l2jfrozen.gameserver.idfactory.CompactionIDFactory
com.l2jfrozen.gameserver.idfactory.CompactionIDFactory: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.idfactory.CompactionIDFactory: int _curOID
com.l2jfrozen.gameserver.idfactory.CompactionIDFactory: int _freeSize
com.l2jfrozen.gameserver.idfactory.CompactionIDFactory: CompactionIDFactory()
com.l2jfrozen.gameserver.idfactory.CompactionIDFactory: int insertUntil(int[],int,int,java.sql.Connection)
com.l2jfrozen.gameserver.idfactory.CompactionIDFactory: int getNextId()
com.l2jfrozen.gameserver.idfactory.CompactionIDFactory: void releaseId(int)
com.l2jfrozen.gameserver.idfactory.CompactionIDFactory: int size()
com.l2jfrozen.gameserver.idfactory.CompactionIDFactory: void <clinit>()
com.l2jfrozen.gameserver.idfactory.IdFactory
com.l2jfrozen.gameserver.idfactory.IdFactory: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.idfactory.IdFactory: java.lang.String[] ID_UPDATES
com.l2jfrozen.gameserver.idfactory.IdFactory: java.lang.String[] ID_CHECKS
com.l2jfrozen.gameserver.idfactory.IdFactory: boolean _initialized
com.l2jfrozen.gameserver.idfactory.IdFactory: int FIRST_OID
com.l2jfrozen.gameserver.idfactory.IdFactory: int LAST_OID
com.l2jfrozen.gameserver.idfactory.IdFactory: int FREE_OBJECT_ID_SIZE
com.l2jfrozen.gameserver.idfactory.IdFactory: com.l2jfrozen.gameserver.idfactory.IdFactory _instance
com.l2jfrozen.gameserver.idfactory.IdFactory: IdFactory()
com.l2jfrozen.gameserver.idfactory.IdFactory: void setAllCharacterOffline()
com.l2jfrozen.gameserver.idfactory.IdFactory: void cleanUpDB()
com.l2jfrozen.gameserver.idfactory.IdFactory: int[] extractUsedObjectIDTable()
com.l2jfrozen.gameserver.idfactory.IdFactory: boolean isInitialized()
com.l2jfrozen.gameserver.idfactory.IdFactory: com.l2jfrozen.gameserver.idfactory.IdFactory getInstance()
com.l2jfrozen.gameserver.idfactory.IdFactory: int getNextId()
com.l2jfrozen.gameserver.idfactory.IdFactory: void releaseId(int)
com.l2jfrozen.gameserver.idfactory.IdFactory: int size()
com.l2jfrozen.gameserver.idfactory.IdFactory: void <clinit>()
com.l2jfrozen.gameserver.idfactory.IdFactory$1
com.l2jfrozen.gameserver.idfactory.IdFactory$1: int[] $SwitchMap$com$l2jfrozen$gameserver$config$IdFactoryType
com.l2jfrozen.gameserver.idfactory.IdFactory$1: void <clinit>()
com.l2jfrozen.gameserver.idfactory.StackIDFactory
com.l2jfrozen.gameserver.idfactory.StackIDFactory: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.idfactory.StackIDFactory: int _curOID
com.l2jfrozen.gameserver.idfactory.StackIDFactory: int _tempOID
com.l2jfrozen.gameserver.idfactory.StackIDFactory: java.util.Stack _freeOIDStack
com.l2jfrozen.gameserver.idfactory.StackIDFactory: StackIDFactory()
com.l2jfrozen.gameserver.idfactory.StackIDFactory: int insertUntil(int[],int,int,java.sql.Connection)
com.l2jfrozen.gameserver.idfactory.StackIDFactory: com.l2jfrozen.gameserver.idfactory.IdFactory getInstance()
com.l2jfrozen.gameserver.idfactory.StackIDFactory: int getNextId()
com.l2jfrozen.gameserver.idfactory.StackIDFactory: void releaseId(int)
com.l2jfrozen.gameserver.idfactory.StackIDFactory: int size()
com.l2jfrozen.gameserver.idfactory.StackIDFactory: void <clinit>()
com.l2jfrozen.gameserver.logs.AuditFilter
com.l2jfrozen.gameserver.logs.AuditFilter: AuditFilter()
com.l2jfrozen.gameserver.logs.AuditFilter: boolean isLoggable(java.util.logging.LogRecord)
com.l2jfrozen.gameserver.logs.AuditFormatter
com.l2jfrozen.gameserver.logs.AuditFormatter: java.lang.String CRLF
com.l2jfrozen.gameserver.logs.AuditFormatter: java.text.SimpleDateFormat dateFmt
com.l2jfrozen.gameserver.logs.AuditFormatter: AuditFormatter()
com.l2jfrozen.gameserver.logs.AuditFormatter: java.lang.String format(java.util.logging.LogRecord)
com.l2jfrozen.gameserver.logs.AuditLogHandler
com.l2jfrozen.gameserver.logs.AuditLogHandler: AuditLogHandler()
com.l2jfrozen.gameserver.logs.ChatFilter
com.l2jfrozen.gameserver.logs.ChatFilter: ChatFilter()
com.l2jfrozen.gameserver.logs.ChatFilter: boolean isLoggable(java.util.logging.LogRecord)
com.l2jfrozen.gameserver.logs.ChatLogFormatter
com.l2jfrozen.gameserver.logs.ChatLogFormatter: java.lang.String CRLF
com.l2jfrozen.gameserver.logs.ChatLogFormatter: java.text.SimpleDateFormat dateFmt
com.l2jfrozen.gameserver.logs.ChatLogFormatter: ChatLogFormatter()
com.l2jfrozen.gameserver.logs.ChatLogFormatter: java.lang.String format(java.util.logging.LogRecord)
com.l2jfrozen.gameserver.logs.ChatLogHandler
com.l2jfrozen.gameserver.logs.ChatLogHandler: ChatLogHandler()
com.l2jfrozen.gameserver.logs.ItemFilter
com.l2jfrozen.gameserver.logs.ItemFilter: java.lang.String _excludeProcess
com.l2jfrozen.gameserver.logs.ItemFilter: java.lang.String _excludeItemType
com.l2jfrozen.gameserver.logs.ItemFilter: ItemFilter()
com.l2jfrozen.gameserver.logs.ItemFilter: boolean isLoggable(java.util.logging.LogRecord)
com.l2jfrozen.gameserver.logs.ItemLogFormatter
com.l2jfrozen.gameserver.logs.ItemLogFormatter: java.lang.String CRLF
com.l2jfrozen.gameserver.logs.ItemLogFormatter: java.text.SimpleDateFormat dateFmt
com.l2jfrozen.gameserver.logs.ItemLogFormatter: ItemLogFormatter()
com.l2jfrozen.gameserver.logs.ItemLogFormatter: java.lang.String format(java.util.logging.LogRecord)
com.l2jfrozen.gameserver.logs.ItemLogHandler
com.l2jfrozen.gameserver.logs.ItemLogHandler: ItemLogHandler()
com.l2jfrozen.gameserver.managers.ArenaManager
com.l2jfrozen.gameserver.managers.ArenaManager: com.l2jfrozen.gameserver.managers.ArenaManager _instance
com.l2jfrozen.gameserver.managers.ArenaManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.managers.ArenaManager: javolution.util.FastList _arenas
com.l2jfrozen.gameserver.managers.ArenaManager: com.l2jfrozen.gameserver.managers.ArenaManager getInstance()
com.l2jfrozen.gameserver.managers.ArenaManager: ArenaManager()
com.l2jfrozen.gameserver.managers.ArenaManager: void addArena(com.l2jfrozen.gameserver.model.zone.type.L2ArenaZone)
com.l2jfrozen.gameserver.managers.ArenaManager: com.l2jfrozen.gameserver.model.zone.type.L2ArenaZone getArena(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.managers.ArenaManager: com.l2jfrozen.gameserver.model.zone.type.L2ArenaZone getArena(int,int,int)
com.l2jfrozen.gameserver.managers.ArenaManager: void <clinit>()
com.l2jfrozen.gameserver.managers.AuctionManager
com.l2jfrozen.gameserver.managers.AuctionManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.managers.AuctionManager: java.util.List _auctions
com.l2jfrozen.gameserver.managers.AuctionManager: java.lang.String[] ITEM_INIT_DATA
com.l2jfrozen.gameserver.managers.AuctionManager: java.lang.Integer[] ItemInitDataId
com.l2jfrozen.gameserver.managers.AuctionManager: com.l2jfrozen.gameserver.managers.AuctionManager getInstance()
com.l2jfrozen.gameserver.managers.AuctionManager: AuctionManager()
com.l2jfrozen.gameserver.managers.AuctionManager: void reload()
com.l2jfrozen.gameserver.managers.AuctionManager: void load()
com.l2jfrozen.gameserver.managers.AuctionManager: com.l2jfrozen.gameserver.model.entity.Auction getAuction(int)
com.l2jfrozen.gameserver.managers.AuctionManager: int getAuctionIndex(int)
com.l2jfrozen.gameserver.managers.AuctionManager: java.util.List getAuctions()
com.l2jfrozen.gameserver.managers.AuctionManager: void initNPC(int)
com.l2jfrozen.gameserver.managers.AuctionManager: void <clinit>()
com.l2jfrozen.gameserver.managers.AuctionManager$SingletonHolder
com.l2jfrozen.gameserver.managers.AuctionManager$SingletonHolder: com.l2jfrozen.gameserver.managers.AuctionManager _instance
com.l2jfrozen.gameserver.managers.AuctionManager$SingletonHolder: AuctionManager$SingletonHolder()
com.l2jfrozen.gameserver.managers.AuctionManager$SingletonHolder: void <clinit>()
com.l2jfrozen.gameserver.managers.AutoSaveManager
com.l2jfrozen.gameserver.managers.AutoSaveManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.managers.AutoSaveManager: java.util.concurrent.ScheduledFuture _autoSaveInDB
com.l2jfrozen.gameserver.managers.AutoSaveManager: java.util.concurrent.ScheduledFuture _autoCheckConnectionStatus
com.l2jfrozen.gameserver.managers.AutoSaveManager: java.util.concurrent.ScheduledFuture _autoCleanDatabase
com.l2jfrozen.gameserver.managers.AutoSaveManager: com.l2jfrozen.gameserver.managers.AutoSaveManager getInstance()
com.l2jfrozen.gameserver.managers.AutoSaveManager: AutoSaveManager()
com.l2jfrozen.gameserver.managers.AutoSaveManager: void stopAutoSaveManager()
com.l2jfrozen.gameserver.managers.AutoSaveManager: void startAutoSaveManager()
com.l2jfrozen.gameserver.managers.AutoSaveManager: void <clinit>()
com.l2jfrozen.gameserver.managers.AutoSaveManager$AutoCleanDBTask
com.l2jfrozen.gameserver.managers.AutoSaveManager$AutoCleanDBTask: com.l2jfrozen.gameserver.managers.AutoSaveManager this$0
com.l2jfrozen.gameserver.managers.AutoSaveManager$AutoCleanDBTask: AutoSaveManager$AutoCleanDBTask(com.l2jfrozen.gameserver.managers.AutoSaveManager)
com.l2jfrozen.gameserver.managers.AutoSaveManager$AutoCleanDBTask: void run()
com.l2jfrozen.gameserver.managers.AutoSaveManager$AutoSaveTask
com.l2jfrozen.gameserver.managers.AutoSaveManager$AutoSaveTask: com.l2jfrozen.gameserver.managers.AutoSaveManager this$0
com.l2jfrozen.gameserver.managers.AutoSaveManager$AutoSaveTask: AutoSaveManager$AutoSaveTask(com.l2jfrozen.gameserver.managers.AutoSaveManager)
com.l2jfrozen.gameserver.managers.AutoSaveManager$AutoSaveTask: void run()
com.l2jfrozen.gameserver.managers.AutoSaveManager$ConnectionCheckTask
com.l2jfrozen.gameserver.managers.AutoSaveManager$ConnectionCheckTask: com.l2jfrozen.gameserver.managers.AutoSaveManager this$0
com.l2jfrozen.gameserver.managers.AutoSaveManager$ConnectionCheckTask: AutoSaveManager$ConnectionCheckTask(com.l2jfrozen.gameserver.managers.AutoSaveManager)
com.l2jfrozen.gameserver.managers.AutoSaveManager$ConnectionCheckTask: void run()
com.l2jfrozen.gameserver.managers.AutoSaveManager$SingletonHolder
com.l2jfrozen.gameserver.managers.AutoSaveManager$SingletonHolder: com.l2jfrozen.gameserver.managers.AutoSaveManager _instance
com.l2jfrozen.gameserver.managers.AutoSaveManager$SingletonHolder: AutoSaveManager$SingletonHolder()
com.l2jfrozen.gameserver.managers.AutoSaveManager$SingletonHolder: void <clinit>()
com.l2jfrozen.gameserver.managers.AwayManager
com.l2jfrozen.gameserver.managers.AwayManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.managers.AwayManager: com.l2jfrozen.gameserver.managers.AwayManager _instance
com.l2jfrozen.gameserver.managers.AwayManager: java.util.Map _awayPlayers
com.l2jfrozen.gameserver.managers.AwayManager: com.l2jfrozen.gameserver.managers.AwayManager getInstance()
com.l2jfrozen.gameserver.managers.AwayManager: AwayManager()
com.l2jfrozen.gameserver.managers.AwayManager: void setAway(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.managers.AwayManager: void setBack(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.managers.AwayManager: void extraBack(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.managers.AwayManager: void <clinit>()
com.l2jfrozen.gameserver.managers.AwayManager$RestoreData
com.l2jfrozen.gameserver.managers.AwayManager$RestoreData: java.lang.String _originalTitle
com.l2jfrozen.gameserver.managers.AwayManager$RestoreData: int _originalTitleColor
com.l2jfrozen.gameserver.managers.AwayManager$RestoreData: boolean _sitForced
com.l2jfrozen.gameserver.managers.AwayManager$RestoreData: com.l2jfrozen.gameserver.managers.AwayManager this$0
com.l2jfrozen.gameserver.managers.AwayManager$RestoreData: AwayManager$RestoreData(com.l2jfrozen.gameserver.managers.AwayManager,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.managers.AwayManager$RestoreData: boolean isSitForced()
com.l2jfrozen.gameserver.managers.AwayManager$RestoreData: void restore(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.managers.AwayManager$setPlayerAwayTask
com.l2jfrozen.gameserver.managers.AwayManager$setPlayerAwayTask: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.managers.AwayManager$setPlayerAwayTask: java.lang.String _awayText
com.l2jfrozen.gameserver.managers.AwayManager$setPlayerAwayTask: com.l2jfrozen.gameserver.managers.AwayManager this$0
com.l2jfrozen.gameserver.managers.AwayManager$setPlayerAwayTask: AwayManager$setPlayerAwayTask(com.l2jfrozen.gameserver.managers.AwayManager,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.managers.AwayManager$setPlayerAwayTask: void run()
com.l2jfrozen.gameserver.managers.AwayManager$setPlayerBackTask
com.l2jfrozen.gameserver.managers.AwayManager$setPlayerBackTask: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.managers.AwayManager$setPlayerBackTask: com.l2jfrozen.gameserver.managers.AwayManager this$0
com.l2jfrozen.gameserver.managers.AwayManager$setPlayerBackTask: AwayManager$setPlayerBackTask(com.l2jfrozen.gameserver.managers.AwayManager,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.managers.AwayManager$setPlayerBackTask: void run()
com.l2jfrozen.gameserver.managers.BoatManager
com.l2jfrozen.gameserver.managers.BoatManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.managers.BoatManager: java.util.Map _staticItems
com.l2jfrozen.gameserver.managers.BoatManager: com.l2jfrozen.gameserver.managers.BoatManager getInstance()
com.l2jfrozen.gameserver.managers.BoatManager: BoatManager()
com.l2jfrozen.gameserver.managers.BoatManager: void load()
com.l2jfrozen.gameserver.managers.BoatManager: com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance parseLine(java.lang.String)
com.l2jfrozen.gameserver.managers.BoatManager: com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance GetBoat(int)
com.l2jfrozen.gameserver.managers.BoatManager: void <clinit>()
com.l2jfrozen.gameserver.managers.BoatManager$SingletonHolder
com.l2jfrozen.gameserver.managers.BoatManager$SingletonHolder: com.l2jfrozen.gameserver.managers.BoatManager _instance
com.l2jfrozen.gameserver.managers.BoatManager$SingletonHolder: BoatManager$SingletonHolder()
com.l2jfrozen.gameserver.managers.BoatManager$SingletonHolder: void <clinit>()
com.l2jfrozen.gameserver.managers.CastleManager
com.l2jfrozen.gameserver.managers.CastleManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.managers.CastleManager: java.util.List _castles
com.l2jfrozen.gameserver.managers.CastleManager: int[] _castleCirclets
com.l2jfrozen.gameserver.managers.CastleManager: int _castleId
com.l2jfrozen.gameserver.managers.CastleManager: com.l2jfrozen.gameserver.managers.CastleManager getInstance()
com.l2jfrozen.gameserver.managers.CastleManager: CastleManager()
com.l2jfrozen.gameserver.managers.CastleManager: int findNearestCastlesIndex(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.managers.CastleManager: void load()
com.l2jfrozen.gameserver.managers.CastleManager: com.l2jfrozen.gameserver.model.entity.siege.Castle getCastleById(int)
com.l2jfrozen.gameserver.managers.CastleManager: com.l2jfrozen.gameserver.model.entity.siege.Castle getCastleByOwner(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.managers.CastleManager: com.l2jfrozen.gameserver.model.entity.siege.Castle getCastle(java.lang.String)
com.l2jfrozen.gameserver.managers.CastleManager: com.l2jfrozen.gameserver.model.entity.siege.Castle getCastle(int,int,int)
com.l2jfrozen.gameserver.managers.CastleManager: com.l2jfrozen.gameserver.model.entity.siege.Castle getCastle(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.managers.CastleManager: int getCastleIndex(int)
com.l2jfrozen.gameserver.managers.CastleManager: int getCastleIndex(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.managers.CastleManager: int getCastleIndex(int,int,int)
com.l2jfrozen.gameserver.managers.CastleManager: java.util.List getCastles()
com.l2jfrozen.gameserver.managers.CastleManager: void validateTaxes(int)
com.l2jfrozen.gameserver.managers.CastleManager: int getCirclet()
com.l2jfrozen.gameserver.managers.CastleManager: int getCircletByCastleId(int)
com.l2jfrozen.gameserver.managers.CastleManager: void removeCirclet(com.l2jfrozen.gameserver.model.L2Clan,int)
com.l2jfrozen.gameserver.managers.CastleManager: void removeCirclet(com.l2jfrozen.gameserver.model.L2ClanMember,int)
com.l2jfrozen.gameserver.managers.CastleManager: void <clinit>()
com.l2jfrozen.gameserver.managers.CastleManager$SingletonHolder
com.l2jfrozen.gameserver.managers.CastleManager$SingletonHolder: com.l2jfrozen.gameserver.managers.CastleManager _instance
com.l2jfrozen.gameserver.managers.CastleManager$SingletonHolder: CastleManager$SingletonHolder()
com.l2jfrozen.gameserver.managers.CastleManager$SingletonHolder: void <clinit>()
com.l2jfrozen.gameserver.managers.CastleManorManager
com.l2jfrozen.gameserver.managers.CastleManorManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.managers.CastleManorManager: com.l2jfrozen.gameserver.managers.CastleManorManager _instance
com.l2jfrozen.gameserver.managers.CastleManorManager: int PERIOD_CURRENT
com.l2jfrozen.gameserver.managers.CastleManorManager: int PERIOD_NEXT
com.l2jfrozen.gameserver.managers.CastleManorManager: int APPROVE
com.l2jfrozen.gameserver.managers.CastleManorManager: java.lang.String CASTLE_MANOR_LOAD_PROCURE
com.l2jfrozen.gameserver.managers.CastleManorManager: java.lang.String CASTLE_MANOR_LOAD_PRODUCTION
com.l2jfrozen.gameserver.managers.CastleManorManager: int NEXT_PERIOD_APPROVE
com.l2jfrozen.gameserver.managers.CastleManorManager: int NEXT_PERIOD_APPROVE_MIN
com.l2jfrozen.gameserver.managers.CastleManorManager: int MANOR_REFRESH
com.l2jfrozen.gameserver.managers.CastleManorManager: int MANOR_REFRESH_MIN
com.l2jfrozen.gameserver.managers.CastleManorManager: long MAINTENANCE_PERIOD
com.l2jfrozen.gameserver.managers.CastleManorManager: boolean _underMaintenance
com.l2jfrozen.gameserver.managers.CastleManorManager: boolean _disabled
com.l2jfrozen.gameserver.managers.CastleManorManager: com.l2jfrozen.gameserver.managers.CastleManorManager getInstance()
com.l2jfrozen.gameserver.managers.CastleManorManager: CastleManorManager()
com.l2jfrozen.gameserver.managers.CastleManorManager: void load()
com.l2jfrozen.gameserver.managers.CastleManorManager: void init()
com.l2jfrozen.gameserver.managers.CastleManorManager: void setNextPeriod()
com.l2jfrozen.gameserver.managers.CastleManorManager: void approveNextPeriod()
com.l2jfrozen.gameserver.managers.CastleManorManager: javolution.util.FastList getNewSeedsList(int)
com.l2jfrozen.gameserver.managers.CastleManorManager: javolution.util.FastList getNewCropsList(int)
com.l2jfrozen.gameserver.managers.CastleManorManager: boolean isUnderMaintenance()
com.l2jfrozen.gameserver.managers.CastleManorManager: void setUnderMaintenance(boolean)
com.l2jfrozen.gameserver.managers.CastleManorManager: boolean isDisabled()
com.l2jfrozen.gameserver.managers.CastleManorManager: void setDisabled(boolean)
com.l2jfrozen.gameserver.managers.CastleManorManager: com.l2jfrozen.gameserver.managers.CastleManorManager$SeedProduction getNewSeedProduction(int,int,int,int)
com.l2jfrozen.gameserver.managers.CastleManorManager: com.l2jfrozen.gameserver.managers.CastleManorManager$CropProcure getNewCropProcure(int,int,int,int,int)
com.l2jfrozen.gameserver.managers.CastleManorManager: void save()
com.l2jfrozen.gameserver.managers.CastleManorManager: void <clinit>()
com.l2jfrozen.gameserver.managers.CastleManorManager$CropProcure
com.l2jfrozen.gameserver.managers.CastleManorManager$CropProcure: int _cropId
com.l2jfrozen.gameserver.managers.CastleManorManager$CropProcure: int _buyResidual
com.l2jfrozen.gameserver.managers.CastleManorManager$CropProcure: int _rewardType
com.l2jfrozen.gameserver.managers.CastleManorManager$CropProcure: int _buy
com.l2jfrozen.gameserver.managers.CastleManorManager$CropProcure: int _price
com.l2jfrozen.gameserver.managers.CastleManorManager$CropProcure: com.l2jfrozen.gameserver.managers.CastleManorManager this$0
com.l2jfrozen.gameserver.managers.CastleManorManager$CropProcure: CastleManorManager$CropProcure(com.l2jfrozen.gameserver.managers.CastleManorManager,int)
com.l2jfrozen.gameserver.managers.CastleManorManager$CropProcure: CastleManorManager$CropProcure(com.l2jfrozen.gameserver.managers.CastleManorManager,int,int,int,int,int)
com.l2jfrozen.gameserver.managers.CastleManorManager$CropProcure: int getReward()
com.l2jfrozen.gameserver.managers.CastleManorManager$CropProcure: int getId()
com.l2jfrozen.gameserver.managers.CastleManorManager$CropProcure: int getAmount()
com.l2jfrozen.gameserver.managers.CastleManorManager$CropProcure: int getStartAmount()
com.l2jfrozen.gameserver.managers.CastleManorManager$CropProcure: int getPrice()
com.l2jfrozen.gameserver.managers.CastleManorManager$CropProcure: void setAmount(int)
com.l2jfrozen.gameserver.managers.CastleManorManager$ManorTask
com.l2jfrozen.gameserver.managers.CastleManorManager$ManorTask: com.l2jfrozen.gameserver.managers.CastleManorManager this$0
com.l2jfrozen.gameserver.managers.CastleManorManager$ManorTask: CastleManorManager$ManorTask(com.l2jfrozen.gameserver.managers.CastleManorManager)
com.l2jfrozen.gameserver.managers.CastleManorManager$ManorTask: void run()
com.l2jfrozen.gameserver.managers.CastleManorManager$SeedProduction
com.l2jfrozen.gameserver.managers.CastleManorManager$SeedProduction: int _seedId
com.l2jfrozen.gameserver.managers.CastleManorManager$SeedProduction: int _residual
com.l2jfrozen.gameserver.managers.CastleManorManager$SeedProduction: int _price
com.l2jfrozen.gameserver.managers.CastleManorManager$SeedProduction: int _sales
com.l2jfrozen.gameserver.managers.CastleManorManager$SeedProduction: com.l2jfrozen.gameserver.managers.CastleManorManager this$0
com.l2jfrozen.gameserver.managers.CastleManorManager$SeedProduction: CastleManorManager$SeedProduction(com.l2jfrozen.gameserver.managers.CastleManorManager,int)
com.l2jfrozen.gameserver.managers.CastleManorManager$SeedProduction: CastleManorManager$SeedProduction(com.l2jfrozen.gameserver.managers.CastleManorManager,int,int,int,int)
com.l2jfrozen.gameserver.managers.CastleManorManager$SeedProduction: int getId()
com.l2jfrozen.gameserver.managers.CastleManorManager$SeedProduction: int getCanProduce()
com.l2jfrozen.gameserver.managers.CastleManorManager$SeedProduction: int getPrice()
com.l2jfrozen.gameserver.managers.CastleManorManager$SeedProduction: int getStartProduce()
com.l2jfrozen.gameserver.managers.CastleManorManager$SeedProduction: void setCanProduce(int)
com.l2jfrozen.gameserver.managers.ChristmasManager
com.l2jfrozen.gameserver.managers.ChristmasManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.managers.ChristmasManager: java.util.List objectQueue
com.l2jfrozen.gameserver.managers.ChristmasManager: java.util.Random rand
com.l2jfrozen.gameserver.managers.ChristmasManager: java.lang.String[] message
com.l2jfrozen.gameserver.managers.ChristmasManager: java.lang.String[] sender
com.l2jfrozen.gameserver.managers.ChristmasManager: int[] presents
com.l2jfrozen.gameserver.managers.ChristmasManager: java.util.concurrent.Future _XMasMessageTask
com.l2jfrozen.gameserver.managers.ChristmasManager: java.util.concurrent.Future _XMasPresentsTask
com.l2jfrozen.gameserver.managers.ChristmasManager: int isManagerInit
com.l2jfrozen.gameserver.managers.ChristmasManager: long _IntervalOfChristmas
com.l2jfrozen.gameserver.managers.ChristmasManager: int first
com.l2jfrozen.gameserver.managers.ChristmasManager: int last
com.l2jfrozen.gameserver.managers.ChristmasManager: ChristmasManager()
com.l2jfrozen.gameserver.managers.ChristmasManager: com.l2jfrozen.gameserver.managers.ChristmasManager getInstance()
com.l2jfrozen.gameserver.managers.ChristmasManager: void init(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.managers.ChristmasManager: void end(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.managers.ChristmasManager: void spawnTrees()
com.l2jfrozen.gameserver.managers.ChristmasManager: int getTreeId()
com.l2jfrozen.gameserver.managers.ChristmasManager: void spawnOneTree(int,int,int,int)
com.l2jfrozen.gameserver.managers.ChristmasManager: void endFestiveMessagesAtFixedRate()
com.l2jfrozen.gameserver.managers.ChristmasManager: void startFestiveMessagesAtFixedRate()
com.l2jfrozen.gameserver.managers.ChristmasManager: com.l2jfrozen.gameserver.network.serverpackets.CreatureSay getXMasMessage()
com.l2jfrozen.gameserver.managers.ChristmasManager: java.lang.String getRandomSender()
com.l2jfrozen.gameserver.managers.ChristmasManager: java.lang.String getRandomXMasMessage()
com.l2jfrozen.gameserver.managers.ChristmasManager: void givePresentsAtFixedRate()
com.l2jfrozen.gameserver.managers.ChristmasManager: int getSantaRandomPresent()
com.l2jfrozen.gameserver.managers.ChristmasManager: void endPresentGivingAtFixedRate()
com.l2jfrozen.gameserver.managers.ChristmasManager: int getSantaId()
com.l2jfrozen.gameserver.managers.ChristmasManager: void checkIfOkToAnnounce()
com.l2jfrozen.gameserver.managers.ChristmasManager: void <clinit>()
com.l2jfrozen.gameserver.managers.ChristmasManager$DeleteSpawns
com.l2jfrozen.gameserver.managers.ChristmasManager$DeleteSpawns: com.l2jfrozen.gameserver.managers.ChristmasManager this$0
com.l2jfrozen.gameserver.managers.ChristmasManager$DeleteSpawns: ChristmasManager$DeleteSpawns(com.l2jfrozen.gameserver.managers.ChristmasManager)
com.l2jfrozen.gameserver.managers.ChristmasManager$DeleteSpawns: void run()
com.l2jfrozen.gameserver.managers.ChristmasManager$EndEvent
com.l2jfrozen.gameserver.managers.ChristmasManager$EndEvent: java.util.concurrent.Future _task
com.l2jfrozen.gameserver.managers.ChristmasManager$EndEvent: com.l2jfrozen.gameserver.managers.ChristmasManager this$0
com.l2jfrozen.gameserver.managers.ChristmasManager$EndEvent: ChristmasManager$EndEvent(com.l2jfrozen.gameserver.managers.ChristmasManager)
com.l2jfrozen.gameserver.managers.ChristmasManager$EndEvent: void setTask(java.util.concurrent.Future)
com.l2jfrozen.gameserver.managers.ChristmasManager$EndEvent: void run()
com.l2jfrozen.gameserver.managers.ChristmasManager$GetTreePos
com.l2jfrozen.gameserver.managers.ChristmasManager$GetTreePos: int _iterator
com.l2jfrozen.gameserver.managers.ChristmasManager$GetTreePos: java.util.concurrent.Future _task
com.l2jfrozen.gameserver.managers.ChristmasManager$GetTreePos: com.l2jfrozen.gameserver.managers.ChristmasManager this$0
com.l2jfrozen.gameserver.managers.ChristmasManager$GetTreePos: ChristmasManager$GetTreePos(com.l2jfrozen.gameserver.managers.ChristmasManager,int)
com.l2jfrozen.gameserver.managers.ChristmasManager$GetTreePos: void setTask(java.util.concurrent.Future)
com.l2jfrozen.gameserver.managers.ChristmasManager$GetTreePos: void run()
com.l2jfrozen.gameserver.managers.ChristmasManager$SendXMasMessage
com.l2jfrozen.gameserver.managers.ChristmasManager$SendXMasMessage: com.l2jfrozen.gameserver.managers.ChristmasManager this$0
com.l2jfrozen.gameserver.managers.ChristmasManager$SendXMasMessage: ChristmasManager$SendXMasMessage(com.l2jfrozen.gameserver.managers.ChristmasManager)
com.l2jfrozen.gameserver.managers.ChristmasManager$SendXMasMessage: void run()
com.l2jfrozen.gameserver.managers.ChristmasManager$SingletonHolder
com.l2jfrozen.gameserver.managers.ChristmasManager$SingletonHolder: com.l2jfrozen.gameserver.managers.ChristmasManager _instance
com.l2jfrozen.gameserver.managers.ChristmasManager$SingletonHolder: ChristmasManager$SingletonHolder()
com.l2jfrozen.gameserver.managers.ChristmasManager$SingletonHolder: void <clinit>()
com.l2jfrozen.gameserver.managers.ChristmasManager$SpawnSantaNPCs
com.l2jfrozen.gameserver.managers.ChristmasManager$SpawnSantaNPCs: int _iterator
com.l2jfrozen.gameserver.managers.ChristmasManager$SpawnSantaNPCs: java.util.concurrent.Future _task
com.l2jfrozen.gameserver.managers.ChristmasManager$SpawnSantaNPCs: com.l2jfrozen.gameserver.managers.ChristmasManager this$0
com.l2jfrozen.gameserver.managers.ChristmasManager$SpawnSantaNPCs: ChristmasManager$SpawnSantaNPCs(com.l2jfrozen.gameserver.managers.ChristmasManager,int)
com.l2jfrozen.gameserver.managers.ChristmasManager$SpawnSantaNPCs: void setTask(java.util.concurrent.Future)
com.l2jfrozen.gameserver.managers.ChristmasManager$SpawnSantaNPCs: void run()
com.l2jfrozen.gameserver.managers.ChristmasManager$XMasPresentGivingTask
com.l2jfrozen.gameserver.managers.ChristmasManager$XMasPresentGivingTask: com.l2jfrozen.gameserver.managers.ChristmasManager this$0
com.l2jfrozen.gameserver.managers.ChristmasManager$XMasPresentGivingTask: ChristmasManager$XMasPresentGivingTask(com.l2jfrozen.gameserver.managers.ChristmasManager)
com.l2jfrozen.gameserver.managers.ChristmasManager$XMasPresentGivingTask: void run()
com.l2jfrozen.gameserver.managers.ClanHallManager
com.l2jfrozen.gameserver.managers.ClanHallManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.managers.ClanHallManager: java.util.Map _clanHall
com.l2jfrozen.gameserver.managers.ClanHallManager: java.util.Map _freeClanHall
com.l2jfrozen.gameserver.managers.ClanHallManager: boolean _loaded
com.l2jfrozen.gameserver.managers.ClanHallManager: com.l2jfrozen.gameserver.managers.ClanHallManager getInstance()
com.l2jfrozen.gameserver.managers.ClanHallManager: boolean loaded()
com.l2jfrozen.gameserver.managers.ClanHallManager: ClanHallManager()
com.l2jfrozen.gameserver.managers.ClanHallManager: void load()
com.l2jfrozen.gameserver.managers.ClanHallManager: java.util.Map getFreeClanHalls()
com.l2jfrozen.gameserver.managers.ClanHallManager: java.util.Map getClanHalls()
com.l2jfrozen.gameserver.managers.ClanHallManager: boolean isFree(int)
com.l2jfrozen.gameserver.managers.ClanHallManager: void setFree(int)
com.l2jfrozen.gameserver.managers.ClanHallManager: void setOwner(int,com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.managers.ClanHallManager: com.l2jfrozen.gameserver.model.entity.ClanHall getClanHallById(int)
com.l2jfrozen.gameserver.managers.ClanHallManager: com.l2jfrozen.gameserver.model.entity.ClanHall getNearbyClanHall(int,int,int)
com.l2jfrozen.gameserver.managers.ClanHallManager: com.l2jfrozen.gameserver.model.entity.ClanHall getClanHallByOwner(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.managers.ClanHallManager: ClanHallManager(com.l2jfrozen.gameserver.managers.ClanHallManager$1)
com.l2jfrozen.gameserver.managers.ClanHallManager: void <clinit>()
com.l2jfrozen.gameserver.managers.ClanHallManager$1
com.l2jfrozen.gameserver.managers.ClanHallManager$SingletonHolder
com.l2jfrozen.gameserver.managers.ClanHallManager$SingletonHolder: com.l2jfrozen.gameserver.managers.ClanHallManager _instance
com.l2jfrozen.gameserver.managers.ClanHallManager$SingletonHolder: ClanHallManager$SingletonHolder()
com.l2jfrozen.gameserver.managers.ClanHallManager$SingletonHolder: void <clinit>()
com.l2jfrozen.gameserver.managers.ClassDamageManager
com.l2jfrozen.gameserver.managers.ClassDamageManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.managers.ClassDamageManager: java.util.Hashtable damage_to_mage
com.l2jfrozen.gameserver.managers.ClassDamageManager: java.util.Hashtable damage_to_fighter
com.l2jfrozen.gameserver.managers.ClassDamageManager: java.util.Hashtable damage_by_mage
com.l2jfrozen.gameserver.managers.ClassDamageManager: java.util.Hashtable damage_by_fighter
com.l2jfrozen.gameserver.managers.ClassDamageManager: java.util.Hashtable id_to_name
com.l2jfrozen.gameserver.managers.ClassDamageManager: java.util.Hashtable name_to_id
com.l2jfrozen.gameserver.managers.ClassDamageManager: ClassDamageManager()
com.l2jfrozen.gameserver.managers.ClassDamageManager: void loadConfig()
com.l2jfrozen.gameserver.managers.ClassDamageManager: double getClassDamageToMage(int)
com.l2jfrozen.gameserver.managers.ClassDamageManager: double getClassDamageToFighter(int)
com.l2jfrozen.gameserver.managers.ClassDamageManager: double getClassDamageByMage(int)
com.l2jfrozen.gameserver.managers.ClassDamageManager: double getClassDamageByFighter(int)
com.l2jfrozen.gameserver.managers.ClassDamageManager: int getIdByName(java.lang.String)
com.l2jfrozen.gameserver.managers.ClassDamageManager: java.lang.String getNameById(int)
com.l2jfrozen.gameserver.managers.ClassDamageManager: double getDamageMultiplier(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.managers.ClassDamageManager: void <clinit>()
com.l2jfrozen.gameserver.managers.CoupleManager
com.l2jfrozen.gameserver.managers.CoupleManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.managers.CoupleManager: javolution.util.FastList _couples
com.l2jfrozen.gameserver.managers.CoupleManager: com.l2jfrozen.gameserver.managers.CoupleManager getInstance()
com.l2jfrozen.gameserver.managers.CoupleManager: CoupleManager()
com.l2jfrozen.gameserver.managers.CoupleManager: void reload()
com.l2jfrozen.gameserver.managers.CoupleManager: void load()
com.l2jfrozen.gameserver.managers.CoupleManager: com.l2jfrozen.gameserver.model.entity.Wedding getCouple(int)
com.l2jfrozen.gameserver.managers.CoupleManager: void createCouple(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.managers.CoupleManager: void deleteCouple(int)
com.l2jfrozen.gameserver.managers.CoupleManager: int getCoupleIndex(int)
com.l2jfrozen.gameserver.managers.CoupleManager: javolution.util.FastList getCouples()
com.l2jfrozen.gameserver.managers.CoupleManager: void <clinit>()
com.l2jfrozen.gameserver.managers.CoupleManager$SingletonHolder
com.l2jfrozen.gameserver.managers.CoupleManager$SingletonHolder: com.l2jfrozen.gameserver.managers.CoupleManager _instance
com.l2jfrozen.gameserver.managers.CoupleManager$SingletonHolder: CoupleManager$SingletonHolder()
com.l2jfrozen.gameserver.managers.CoupleManager$SingletonHolder: void <clinit>()
com.l2jfrozen.gameserver.managers.CrownManager
com.l2jfrozen.gameserver.managers.CrownManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.managers.CrownManager: com.l2jfrozen.gameserver.managers.CrownManager _instance
com.l2jfrozen.gameserver.managers.CrownManager: com.l2jfrozen.gameserver.managers.CrownManager getInstance()
com.l2jfrozen.gameserver.managers.CrownManager: CrownManager()
com.l2jfrozen.gameserver.managers.CrownManager: void checkCrowns(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.managers.CrownManager: void checkCrowns(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.managers.CrownManager: void <clinit>()
com.l2jfrozen.gameserver.managers.CursedWeaponsManager
com.l2jfrozen.gameserver.managers.CursedWeaponsManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.managers.CursedWeaponsManager: java.util.Map _cursedWeapons
com.l2jfrozen.gameserver.managers.CursedWeaponsManager: com.l2jfrozen.gameserver.managers.CursedWeaponsManager getInstance()
com.l2jfrozen.gameserver.managers.CursedWeaponsManager: CursedWeaponsManager()
com.l2jfrozen.gameserver.managers.CursedWeaponsManager: void reload()
com.l2jfrozen.gameserver.managers.CursedWeaponsManager: void load()
com.l2jfrozen.gameserver.managers.CursedWeaponsManager: void restore()
com.l2jfrozen.gameserver.managers.CursedWeaponsManager: void controlPlayers()
com.l2jfrozen.gameserver.managers.CursedWeaponsManager: void checkDrop(com.l2jfrozen.gameserver.model.L2Attackable,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.managers.CursedWeaponsManager: void activate(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.managers.CursedWeaponsManager: void drop(int,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.managers.CursedWeaponsManager: void increaseKills(int)
com.l2jfrozen.gameserver.managers.CursedWeaponsManager: int getLevel(int)
com.l2jfrozen.gameserver.managers.CursedWeaponsManager: void announce(com.l2jfrozen.gameserver.network.serverpackets.SystemMessage)
com.l2jfrozen.gameserver.managers.CursedWeaponsManager: void checkPlayer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.managers.CursedWeaponsManager: void removeFromDb(int)
com.l2jfrozen.gameserver.managers.CursedWeaponsManager: void saveData()
com.l2jfrozen.gameserver.managers.CursedWeaponsManager: boolean isCursed(int)
com.l2jfrozen.gameserver.managers.CursedWeaponsManager: java.util.Collection getCursedWeapons()
com.l2jfrozen.gameserver.managers.CursedWeaponsManager: java.util.Set getCursedWeaponsIds()
com.l2jfrozen.gameserver.managers.CursedWeaponsManager: com.l2jfrozen.gameserver.model.CursedWeapon getCursedWeapon(int)
com.l2jfrozen.gameserver.managers.CursedWeaponsManager: void givePassive(int)
com.l2jfrozen.gameserver.managers.CursedWeaponsManager: void <clinit>()
com.l2jfrozen.gameserver.managers.CursedWeaponsManager$SingletonHolder
com.l2jfrozen.gameserver.managers.CursedWeaponsManager$SingletonHolder: com.l2jfrozen.gameserver.managers.CursedWeaponsManager _instance
com.l2jfrozen.gameserver.managers.CursedWeaponsManager$SingletonHolder: CursedWeaponsManager$SingletonHolder()
com.l2jfrozen.gameserver.managers.CursedWeaponsManager$SingletonHolder: void <clinit>()
com.l2jfrozen.gameserver.managers.CustomNpcInstanceManager
com.l2jfrozen.gameserver.managers.CustomNpcInstanceManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.managers.CustomNpcInstanceManager: com.l2jfrozen.gameserver.managers.CustomNpcInstanceManager _instance
com.l2jfrozen.gameserver.managers.CustomNpcInstanceManager: javolution.util.FastMap spawns
com.l2jfrozen.gameserver.managers.CustomNpcInstanceManager: javolution.util.FastMap templates
com.l2jfrozen.gameserver.managers.CustomNpcInstanceManager: CustomNpcInstanceManager()
com.l2jfrozen.gameserver.managers.CustomNpcInstanceManager: com.l2jfrozen.gameserver.managers.CustomNpcInstanceManager getInstance()
com.l2jfrozen.gameserver.managers.CustomNpcInstanceManager: void reload()
com.l2jfrozen.gameserver.managers.CustomNpcInstanceManager: void load()
com.l2jfrozen.gameserver.managers.CustomNpcInstanceManager: boolean isThisL2CustomNpcInstance(int,int)
com.l2jfrozen.gameserver.managers.CustomNpcInstanceManager: com.l2jfrozen.gameserver.managers.CustomNpcInstanceManager$customInfo getCustomData(int,int)
com.l2jfrozen.gameserver.managers.CustomNpcInstanceManager: javolution.util.FastMap getAllTemplates()
com.l2jfrozen.gameserver.managers.CustomNpcInstanceManager: javolution.util.FastMap getAllSpawns()
com.l2jfrozen.gameserver.managers.CustomNpcInstanceManager: void updateRemoveInDB(com.l2jfrozen.gameserver.managers.CustomNpcInstanceManager$customInfo)
com.l2jfrozen.gameserver.managers.CustomNpcInstanceManager: void AddInDB(com.l2jfrozen.gameserver.managers.CustomNpcInstanceManager$customInfo)
com.l2jfrozen.gameserver.managers.CustomNpcInstanceManager: void <clinit>()
com.l2jfrozen.gameserver.managers.CustomNpcInstanceManager$customInfo
com.l2jfrozen.gameserver.managers.CustomNpcInstanceManager$customInfo: java.lang.String[] stringData
com.l2jfrozen.gameserver.managers.CustomNpcInstanceManager$customInfo: int[] integerData
com.l2jfrozen.gameserver.managers.CustomNpcInstanceManager$customInfo: boolean[] booleanData
com.l2jfrozen.gameserver.managers.CustomNpcInstanceManager$customInfo: com.l2jfrozen.gameserver.managers.CustomNpcInstanceManager this$0
com.l2jfrozen.gameserver.managers.CustomNpcInstanceManager$customInfo: CustomNpcInstanceManager$customInfo(com.l2jfrozen.gameserver.managers.CustomNpcInstanceManager)
com.l2jfrozen.gameserver.managers.DatatablesManager
com.l2jfrozen.gameserver.managers.DatatablesManager: DatatablesManager()
com.l2jfrozen.gameserver.managers.DatatablesManager: void reloadAll()
com.l2jfrozen.gameserver.managers.DayNightSpawnManager
com.l2jfrozen.gameserver.managers.DayNightSpawnManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.managers.DayNightSpawnManager: com.l2jfrozen.gameserver.managers.DayNightSpawnManager _instance
com.l2jfrozen.gameserver.managers.DayNightSpawnManager: java.util.Map _dayCreatures
com.l2jfrozen.gameserver.managers.DayNightSpawnManager: java.util.Map _nightCreatures
com.l2jfrozen.gameserver.managers.DayNightSpawnManager: java.util.Map _bosses
com.l2jfrozen.gameserver.managers.DayNightSpawnManager: com.l2jfrozen.gameserver.managers.DayNightSpawnManager getInstance()
com.l2jfrozen.gameserver.managers.DayNightSpawnManager: DayNightSpawnManager()
com.l2jfrozen.gameserver.managers.DayNightSpawnManager: void addDayCreature(com.l2jfrozen.gameserver.model.spawn.L2Spawn)
com.l2jfrozen.gameserver.managers.DayNightSpawnManager: void addNightCreature(com.l2jfrozen.gameserver.model.spawn.L2Spawn)
com.l2jfrozen.gameserver.managers.DayNightSpawnManager: void spawnDayCreatures()
com.l2jfrozen.gameserver.managers.DayNightSpawnManager: void spawnNightCreatures()
com.l2jfrozen.gameserver.managers.DayNightSpawnManager: void spawnCreatures(java.util.Map,java.util.Map,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.managers.DayNightSpawnManager: void changeMode(int)
com.l2jfrozen.gameserver.managers.DayNightSpawnManager: void notifyChangeMode()
com.l2jfrozen.gameserver.managers.DayNightSpawnManager: void cleanUp()
com.l2jfrozen.gameserver.managers.DayNightSpawnManager: void specialNightBoss(int)
com.l2jfrozen.gameserver.managers.DayNightSpawnManager: void handleHellmans(com.l2jfrozen.gameserver.model.actor.instance.L2RaidBossInstance,int)
com.l2jfrozen.gameserver.managers.DayNightSpawnManager: void ShadowSenseMsg(int)
com.l2jfrozen.gameserver.managers.DayNightSpawnManager: com.l2jfrozen.gameserver.model.actor.instance.L2RaidBossInstance handleBoss(com.l2jfrozen.gameserver.model.spawn.L2Spawn)
com.l2jfrozen.gameserver.managers.DayNightSpawnManager: void <clinit>()
com.l2jfrozen.gameserver.managers.DimensionalRiftManager
com.l2jfrozen.gameserver.managers.DimensionalRiftManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.managers.DimensionalRiftManager: com.l2jfrozen.gameserver.managers.DimensionalRiftManager _instance
com.l2jfrozen.gameserver.managers.DimensionalRiftManager: javolution.util.FastMap _rooms
com.l2jfrozen.gameserver.managers.DimensionalRiftManager: short DIMENSIONAL_FRAGMENT_ITEM_ID
com.l2jfrozen.gameserver.managers.DimensionalRiftManager: int MAX_PARTY_PER_AREA
com.l2jfrozen.gameserver.managers.DimensionalRiftManager: com.l2jfrozen.gameserver.managers.DimensionalRiftManager getInstance()
com.l2jfrozen.gameserver.managers.DimensionalRiftManager: DimensionalRiftManager()
com.l2jfrozen.gameserver.managers.DimensionalRiftManager: com.l2jfrozen.gameserver.managers.DimensionalRiftManager$DimensionalRiftRoom getRoom(byte,byte)
com.l2jfrozen.gameserver.managers.DimensionalRiftManager: boolean isAreaAvailable(byte)
com.l2jfrozen.gameserver.managers.DimensionalRiftManager: boolean isRoomAvailable(byte,byte)
com.l2jfrozen.gameserver.managers.DimensionalRiftManager: void loadRooms()
com.l2jfrozen.gameserver.managers.DimensionalRiftManager: void loadSpawns()
com.l2jfrozen.gameserver.managers.DimensionalRiftManager: void reload()
com.l2jfrozen.gameserver.managers.DimensionalRiftManager: boolean checkIfInRiftZone(int,int,int,boolean)
com.l2jfrozen.gameserver.managers.DimensionalRiftManager: boolean checkIfInPeaceZone(int,int,int)
com.l2jfrozen.gameserver.managers.DimensionalRiftManager: void teleportToWaitingRoom(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.managers.DimensionalRiftManager: void start(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,byte,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.managers.DimensionalRiftManager: void killRift(com.l2jfrozen.gameserver.model.entity.DimensionalRift)
com.l2jfrozen.gameserver.managers.DimensionalRiftManager: int getNeededItems(byte)
com.l2jfrozen.gameserver.managers.DimensionalRiftManager: void showHtmlFile(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.managers.DimensionalRiftManager: void handleCheat(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.managers.DimensionalRiftManager: void <clinit>()
com.l2jfrozen.gameserver.managers.DimensionalRiftManager$DimensionalRiftRoom
com.l2jfrozen.gameserver.managers.DimensionalRiftManager$DimensionalRiftRoom: byte _type
com.l2jfrozen.gameserver.managers.DimensionalRiftManager$DimensionalRiftRoom: byte _room
com.l2jfrozen.gameserver.managers.DimensionalRiftManager$DimensionalRiftRoom: int _xMin
com.l2jfrozen.gameserver.managers.DimensionalRiftManager$DimensionalRiftRoom: int _xMax
com.l2jfrozen.gameserver.managers.DimensionalRiftManager$DimensionalRiftRoom: int _yMin
com.l2jfrozen.gameserver.managers.DimensionalRiftManager$DimensionalRiftRoom: int _yMax
com.l2jfrozen.gameserver.managers.DimensionalRiftManager$DimensionalRiftRoom: int _zMin
com.l2jfrozen.gameserver.managers.DimensionalRiftManager$DimensionalRiftRoom: int _zMax
com.l2jfrozen.gameserver.managers.DimensionalRiftManager$DimensionalRiftRoom: int[] _teleportCoords
com.l2jfrozen.gameserver.managers.DimensionalRiftManager$DimensionalRiftRoom: java.awt.Shape _s
com.l2jfrozen.gameserver.managers.DimensionalRiftManager$DimensionalRiftRoom: boolean _isBossRoom
com.l2jfrozen.gameserver.managers.DimensionalRiftManager$DimensionalRiftRoom: javolution.util.FastList _roomSpawns
com.l2jfrozen.gameserver.managers.DimensionalRiftManager$DimensionalRiftRoom: javolution.util.FastList _roomMobs
com.l2jfrozen.gameserver.managers.DimensionalRiftManager$DimensionalRiftRoom: boolean _isUsed
com.l2jfrozen.gameserver.managers.DimensionalRiftManager$DimensionalRiftRoom: com.l2jfrozen.gameserver.managers.DimensionalRiftManager this$0
com.l2jfrozen.gameserver.managers.DimensionalRiftManager$DimensionalRiftRoom: DimensionalRiftManager$DimensionalRiftRoom(com.l2jfrozen.gameserver.managers.DimensionalRiftManager,byte,byte,int,int,int,int,int,int,int,int,int,boolean)
com.l2jfrozen.gameserver.managers.DimensionalRiftManager$DimensionalRiftRoom: int getRandomX()
com.l2jfrozen.gameserver.managers.DimensionalRiftManager$DimensionalRiftRoom: int getRandomY()
com.l2jfrozen.gameserver.managers.DimensionalRiftManager$DimensionalRiftRoom: int[] getTeleportCoords()
com.l2jfrozen.gameserver.managers.DimensionalRiftManager$DimensionalRiftRoom: boolean checkIfInZone(int,int,int)
com.l2jfrozen.gameserver.managers.DimensionalRiftManager$DimensionalRiftRoom: boolean isBossRoom()
com.l2jfrozen.gameserver.managers.DimensionalRiftManager$DimensionalRiftRoom: javolution.util.FastList getSpawns()
com.l2jfrozen.gameserver.managers.DimensionalRiftManager$DimensionalRiftRoom: void spawn()
com.l2jfrozen.gameserver.managers.DimensionalRiftManager$DimensionalRiftRoom: void unspawn()
com.l2jfrozen.gameserver.managers.DimensionalRiftManager$DimensionalRiftRoom: void setUsed()
com.l2jfrozen.gameserver.managers.DimensionalRiftManager$DimensionalRiftRoom: boolean isUsed()
com.l2jfrozen.gameserver.managers.DuelManager
com.l2jfrozen.gameserver.managers.DuelManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.managers.DuelManager: com.l2jfrozen.gameserver.managers.DuelManager _instance
com.l2jfrozen.gameserver.managers.DuelManager: javolution.util.FastList _duels
com.l2jfrozen.gameserver.managers.DuelManager: int _currentDuelId
com.l2jfrozen.gameserver.managers.DuelManager: com.l2jfrozen.gameserver.managers.DuelManager getInstance()
com.l2jfrozen.gameserver.managers.DuelManager: DuelManager()
com.l2jfrozen.gameserver.managers.DuelManager: int getNextDuelId()
com.l2jfrozen.gameserver.managers.DuelManager: com.l2jfrozen.gameserver.model.entity.Duel getDuel(int)
com.l2jfrozen.gameserver.managers.DuelManager: void addDuel(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.managers.DuelManager: void removeDuel(com.l2jfrozen.gameserver.model.entity.Duel)
com.l2jfrozen.gameserver.managers.DuelManager: void doSurrender(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.managers.DuelManager: void onPlayerDefeat(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.managers.DuelManager: void onBuff(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Effect)
com.l2jfrozen.gameserver.managers.DuelManager: void onRemoveFromParty(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.managers.DuelManager: void broadcastToOppositTeam(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.network.serverpackets.L2GameServerPacket)
com.l2jfrozen.gameserver.managers.DuelManager: void <clinit>()
com.l2jfrozen.gameserver.managers.FishingZoneManager
com.l2jfrozen.gameserver.managers.FishingZoneManager: com.l2jfrozen.gameserver.managers.FishingZoneManager _instance
com.l2jfrozen.gameserver.managers.FishingZoneManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.managers.FishingZoneManager: javolution.util.FastList _fishingZones
com.l2jfrozen.gameserver.managers.FishingZoneManager: javolution.util.FastList _waterZones
com.l2jfrozen.gameserver.managers.FishingZoneManager: com.l2jfrozen.gameserver.managers.FishingZoneManager getInstance()
com.l2jfrozen.gameserver.managers.FishingZoneManager: FishingZoneManager()
com.l2jfrozen.gameserver.managers.FishingZoneManager: void addFishingZone(com.l2jfrozen.gameserver.model.zone.type.L2FishingZone)
com.l2jfrozen.gameserver.managers.FishingZoneManager: void addWaterZone(com.l2jfrozen.gameserver.model.zone.type.L2WaterZone)
com.l2jfrozen.gameserver.managers.FishingZoneManager: com.l2jfrozen.gameserver.model.zone.type.L2FishingZone isInsideFishingZone(int,int,int)
com.l2jfrozen.gameserver.managers.FishingZoneManager: com.l2jfrozen.gameserver.model.zone.type.L2WaterZone isInsideWaterZone(int,int,int)
com.l2jfrozen.gameserver.managers.FishingZoneManager: void <clinit>()
com.l2jfrozen.gameserver.managers.FortManager
com.l2jfrozen.gameserver.managers.FortManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.managers.FortManager: java.util.List _forts
com.l2jfrozen.gameserver.managers.FortManager: com.l2jfrozen.gameserver.managers.FortManager getInstance()
com.l2jfrozen.gameserver.managers.FortManager: FortManager()
com.l2jfrozen.gameserver.managers.FortManager: int findNearestFortIndex(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.managers.FortManager: void load()
com.l2jfrozen.gameserver.managers.FortManager: com.l2jfrozen.gameserver.model.entity.siege.Fort getFortById(int)
com.l2jfrozen.gameserver.managers.FortManager: com.l2jfrozen.gameserver.model.entity.siege.Fort getFortByOwner(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.managers.FortManager: com.l2jfrozen.gameserver.model.entity.siege.Fort getFort(java.lang.String)
com.l2jfrozen.gameserver.managers.FortManager: com.l2jfrozen.gameserver.model.entity.siege.Fort getFort(int,int,int)
com.l2jfrozen.gameserver.managers.FortManager: com.l2jfrozen.gameserver.model.entity.siege.Fort getFort(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.managers.FortManager: int getFortIndex(int)
com.l2jfrozen.gameserver.managers.FortManager: int getFortIndex(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.managers.FortManager: int getFortIndex(int,int,int)
com.l2jfrozen.gameserver.managers.FortManager: java.util.List getForts()
com.l2jfrozen.gameserver.managers.FortManager: void <clinit>()
com.l2jfrozen.gameserver.managers.FortManager$SingletonHolder
com.l2jfrozen.gameserver.managers.FortManager$SingletonHolder: com.l2jfrozen.gameserver.managers.FortManager _instance
com.l2jfrozen.gameserver.managers.FortManager$SingletonHolder: FortManager$SingletonHolder()
com.l2jfrozen.gameserver.managers.FortManager$SingletonHolder: void <clinit>()
com.l2jfrozen.gameserver.managers.FortSiegeGuardManager
com.l2jfrozen.gameserver.managers.FortSiegeGuardManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.managers.FortSiegeGuardManager: com.l2jfrozen.gameserver.model.entity.siege.Fort _fort
com.l2jfrozen.gameserver.managers.FortSiegeGuardManager: java.util.List _siegeGuardSpawn
com.l2jfrozen.gameserver.managers.FortSiegeGuardManager: FortSiegeGuardManager(com.l2jfrozen.gameserver.model.entity.siege.Fort)
com.l2jfrozen.gameserver.managers.FortSiegeGuardManager: void addSiegeGuard(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.managers.FortSiegeGuardManager: void addSiegeGuard(int,int,int,int,int)
com.l2jfrozen.gameserver.managers.FortSiegeGuardManager: void hireMerc(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.managers.FortSiegeGuardManager: void hireMerc(int,int,int,int,int)
com.l2jfrozen.gameserver.managers.FortSiegeGuardManager: void removeMerc(int,int,int,int)
com.l2jfrozen.gameserver.managers.FortSiegeGuardManager: void removeMercs()
com.l2jfrozen.gameserver.managers.FortSiegeGuardManager: void spawnSiegeGuard()
com.l2jfrozen.gameserver.managers.FortSiegeGuardManager: void unspawnSiegeGuard()
com.l2jfrozen.gameserver.managers.FortSiegeGuardManager: void loadSiegeGuard()
com.l2jfrozen.gameserver.managers.FortSiegeGuardManager: void saveSiegeGuard(int,int,int,int,int,int)
com.l2jfrozen.gameserver.managers.FortSiegeGuardManager: com.l2jfrozen.gameserver.model.entity.siege.Fort getFort()
com.l2jfrozen.gameserver.managers.FortSiegeGuardManager: java.util.List getSiegeGuardSpawn()
com.l2jfrozen.gameserver.managers.FortSiegeGuardManager: void <clinit>()
com.l2jfrozen.gameserver.managers.FortSiegeManager
com.l2jfrozen.gameserver.managers.FortSiegeManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.managers.FortSiegeManager: int _attackerMaxClans
com.l2jfrozen.gameserver.managers.FortSiegeManager: int _attackerRespawnDelay
com.l2jfrozen.gameserver.managers.FortSiegeManager: int _defenderMaxClans
com.l2jfrozen.gameserver.managers.FortSiegeManager: int _defenderRespawnDelay
com.l2jfrozen.gameserver.managers.FortSiegeManager: javolution.util.FastMap _commanderSpawnList
com.l2jfrozen.gameserver.managers.FortSiegeManager: javolution.util.FastMap _flagList
com.l2jfrozen.gameserver.managers.FortSiegeManager: int _controlTowerLosePenalty
com.l2jfrozen.gameserver.managers.FortSiegeManager: int _flagMaxCount
com.l2jfrozen.gameserver.managers.FortSiegeManager: int _siegeClanMinLevel
com.l2jfrozen.gameserver.managers.FortSiegeManager: int _siegeLength
com.l2jfrozen.gameserver.managers.FortSiegeManager: java.util.List _sieges
com.l2jfrozen.gameserver.managers.FortSiegeManager: com.l2jfrozen.gameserver.managers.FortSiegeManager getInstance()
com.l2jfrozen.gameserver.managers.FortSiegeManager: FortSiegeManager()
com.l2jfrozen.gameserver.managers.FortSiegeManager: void addSiegeSkills(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.managers.FortSiegeManager: boolean checkIfOkToSummon(com.l2jfrozen.gameserver.model.L2Character,boolean)
com.l2jfrozen.gameserver.managers.FortSiegeManager: boolean checkIsRegistered(com.l2jfrozen.gameserver.model.L2Clan,int)
com.l2jfrozen.gameserver.managers.FortSiegeManager: void removeSiegeSkills(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.managers.FortSiegeManager: void load()
com.l2jfrozen.gameserver.managers.FortSiegeManager: javolution.util.FastList getCommanderSpawnList(int)
com.l2jfrozen.gameserver.managers.FortSiegeManager: javolution.util.FastList getFlagList(int)
com.l2jfrozen.gameserver.managers.FortSiegeManager: int getAttackerMaxClans()
com.l2jfrozen.gameserver.managers.FortSiegeManager: int getAttackerRespawnDelay()
com.l2jfrozen.gameserver.managers.FortSiegeManager: int getControlTowerLosePenalty()
com.l2jfrozen.gameserver.managers.FortSiegeManager: int getDefenderMaxClans()
com.l2jfrozen.gameserver.managers.FortSiegeManager: int getDefenderRespawnDelay()
com.l2jfrozen.gameserver.managers.FortSiegeManager: int getFlagMaxCount()
com.l2jfrozen.gameserver.managers.FortSiegeManager: com.l2jfrozen.gameserver.model.entity.siege.FortSiege getSiege(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.managers.FortSiegeManager: com.l2jfrozen.gameserver.model.entity.siege.FortSiege getSiege(int,int,int)
com.l2jfrozen.gameserver.managers.FortSiegeManager: int getSiegeClanMinLevel()
com.l2jfrozen.gameserver.managers.FortSiegeManager: int getSiegeLength()
com.l2jfrozen.gameserver.managers.FortSiegeManager: java.util.List getSieges()
com.l2jfrozen.gameserver.managers.FortSiegeManager: void addSiege(com.l2jfrozen.gameserver.model.entity.siege.FortSiege)
com.l2jfrozen.gameserver.managers.FortSiegeManager: void removeSiege(com.l2jfrozen.gameserver.model.entity.siege.FortSiege)
com.l2jfrozen.gameserver.managers.FortSiegeManager: boolean isCombat(int)
com.l2jfrozen.gameserver.managers.FortSiegeManager: boolean checkIsRegisteredInSiege(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.managers.FortSiegeManager: void <clinit>()
com.l2jfrozen.gameserver.managers.FortSiegeManager$SiegeSpawn
com.l2jfrozen.gameserver.managers.FortSiegeManager$SiegeSpawn: com.l2jfrozen.gameserver.model.Location _location
com.l2jfrozen.gameserver.managers.FortSiegeManager$SiegeSpawn: int _npcId
com.l2jfrozen.gameserver.managers.FortSiegeManager$SiegeSpawn: int _heading
com.l2jfrozen.gameserver.managers.FortSiegeManager$SiegeSpawn: int _fortId
com.l2jfrozen.gameserver.managers.FortSiegeManager$SiegeSpawn: int _hp
com.l2jfrozen.gameserver.managers.FortSiegeManager$SiegeSpawn: com.l2jfrozen.gameserver.managers.FortSiegeManager this$0
com.l2jfrozen.gameserver.managers.FortSiegeManager$SiegeSpawn: FortSiegeManager$SiegeSpawn(com.l2jfrozen.gameserver.managers.FortSiegeManager,int,int,int,int,int,int)
com.l2jfrozen.gameserver.managers.FortSiegeManager$SiegeSpawn: FortSiegeManager$SiegeSpawn(com.l2jfrozen.gameserver.managers.FortSiegeManager,int,int,int,int,int,int,int)
com.l2jfrozen.gameserver.managers.FortSiegeManager$SiegeSpawn: int getFortId()
com.l2jfrozen.gameserver.managers.FortSiegeManager$SiegeSpawn: int getNpcId()
com.l2jfrozen.gameserver.managers.FortSiegeManager$SiegeSpawn: int getHeading()
com.l2jfrozen.gameserver.managers.FortSiegeManager$SiegeSpawn: int getHp()
com.l2jfrozen.gameserver.managers.FortSiegeManager$SiegeSpawn: com.l2jfrozen.gameserver.model.Location getLocation()
com.l2jfrozen.gameserver.managers.FortSiegeManager$SingletonHolder
com.l2jfrozen.gameserver.managers.FortSiegeManager$SingletonHolder: com.l2jfrozen.gameserver.managers.FortSiegeManager _instance
com.l2jfrozen.gameserver.managers.FortSiegeManager$SingletonHolder: FortSiegeManager$SingletonHolder()
com.l2jfrozen.gameserver.managers.FortSiegeManager$SingletonHolder: void <clinit>()
com.l2jfrozen.gameserver.managers.FourSepulchersManager
com.l2jfrozen.gameserver.managers.FourSepulchersManager: java.lang.String QUEST_ID
com.l2jfrozen.gameserver.managers.FourSepulchersManager: int ENTRANCE_PASS
com.l2jfrozen.gameserver.managers.FourSepulchersManager: int USED_PASS
com.l2jfrozen.gameserver.managers.FourSepulchersManager: int CHAPEL_KEY
com.l2jfrozen.gameserver.managers.FourSepulchersManager: int ANTIQUE_BROOCH
com.l2jfrozen.gameserver.managers.FourSepulchersManager: boolean _firstTimeRun
com.l2jfrozen.gameserver.managers.FourSepulchersManager: boolean _inEntryTime
com.l2jfrozen.gameserver.managers.FourSepulchersManager: boolean _inWarmUpTime
com.l2jfrozen.gameserver.managers.FourSepulchersManager: boolean _inAttackTime
com.l2jfrozen.gameserver.managers.FourSepulchersManager: boolean _inCoolDownTime
com.l2jfrozen.gameserver.managers.FourSepulchersManager: java.util.concurrent.ScheduledFuture _changeCoolDownTimeTask
com.l2jfrozen.gameserver.managers.FourSepulchersManager: java.util.concurrent.ScheduledFuture _changeEntryTimeTask
com.l2jfrozen.gameserver.managers.FourSepulchersManager: java.util.concurrent.ScheduledFuture _changeWarmUpTimeTask
com.l2jfrozen.gameserver.managers.FourSepulchersManager: java.util.concurrent.ScheduledFuture _changeAttackTimeTask
com.l2jfrozen.gameserver.managers.FourSepulchersManager: java.util.concurrent.ScheduledFuture _onPartyAnnihilatedTask
com.l2jfrozen.gameserver.managers.FourSepulchersManager: int[][] _startHallSpawn
com.l2jfrozen.gameserver.managers.FourSepulchersManager: int[][][] _shadowSpawnLoc
com.l2jfrozen.gameserver.managers.FourSepulchersManager: javolution.util.FastMap _archonSpawned
com.l2jfrozen.gameserver.managers.FourSepulchersManager: javolution.util.FastMap _hallInUse
com.l2jfrozen.gameserver.managers.FourSepulchersManager: javolution.util.FastMap _startHallSpawns
com.l2jfrozen.gameserver.managers.FourSepulchersManager: javolution.util.FastMap _hallGateKeepers
com.l2jfrozen.gameserver.managers.FourSepulchersManager: javolution.util.FastMap _keyBoxNpc
com.l2jfrozen.gameserver.managers.FourSepulchersManager: javolution.util.FastMap _victim
com.l2jfrozen.gameserver.managers.FourSepulchersManager: javolution.util.FastMap _challengers
com.l2jfrozen.gameserver.managers.FourSepulchersManager: javolution.util.FastMap _executionerSpawns
com.l2jfrozen.gameserver.managers.FourSepulchersManager: javolution.util.FastMap _keyBoxSpawns
com.l2jfrozen.gameserver.managers.FourSepulchersManager: javolution.util.FastMap _mysteriousBoxSpawns
com.l2jfrozen.gameserver.managers.FourSepulchersManager: javolution.util.FastMap _shadowSpawns
com.l2jfrozen.gameserver.managers.FourSepulchersManager: javolution.util.FastMap _dukeFinalMobs
com.l2jfrozen.gameserver.managers.FourSepulchersManager: javolution.util.FastMap _dukeMobs
com.l2jfrozen.gameserver.managers.FourSepulchersManager: javolution.util.FastMap _emperorsGraveNpcs
com.l2jfrozen.gameserver.managers.FourSepulchersManager: javolution.util.FastMap _magicalMonsters
com.l2jfrozen.gameserver.managers.FourSepulchersManager: javolution.util.FastMap _physicalMonsters
com.l2jfrozen.gameserver.managers.FourSepulchersManager: javolution.util.FastMap _viscountMobs
com.l2jfrozen.gameserver.managers.FourSepulchersManager: javolution.util.FastList _physicalSpawns
com.l2jfrozen.gameserver.managers.FourSepulchersManager: javolution.util.FastList _magicalSpawns
com.l2jfrozen.gameserver.managers.FourSepulchersManager: javolution.util.FastList _managers
com.l2jfrozen.gameserver.managers.FourSepulchersManager: javolution.util.FastList _dukeFinalSpawns
com.l2jfrozen.gameserver.managers.FourSepulchersManager: javolution.util.FastList _emperorsGraveSpawns
com.l2jfrozen.gameserver.managers.FourSepulchersManager: javolution.util.FastList _allMobs
com.l2jfrozen.gameserver.managers.FourSepulchersManager: long _attackTimeEnd
com.l2jfrozen.gameserver.managers.FourSepulchersManager: long _coolDownTimeEnd
com.l2jfrozen.gameserver.managers.FourSepulchersManager: long _entryTimeEnd
com.l2jfrozen.gameserver.managers.FourSepulchersManager: long _warmUpTimeEnd
com.l2jfrozen.gameserver.managers.FourSepulchersManager: byte _newCycleMin
com.l2jfrozen.gameserver.managers.FourSepulchersManager: com.l2jfrozen.gameserver.managers.FourSepulchersManager getInstance()
com.l2jfrozen.gameserver.managers.FourSepulchersManager: FourSepulchersManager()
com.l2jfrozen.gameserver.managers.FourSepulchersManager: void init()
com.l2jfrozen.gameserver.managers.FourSepulchersManager: void timeSelector()
com.l2jfrozen.gameserver.managers.FourSepulchersManager: void timeCalculator()
com.l2jfrozen.gameserver.managers.FourSepulchersManager: void clean()
com.l2jfrozen.gameserver.managers.FourSepulchersManager: void spawnManagers()
com.l2jfrozen.gameserver.managers.FourSepulchersManager: void initFixedInfo()
com.l2jfrozen.gameserver.managers.FourSepulchersManager: void loadMysteriousBox()
com.l2jfrozen.gameserver.managers.FourSepulchersManager: void initKeyBoxSpawns()
com.l2jfrozen.gameserver.managers.FourSepulchersManager: void loadPhysicalMonsters()
com.l2jfrozen.gameserver.managers.FourSepulchersManager: void loadMagicalMonsters()
com.l2jfrozen.gameserver.managers.FourSepulchersManager: void loadDukeMonsters()
com.l2jfrozen.gameserver.managers.FourSepulchersManager: void loadEmperorsGraveMonsters()
com.l2jfrozen.gameserver.managers.FourSepulchersManager: void initLocationShadowSpawns()
com.l2jfrozen.gameserver.managers.FourSepulchersManager: void initExecutionerSpawns()
com.l2jfrozen.gameserver.managers.FourSepulchersManager: boolean isEntryTime()
com.l2jfrozen.gameserver.managers.FourSepulchersManager: boolean isAttackTime()
com.l2jfrozen.gameserver.managers.FourSepulchersManager: void tryEntry(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.managers.FourSepulchersManager: void entry(int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.managers.FourSepulchersManager: void spawnMysteriousBox(int)
com.l2jfrozen.gameserver.managers.FourSepulchersManager: void spawnMonster(int)
com.l2jfrozen.gameserver.managers.FourSepulchersManager: boolean isViscountMobsAnnihilated(int)
com.l2jfrozen.gameserver.managers.FourSepulchersManager: boolean isDukeMobsAnnihilated(int)
com.l2jfrozen.gameserver.managers.FourSepulchersManager: void spawnKeyBox(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.managers.FourSepulchersManager: void spawnExecutionerOfHalisha(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.managers.FourSepulchersManager: void spawnArchonOfHalisha(int)
com.l2jfrozen.gameserver.managers.FourSepulchersManager: void spawnEmperorsGraveNpc(int)
com.l2jfrozen.gameserver.managers.FourSepulchersManager: void locationShadowSpawns()
com.l2jfrozen.gameserver.managers.FourSepulchersManager: void spawnShadow(int)
com.l2jfrozen.gameserver.managers.FourSepulchersManager: void deleteAllMobs()
com.l2jfrozen.gameserver.managers.FourSepulchersManager: void closeAllDoors()
com.l2jfrozen.gameserver.managers.FourSepulchersManager: byte minuteSelect(byte)
com.l2jfrozen.gameserver.managers.FourSepulchersManager: void managerSay(byte)
com.l2jfrozen.gameserver.managers.FourSepulchersManager: java.util.Map getHallGateKeepers()
com.l2jfrozen.gameserver.managers.FourSepulchersManager: void showHtmlFile(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.managers.FourSepulchersManager$ChangeAttackTime
com.l2jfrozen.gameserver.managers.FourSepulchersManager$ChangeAttackTime: com.l2jfrozen.gameserver.managers.FourSepulchersManager this$0
com.l2jfrozen.gameserver.managers.FourSepulchersManager$ChangeAttackTime: FourSepulchersManager$ChangeAttackTime(com.l2jfrozen.gameserver.managers.FourSepulchersManager)
com.l2jfrozen.gameserver.managers.FourSepulchersManager$ChangeAttackTime: void run()
com.l2jfrozen.gameserver.managers.FourSepulchersManager$ChangeCoolDownTime
com.l2jfrozen.gameserver.managers.FourSepulchersManager$ChangeCoolDownTime: com.l2jfrozen.gameserver.managers.FourSepulchersManager this$0
com.l2jfrozen.gameserver.managers.FourSepulchersManager$ChangeCoolDownTime: FourSepulchersManager$ChangeCoolDownTime(com.l2jfrozen.gameserver.managers.FourSepulchersManager)
com.l2jfrozen.gameserver.managers.FourSepulchersManager$ChangeCoolDownTime: void run()
com.l2jfrozen.gameserver.managers.FourSepulchersManager$ChangeEntryTime
com.l2jfrozen.gameserver.managers.FourSepulchersManager$ChangeEntryTime: com.l2jfrozen.gameserver.managers.FourSepulchersManager this$0
com.l2jfrozen.gameserver.managers.FourSepulchersManager$ChangeEntryTime: FourSepulchersManager$ChangeEntryTime(com.l2jfrozen.gameserver.managers.FourSepulchersManager)
com.l2jfrozen.gameserver.managers.FourSepulchersManager$ChangeEntryTime: void run()
com.l2jfrozen.gameserver.managers.FourSepulchersManager$ChangeWarmUpTime
com.l2jfrozen.gameserver.managers.FourSepulchersManager$ChangeWarmUpTime: com.l2jfrozen.gameserver.managers.FourSepulchersManager this$0
com.l2jfrozen.gameserver.managers.FourSepulchersManager$ChangeWarmUpTime: FourSepulchersManager$ChangeWarmUpTime(com.l2jfrozen.gameserver.managers.FourSepulchersManager)
com.l2jfrozen.gameserver.managers.FourSepulchersManager$ChangeWarmUpTime: void run()
com.l2jfrozen.gameserver.managers.FourSepulchersManager$ManagerSay
com.l2jfrozen.gameserver.managers.FourSepulchersManager$ManagerSay: com.l2jfrozen.gameserver.managers.FourSepulchersManager this$0
com.l2jfrozen.gameserver.managers.FourSepulchersManager$ManagerSay: FourSepulchersManager$ManagerSay(com.l2jfrozen.gameserver.managers.FourSepulchersManager)
com.l2jfrozen.gameserver.managers.FourSepulchersManager$ManagerSay: void run()
com.l2jfrozen.gameserver.managers.FourSepulchersManager$SingletonHolder
com.l2jfrozen.gameserver.managers.FourSepulchersManager$SingletonHolder: com.l2jfrozen.gameserver.managers.FourSepulchersManager _instance
com.l2jfrozen.gameserver.managers.FourSepulchersManager$SingletonHolder: FourSepulchersManager$SingletonHolder()
com.l2jfrozen.gameserver.managers.FourSepulchersManager$SingletonHolder: void <clinit>()
com.l2jfrozen.gameserver.managers.GrandBossManager
com.l2jfrozen.gameserver.managers.GrandBossManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.managers.GrandBossManager: java.lang.String DELETE_GRAND_BOSS_LIST
com.l2jfrozen.gameserver.managers.GrandBossManager: java.lang.String INSERT_GRAND_BOSS_LIST
com.l2jfrozen.gameserver.managers.GrandBossManager: java.lang.String UPDATE_GRAND_BOSS_DATA
com.l2jfrozen.gameserver.managers.GrandBossManager: java.lang.String UPDATE_GRAND_BOSS_DATA2
com.l2jfrozen.gameserver.managers.GrandBossManager: com.l2jfrozen.gameserver.managers.GrandBossManager _instance
com.l2jfrozen.gameserver.managers.GrandBossManager: java.util.Map _bosses
com.l2jfrozen.gameserver.managers.GrandBossManager: java.util.Map _storedInfo
com.l2jfrozen.gameserver.managers.GrandBossManager: java.util.Map _bossStatus
com.l2jfrozen.gameserver.managers.GrandBossManager: java.util.List _zones
com.l2jfrozen.gameserver.managers.GrandBossManager: com.l2jfrozen.gameserver.managers.GrandBossManager getInstance()
com.l2jfrozen.gameserver.managers.GrandBossManager: GrandBossManager()
com.l2jfrozen.gameserver.managers.GrandBossManager: void init()
com.l2jfrozen.gameserver.managers.GrandBossManager: void initZones()
com.l2jfrozen.gameserver.managers.GrandBossManager: void addZone(com.l2jfrozen.gameserver.model.zone.type.L2BossZone)
com.l2jfrozen.gameserver.managers.GrandBossManager: com.l2jfrozen.gameserver.model.zone.type.L2BossZone getZone(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.managers.GrandBossManager: com.l2jfrozen.gameserver.model.zone.type.L2BossZone getZone(int,int,int)
com.l2jfrozen.gameserver.managers.GrandBossManager: boolean checkIfInZone(java.lang.String,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.managers.GrandBossManager: java.lang.Integer getBossStatus(int)
com.l2jfrozen.gameserver.managers.GrandBossManager: void setBossStatus(int,int)
com.l2jfrozen.gameserver.managers.GrandBossManager: void addBoss(com.l2jfrozen.gameserver.model.actor.instance.L2GrandBossInstance)
com.l2jfrozen.gameserver.managers.GrandBossManager: com.l2jfrozen.gameserver.model.actor.instance.L2GrandBossInstance getBoss(int)
com.l2jfrozen.gameserver.managers.GrandBossManager: com.l2jfrozen.gameserver.model.actor.instance.L2GrandBossInstance deleteBoss(int)
com.l2jfrozen.gameserver.managers.GrandBossManager: com.l2jfrozen.gameserver.templates.StatsSet getStatsSet(int)
com.l2jfrozen.gameserver.managers.GrandBossManager: void setStatsSet(int,com.l2jfrozen.gameserver.templates.StatsSet)
com.l2jfrozen.gameserver.managers.GrandBossManager: void fastStoreToDb()
com.l2jfrozen.gameserver.managers.GrandBossManager: void storeToDb()
com.l2jfrozen.gameserver.managers.GrandBossManager: void updateDb(int,boolean)
com.l2jfrozen.gameserver.managers.GrandBossManager: void cleanUp()
com.l2jfrozen.gameserver.managers.GrandBossManager: com.l2jfrozen.gameserver.templates.L2NpcTemplate getValidTemplate(int)
com.l2jfrozen.gameserver.managers.GrandBossManager: boolean isDefined(int)
com.l2jfrozen.gameserver.managers.GrandBossManager: void <clinit>()
com.l2jfrozen.gameserver.managers.ItemsOnGroundManager
com.l2jfrozen.gameserver.managers.ItemsOnGroundManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.managers.ItemsOnGroundManager: java.util.List _items
com.l2jfrozen.gameserver.managers.ItemsOnGroundManager: ItemsOnGroundManager()
com.l2jfrozen.gameserver.managers.ItemsOnGroundManager: com.l2jfrozen.gameserver.managers.ItemsOnGroundManager getInstance()
com.l2jfrozen.gameserver.managers.ItemsOnGroundManager: void load()
com.l2jfrozen.gameserver.managers.ItemsOnGroundManager: void save(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.managers.ItemsOnGroundManager: void removeObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.managers.ItemsOnGroundManager: void saveInDb()
com.l2jfrozen.gameserver.managers.ItemsOnGroundManager: void cleanUp()
com.l2jfrozen.gameserver.managers.ItemsOnGroundManager: void emptyTable()
com.l2jfrozen.gameserver.managers.ItemsOnGroundManager: ItemsOnGroundManager(com.l2jfrozen.gameserver.managers.ItemsOnGroundManager$1)
com.l2jfrozen.gameserver.managers.ItemsOnGroundManager: void <clinit>()
com.l2jfrozen.gameserver.managers.ItemsOnGroundManager$1
com.l2jfrozen.gameserver.managers.ItemsOnGroundManager$SingletonHolder
com.l2jfrozen.gameserver.managers.ItemsOnGroundManager$SingletonHolder: com.l2jfrozen.gameserver.managers.ItemsOnGroundManager _instance
com.l2jfrozen.gameserver.managers.ItemsOnGroundManager$SingletonHolder: ItemsOnGroundManager$SingletonHolder()
com.l2jfrozen.gameserver.managers.ItemsOnGroundManager$SingletonHolder: void <clinit>()
com.l2jfrozen.gameserver.managers.ItemsOnGroundManager$StoreInDb
com.l2jfrozen.gameserver.managers.ItemsOnGroundManager$StoreInDb: com.l2jfrozen.gameserver.managers.ItemsOnGroundManager this$0
com.l2jfrozen.gameserver.managers.ItemsOnGroundManager$StoreInDb: ItemsOnGroundManager$StoreInDb(com.l2jfrozen.gameserver.managers.ItemsOnGroundManager)
com.l2jfrozen.gameserver.managers.ItemsOnGroundManager$StoreInDb: void run()
com.l2jfrozen.gameserver.managers.Manager
com.l2jfrozen.gameserver.managers.Manager: Manager()
com.l2jfrozen.gameserver.managers.Manager: void reloadAll()
com.l2jfrozen.gameserver.managers.MercTicketManager
com.l2jfrozen.gameserver.managers.MercTicketManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.managers.MercTicketManager: java.util.List _droppedTickets
com.l2jfrozen.gameserver.managers.MercTicketManager: int[] MAX_MERC_PER_TYPE
com.l2jfrozen.gameserver.managers.MercTicketManager: int[] MERCS_MAX_PER_CASTLE
com.l2jfrozen.gameserver.managers.MercTicketManager: int[] ITEM_IDS
com.l2jfrozen.gameserver.managers.MercTicketManager: int[] NPC_IDS
com.l2jfrozen.gameserver.managers.MercTicketManager: com.l2jfrozen.gameserver.managers.MercTicketManager getInstance()
com.l2jfrozen.gameserver.managers.MercTicketManager: MercTicketManager()
com.l2jfrozen.gameserver.managers.MercTicketManager: int getTicketCastleId(int)
com.l2jfrozen.gameserver.managers.MercTicketManager: void reload()
com.l2jfrozen.gameserver.managers.MercTicketManager: void load()
com.l2jfrozen.gameserver.managers.MercTicketManager: boolean isAtTypeLimit(int)
com.l2jfrozen.gameserver.managers.MercTicketManager: boolean isAtCasleLimit(int)
com.l2jfrozen.gameserver.managers.MercTicketManager: int addTicket(int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String[])
com.l2jfrozen.gameserver.managers.MercTicketManager: void spawnMercenary(int,int,int,int,int,java.lang.String[],int)
com.l2jfrozen.gameserver.managers.MercTicketManager: void deleteTickets(int)
com.l2jfrozen.gameserver.managers.MercTicketManager: void removeTicket(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.managers.MercTicketManager: int[] getItemIds()
com.l2jfrozen.gameserver.managers.MercTicketManager: java.util.List getDroppedTickets()
com.l2jfrozen.gameserver.managers.MercTicketManager: void <clinit>()
com.l2jfrozen.gameserver.managers.MercTicketManager$1
com.l2jfrozen.gameserver.managers.MercTicketManager$1: com.l2jfrozen.gameserver.model.actor.instance.L2SiegeGuardInstance val$npc
com.l2jfrozen.gameserver.managers.MercTicketManager$1: com.l2jfrozen.gameserver.managers.MercTicketManager this$0
com.l2jfrozen.gameserver.managers.MercTicketManager$1: MercTicketManager$1(com.l2jfrozen.gameserver.managers.MercTicketManager,com.l2jfrozen.gameserver.model.actor.instance.L2SiegeGuardInstance)
com.l2jfrozen.gameserver.managers.MercTicketManager$1: void run()
com.l2jfrozen.gameserver.managers.MercTicketManager$SingletonHolder
com.l2jfrozen.gameserver.managers.MercTicketManager$SingletonHolder: com.l2jfrozen.gameserver.managers.MercTicketManager _instance
com.l2jfrozen.gameserver.managers.MercTicketManager$SingletonHolder: MercTicketManager$SingletonHolder()
com.l2jfrozen.gameserver.managers.MercTicketManager$SingletonHolder: void <clinit>()
com.l2jfrozen.gameserver.managers.OlympiadStadiaManager
com.l2jfrozen.gameserver.managers.OlympiadStadiaManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.managers.OlympiadStadiaManager: com.l2jfrozen.gameserver.managers.OlympiadStadiaManager _instance
com.l2jfrozen.gameserver.managers.OlympiadStadiaManager: javolution.util.FastList _olympiadStadias
com.l2jfrozen.gameserver.managers.OlympiadStadiaManager: com.l2jfrozen.gameserver.managers.OlympiadStadiaManager getInstance()
com.l2jfrozen.gameserver.managers.OlympiadStadiaManager: OlympiadStadiaManager()
com.l2jfrozen.gameserver.managers.OlympiadStadiaManager: void addStadium(com.l2jfrozen.gameserver.model.zone.type.L2OlympiadStadiumZone)
com.l2jfrozen.gameserver.managers.OlympiadStadiaManager: com.l2jfrozen.gameserver.model.zone.type.L2OlympiadStadiumZone getStadium(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.managers.OlympiadStadiaManager: com.l2jfrozen.gameserver.model.zone.type.L2OlympiadStadiumZone getStadiumByLoc(int,int,int)
com.l2jfrozen.gameserver.managers.OlympiadStadiaManager: com.l2jfrozen.gameserver.model.zone.type.L2OlympiadStadiumZone getOlympiadStadiumById(int)
com.l2jfrozen.gameserver.managers.OlympiadStadiaManager: void <clinit>()
com.l2jfrozen.gameserver.managers.PetitionManager
com.l2jfrozen.gameserver.managers.PetitionManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.managers.PetitionManager: com.l2jfrozen.gameserver.managers.PetitionManager _instance
com.l2jfrozen.gameserver.managers.PetitionManager: java.util.Map _pendingPetitions
com.l2jfrozen.gameserver.managers.PetitionManager: java.util.Map _completedPetitions
com.l2jfrozen.gameserver.managers.PetitionManager: com.l2jfrozen.gameserver.managers.PetitionManager getInstance()
com.l2jfrozen.gameserver.managers.PetitionManager: PetitionManager()
com.l2jfrozen.gameserver.managers.PetitionManager: void clearCompletedPetitions()
com.l2jfrozen.gameserver.managers.PetitionManager: void clearPendingPetitions()
com.l2jfrozen.gameserver.managers.PetitionManager: boolean acceptPetition(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.managers.PetitionManager: boolean cancelActivePetition(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.managers.PetitionManager: void checkPetitionMessages(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.managers.PetitionManager: boolean endActivePetition(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.managers.PetitionManager: java.util.Map getCompletedPetitions()
com.l2jfrozen.gameserver.managers.PetitionManager: java.util.Map getPendingPetitions()
com.l2jfrozen.gameserver.managers.PetitionManager: int getPendingPetitionCount()
com.l2jfrozen.gameserver.managers.PetitionManager: int getPlayerTotalPetitionCount(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.managers.PetitionManager: boolean isPetitionInProcess()
com.l2jfrozen.gameserver.managers.PetitionManager: boolean isPetitionInProcess(int)
com.l2jfrozen.gameserver.managers.PetitionManager: boolean isPlayerInConsultation(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.managers.PetitionManager: boolean isPetitioningAllowed()
com.l2jfrozen.gameserver.managers.PetitionManager: boolean isPlayerPetitionPending(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.managers.PetitionManager: boolean isValidPetition(int)
com.l2jfrozen.gameserver.managers.PetitionManager: boolean rejectPetition(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.managers.PetitionManager: boolean sendActivePetitionMessage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.managers.PetitionManager: void sendPendingPetitionList(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.managers.PetitionManager: int submitPetition(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String,int)
com.l2jfrozen.gameserver.managers.PetitionManager: void viewPetition(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.managers.PetitionManager: void <clinit>()
com.l2jfrozen.gameserver.managers.PetitionManager$Petition
com.l2jfrozen.gameserver.managers.PetitionManager$Petition: long _submitTime
com.l2jfrozen.gameserver.managers.PetitionManager$Petition: int _id
com.l2jfrozen.gameserver.managers.PetitionManager$Petition: com.l2jfrozen.gameserver.managers.PetitionType _type
com.l2jfrozen.gameserver.managers.PetitionManager$Petition: com.l2jfrozen.gameserver.managers.PetitionState _state
com.l2jfrozen.gameserver.managers.PetitionManager$Petition: java.lang.String _content
com.l2jfrozen.gameserver.managers.PetitionManager$Petition: java.util.List _messageLogger
com.l2jfrozen.gameserver.managers.PetitionManager$Petition: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _petitioner
com.l2jfrozen.gameserver.managers.PetitionManager$Petition: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _responder
com.l2jfrozen.gameserver.managers.PetitionManager$Petition: com.l2jfrozen.gameserver.managers.PetitionManager this$0
com.l2jfrozen.gameserver.managers.PetitionManager$Petition: PetitionManager$Petition(com.l2jfrozen.gameserver.managers.PetitionManager,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String,int)
com.l2jfrozen.gameserver.managers.PetitionManager$Petition: boolean addLogMessage(com.l2jfrozen.gameserver.network.serverpackets.CreatureSay)
com.l2jfrozen.gameserver.managers.PetitionManager$Petition: java.util.List getLogMessages()
com.l2jfrozen.gameserver.managers.PetitionManager$Petition: boolean endPetitionConsultation(com.l2jfrozen.gameserver.managers.PetitionState)
com.l2jfrozen.gameserver.managers.PetitionManager$Petition: java.lang.String getContent()
com.l2jfrozen.gameserver.managers.PetitionManager$Petition: int getId()
com.l2jfrozen.gameserver.managers.PetitionManager$Petition: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getPetitioner()
com.l2jfrozen.gameserver.managers.PetitionManager$Petition: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getResponder()
com.l2jfrozen.gameserver.managers.PetitionManager$Petition: long getSubmitTime()
com.l2jfrozen.gameserver.managers.PetitionManager$Petition: com.l2jfrozen.gameserver.managers.PetitionState getState()
com.l2jfrozen.gameserver.managers.PetitionManager$Petition: java.lang.String getTypeAsString()
com.l2jfrozen.gameserver.managers.PetitionManager$Petition: void sendPetitionerPacket(com.l2jfrozen.gameserver.network.serverpackets.L2GameServerPacket)
com.l2jfrozen.gameserver.managers.PetitionManager$Petition: void sendResponderPacket(com.l2jfrozen.gameserver.network.serverpackets.L2GameServerPacket)
com.l2jfrozen.gameserver.managers.PetitionManager$Petition: void setState(com.l2jfrozen.gameserver.managers.PetitionState)
com.l2jfrozen.gameserver.managers.PetitionManager$Petition: void setResponder(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.managers.PetitionState
com.l2jfrozen.gameserver.managers.PetitionState: com.l2jfrozen.gameserver.managers.PetitionState Pending
com.l2jfrozen.gameserver.managers.PetitionState: com.l2jfrozen.gameserver.managers.PetitionState Responder_Cancel
com.l2jfrozen.gameserver.managers.PetitionState: com.l2jfrozen.gameserver.managers.PetitionState Responder_Missing
com.l2jfrozen.gameserver.managers.PetitionState: com.l2jfrozen.gameserver.managers.PetitionState Responder_Reject
com.l2jfrozen.gameserver.managers.PetitionState: com.l2jfrozen.gameserver.managers.PetitionState Responder_Complete
com.l2jfrozen.gameserver.managers.PetitionState: com.l2jfrozen.gameserver.managers.PetitionState Petitioner_Cancel
com.l2jfrozen.gameserver.managers.PetitionState: com.l2jfrozen.gameserver.managers.PetitionState Petitioner_Missing
com.l2jfrozen.gameserver.managers.PetitionState: com.l2jfrozen.gameserver.managers.PetitionState In_Process
com.l2jfrozen.gameserver.managers.PetitionState: com.l2jfrozen.gameserver.managers.PetitionState Completed
com.l2jfrozen.gameserver.managers.PetitionState: com.l2jfrozen.gameserver.managers.PetitionState[] $VALUES
com.l2jfrozen.gameserver.managers.PetitionState: com.l2jfrozen.gameserver.managers.PetitionState[] values()
com.l2jfrozen.gameserver.managers.PetitionState: com.l2jfrozen.gameserver.managers.PetitionState valueOf(java.lang.String)
com.l2jfrozen.gameserver.managers.PetitionState: PetitionState(java.lang.String,int)
com.l2jfrozen.gameserver.managers.PetitionState: void <clinit>()
com.l2jfrozen.gameserver.managers.PetitionType
com.l2jfrozen.gameserver.managers.PetitionType: com.l2jfrozen.gameserver.managers.PetitionType Immobility
com.l2jfrozen.gameserver.managers.PetitionType: com.l2jfrozen.gameserver.managers.PetitionType Recovery_Related
com.l2jfrozen.gameserver.managers.PetitionType: com.l2jfrozen.gameserver.managers.PetitionType Bug_Report
com.l2jfrozen.gameserver.managers.PetitionType: com.l2jfrozen.gameserver.managers.PetitionType Quest_Related
com.l2jfrozen.gameserver.managers.PetitionType: com.l2jfrozen.gameserver.managers.PetitionType Bad_User
com.l2jfrozen.gameserver.managers.PetitionType: com.l2jfrozen.gameserver.managers.PetitionType Suggestions
com.l2jfrozen.gameserver.managers.PetitionType: com.l2jfrozen.gameserver.managers.PetitionType Game_Tip
com.l2jfrozen.gameserver.managers.PetitionType: com.l2jfrozen.gameserver.managers.PetitionType Operation_Related
com.l2jfrozen.gameserver.managers.PetitionType: com.l2jfrozen.gameserver.managers.PetitionType Other
com.l2jfrozen.gameserver.managers.PetitionType: com.l2jfrozen.gameserver.managers.PetitionType[] $VALUES
com.l2jfrozen.gameserver.managers.PetitionType: com.l2jfrozen.gameserver.managers.PetitionType[] values()
com.l2jfrozen.gameserver.managers.PetitionType: com.l2jfrozen.gameserver.managers.PetitionType valueOf(java.lang.String)
com.l2jfrozen.gameserver.managers.PetitionType: PetitionType(java.lang.String,int)
com.l2jfrozen.gameserver.managers.PetitionType: void <clinit>()
com.l2jfrozen.gameserver.managers.QuestManager
com.l2jfrozen.gameserver.managers.QuestManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.managers.QuestManager: java.util.Map _quests
com.l2jfrozen.gameserver.managers.QuestManager: com.l2jfrozen.gameserver.managers.QuestManager _instance
com.l2jfrozen.gameserver.managers.QuestManager: com.l2jfrozen.gameserver.managers.QuestManager getInstance()
com.l2jfrozen.gameserver.managers.QuestManager: QuestManager()
com.l2jfrozen.gameserver.managers.QuestManager: boolean reload(java.lang.String)
com.l2jfrozen.gameserver.managers.QuestManager: boolean reload(int)
com.l2jfrozen.gameserver.managers.QuestManager: void reloadAllQuests()
com.l2jfrozen.gameserver.managers.QuestManager: void report()
com.l2jfrozen.gameserver.managers.QuestManager: void save()
com.l2jfrozen.gameserver.managers.QuestManager: com.l2jfrozen.gameserver.model.quest.Quest getQuest(java.lang.String)
com.l2jfrozen.gameserver.managers.QuestManager: com.l2jfrozen.gameserver.model.quest.Quest getQuest(int)
com.l2jfrozen.gameserver.managers.QuestManager: void addQuest(com.l2jfrozen.gameserver.model.quest.Quest)
com.l2jfrozen.gameserver.managers.QuestManager: javolution.util.FastMap getQuests()
com.l2jfrozen.gameserver.managers.QuestManager: void reload()
com.l2jfrozen.gameserver.managers.QuestManager: java.lang.Iterable getAllManagedScripts()
com.l2jfrozen.gameserver.managers.QuestManager: boolean unload(com.l2jfrozen.gameserver.model.quest.Quest)
com.l2jfrozen.gameserver.managers.QuestManager: java.lang.String getScriptManagerName()
com.l2jfrozen.gameserver.managers.QuestManager: boolean removeQuest(com.l2jfrozen.gameserver.model.quest.Quest)
com.l2jfrozen.gameserver.managers.QuestManager: void unloadAllQuests()
com.l2jfrozen.gameserver.managers.QuestManager: boolean unload(com.l2jfrozen.gameserver.scripting.ManagedScript)
com.l2jfrozen.gameserver.managers.QuestManager: void <clinit>()
com.l2jfrozen.gameserver.managers.RaidBossPointsManager
com.l2jfrozen.gameserver.managers.RaidBossPointsManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.managers.RaidBossPointsManager: javolution.util.FastMap _list
com.l2jfrozen.gameserver.managers.RaidBossPointsManager: java.util.Comparator _comparator
com.l2jfrozen.gameserver.managers.RaidBossPointsManager: RaidBossPointsManager()
com.l2jfrozen.gameserver.managers.RaidBossPointsManager: void init()
com.l2jfrozen.gameserver.managers.RaidBossPointsManager: void updatePointsInDB(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int)
com.l2jfrozen.gameserver.managers.RaidBossPointsManager: void addPoints(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int)
com.l2jfrozen.gameserver.managers.RaidBossPointsManager: int getPointsByOwnerId(int)
com.l2jfrozen.gameserver.managers.RaidBossPointsManager: java.util.Map getList(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.managers.RaidBossPointsManager: void cleanUp()
com.l2jfrozen.gameserver.managers.RaidBossPointsManager: int calculateRanking(int)
com.l2jfrozen.gameserver.managers.RaidBossPointsManager: java.util.Map getRankList()
com.l2jfrozen.gameserver.managers.RaidBossPointsManager: void <clinit>()
com.l2jfrozen.gameserver.managers.RaidBossPointsManager$1
com.l2jfrozen.gameserver.managers.RaidBossPointsManager$1: RaidBossPointsManager$1()
com.l2jfrozen.gameserver.managers.RaidBossPointsManager$1: int compare(java.util.Map$Entry,java.util.Map$Entry)
com.l2jfrozen.gameserver.managers.RaidBossPointsManager$1: int compare(java.lang.Object,java.lang.Object)
com.l2jfrozen.gameserver.managers.RaidBossSpawnManager
com.l2jfrozen.gameserver.managers.RaidBossSpawnManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.managers.RaidBossSpawnManager: java.util.Map _bosses
com.l2jfrozen.gameserver.managers.RaidBossSpawnManager: java.util.Map _spawns
com.l2jfrozen.gameserver.managers.RaidBossSpawnManager: java.util.Map _storedInfo
com.l2jfrozen.gameserver.managers.RaidBossSpawnManager: java.util.Map _schedules
com.l2jfrozen.gameserver.managers.RaidBossSpawnManager: RaidBossSpawnManager()
com.l2jfrozen.gameserver.managers.RaidBossSpawnManager: com.l2jfrozen.gameserver.managers.RaidBossSpawnManager getInstance()
com.l2jfrozen.gameserver.managers.RaidBossSpawnManager: void init()
com.l2jfrozen.gameserver.managers.RaidBossSpawnManager: void updateStatus(com.l2jfrozen.gameserver.model.actor.instance.L2RaidBossInstance,boolean)
com.l2jfrozen.gameserver.managers.RaidBossSpawnManager: void addNewSpawn(com.l2jfrozen.gameserver.model.spawn.L2Spawn,long,double,double,boolean)
com.l2jfrozen.gameserver.managers.RaidBossSpawnManager: void deleteSpawn(com.l2jfrozen.gameserver.model.spawn.L2Spawn,boolean)
com.l2jfrozen.gameserver.managers.RaidBossSpawnManager: void updateDb()
com.l2jfrozen.gameserver.managers.RaidBossSpawnManager: java.lang.String[] getAllRaidBossStatus()
com.l2jfrozen.gameserver.managers.RaidBossSpawnManager: java.lang.String getRaidBossStatus(int)
com.l2jfrozen.gameserver.managers.RaidBossSpawnManager: com.l2jfrozen.gameserver.managers.StatusEnum getRaidBossStatusId(int)
com.l2jfrozen.gameserver.managers.RaidBossSpawnManager: com.l2jfrozen.gameserver.templates.L2NpcTemplate getValidTemplate(int)
com.l2jfrozen.gameserver.managers.RaidBossSpawnManager: void notifySpawnNightBoss(com.l2jfrozen.gameserver.model.actor.instance.L2RaidBossInstance)
com.l2jfrozen.gameserver.managers.RaidBossSpawnManager: boolean isDefined(int)
com.l2jfrozen.gameserver.managers.RaidBossSpawnManager: java.util.Map getBosses()
com.l2jfrozen.gameserver.managers.RaidBossSpawnManager: java.util.Map getSpawns()
com.l2jfrozen.gameserver.managers.RaidBossSpawnManager: void reloadBosses()
com.l2jfrozen.gameserver.managers.RaidBossSpawnManager: void cleanUp()
com.l2jfrozen.gameserver.managers.RaidBossSpawnManager: com.l2jfrozen.gameserver.templates.StatsSet getStatsSet(int)
com.l2jfrozen.gameserver.managers.RaidBossSpawnManager: com.l2jfrozen.gameserver.model.actor.instance.L2RaidBossInstance getBoss(int)
com.l2jfrozen.gameserver.managers.RaidBossSpawnManager: void access$000(com.l2jfrozen.gameserver.managers.RaidBossSpawnManager)
com.l2jfrozen.gameserver.managers.RaidBossSpawnManager: void <clinit>()
com.l2jfrozen.gameserver.managers.RaidBossSpawnManager$SingletonHolder
com.l2jfrozen.gameserver.managers.RaidBossSpawnManager$SingletonHolder: com.l2jfrozen.gameserver.managers.RaidBossSpawnManager _instance
com.l2jfrozen.gameserver.managers.RaidBossSpawnManager$SingletonHolder: RaidBossSpawnManager$SingletonHolder()
com.l2jfrozen.gameserver.managers.RaidBossSpawnManager$SingletonHolder: void <clinit>()
com.l2jfrozen.gameserver.managers.RaidBossSpawnManager$spawnSchedule
com.l2jfrozen.gameserver.managers.RaidBossSpawnManager$spawnSchedule: int bossId
com.l2jfrozen.gameserver.managers.RaidBossSpawnManager$spawnSchedule: com.l2jfrozen.gameserver.managers.RaidBossSpawnManager this$0
com.l2jfrozen.gameserver.managers.RaidBossSpawnManager$spawnSchedule: RaidBossSpawnManager$spawnSchedule(com.l2jfrozen.gameserver.managers.RaidBossSpawnManager,int)
com.l2jfrozen.gameserver.managers.RaidBossSpawnManager$spawnSchedule: void run()
com.l2jfrozen.gameserver.managers.SiegeGuardManager
com.l2jfrozen.gameserver.managers.SiegeGuardManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.managers.SiegeGuardManager: com.l2jfrozen.gameserver.model.entity.siege.Castle _castle
com.l2jfrozen.gameserver.managers.SiegeGuardManager: java.util.List _siegeGuardSpawn
com.l2jfrozen.gameserver.managers.SiegeGuardManager: SiegeGuardManager(com.l2jfrozen.gameserver.model.entity.siege.Castle)
com.l2jfrozen.gameserver.managers.SiegeGuardManager: void addSiegeGuard(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.managers.SiegeGuardManager: void addSiegeGuard(int,int,int,int,int)
com.l2jfrozen.gameserver.managers.SiegeGuardManager: void hireMerc(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.managers.SiegeGuardManager: void hireMerc(int,int,int,int,int)
com.l2jfrozen.gameserver.managers.SiegeGuardManager: void removeMerc(int,int,int,int)
com.l2jfrozen.gameserver.managers.SiegeGuardManager: void removeMercs()
com.l2jfrozen.gameserver.managers.SiegeGuardManager: void spawnSiegeGuard()
com.l2jfrozen.gameserver.managers.SiegeGuardManager: void unspawnSiegeGuard()
com.l2jfrozen.gameserver.managers.SiegeGuardManager: void loadSiegeGuard()
com.l2jfrozen.gameserver.managers.SiegeGuardManager: void saveSiegeGuard(int,int,int,int,int,int)
com.l2jfrozen.gameserver.managers.SiegeGuardManager: com.l2jfrozen.gameserver.model.entity.siege.Castle getCastle()
com.l2jfrozen.gameserver.managers.SiegeGuardManager: java.util.List getSiegeGuardSpawn()
com.l2jfrozen.gameserver.managers.SiegeGuardManager: void <clinit>()
com.l2jfrozen.gameserver.managers.SiegeManager
com.l2jfrozen.gameserver.managers.SiegeManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.managers.SiegeManager: int _attackerMaxClans
com.l2jfrozen.gameserver.managers.SiegeManager: int _attackerRespawnDelay
com.l2jfrozen.gameserver.managers.SiegeManager: int _defenderMaxClans
com.l2jfrozen.gameserver.managers.SiegeManager: int _defenderRespawnDelay
com.l2jfrozen.gameserver.managers.SiegeManager: javolution.util.FastMap _artefactSpawnList
com.l2jfrozen.gameserver.managers.SiegeManager: javolution.util.FastMap _controlTowerSpawnList
com.l2jfrozen.gameserver.managers.SiegeManager: int _controlTowerLosePenalty
com.l2jfrozen.gameserver.managers.SiegeManager: int _flagMaxCount
com.l2jfrozen.gameserver.managers.SiegeManager: int _siegeClanMinLevel
com.l2jfrozen.gameserver.managers.SiegeManager: int _siegeLength
com.l2jfrozen.gameserver.managers.SiegeManager: boolean _teleport_to_siege
com.l2jfrozen.gameserver.managers.SiegeManager: boolean _teleport_to_siege_town
com.l2jfrozen.gameserver.managers.SiegeManager: com.l2jfrozen.gameserver.managers.SiegeManager getInstance()
com.l2jfrozen.gameserver.managers.SiegeManager: SiegeManager()
com.l2jfrozen.gameserver.managers.SiegeManager: void addSiegeSkills(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.managers.SiegeManager: boolean checkIfOkToSummon(com.l2jfrozen.gameserver.model.L2Character,boolean)
com.l2jfrozen.gameserver.managers.SiegeManager: boolean checkIsRegisteredInSiege(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.managers.SiegeManager: boolean checkIsRegistered(com.l2jfrozen.gameserver.model.L2Clan,int)
com.l2jfrozen.gameserver.managers.SiegeManager: void removeSiegeSkills(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.managers.SiegeManager: void load()
com.l2jfrozen.gameserver.managers.SiegeManager: javolution.util.FastList getArtefactSpawnList(int)
com.l2jfrozen.gameserver.managers.SiegeManager: javolution.util.FastList getControlTowerSpawnList(int)
com.l2jfrozen.gameserver.managers.SiegeManager: int getAttackerMaxClans()
com.l2jfrozen.gameserver.managers.SiegeManager: int getAttackerRespawnDelay()
com.l2jfrozen.gameserver.managers.SiegeManager: int getControlTowerLosePenalty()
com.l2jfrozen.gameserver.managers.SiegeManager: int getDefenderMaxClans()
com.l2jfrozen.gameserver.managers.SiegeManager: int getDefenderRespawnDelay()
com.l2jfrozen.gameserver.managers.SiegeManager: int getFlagMaxCount()
com.l2jfrozen.gameserver.managers.SiegeManager: com.l2jfrozen.gameserver.model.entity.siege.Siege getSiege(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.managers.SiegeManager: com.l2jfrozen.gameserver.model.entity.siege.Siege getSiege(int,int,int)
com.l2jfrozen.gameserver.managers.SiegeManager: int getSiegeClanMinLevel()
com.l2jfrozen.gameserver.managers.SiegeManager: int getSiegeLength()
com.l2jfrozen.gameserver.managers.SiegeManager: java.util.List getSieges()
com.l2jfrozen.gameserver.managers.SiegeManager: boolean is_teleport_to_siege_allowed()
com.l2jfrozen.gameserver.managers.SiegeManager: boolean is_teleport_to_siege_town_allowed()
com.l2jfrozen.gameserver.managers.SiegeManager: SiegeManager(com.l2jfrozen.gameserver.managers.SiegeManager$1)
com.l2jfrozen.gameserver.managers.SiegeManager: void <clinit>()
com.l2jfrozen.gameserver.managers.SiegeManager$1
com.l2jfrozen.gameserver.managers.SiegeManager$SiegeSpawn
com.l2jfrozen.gameserver.managers.SiegeManager$SiegeSpawn: com.l2jfrozen.gameserver.model.Location _location
com.l2jfrozen.gameserver.managers.SiegeManager$SiegeSpawn: int _npcId
com.l2jfrozen.gameserver.managers.SiegeManager$SiegeSpawn: int _heading
com.l2jfrozen.gameserver.managers.SiegeManager$SiegeSpawn: int _castleId
com.l2jfrozen.gameserver.managers.SiegeManager$SiegeSpawn: int _hp
com.l2jfrozen.gameserver.managers.SiegeManager$SiegeSpawn: com.l2jfrozen.gameserver.managers.SiegeManager this$0
com.l2jfrozen.gameserver.managers.SiegeManager$SiegeSpawn: SiegeManager$SiegeSpawn(com.l2jfrozen.gameserver.managers.SiegeManager,int,int,int,int,int,int)
com.l2jfrozen.gameserver.managers.SiegeManager$SiegeSpawn: SiegeManager$SiegeSpawn(com.l2jfrozen.gameserver.managers.SiegeManager,int,int,int,int,int,int,int)
com.l2jfrozen.gameserver.managers.SiegeManager$SiegeSpawn: int getCastleId()
com.l2jfrozen.gameserver.managers.SiegeManager$SiegeSpawn: int getNpcId()
com.l2jfrozen.gameserver.managers.SiegeManager$SiegeSpawn: int getHeading()
com.l2jfrozen.gameserver.managers.SiegeManager$SiegeSpawn: int getHp()
com.l2jfrozen.gameserver.managers.SiegeManager$SiegeSpawn: com.l2jfrozen.gameserver.model.Location getLocation()
com.l2jfrozen.gameserver.managers.SiegeManager$SingletonHolder
com.l2jfrozen.gameserver.managers.SiegeManager$SingletonHolder: com.l2jfrozen.gameserver.managers.SiegeManager _instance
com.l2jfrozen.gameserver.managers.SiegeManager$SingletonHolder: SiegeManager$SingletonHolder()
com.l2jfrozen.gameserver.managers.SiegeManager$SingletonHolder: void <clinit>()
com.l2jfrozen.gameserver.managers.StatusEnum
com.l2jfrozen.gameserver.managers.StatusEnum: com.l2jfrozen.gameserver.managers.StatusEnum ALIVE
com.l2jfrozen.gameserver.managers.StatusEnum: com.l2jfrozen.gameserver.managers.StatusEnum DEAD
com.l2jfrozen.gameserver.managers.StatusEnum: com.l2jfrozen.gameserver.managers.StatusEnum UNDEFINED
com.l2jfrozen.gameserver.managers.StatusEnum: com.l2jfrozen.gameserver.managers.StatusEnum[] $VALUES
com.l2jfrozen.gameserver.managers.StatusEnum: com.l2jfrozen.gameserver.managers.StatusEnum[] values()
com.l2jfrozen.gameserver.managers.StatusEnum: com.l2jfrozen.gameserver.managers.StatusEnum valueOf(java.lang.String)
com.l2jfrozen.gameserver.managers.StatusEnum: StatusEnum(java.lang.String,int)
com.l2jfrozen.gameserver.managers.StatusEnum: void <clinit>()
com.l2jfrozen.gameserver.managers.TownManager
com.l2jfrozen.gameserver.managers.TownManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.managers.TownManager: com.l2jfrozen.gameserver.managers.TownManager _instance
com.l2jfrozen.gameserver.managers.TownManager: javolution.util.FastList _towns
com.l2jfrozen.gameserver.managers.TownManager: com.l2jfrozen.gameserver.managers.TownManager getInstance()
com.l2jfrozen.gameserver.managers.TownManager: TownManager()
com.l2jfrozen.gameserver.managers.TownManager: void addTown(com.l2jfrozen.gameserver.model.zone.type.L2TownZone)
com.l2jfrozen.gameserver.managers.TownManager: com.l2jfrozen.gameserver.model.zone.type.L2TownZone getClosestTown(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.managers.TownManager: int getClosestLocation(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.managers.TownManager: boolean townHasCastleInSiege(int)
com.l2jfrozen.gameserver.managers.TownManager: boolean townHasCastleInSiege(int,int)
com.l2jfrozen.gameserver.managers.TownManager: com.l2jfrozen.gameserver.model.zone.type.L2TownZone getTown(int)
com.l2jfrozen.gameserver.managers.TownManager: com.l2jfrozen.gameserver.model.zone.type.L2TownZone getTown(int,int,int)
com.l2jfrozen.gameserver.managers.TownManager: void <clinit>()
com.l2jfrozen.gameserver.model.BlockList
com.l2jfrozen.gameserver.model.BlockList: java.util.Set _blockSet
com.l2jfrozen.gameserver.model.BlockList: boolean _blockAll
com.l2jfrozen.gameserver.model.BlockList: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _owner
com.l2jfrozen.gameserver.model.BlockList: BlockList(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.BlockList: void addToBlockList(java.lang.String)
com.l2jfrozen.gameserver.model.BlockList: void removeFromBlockList(java.lang.String)
com.l2jfrozen.gameserver.model.BlockList: boolean isInBlockList(java.lang.String)
com.l2jfrozen.gameserver.model.BlockList: boolean isBlockAll()
com.l2jfrozen.gameserver.model.BlockList: void setBlockAll(boolean)
com.l2jfrozen.gameserver.model.BlockList: java.util.Set getBlockList()
com.l2jfrozen.gameserver.model.ChanceCondition
com.l2jfrozen.gameserver.model.ChanceCondition: int EVT_HIT
com.l2jfrozen.gameserver.model.ChanceCondition: int EVT_CRIT
com.l2jfrozen.gameserver.model.ChanceCondition: int EVT_CAST
com.l2jfrozen.gameserver.model.ChanceCondition: int EVT_PHYSICAL
com.l2jfrozen.gameserver.model.ChanceCondition: int EVT_MAGIC
com.l2jfrozen.gameserver.model.ChanceCondition: int EVT_MAGIC_GOOD
com.l2jfrozen.gameserver.model.ChanceCondition: int EVT_MAGIC_OFFENSIVE
com.l2jfrozen.gameserver.model.ChanceCondition: int EVT_ATTACKED
com.l2jfrozen.gameserver.model.ChanceCondition: int EVT_ATTACKED_HIT
com.l2jfrozen.gameserver.model.ChanceCondition: int EVT_ATTACKED_CRIT
com.l2jfrozen.gameserver.model.ChanceCondition: int EVT_HIT_BY_SKILL
com.l2jfrozen.gameserver.model.ChanceCondition: int EVT_HIT_BY_OFFENSIVE_SKILL
com.l2jfrozen.gameserver.model.ChanceCondition: int EVT_HIT_BY_GOOD_MAGIC
com.l2jfrozen.gameserver.model.ChanceCondition: com.l2jfrozen.gameserver.model.TriggerType _triggerType
com.l2jfrozen.gameserver.model.ChanceCondition: int _chance
com.l2jfrozen.gameserver.model.ChanceCondition: ChanceCondition(com.l2jfrozen.gameserver.model.TriggerType,int)
com.l2jfrozen.gameserver.model.ChanceCondition: com.l2jfrozen.gameserver.model.ChanceCondition parse(com.l2jfrozen.gameserver.templates.StatsSet)
com.l2jfrozen.gameserver.model.ChanceCondition: boolean trigger(int)
com.l2jfrozen.gameserver.model.ChanceCondition: java.lang.String toString()
com.l2jfrozen.gameserver.model.ChanceSkillList
com.l2jfrozen.gameserver.model.ChanceSkillList: long serialVersionUID
com.l2jfrozen.gameserver.model.ChanceSkillList: com.l2jfrozen.gameserver.model.L2Character _owner
com.l2jfrozen.gameserver.model.ChanceSkillList: ChanceSkillList(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.ChanceSkillList: com.l2jfrozen.gameserver.model.L2Character getOwner()
com.l2jfrozen.gameserver.model.ChanceSkillList: void setOwner(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.ChanceSkillList: void onHit(com.l2jfrozen.gameserver.model.L2Character,boolean,boolean)
com.l2jfrozen.gameserver.model.ChanceSkillList: void onSkillHit(com.l2jfrozen.gameserver.model.L2Character,boolean,boolean,boolean)
com.l2jfrozen.gameserver.model.ChanceSkillList: boolean canTriggerByCast(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.ChanceSkillList: void onEvent(int,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.ChanceSkillList: void makeCast(com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.ChanceSkillList$1
com.l2jfrozen.gameserver.model.ChanceSkillList$1: int[] $SwitchMap$com$l2jfrozen$gameserver$model$SkillType
com.l2jfrozen.gameserver.model.ChanceSkillList$1: void <clinit>()
com.l2jfrozen.gameserver.model.CharSelectInfoPackage
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: java.lang.String _name
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int _objectId
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int _charId
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: long _exp
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int _sp
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int _clanId
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int _race
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int _classId
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int _baseClassId
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: long _deleteTimer
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: long _lastAccess
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int _face
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int _hairStyle
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int _hairColor
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int _sex
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int _level
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int _maxHp
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: double _currentHp
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int _maxMp
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: double _currentMp
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int[][] _paperdoll
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int _karma
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int _augmentationId
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int _accessLevel
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: CharSelectInfoPackage(int,java.lang.String)
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int getObjectId()
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: void setObjectId(int)
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int getCharId()
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: void setCharId(int)
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int getClanId()
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: void setClanId(int)
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int getClassId()
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int getBaseClassId()
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: void setClassId(int)
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: void setBaseClassId(int)
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: double getCurrentHp()
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: void setCurrentHp(double)
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: double getCurrentMp()
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: void setCurrentMp(double)
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: long getDeleteTimer()
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: void setDeleteTimer(long)
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: long getLastAccess()
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: void setLastAccess(long)
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: long getExp()
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: void setExp(long)
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int getFace()
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: void setFace(int)
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int getHairColor()
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: void setHairColor(int)
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int getHairStyle()
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: void setHairStyle(int)
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int getPaperdollObjectId(int)
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int getPaperdollItemId(int)
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int getLevel()
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: void setLevel(int)
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int getMaxHp()
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: void setMaxHp(int)
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int getMaxMp()
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: void setMaxMp(int)
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: java.lang.String getName()
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: void setName(java.lang.String)
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int getRace()
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: void setRace(int)
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int getSex()
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: void setSex(int)
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int getSp()
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: void setSp(int)
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int getEnchantEffect()
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: void setKarma(int)
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int getKarma()
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: void setAugmentationId(int)
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int getAugmentationId()
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: int getAccessLevel()
com.l2jfrozen.gameserver.model.CharSelectInfoPackage: void setAccessLevel(int)
com.l2jfrozen.gameserver.model.ClanWarehouse
com.l2jfrozen.gameserver.model.ClanWarehouse: com.l2jfrozen.gameserver.model.L2Clan _clan
com.l2jfrozen.gameserver.model.ClanWarehouse: ClanWarehouse(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.ClanWarehouse: int getOwnerId()
com.l2jfrozen.gameserver.model.ClanWarehouse: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getOwner()
com.l2jfrozen.gameserver.model.ClanWarehouse: com.l2jfrozen.gameserver.model.actor.instance.ItemLocation getBaseLocation()
com.l2jfrozen.gameserver.model.ClanWarehouse: java.lang.String getLocationId()
com.l2jfrozen.gameserver.model.ClanWarehouse: int getLocationId(boolean)
com.l2jfrozen.gameserver.model.ClanWarehouse: void setLocationId(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.ClanWarehouse: boolean validateCapacity(int)
com.l2jfrozen.gameserver.model.ClanWarehouse: com.l2jfrozen.gameserver.model.L2Character getOwner()
com.l2jfrozen.gameserver.model.CombatFlag
com.l2jfrozen.gameserver.model.CombatFlag: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _player
com.l2jfrozen.gameserver.model.CombatFlag: int playerId
com.l2jfrozen.gameserver.model.CombatFlag: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance _item
com.l2jfrozen.gameserver.model.CombatFlag: com.l2jfrozen.gameserver.model.Location _location
com.l2jfrozen.gameserver.model.CombatFlag: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance itemInstance
com.l2jfrozen.gameserver.model.CombatFlag: int _itemId
com.l2jfrozen.gameserver.model.CombatFlag: CombatFlag(int,int,int,int,int)
com.l2jfrozen.gameserver.model.CombatFlag: void spawnMe()
com.l2jfrozen.gameserver.model.CombatFlag: void unSpawnMe()
com.l2jfrozen.gameserver.model.CombatFlag: void activate(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.CombatFlag: void dropIt()
com.l2jfrozen.gameserver.model.CombatFlag: void giveSkill()
com.l2jfrozen.gameserver.model.CombatFlag: void removeSkill()
com.l2jfrozen.gameserver.model.CursedWeapon
com.l2jfrozen.gameserver.model.CursedWeapon: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.CursedWeapon: java.lang.String _name
com.l2jfrozen.gameserver.model.CursedWeapon: int _itemId
com.l2jfrozen.gameserver.model.CursedWeapon: int _skillId
com.l2jfrozen.gameserver.model.CursedWeapon: int _skillMaxLevel
com.l2jfrozen.gameserver.model.CursedWeapon: int _dropRate
com.l2jfrozen.gameserver.model.CursedWeapon: int _duration
com.l2jfrozen.gameserver.model.CursedWeapon: int _durationLost
com.l2jfrozen.gameserver.model.CursedWeapon: int _disapearChance
com.l2jfrozen.gameserver.model.CursedWeapon: int _stageKills
com.l2jfrozen.gameserver.model.CursedWeapon: boolean _isDropped
com.l2jfrozen.gameserver.model.CursedWeapon: boolean _isActivated
com.l2jfrozen.gameserver.model.CursedWeapon: java.util.concurrent.ScheduledFuture _removeTask
com.l2jfrozen.gameserver.model.CursedWeapon: int _nbKills
com.l2jfrozen.gameserver.model.CursedWeapon: long _endTime
com.l2jfrozen.gameserver.model.CursedWeapon: int _playerId
com.l2jfrozen.gameserver.model.CursedWeapon: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _player
com.l2jfrozen.gameserver.model.CursedWeapon: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance _item
com.l2jfrozen.gameserver.model.CursedWeapon: int _playerKarma
com.l2jfrozen.gameserver.model.CursedWeapon: int _playerPkKills
com.l2jfrozen.gameserver.model.CursedWeapon: CursedWeapon(int,int,java.lang.String)
com.l2jfrozen.gameserver.model.CursedWeapon: void endOfLife()
com.l2jfrozen.gameserver.model.CursedWeapon: void cancelTask()
com.l2jfrozen.gameserver.model.CursedWeapon: void dropIt(com.l2jfrozen.gameserver.model.L2Attackable,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.CursedWeapon: void dropIt(com.l2jfrozen.gameserver.model.L2Attackable,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Character,boolean)
com.l2jfrozen.gameserver.model.CursedWeapon: void giveSkill()
com.l2jfrozen.gameserver.model.CursedWeapon: void removeSkill()
com.l2jfrozen.gameserver.model.CursedWeapon: void reActivate()
com.l2jfrozen.gameserver.model.CursedWeapon: boolean checkDrop(com.l2jfrozen.gameserver.model.L2Attackable,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.CursedWeapon: void activate(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.CursedWeapon: void saveData()
com.l2jfrozen.gameserver.model.CursedWeapon: void dropIt(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.CursedWeapon: void increaseKills()
com.l2jfrozen.gameserver.model.CursedWeapon: void setDisapearChance(int)
com.l2jfrozen.gameserver.model.CursedWeapon: void setDropRate(int)
com.l2jfrozen.gameserver.model.CursedWeapon: void setDuration(int)
com.l2jfrozen.gameserver.model.CursedWeapon: void setDurationLost(int)
com.l2jfrozen.gameserver.model.CursedWeapon: void setStageKills(int)
com.l2jfrozen.gameserver.model.CursedWeapon: void setNbKills(int)
com.l2jfrozen.gameserver.model.CursedWeapon: void setPlayerId(int)
com.l2jfrozen.gameserver.model.CursedWeapon: void setPlayerKarma(int)
com.l2jfrozen.gameserver.model.CursedWeapon: void setPlayerPkKills(int)
com.l2jfrozen.gameserver.model.CursedWeapon: void setActivated(boolean)
com.l2jfrozen.gameserver.model.CursedWeapon: void setDropped(boolean)
com.l2jfrozen.gameserver.model.CursedWeapon: void setEndTime(long)
com.l2jfrozen.gameserver.model.CursedWeapon: void setPlayer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.CursedWeapon: void setItem(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.CursedWeapon: boolean isActivated()
com.l2jfrozen.gameserver.model.CursedWeapon: boolean isDropped()
com.l2jfrozen.gameserver.model.CursedWeapon: long getEndTime()
com.l2jfrozen.gameserver.model.CursedWeapon: java.lang.String getName()
com.l2jfrozen.gameserver.model.CursedWeapon: int getItemId()
com.l2jfrozen.gameserver.model.CursedWeapon: int getSkillId()
com.l2jfrozen.gameserver.model.CursedWeapon: int getPlayerId()
com.l2jfrozen.gameserver.model.CursedWeapon: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getPlayer()
com.l2jfrozen.gameserver.model.CursedWeapon: int getPlayerKarma()
com.l2jfrozen.gameserver.model.CursedWeapon: int getPlayerPkKills()
com.l2jfrozen.gameserver.model.CursedWeapon: int getNbKills()
com.l2jfrozen.gameserver.model.CursedWeapon: int getStageKills()
com.l2jfrozen.gameserver.model.CursedWeapon: boolean isActive()
com.l2jfrozen.gameserver.model.CursedWeapon: int getLevel()
com.l2jfrozen.gameserver.model.CursedWeapon: long getTimeLeft()
com.l2jfrozen.gameserver.model.CursedWeapon: int getDuration()
com.l2jfrozen.gameserver.model.CursedWeapon: void goTo(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.CursedWeapon: com.l2jfrozen.common.util.Point3D getWorldPosition()
com.l2jfrozen.gameserver.model.CursedWeapon: void <clinit>()
com.l2jfrozen.gameserver.model.CursedWeapon$RemoveTask
com.l2jfrozen.gameserver.model.CursedWeapon$RemoveTask: com.l2jfrozen.gameserver.model.CursedWeapon this$0
com.l2jfrozen.gameserver.model.CursedWeapon$RemoveTask: CursedWeapon$RemoveTask(com.l2jfrozen.gameserver.model.CursedWeapon)
com.l2jfrozen.gameserver.model.CursedWeapon$RemoveTask: void run()
com.l2jfrozen.gameserver.model.DropProtection
com.l2jfrozen.gameserver.model.DropProtection: boolean _isProtected
com.l2jfrozen.gameserver.model.DropProtection: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _owner
com.l2jfrozen.gameserver.model.DropProtection: java.util.concurrent.ScheduledFuture _task
com.l2jfrozen.gameserver.model.DropProtection: long PROTECTED_MILLIS_TIME
com.l2jfrozen.gameserver.model.DropProtection: DropProtection()
com.l2jfrozen.gameserver.model.DropProtection: void run()
com.l2jfrozen.gameserver.model.DropProtection: boolean isProtected()
com.l2jfrozen.gameserver.model.DropProtection: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getOwner()
com.l2jfrozen.gameserver.model.DropProtection: boolean tryPickUp(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.DropProtection: boolean tryPickUp(com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance)
com.l2jfrozen.gameserver.model.DropProtection: void unprotect()
com.l2jfrozen.gameserver.model.DropProtection: void protect(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.EffectState
com.l2jfrozen.gameserver.model.EffectState: com.l2jfrozen.gameserver.model.EffectState CREATED
com.l2jfrozen.gameserver.model.EffectState: com.l2jfrozen.gameserver.model.EffectState ACTING
com.l2jfrozen.gameserver.model.EffectState: com.l2jfrozen.gameserver.model.EffectState FINISHING
com.l2jfrozen.gameserver.model.EffectState: com.l2jfrozen.gameserver.model.EffectState[] $VALUES
com.l2jfrozen.gameserver.model.EffectState: com.l2jfrozen.gameserver.model.EffectState[] values()
com.l2jfrozen.gameserver.model.EffectState: com.l2jfrozen.gameserver.model.EffectState valueOf(java.lang.String)
com.l2jfrozen.gameserver.model.EffectState: EffectState(java.lang.String,int)
com.l2jfrozen.gameserver.model.EffectState: void <clinit>()
com.l2jfrozen.gameserver.model.EffectType
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType BUFF
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType DEBUFF
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType CHARGE
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType DMG_OVER_TIME
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType HEAL_OVER_TIME
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType COMBAT_POINT_HEAL_OVER_TIME
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType MANA_DMG_OVER_TIME
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType MANA_HEAL_OVER_TIME
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType MP_CONSUME_PER_LEVEL
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType RELAXING
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType STUN
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType ROOT
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType SLEEP
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType HATE
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType FAKE_DEATH
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType CONFUSION
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType CONFUSE_MOB_ONLY
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType MUTE
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType IMMOBILEUNTILATTACKED
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType FEAR
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType SALVATION
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType SILENT_MOVE
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType SIGNET_EFFECT
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType SIGNET_GROUND
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType SEED
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType PARALYZE
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType STUN_SELF
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType PSYCHICAL_MUTE
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType REMOVE_TARGET
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType TARGET_ME
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType SILENCE_MAGIC_PHYSICAL
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType BETRAY
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType NOBLESSE_BLESSING
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType PHOENIX_BLESSING
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType PETRIFICATION
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType BLUFF
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType BATTLE_FORCE
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType SPELL_FORCE
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType CHARM_OF_LUCK
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType INVINCIBLE
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType PROTECTION_BLESSING
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType INTERRUPT
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType MEDITATION
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType BLOW
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType FUSION
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType CANCEL
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType BLOCK_BUFF
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType BLOCK_DEBUFF
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType PREVENT_BUFF
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType CLAN_GATE
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType NEGATE
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType HERO_CANCEL
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType[] $VALUES
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType[] values()
com.l2jfrozen.gameserver.model.EffectType: com.l2jfrozen.gameserver.model.EffectType valueOf(java.lang.String)
com.l2jfrozen.gameserver.model.EffectType: EffectType(java.lang.String,int)
com.l2jfrozen.gameserver.model.EffectType: void <clinit>()
com.l2jfrozen.gameserver.model.FishData
com.l2jfrozen.gameserver.model.FishData: int _id
com.l2jfrozen.gameserver.model.FishData: int _level
com.l2jfrozen.gameserver.model.FishData: java.lang.String _name
com.l2jfrozen.gameserver.model.FishData: int _hp
com.l2jfrozen.gameserver.model.FishData: int _hpRegen
com.l2jfrozen.gameserver.model.FishData: int _type
com.l2jfrozen.gameserver.model.FishData: int _group
com.l2jfrozen.gameserver.model.FishData: int _fishGuts
com.l2jfrozen.gameserver.model.FishData: int _gutsCheckTime
com.l2jfrozen.gameserver.model.FishData: int _waitTime
com.l2jfrozen.gameserver.model.FishData: int _combatTime
com.l2jfrozen.gameserver.model.FishData: FishData(int,int,java.lang.String,int,int,int,int,int,int,int,int)
com.l2jfrozen.gameserver.model.FishData: FishData(com.l2jfrozen.gameserver.model.FishData)
com.l2jfrozen.gameserver.model.FishData: int getId()
com.l2jfrozen.gameserver.model.FishData: int getLevel()
com.l2jfrozen.gameserver.model.FishData: java.lang.String getName()
com.l2jfrozen.gameserver.model.FishData: int getHP()
com.l2jfrozen.gameserver.model.FishData: int getHpRegen()
com.l2jfrozen.gameserver.model.FishData: int getType()
com.l2jfrozen.gameserver.model.FishData: int getGroup()
com.l2jfrozen.gameserver.model.FishData: int getFishGuts()
com.l2jfrozen.gameserver.model.FishData: int getGutsCheckTime()
com.l2jfrozen.gameserver.model.FishData: int getWaitTime()
com.l2jfrozen.gameserver.model.FishData: int getCombatTime()
com.l2jfrozen.gameserver.model.FishData: void setType(int)
com.l2jfrozen.gameserver.model.ForceBuff
com.l2jfrozen.gameserver.model.ForceBuff: int _forceId
com.l2jfrozen.gameserver.model.ForceBuff: int _forceLevel
com.l2jfrozen.gameserver.model.ForceBuff: com.l2jfrozen.gameserver.model.L2Character _caster
com.l2jfrozen.gameserver.model.ForceBuff: com.l2jfrozen.gameserver.model.L2Character _target
com.l2jfrozen.gameserver.model.ForceBuff: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.ForceBuff: com.l2jfrozen.gameserver.model.L2Character getCaster()
com.l2jfrozen.gameserver.model.ForceBuff: com.l2jfrozen.gameserver.model.L2Character getTarget()
com.l2jfrozen.gameserver.model.ForceBuff: ForceBuff(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.ForceBuff: void onCastAbort()
com.l2jfrozen.gameserver.model.ForceBuff: void <clinit>()
com.l2jfrozen.gameserver.model.Inventory
com.l2jfrozen.gameserver.model.Inventory: int PAPERDOLL_UNDER
com.l2jfrozen.gameserver.model.Inventory: int PAPERDOLL_LEAR
com.l2jfrozen.gameserver.model.Inventory: int PAPERDOLL_REAR
com.l2jfrozen.gameserver.model.Inventory: int PAPERDOLL_NECK
com.l2jfrozen.gameserver.model.Inventory: int PAPERDOLL_LFINGER
com.l2jfrozen.gameserver.model.Inventory: int PAPERDOLL_RFINGER
com.l2jfrozen.gameserver.model.Inventory: int PAPERDOLL_HEAD
com.l2jfrozen.gameserver.model.Inventory: int PAPERDOLL_RHAND
com.l2jfrozen.gameserver.model.Inventory: int PAPERDOLL_LHAND
com.l2jfrozen.gameserver.model.Inventory: int PAPERDOLL_GLOVES
com.l2jfrozen.gameserver.model.Inventory: int PAPERDOLL_CHEST
com.l2jfrozen.gameserver.model.Inventory: int PAPERDOLL_LEGS
com.l2jfrozen.gameserver.model.Inventory: int PAPERDOLL_FEET
com.l2jfrozen.gameserver.model.Inventory: int PAPERDOLL_BACK
com.l2jfrozen.gameserver.model.Inventory: int PAPERDOLL_LRHAND
com.l2jfrozen.gameserver.model.Inventory: int PAPERDOLL_FACE
com.l2jfrozen.gameserver.model.Inventory: int PAPERDOLL_HAIR
com.l2jfrozen.gameserver.model.Inventory: int PAPERDOLL_DHAIR
com.l2jfrozen.gameserver.model.Inventory: int PAPERDOLL_TOTALSLOTS
com.l2jfrozen.gameserver.model.Inventory: double MAX_ARMOR_WEIGHT
com.l2jfrozen.gameserver.model.Inventory: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance[] _paperdoll
com.l2jfrozen.gameserver.model.Inventory: java.util.List _paperdollListeners
com.l2jfrozen.gameserver.model.Inventory: int _totalWeight
com.l2jfrozen.gameserver.model.Inventory: int _wearedMask
com.l2jfrozen.gameserver.model.Inventory: boolean $assertionsDisabled
com.l2jfrozen.gameserver.model.Inventory: Inventory()
com.l2jfrozen.gameserver.model.Inventory: com.l2jfrozen.gameserver.model.actor.instance.ItemLocation getEquipLocation()
com.l2jfrozen.gameserver.model.Inventory: com.l2jfrozen.gameserver.model.Inventory$ChangeRecorder newRecorder()
com.l2jfrozen.gameserver.model.Inventory: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance dropItem(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.Inventory: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance dropItem(java.lang.String,int,int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.Inventory: void addItem(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.Inventory: void removeItem(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.Inventory: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance getPaperdollItem(int)
com.l2jfrozen.gameserver.model.Inventory: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance getPaperdollItemByL2ItemId(int)
com.l2jfrozen.gameserver.model.Inventory: int getPaperdollItemId(int)
com.l2jfrozen.gameserver.model.Inventory: int getPaperdollAugmentationId(int)
com.l2jfrozen.gameserver.model.Inventory: int getPaperdollObjectId(int)
com.l2jfrozen.gameserver.model.Inventory: void addPaperdollListener(com.l2jfrozen.gameserver.model.Inventory$PaperdollListener)
com.l2jfrozen.gameserver.model.Inventory: void removePaperdollListener(com.l2jfrozen.gameserver.model.Inventory$PaperdollListener)
com.l2jfrozen.gameserver.model.Inventory: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance setPaperdollItem(int,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.Inventory: int getWearedMask()
com.l2jfrozen.gameserver.model.Inventory: int getSlotFromItem(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.Inventory: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance[] unEquipItemInBodySlotAndRecord(int)
com.l2jfrozen.gameserver.model.Inventory: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance unEquipItemInSlot(int)
com.l2jfrozen.gameserver.model.Inventory: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance[] unEquipItemInSlotAndRecord(int)
com.l2jfrozen.gameserver.model.Inventory: void unEquipItemInBodySlot(int)
com.l2jfrozen.gameserver.model.Inventory: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance[] equipItemAndRecord(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.Inventory: void equipItem(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.Inventory: void refreshWeight()
com.l2jfrozen.gameserver.model.Inventory: int getTotalWeight()
com.l2jfrozen.gameserver.model.Inventory: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance findArrowForBow(com.l2jfrozen.gameserver.templates.L2Item)
com.l2jfrozen.gameserver.model.Inventory: void restore()
com.l2jfrozen.gameserver.model.Inventory: void reloadEquippedItems()
com.l2jfrozen.gameserver.model.Inventory: void <clinit>()
com.l2jfrozen.gameserver.model.Inventory$ArmorSetListener
com.l2jfrozen.gameserver.model.Inventory$ArmorSetListener: com.l2jfrozen.gameserver.model.Inventory this$0
com.l2jfrozen.gameserver.model.Inventory$ArmorSetListener: Inventory$ArmorSetListener(com.l2jfrozen.gameserver.model.Inventory)
com.l2jfrozen.gameserver.model.Inventory$ArmorSetListener: void notifyEquiped(int,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.Inventory$ArmorSetListener: void notifyUnequiped(int,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.Inventory$BowListener
com.l2jfrozen.gameserver.model.Inventory$BowListener: boolean $assertionsDisabled
com.l2jfrozen.gameserver.model.Inventory$BowListener: com.l2jfrozen.gameserver.model.Inventory this$0
com.l2jfrozen.gameserver.model.Inventory$BowListener: Inventory$BowListener(com.l2jfrozen.gameserver.model.Inventory)
com.l2jfrozen.gameserver.model.Inventory$BowListener: void notifyUnequiped(int,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.Inventory$BowListener: void notifyEquiped(int,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.Inventory$BowListener: void <clinit>()
com.l2jfrozen.gameserver.model.Inventory$ChangeRecorder
com.l2jfrozen.gameserver.model.Inventory$ChangeRecorder: com.l2jfrozen.gameserver.model.Inventory _inventory
com.l2jfrozen.gameserver.model.Inventory$ChangeRecorder: java.util.List _changed
com.l2jfrozen.gameserver.model.Inventory$ChangeRecorder: Inventory$ChangeRecorder(com.l2jfrozen.gameserver.model.Inventory)
com.l2jfrozen.gameserver.model.Inventory$ChangeRecorder: void notifyEquiped(int,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.Inventory$ChangeRecorder: void notifyUnequiped(int,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.Inventory$ChangeRecorder: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance[] getChangedItems()
com.l2jfrozen.gameserver.model.Inventory$FormalWearListener
com.l2jfrozen.gameserver.model.Inventory$FormalWearListener: com.l2jfrozen.gameserver.model.Inventory this$0
com.l2jfrozen.gameserver.model.Inventory$FormalWearListener: Inventory$FormalWearListener(com.l2jfrozen.gameserver.model.Inventory)
com.l2jfrozen.gameserver.model.Inventory$FormalWearListener: void notifyUnequiped(int,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.Inventory$FormalWearListener: void notifyEquiped(int,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.Inventory$ItemPassiveSkillsListener
com.l2jfrozen.gameserver.model.Inventory$ItemPassiveSkillsListener: com.l2jfrozen.gameserver.model.Inventory this$0
com.l2jfrozen.gameserver.model.Inventory$ItemPassiveSkillsListener: Inventory$ItemPassiveSkillsListener(com.l2jfrozen.gameserver.model.Inventory)
com.l2jfrozen.gameserver.model.Inventory$ItemPassiveSkillsListener: void notifyUnequiped(int,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.Inventory$ItemPassiveSkillsListener: void notifyEquiped(int,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.Inventory$PaperdollListener
com.l2jfrozen.gameserver.model.Inventory$PaperdollListener: void notifyEquiped(int,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.Inventory$PaperdollListener: void notifyUnequiped(int,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.Inventory$StatsListener
com.l2jfrozen.gameserver.model.Inventory$StatsListener: com.l2jfrozen.gameserver.model.Inventory this$0
com.l2jfrozen.gameserver.model.Inventory$StatsListener: Inventory$StatsListener(com.l2jfrozen.gameserver.model.Inventory)
com.l2jfrozen.gameserver.model.Inventory$StatsListener: void notifyUnequiped(int,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.Inventory$StatsListener: void notifyEquiped(int,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.Item
com.l2jfrozen.gameserver.model.Item: int id
com.l2jfrozen.gameserver.model.Item: java.lang.Enum type
com.l2jfrozen.gameserver.model.Item: java.lang.String name
com.l2jfrozen.gameserver.model.Item: com.l2jfrozen.gameserver.templates.StatsSet set
com.l2jfrozen.gameserver.model.Item: int currentLevel
com.l2jfrozen.gameserver.model.Item: com.l2jfrozen.gameserver.templates.L2Item item
com.l2jfrozen.gameserver.model.Item: Item()
com.l2jfrozen.gameserver.model.ItemContainer
com.l2jfrozen.gameserver.model.ItemContainer: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.ItemContainer: java.util.List _items
com.l2jfrozen.gameserver.model.ItemContainer: ItemContainer()
com.l2jfrozen.gameserver.model.ItemContainer: com.l2jfrozen.gameserver.model.L2Character getOwner()
com.l2jfrozen.gameserver.model.ItemContainer: com.l2jfrozen.gameserver.model.actor.instance.ItemLocation getBaseLocation()
com.l2jfrozen.gameserver.model.ItemContainer: int getOwnerId()
com.l2jfrozen.gameserver.model.ItemContainer: int getSize()
com.l2jfrozen.gameserver.model.ItemContainer: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance[] getItems()
com.l2jfrozen.gameserver.model.ItemContainer: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance getItemByItemId(int)
com.l2jfrozen.gameserver.model.ItemContainer: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance getItemByItemId(int,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.ItemContainer: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance getItemByObjectId(int)
com.l2jfrozen.gameserver.model.ItemContainer: int getInventoryItemCount(int,int)
com.l2jfrozen.gameserver.model.ItemContainer: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance addItem(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.ItemContainer: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance addItem(java.lang.String,int,int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.ItemContainer: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance addWearItem(java.lang.String,int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.ItemContainer: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance transferItem(java.lang.String,int,int,com.l2jfrozen.gameserver.model.ItemContainer,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.ItemContainer: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance destroyItem(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.ItemContainer: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance destroyItem(java.lang.String,int,int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.ItemContainer: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance destroyItemByItemId(java.lang.String,int,int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.ItemContainer: void destroyAllItems(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.ItemContainer: int getAdena()
com.l2jfrozen.gameserver.model.ItemContainer: void addItem(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.ItemContainer: void removeItem(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.ItemContainer: void refreshWeight()
com.l2jfrozen.gameserver.model.ItemContainer: void deleteMe()
com.l2jfrozen.gameserver.model.ItemContainer: void updateDatabase()
com.l2jfrozen.gameserver.model.ItemContainer: void restore()
com.l2jfrozen.gameserver.model.ItemContainer: boolean validateCapacity(int)
com.l2jfrozen.gameserver.model.ItemContainer: boolean validateWeight(int)
com.l2jfrozen.gameserver.model.ItemContainer: void <clinit>()
com.l2jfrozen.gameserver.model.ItemInfo
com.l2jfrozen.gameserver.model.ItemInfo: int _objectId
com.l2jfrozen.gameserver.model.ItemInfo: com.l2jfrozen.gameserver.templates.L2Item _item
com.l2jfrozen.gameserver.model.ItemInfo: int _enchant
com.l2jfrozen.gameserver.model.ItemInfo: int _augmentation
com.l2jfrozen.gameserver.model.ItemInfo: int _count
com.l2jfrozen.gameserver.model.ItemInfo: int _price
com.l2jfrozen.gameserver.model.ItemInfo: int _type1
com.l2jfrozen.gameserver.model.ItemInfo: int _type2
com.l2jfrozen.gameserver.model.ItemInfo: int _equipped
com.l2jfrozen.gameserver.model.ItemInfo: int _change
com.l2jfrozen.gameserver.model.ItemInfo: int _mana
com.l2jfrozen.gameserver.model.ItemInfo: ItemInfo(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.ItemInfo: ItemInfo(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance,int)
com.l2jfrozen.gameserver.model.ItemInfo: int getObjectId()
com.l2jfrozen.gameserver.model.ItemInfo: com.l2jfrozen.gameserver.templates.L2Item getItem()
com.l2jfrozen.gameserver.model.ItemInfo: int getEnchant()
com.l2jfrozen.gameserver.model.ItemInfo: int getAugemtationBoni()
com.l2jfrozen.gameserver.model.ItemInfo: int getCount()
com.l2jfrozen.gameserver.model.ItemInfo: int getPrice()
com.l2jfrozen.gameserver.model.ItemInfo: int getCustomType1()
com.l2jfrozen.gameserver.model.ItemInfo: int getCustomType2()
com.l2jfrozen.gameserver.model.ItemInfo: int getEquipped()
com.l2jfrozen.gameserver.model.ItemInfo: int getChange()
com.l2jfrozen.gameserver.model.ItemInfo: int getMana()
com.l2jfrozen.gameserver.model.ItemRequest
com.l2jfrozen.gameserver.model.ItemRequest: int _objectId
com.l2jfrozen.gameserver.model.ItemRequest: int _itemId
com.l2jfrozen.gameserver.model.ItemRequest: int _enchant
com.l2jfrozen.gameserver.model.ItemRequest: int _count
com.l2jfrozen.gameserver.model.ItemRequest: int _price
com.l2jfrozen.gameserver.model.ItemRequest: ItemRequest(int,int,int)
com.l2jfrozen.gameserver.model.ItemRequest: ItemRequest(int,int,int,int)
com.l2jfrozen.gameserver.model.ItemRequest: ItemRequest(int,int,int,int,int)
com.l2jfrozen.gameserver.model.ItemRequest: int getObjectId()
com.l2jfrozen.gameserver.model.ItemRequest: int getItemId()
com.l2jfrozen.gameserver.model.ItemRequest: void setCount(int)
com.l2jfrozen.gameserver.model.ItemRequest: int getCount()
com.l2jfrozen.gameserver.model.ItemRequest: int getPrice()
com.l2jfrozen.gameserver.model.ItemRequest: int getEnchant()
com.l2jfrozen.gameserver.model.ItemRequest: void setEnchant(int)
com.l2jfrozen.gameserver.model.L2ArmorSet
com.l2jfrozen.gameserver.model.L2ArmorSet: int _chest
com.l2jfrozen.gameserver.model.L2ArmorSet: int _legs
com.l2jfrozen.gameserver.model.L2ArmorSet: int _head
com.l2jfrozen.gameserver.model.L2ArmorSet: int _gloves
com.l2jfrozen.gameserver.model.L2ArmorSet: int _feet
com.l2jfrozen.gameserver.model.L2ArmorSet: int _skillId
com.l2jfrozen.gameserver.model.L2ArmorSet: int _shield
com.l2jfrozen.gameserver.model.L2ArmorSet: int _shieldSkillId
com.l2jfrozen.gameserver.model.L2ArmorSet: int _enchant6Skill
com.l2jfrozen.gameserver.model.L2ArmorSet: L2ArmorSet(int,int,int,int,int,int,int,int,int)
com.l2jfrozen.gameserver.model.L2ArmorSet: boolean containAll(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2ArmorSet: boolean containAll(int,int,int,int,int)
com.l2jfrozen.gameserver.model.L2ArmorSet: boolean containItem(int,int)
com.l2jfrozen.gameserver.model.L2ArmorSet: int getSkillId()
com.l2jfrozen.gameserver.model.L2ArmorSet: boolean containShield(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2ArmorSet: boolean containShield(int)
com.l2jfrozen.gameserver.model.L2ArmorSet: int getShieldSkillId()
com.l2jfrozen.gameserver.model.L2ArmorSet: int getEnchant6skillId()
com.l2jfrozen.gameserver.model.L2ArmorSet: boolean isEnchanted6(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2Attackable
com.l2jfrozen.gameserver.model.L2Attackable: javolution.util.FastMap _aggroList
com.l2jfrozen.gameserver.model.L2Attackable: boolean _isReturningToSpawnPoint
com.l2jfrozen.gameserver.model.L2Attackable: boolean _canReturnToSpawnPoint
com.l2jfrozen.gameserver.model.L2Attackable: com.l2jfrozen.gameserver.model.L2Attackable$RewardItem[] _sweepItems
com.l2jfrozen.gameserver.model.L2Attackable: com.l2jfrozen.gameserver.model.L2Attackable$RewardItem[] _harvestItems
com.l2jfrozen.gameserver.model.L2Attackable: boolean _seeded
com.l2jfrozen.gameserver.model.L2Attackable: int _seedType
com.l2jfrozen.gameserver.model.L2Attackable: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _seeder
com.l2jfrozen.gameserver.model.L2Attackable: boolean _overhit
com.l2jfrozen.gameserver.model.L2Attackable: double _overhitDamage
com.l2jfrozen.gameserver.model.L2Attackable: com.l2jfrozen.gameserver.model.L2Character _overhitAttacker
com.l2jfrozen.gameserver.model.L2Attackable: com.l2jfrozen.gameserver.model.L2CommandChannel _firstCommandChannelAttacked
com.l2jfrozen.gameserver.model.L2Attackable: com.l2jfrozen.gameserver.model.L2Attackable$CommandChannelTimer _commandChannelTimer
com.l2jfrozen.gameserver.model.L2Attackable: long _commandChannelLastAttack
com.l2jfrozen.gameserver.model.L2Attackable: boolean _absorbed
com.l2jfrozen.gameserver.model.L2Attackable: javolution.util.FastMap _absorbersList
com.l2jfrozen.gameserver.model.L2Attackable: boolean _mustGiveExpSp
com.l2jfrozen.gameserver.model.L2Attackable: com.l2jfrozen.gameserver.model.L2Character _mostHated
com.l2jfrozen.gameserver.model.L2Attackable: javolution.util.FastMap getAggroListRP()
com.l2jfrozen.gameserver.model.L2Attackable: javolution.util.FastMap getAggroList()
com.l2jfrozen.gameserver.model.L2Attackable: boolean isReturningToSpawnPoint()
com.l2jfrozen.gameserver.model.L2Attackable: void setisReturningToSpawnPoint(boolean)
com.l2jfrozen.gameserver.model.L2Attackable: boolean canReturnToSpawnPoint()
com.l2jfrozen.gameserver.model.L2Attackable: void setCanReturnToSpawnPoint(boolean)
com.l2jfrozen.gameserver.model.L2Attackable: L2Attackable(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.L2Attackable: com.l2jfrozen.gameserver.model.actor.knownlist.AttackableKnownList getKnownList()
com.l2jfrozen.gameserver.model.L2Attackable: com.l2jfrozen.gameserver.ai.L2CharacterAI getAI()
com.l2jfrozen.gameserver.model.L2Attackable: boolean getCondition2(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Attackable: void reduceCurrentHp(double,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Attackable: void reduceCurrentHp(double,com.l2jfrozen.gameserver.model.L2Character,boolean)
com.l2jfrozen.gameserver.model.L2Attackable: void setMustRewardExpSp(boolean)
com.l2jfrozen.gameserver.model.L2Attackable: boolean getMustRewardExpSP()
com.l2jfrozen.gameserver.model.L2Attackable: boolean doDie(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Attackable: void calculateRewards(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Attackable: void addDamage(com.l2jfrozen.gameserver.model.L2Character,int)
com.l2jfrozen.gameserver.model.L2Attackable: void addDamageHate(com.l2jfrozen.gameserver.model.L2Character,int,int)
com.l2jfrozen.gameserver.model.L2Attackable: void reduceHate(com.l2jfrozen.gameserver.model.L2Character,int)
com.l2jfrozen.gameserver.model.L2Attackable: void stopHating(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Attackable: com.l2jfrozen.gameserver.model.L2Character getMostHated()
com.l2jfrozen.gameserver.model.L2Attackable: int getHating(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Attackable: com.l2jfrozen.gameserver.model.L2Attackable$RewardItem calculateRewardItem(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2DropData,int,boolean)
com.l2jfrozen.gameserver.model.L2Attackable: com.l2jfrozen.gameserver.model.L2Attackable$RewardItem calculateCategorizedRewardItem(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2DropCategory,int)
com.l2jfrozen.gameserver.model.L2Attackable: int calculateLevelModifierForDrop(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2Attackable: void doItemDrop(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Attackable: void doItemDrop(com.l2jfrozen.gameserver.templates.L2NpcTemplate,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Attackable: void doEventDrop(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Attackable: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance DropItem(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Attackable$RewardItem)
com.l2jfrozen.gameserver.model.L2Attackable: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance DropItem(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int)
com.l2jfrozen.gameserver.model.L2Attackable: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance getActiveWeapon()
com.l2jfrozen.gameserver.model.L2Attackable: boolean noTarget()
com.l2jfrozen.gameserver.model.L2Attackable: boolean containsTarget(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Attackable: void clearAggroList()
com.l2jfrozen.gameserver.model.L2Attackable: boolean isSweepActive()
com.l2jfrozen.gameserver.model.L2Attackable: com.l2jfrozen.gameserver.model.L2Attackable$RewardItem[] takeSweep()
com.l2jfrozen.gameserver.model.L2Attackable: com.l2jfrozen.gameserver.model.L2Attackable$RewardItem[] takeHarvest()
com.l2jfrozen.gameserver.model.L2Attackable: void overhitEnabled(boolean)
com.l2jfrozen.gameserver.model.L2Attackable: void setOverhitValues(com.l2jfrozen.gameserver.model.L2Character,double)
com.l2jfrozen.gameserver.model.L2Attackable: com.l2jfrozen.gameserver.model.L2Character getOverhitAttacker()
com.l2jfrozen.gameserver.model.L2Attackable: double getOverhitDamage()
com.l2jfrozen.gameserver.model.L2Attackable: boolean isOverhit()
com.l2jfrozen.gameserver.model.L2Attackable: void absorbSoul()
com.l2jfrozen.gameserver.model.L2Attackable: boolean isAbsorbed()
com.l2jfrozen.gameserver.model.L2Attackable: void addAbsorber(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.L2Attackable: void levelSoulCrystals(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Attackable: void exchangeCrystal(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int,boolean)
com.l2jfrozen.gameserver.model.L2Attackable: void resetAbsorbList()
com.l2jfrozen.gameserver.model.L2Attackable: int[] calculateExpAndSp(int,int)
com.l2jfrozen.gameserver.model.L2Attackable: long calculateOverhitExp(long)
com.l2jfrozen.gameserver.model.L2Attackable: boolean isAttackable()
com.l2jfrozen.gameserver.model.L2Attackable: void onSpawn()
com.l2jfrozen.gameserver.model.L2Attackable: void setSeeded()
com.l2jfrozen.gameserver.model.L2Attackable: void setSeeded(int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2Attackable: void setSeeded(int,int)
com.l2jfrozen.gameserver.model.L2Attackable: void setSeeded(boolean)
com.l2jfrozen.gameserver.model.L2Attackable: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getSeeder()
com.l2jfrozen.gameserver.model.L2Attackable: int getSeedType()
com.l2jfrozen.gameserver.model.L2Attackable: boolean isSeeded()
com.l2jfrozen.gameserver.model.L2Attackable: int getAbsorbLevel()
com.l2jfrozen.gameserver.model.L2Attackable: boolean hasRandomAnimation()
com.l2jfrozen.gameserver.model.L2Attackable: boolean isMob()
com.l2jfrozen.gameserver.model.L2Attackable: void setCommandChannelTimer(com.l2jfrozen.gameserver.model.L2Attackable$CommandChannelTimer)
com.l2jfrozen.gameserver.model.L2Attackable: com.l2jfrozen.gameserver.model.L2Attackable$CommandChannelTimer getCommandChannelTimer()
com.l2jfrozen.gameserver.model.L2Attackable: com.l2jfrozen.gameserver.model.L2CommandChannel getFirstCommandChannelAttacked()
com.l2jfrozen.gameserver.model.L2Attackable: void setFirstCommandChannelAttacked(com.l2jfrozen.gameserver.model.L2CommandChannel)
com.l2jfrozen.gameserver.model.L2Attackable: long getCommandChannelLastAttack()
com.l2jfrozen.gameserver.model.L2Attackable: void setCommandChannelLastAttack(long)
com.l2jfrozen.gameserver.model.L2Attackable: com.l2jfrozen.gameserver.model.actor.knownlist.NpcKnownList getKnownList()
com.l2jfrozen.gameserver.model.L2Attackable: com.l2jfrozen.gameserver.model.actor.knownlist.CharKnownList getKnownList()
com.l2jfrozen.gameserver.model.L2Attackable: com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList getKnownList()
com.l2jfrozen.gameserver.model.L2Attackable$AbsorberInfo
com.l2jfrozen.gameserver.model.L2Attackable$AbsorberInfo: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _absorber
com.l2jfrozen.gameserver.model.L2Attackable$AbsorberInfo: int _crystalId
com.l2jfrozen.gameserver.model.L2Attackable$AbsorberInfo: double _absorbedHP
com.l2jfrozen.gameserver.model.L2Attackable$AbsorberInfo: com.l2jfrozen.gameserver.model.L2Attackable this$0
com.l2jfrozen.gameserver.model.L2Attackable$AbsorberInfo: L2Attackable$AbsorberInfo(com.l2jfrozen.gameserver.model.L2Attackable,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,double)
com.l2jfrozen.gameserver.model.L2Attackable$AbsorberInfo: boolean equals(java.lang.Object)
com.l2jfrozen.gameserver.model.L2Attackable$AbsorberInfo: int hashCode()
com.l2jfrozen.gameserver.model.L2Attackable$AggroInfo
com.l2jfrozen.gameserver.model.L2Attackable$AggroInfo: com.l2jfrozen.gameserver.model.L2Character _attacker
com.l2jfrozen.gameserver.model.L2Attackable$AggroInfo: int _hate
com.l2jfrozen.gameserver.model.L2Attackable$AggroInfo: int _damage
com.l2jfrozen.gameserver.model.L2Attackable$AggroInfo: com.l2jfrozen.gameserver.model.L2Attackable this$0
com.l2jfrozen.gameserver.model.L2Attackable$AggroInfo: L2Attackable$AggroInfo(com.l2jfrozen.gameserver.model.L2Attackable,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Attackable$AggroInfo: boolean equals(java.lang.Object)
com.l2jfrozen.gameserver.model.L2Attackable$AggroInfo: int hashCode()
com.l2jfrozen.gameserver.model.L2Attackable$CommandChannelTimer
com.l2jfrozen.gameserver.model.L2Attackable$CommandChannelTimer: com.l2jfrozen.gameserver.model.L2Attackable _monster
com.l2jfrozen.gameserver.model.L2Attackable$CommandChannelTimer: L2Attackable$CommandChannelTimer(com.l2jfrozen.gameserver.model.L2Attackable)
com.l2jfrozen.gameserver.model.L2Attackable$CommandChannelTimer: void run()
com.l2jfrozen.gameserver.model.L2Attackable$OnKillNotifyTask
com.l2jfrozen.gameserver.model.L2Attackable$OnKillNotifyTask: com.l2jfrozen.gameserver.model.L2Attackable _attackable
com.l2jfrozen.gameserver.model.L2Attackable$OnKillNotifyTask: com.l2jfrozen.gameserver.model.quest.Quest _quest
com.l2jfrozen.gameserver.model.L2Attackable$OnKillNotifyTask: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _killer
com.l2jfrozen.gameserver.model.L2Attackable$OnKillNotifyTask: boolean _isPet
com.l2jfrozen.gameserver.model.L2Attackable$OnKillNotifyTask: com.l2jfrozen.gameserver.model.L2Attackable this$0
com.l2jfrozen.gameserver.model.L2Attackable$OnKillNotifyTask: L2Attackable$OnKillNotifyTask(com.l2jfrozen.gameserver.model.L2Attackable,com.l2jfrozen.gameserver.model.L2Attackable,com.l2jfrozen.gameserver.model.quest.Quest,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.model.L2Attackable$OnKillNotifyTask: void run()
com.l2jfrozen.gameserver.model.L2Attackable$RewardInfo
com.l2jfrozen.gameserver.model.L2Attackable$RewardInfo: com.l2jfrozen.gameserver.model.L2Character _attacker
com.l2jfrozen.gameserver.model.L2Attackable$RewardInfo: int _dmg
com.l2jfrozen.gameserver.model.L2Attackable$RewardInfo: com.l2jfrozen.gameserver.model.L2Attackable this$0
com.l2jfrozen.gameserver.model.L2Attackable$RewardInfo: L2Attackable$RewardInfo(com.l2jfrozen.gameserver.model.L2Attackable,com.l2jfrozen.gameserver.model.L2Character,int)
com.l2jfrozen.gameserver.model.L2Attackable$RewardInfo: void addDamage(int)
com.l2jfrozen.gameserver.model.L2Attackable$RewardInfo: boolean equals(java.lang.Object)
com.l2jfrozen.gameserver.model.L2Attackable$RewardInfo: int hashCode()
com.l2jfrozen.gameserver.model.L2Attackable$RewardItem
com.l2jfrozen.gameserver.model.L2Attackable$RewardItem: int _itemId
com.l2jfrozen.gameserver.model.L2Attackable$RewardItem: int _count
com.l2jfrozen.gameserver.model.L2Attackable$RewardItem: com.l2jfrozen.gameserver.model.L2Attackable this$0
com.l2jfrozen.gameserver.model.L2Attackable$RewardItem: L2Attackable$RewardItem(com.l2jfrozen.gameserver.model.L2Attackable,int,int)
com.l2jfrozen.gameserver.model.L2Attackable$RewardItem: int getItemId()
com.l2jfrozen.gameserver.model.L2Attackable$RewardItem: int getCount()
com.l2jfrozen.gameserver.model.L2Augmentation
com.l2jfrozen.gameserver.model.L2Augmentation: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.L2Augmentation: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance _item
com.l2jfrozen.gameserver.model.L2Augmentation: int _effectsId
com.l2jfrozen.gameserver.model.L2Augmentation: com.l2jfrozen.gameserver.model.L2Augmentation$augmentationStatBoni _boni
com.l2jfrozen.gameserver.model.L2Augmentation: com.l2jfrozen.gameserver.model.L2Skill _skill
com.l2jfrozen.gameserver.model.L2Augmentation: L2Augmentation(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance,int,com.l2jfrozen.gameserver.model.L2Skill,boolean)
com.l2jfrozen.gameserver.model.L2Augmentation: L2Augmentation(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance,int,int,int,boolean)
com.l2jfrozen.gameserver.model.L2Augmentation: void saveAugmentationData()
com.l2jfrozen.gameserver.model.L2Augmentation: void deleteAugmentationData()
com.l2jfrozen.gameserver.model.L2Augmentation: int getAugmentationId()
com.l2jfrozen.gameserver.model.L2Augmentation: com.l2jfrozen.gameserver.model.L2Skill getSkill()
com.l2jfrozen.gameserver.model.L2Augmentation: void applyBoni(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2Augmentation: void removeBoni(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2Augmentation: void <clinit>()
com.l2jfrozen.gameserver.model.L2Augmentation$augmentationStatBoni
com.l2jfrozen.gameserver.model.L2Augmentation$augmentationStatBoni: com.l2jfrozen.gameserver.skills.Stats[] _stats
com.l2jfrozen.gameserver.model.L2Augmentation$augmentationStatBoni: float[] _values
com.l2jfrozen.gameserver.model.L2Augmentation$augmentationStatBoni: boolean _active
com.l2jfrozen.gameserver.model.L2Augmentation$augmentationStatBoni: com.l2jfrozen.gameserver.model.L2Augmentation this$0
com.l2jfrozen.gameserver.model.L2Augmentation$augmentationStatBoni: L2Augmentation$augmentationStatBoni(com.l2jfrozen.gameserver.model.L2Augmentation,int)
com.l2jfrozen.gameserver.model.L2Augmentation$augmentationStatBoni: void applyBoni(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2Augmentation$augmentationStatBoni: void removeBoni(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2Character
com.l2jfrozen.gameserver.model.L2Character: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.L2Character: long attackStance
com.l2jfrozen.gameserver.model.L2Character: java.util.List _attackByList
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.model.L2Skill _lastSkillCast
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.model.L2Skill _lastPotionCast
com.l2jfrozen.gameserver.model.L2Character: boolean _isBuffProtected
com.l2jfrozen.gameserver.model.L2Character: boolean _isAfraid
com.l2jfrozen.gameserver.model.L2Character: boolean _isConfused
com.l2jfrozen.gameserver.model.L2Character: boolean _isFakeDeath
com.l2jfrozen.gameserver.model.L2Character: boolean _isFlying
com.l2jfrozen.gameserver.model.L2Character: boolean _isFallsdown
com.l2jfrozen.gameserver.model.L2Character: boolean _isMuted
com.l2jfrozen.gameserver.model.L2Character: boolean _isPsychicalMuted
com.l2jfrozen.gameserver.model.L2Character: boolean _isKilledAlready
com.l2jfrozen.gameserver.model.L2Character: boolean _isOverloaded
com.l2jfrozen.gameserver.model.L2Character: boolean _isParalyzed
com.l2jfrozen.gameserver.model.L2Character: boolean _isRiding
com.l2jfrozen.gameserver.model.L2Character: boolean _isPendingRevive
com.l2jfrozen.gameserver.model.L2Character: boolean _imobilised
com.l2jfrozen.gameserver.model.L2Character: boolean _isRooted
com.l2jfrozen.gameserver.model.L2Character: boolean _isRunning
com.l2jfrozen.gameserver.model.L2Character: boolean _isImmobileUntilAttacked
com.l2jfrozen.gameserver.model.L2Character: boolean _isSleeping
com.l2jfrozen.gameserver.model.L2Character: boolean _isStunned
com.l2jfrozen.gameserver.model.L2Character: boolean _isBetrayed
com.l2jfrozen.gameserver.model.L2Character: boolean _isBlockBuff
com.l2jfrozen.gameserver.model.L2Character: boolean _isBlockDebuff
com.l2jfrozen.gameserver.model.L2Character: boolean _isTeleporting
com.l2jfrozen.gameserver.model.L2Character: boolean _isInvul
com.l2jfrozen.gameserver.model.L2Character: boolean _isUnkillable
com.l2jfrozen.gameserver.model.L2Character: boolean _isAttackDisabled
com.l2jfrozen.gameserver.model.L2Character: int _lastHealAmount
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.model.actor.stat.CharStat _stat
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.model.actor.status.CharStatus _status
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.templates.L2CharTemplate _template
com.l2jfrozen.gameserver.model.L2Character: java.lang.String _title
com.l2jfrozen.gameserver.model.L2Character: java.lang.String _aiClass
com.l2jfrozen.gameserver.model.L2Character: double _hpUpdateIncCheck
com.l2jfrozen.gameserver.model.L2Character: double _hpUpdateDecCheck
com.l2jfrozen.gameserver.model.L2Character: double _hpUpdateInterval
com.l2jfrozen.gameserver.model.L2Character: boolean _champion
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.skills.Calculator[] _calculators
com.l2jfrozen.gameserver.model.L2Character: java.util.Map _skills
com.l2jfrozen.gameserver.model.L2Character: java.util.Map _triggeredSkills
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.model.ChanceSkillList _chanceSkills
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.model.ForceBuff _forceBuff
com.l2jfrozen.gameserver.model.L2Character: boolean _blocked
com.l2jfrozen.gameserver.model.L2Character: boolean _meditated
com.l2jfrozen.gameserver.model.L2Character: int ZONE_PVP
com.l2jfrozen.gameserver.model.L2Character: int ZONE_PEACE
com.l2jfrozen.gameserver.model.L2Character: int ZONE_SIEGE
com.l2jfrozen.gameserver.model.L2Character: int ZONE_MOTHERTREE
com.l2jfrozen.gameserver.model.L2Character: int ZONE_CLANHALL
com.l2jfrozen.gameserver.model.L2Character: int ZONE_UNUSED
com.l2jfrozen.gameserver.model.L2Character: int ZONE_NOLANDING
com.l2jfrozen.gameserver.model.L2Character: int ZONE_WATER
com.l2jfrozen.gameserver.model.L2Character: int ZONE_JAIL
com.l2jfrozen.gameserver.model.L2Character: int ZONE_MONSTERTRACK
com.l2jfrozen.gameserver.model.L2Character: int ZONE_SWAMP
com.l2jfrozen.gameserver.model.L2Character: int ZONE_NOSUMMONFRIEND
com.l2jfrozen.gameserver.model.L2Character: int ZONE_OLY
com.l2jfrozen.gameserver.model.L2Character: int ZONE_NOHQ
com.l2jfrozen.gameserver.model.L2Character: int ZONE_DANGERAREA
com.l2jfrozen.gameserver.model.L2Character: int ZONE_NOSTORE
com.l2jfrozen.gameserver.model.L2Character: int _currentZones
com.l2jfrozen.gameserver.model.L2Character: boolean _advanceFlag
com.l2jfrozen.gameserver.model.L2Character: int _advanceMultiplier
com.l2jfrozen.gameserver.model.L2Character: byte _startingRotationCounter
com.l2jfrozen.gameserver.model.L2Character: boolean _inTownWar
com.l2jfrozen.gameserver.model.L2Character: byte _zoneValidateCounter
com.l2jfrozen.gameserver.model.L2Character: int _AbnormalEffects
com.l2jfrozen.gameserver.model.L2Character: javolution.util.FastTable _effects
com.l2jfrozen.gameserver.model.L2Character: java.util.Map _stackedEffects
com.l2jfrozen.gameserver.model.L2Character: int ABNORMAL_EFFECT_BLEEDING
com.l2jfrozen.gameserver.model.L2Character: int ABNORMAL_EFFECT_POISON
com.l2jfrozen.gameserver.model.L2Character: int ABNORMAL_EFFECT_REDCIRCLE
com.l2jfrozen.gameserver.model.L2Character: int ABNORMAL_EFFECT_ICE
com.l2jfrozen.gameserver.model.L2Character: int ABNORMAL_EFFECT_WIND
com.l2jfrozen.gameserver.model.L2Character: int ABNORMAL_EFFECT_FEAR
com.l2jfrozen.gameserver.model.L2Character: int ABNORMAL_EFFECT_STUN
com.l2jfrozen.gameserver.model.L2Character: int ABNORMAL_EFFECT_SLEEP
com.l2jfrozen.gameserver.model.L2Character: int ABNORMAL_EFFECT_MUTED
com.l2jfrozen.gameserver.model.L2Character: int ABNORMAL_EFFECT_ROOT
com.l2jfrozen.gameserver.model.L2Character: int ABNORMAL_EFFECT_HOLD_1
com.l2jfrozen.gameserver.model.L2Character: int ABNORMAL_EFFECT_HOLD_2
com.l2jfrozen.gameserver.model.L2Character: int ABNORMAL_EFFECT_UNKNOWN_13
com.l2jfrozen.gameserver.model.L2Character: int ABNORMAL_EFFECT_BIG_HEAD
com.l2jfrozen.gameserver.model.L2Character: int ABNORMAL_EFFECT_FLAME
com.l2jfrozen.gameserver.model.L2Character: int ABNORMAL_EFFECT_UNKNOWN_16
com.l2jfrozen.gameserver.model.L2Character: int ABNORMAL_EFFECT_GROW
com.l2jfrozen.gameserver.model.L2Character: int ABNORMAL_EFFECT_FLOATING_ROOT
com.l2jfrozen.gameserver.model.L2Character: int ABNORMAL_EFFECT_DANCE_STUNNED
com.l2jfrozen.gameserver.model.L2Character: int ABNORMAL_EFFECT_FIREROOT_STUN
com.l2jfrozen.gameserver.model.L2Character: int ABNORMAL_EFFECT_STEALTH
com.l2jfrozen.gameserver.model.L2Character: int ABNORMAL_EFFECT_IMPRISIONING_1
com.l2jfrozen.gameserver.model.L2Character: int ABNORMAL_EFFECT_IMPRISIONING_2
com.l2jfrozen.gameserver.model.L2Character: int ABNORMAL_EFFECT_MAGIC_CIRCLE
com.l2jfrozen.gameserver.model.L2Character: int ABNORMAL_EFFECT_CONFUSED
com.l2jfrozen.gameserver.model.L2Character: int ABNORMAL_EFFECT_AFRAID
com.l2jfrozen.gameserver.model.L2Character: java.util.List _disabledSkills
com.l2jfrozen.gameserver.model.L2Character: boolean _allSkillsDisabled
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.model.L2Character$MoveData _move
com.l2jfrozen.gameserver.model.L2Character: int _heading
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.model.L2Object _target
com.l2jfrozen.gameserver.model.L2Character: int _castEndTime
com.l2jfrozen.gameserver.model.L2Character: int _castInterruptTime
com.l2jfrozen.gameserver.model.L2Character: int _castPotionEndTime
com.l2jfrozen.gameserver.model.L2Character: int _castPotionInterruptTime
com.l2jfrozen.gameserver.model.L2Character: int _attackEndTime
com.l2jfrozen.gameserver.model.L2Character: int _attacking
com.l2jfrozen.gameserver.model.L2Character: int _disableBowAttackEndTime
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.skills.Calculator[] NPC_STD_CALCULATOR
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.ai.L2CharacterAI _ai
com.l2jfrozen.gameserver.model.L2Character: java.util.concurrent.Future _skillCast
com.l2jfrozen.gameserver.model.L2Character: java.util.concurrent.Future _potionCast
com.l2jfrozen.gameserver.model.L2Character: int _clientX
com.l2jfrozen.gameserver.model.L2Character: int _clientY
com.l2jfrozen.gameserver.model.L2Character: int _clientZ
com.l2jfrozen.gameserver.model.L2Character: int _clientHeading
com.l2jfrozen.gameserver.model.L2Character: java.util.List _NotifyQuestOfDeathList
com.l2jfrozen.gameserver.model.L2Character: java.util.concurrent.Future _PvPRegTask
com.l2jfrozen.gameserver.model.L2Character: long _pvpFlagLasts
com.l2jfrozen.gameserver.model.L2Character: long _nextReducingHPByOverTime
com.l2jfrozen.gameserver.model.L2Character: long _nextReducingMPByOverTime
com.l2jfrozen.gameserver.model.L2Character: boolean _petrified
com.l2jfrozen.gameserver.model.L2Character: boolean isInsideZone(int)
com.l2jfrozen.gameserver.model.L2Character: void setInsideZone(int,boolean)
com.l2jfrozen.gameserver.model.L2Character: boolean charIsGM()
com.l2jfrozen.gameserver.model.L2Character: L2Character(int,com.l2jfrozen.gameserver.templates.L2CharTemplate)
com.l2jfrozen.gameserver.model.L2Character: void initCharStatusUpdateValues()
com.l2jfrozen.gameserver.model.L2Character: void onDecay()
com.l2jfrozen.gameserver.model.L2Character: void onSpawn()
com.l2jfrozen.gameserver.model.L2Character: void onTeleported()
com.l2jfrozen.gameserver.model.L2Character: void addAttackerToAttackByList(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Character: boolean isStartingRotationAllowed()
com.l2jfrozen.gameserver.model.L2Character: void broadcastPacket(com.l2jfrozen.gameserver.network.serverpackets.L2GameServerPacket)
com.l2jfrozen.gameserver.model.L2Character: void broadcastPacket(com.l2jfrozen.gameserver.network.serverpackets.L2GameServerPacket,int)
com.l2jfrozen.gameserver.model.L2Character: boolean needHpUpdate(int)
com.l2jfrozen.gameserver.model.L2Character: void broadcastStatusUpdate()
com.l2jfrozen.gameserver.model.L2Character: void sendPacket(com.l2jfrozen.gameserver.network.serverpackets.L2GameServerPacket)
com.l2jfrozen.gameserver.model.L2Character: boolean isinTownWar()
com.l2jfrozen.gameserver.model.L2Character: void setInTownWar(boolean)
com.l2jfrozen.gameserver.model.L2Character: void teleToLocation(int,int,int,boolean)
com.l2jfrozen.gameserver.model.L2Character: void revalidateZone(boolean)
com.l2jfrozen.gameserver.model.L2Character: void teleToLocation(int,int,int)
com.l2jfrozen.gameserver.model.L2Character: void teleToLocation(com.l2jfrozen.gameserver.model.Location,boolean)
com.l2jfrozen.gameserver.model.L2Character: void teleToLocation(com.l2jfrozen.gameserver.datatables.csv.TeleportWhereType)
com.l2jfrozen.gameserver.model.L2Character: void doAttack(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Character: boolean doAttackHitByBow(com.l2jfrozen.gameserver.network.serverpackets.Attack,com.l2jfrozen.gameserver.model.L2Character,int,int)
com.l2jfrozen.gameserver.model.L2Character: boolean doAttackHitByDual(com.l2jfrozen.gameserver.network.serverpackets.Attack,com.l2jfrozen.gameserver.model.L2Character,int)
com.l2jfrozen.gameserver.model.L2Character: boolean doAttackHitByPole(com.l2jfrozen.gameserver.network.serverpackets.Attack,int)
com.l2jfrozen.gameserver.model.L2Character: boolean doAttackHitSimple(com.l2jfrozen.gameserver.network.serverpackets.Attack,com.l2jfrozen.gameserver.model.L2Character,int)
com.l2jfrozen.gameserver.model.L2Character: boolean doAttackHitSimple(com.l2jfrozen.gameserver.network.serverpackets.Attack,com.l2jfrozen.gameserver.model.L2Character,double,int)
com.l2jfrozen.gameserver.model.L2Character: void doCast(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.L2Character: void addTimeStamp(com.l2jfrozen.gameserver.model.L2Skill,int)
com.l2jfrozen.gameserver.model.L2Character: void removeTimeStamp(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.L2Character: void startForceBuff(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.L2Character: boolean doDie(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Character: void calculateRewards(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Character: void doRevive()
com.l2jfrozen.gameserver.model.L2Character: void doRevive(double)
com.l2jfrozen.gameserver.model.L2Character: void useMagic(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.ai.L2CharacterAI getAI()
com.l2jfrozen.gameserver.model.L2Character: void setAI(com.l2jfrozen.gameserver.ai.L2CharacterAI)
com.l2jfrozen.gameserver.model.L2Character: boolean hasAI()
com.l2jfrozen.gameserver.model.L2Character: boolean isRaid()
com.l2jfrozen.gameserver.model.L2Character: boolean isNpc()
com.l2jfrozen.gameserver.model.L2Character: java.util.List getAttackByList()
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.model.L2Skill getLastSkillCast()
com.l2jfrozen.gameserver.model.L2Character: void setLastSkillCast(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.model.L2Skill getLastPotionCast()
com.l2jfrozen.gameserver.model.L2Character: void setLastPotionCast(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.L2Character: boolean isAfraid()
com.l2jfrozen.gameserver.model.L2Character: void setIsAfraid(boolean)
com.l2jfrozen.gameserver.model.L2Character: boolean isAlikeDead()
com.l2jfrozen.gameserver.model.L2Character: boolean isAllSkillsDisabled()
com.l2jfrozen.gameserver.model.L2Character: boolean isAttackingDisabled()
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.skills.Calculator[] getCalculators()
com.l2jfrozen.gameserver.model.L2Character: boolean isConfused()
com.l2jfrozen.gameserver.model.L2Character: void setIsConfused(boolean)
com.l2jfrozen.gameserver.model.L2Character: boolean isDead()
com.l2jfrozen.gameserver.model.L2Character: boolean isFakeDeath()
com.l2jfrozen.gameserver.model.L2Character: void setIsFakeDeath(boolean)
com.l2jfrozen.gameserver.model.L2Character: boolean isFlying()
com.l2jfrozen.gameserver.model.L2Character: void setIsFlying(boolean)
com.l2jfrozen.gameserver.model.L2Character: boolean isFallsdown()
com.l2jfrozen.gameserver.model.L2Character: void setIsFallsdown(boolean)
com.l2jfrozen.gameserver.model.L2Character: boolean isImobilised()
com.l2jfrozen.gameserver.model.L2Character: void setIsImobilised(boolean)
com.l2jfrozen.gameserver.model.L2Character: boolean isBlockBuff()
com.l2jfrozen.gameserver.model.L2Character: void setBlockBuff(boolean)
com.l2jfrozen.gameserver.model.L2Character: boolean isBlockDebuff()
com.l2jfrozen.gameserver.model.L2Character: void setBlockDebuff(boolean)
com.l2jfrozen.gameserver.model.L2Character: boolean isKilledAlready()
com.l2jfrozen.gameserver.model.L2Character: void setIsKilledAlready(boolean)
com.l2jfrozen.gameserver.model.L2Character: boolean isMuted()
com.l2jfrozen.gameserver.model.L2Character: void setIsMuted(boolean)
com.l2jfrozen.gameserver.model.L2Character: boolean isPsychicalMuted()
com.l2jfrozen.gameserver.model.L2Character: void setIsPsychicalMuted(boolean)
com.l2jfrozen.gameserver.model.L2Character: boolean isMovementDisabled()
com.l2jfrozen.gameserver.model.L2Character: boolean isOutOfControl()
com.l2jfrozen.gameserver.model.L2Character: boolean isOverloaded()
com.l2jfrozen.gameserver.model.L2Character: void setIsOverloaded(boolean)
com.l2jfrozen.gameserver.model.L2Character: boolean isParalyzed()
com.l2jfrozen.gameserver.model.L2Character: void setIsParalyzed(boolean)
com.l2jfrozen.gameserver.model.L2Character: boolean isPendingRevive()
com.l2jfrozen.gameserver.model.L2Character: void setIsPendingRevive(boolean)
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.model.L2Summon getPet()
com.l2jfrozen.gameserver.model.L2Character: boolean isRiding()
com.l2jfrozen.gameserver.model.L2Character: void setIsRiding(boolean)
com.l2jfrozen.gameserver.model.L2Character: boolean isRooted()
com.l2jfrozen.gameserver.model.L2Character: void setIsRooted(boolean)
com.l2jfrozen.gameserver.model.L2Character: boolean isRunning()
com.l2jfrozen.gameserver.model.L2Character: void setIsRunning(boolean)
com.l2jfrozen.gameserver.model.L2Character: void setRunning()
com.l2jfrozen.gameserver.model.L2Character: boolean isImmobileUntilAttacked()
com.l2jfrozen.gameserver.model.L2Character: void setIsImmobileUntilAttacked(boolean)
com.l2jfrozen.gameserver.model.L2Character: boolean isSleeping()
com.l2jfrozen.gameserver.model.L2Character: void setIsSleeping(boolean)
com.l2jfrozen.gameserver.model.L2Character: boolean isStunned()
com.l2jfrozen.gameserver.model.L2Character: void setIsStunned(boolean)
com.l2jfrozen.gameserver.model.L2Character: boolean isBetrayed()
com.l2jfrozen.gameserver.model.L2Character: void setIsBetrayed(boolean)
com.l2jfrozen.gameserver.model.L2Character: boolean isTeleporting()
com.l2jfrozen.gameserver.model.L2Character: void setIsTeleporting(boolean)
com.l2jfrozen.gameserver.model.L2Character: void setIsInvul(boolean)
com.l2jfrozen.gameserver.model.L2Character: boolean isInvul()
com.l2jfrozen.gameserver.model.L2Character: boolean isUndead()
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.model.actor.knownlist.CharKnownList getKnownList()
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.model.actor.stat.CharStat getStat()
com.l2jfrozen.gameserver.model.L2Character: void setStat(com.l2jfrozen.gameserver.model.actor.stat.CharStat)
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.model.actor.status.CharStatus getStatus()
com.l2jfrozen.gameserver.model.L2Character: void setStatus(com.l2jfrozen.gameserver.model.actor.status.CharStatus)
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.templates.L2CharTemplate getTemplate()
com.l2jfrozen.gameserver.model.L2Character: void setTemplate(com.l2jfrozen.gameserver.templates.L2CharTemplate)
com.l2jfrozen.gameserver.model.L2Character: java.lang.String getTitle()
com.l2jfrozen.gameserver.model.L2Character: void setTitle(java.lang.String)
com.l2jfrozen.gameserver.model.L2Character: void setWalking()
com.l2jfrozen.gameserver.model.L2Character: void addEffect(com.l2jfrozen.gameserver.model.L2Effect)
com.l2jfrozen.gameserver.model.L2Character: java.util.List effectQueueInsert(com.l2jfrozen.gameserver.model.L2Effect,java.util.List)
com.l2jfrozen.gameserver.model.L2Character: void removeEffect(com.l2jfrozen.gameserver.model.L2Effect)
com.l2jfrozen.gameserver.model.L2Character: void startAbnormalEffect(int)
com.l2jfrozen.gameserver.model.L2Character: void startImmobileUntilAttacked()
com.l2jfrozen.gameserver.model.L2Character: void startConfused()
com.l2jfrozen.gameserver.model.L2Character: void startFakeDeath()
com.l2jfrozen.gameserver.model.L2Character: void startFear()
com.l2jfrozen.gameserver.model.L2Character: void startMuted()
com.l2jfrozen.gameserver.model.L2Character: void startPsychicalMuted()
com.l2jfrozen.gameserver.model.L2Character: void startRooted()
com.l2jfrozen.gameserver.model.L2Character: void startSleeping()
com.l2jfrozen.gameserver.model.L2Character: void startStunning()
com.l2jfrozen.gameserver.model.L2Character: void startBetray()
com.l2jfrozen.gameserver.model.L2Character: void stopBetray()
com.l2jfrozen.gameserver.model.L2Character: void stopAbnormalEffect(int)
com.l2jfrozen.gameserver.model.L2Character: void stopAllEffects()
com.l2jfrozen.gameserver.model.L2Character: void stopImmobileUntilAttacked(com.l2jfrozen.gameserver.model.L2Effect)
com.l2jfrozen.gameserver.model.L2Character: void stopConfused(com.l2jfrozen.gameserver.model.L2Effect)
com.l2jfrozen.gameserver.model.L2Character: void stopSkillEffects(int)
com.l2jfrozen.gameserver.model.L2Character: void stopEffects(com.l2jfrozen.gameserver.model.EffectType)
com.l2jfrozen.gameserver.model.L2Character: void stopSkillEffects(com.l2jfrozen.gameserver.model.SkillType,double)
com.l2jfrozen.gameserver.model.L2Character: void stopSkillEffects(com.l2jfrozen.gameserver.model.SkillType)
com.l2jfrozen.gameserver.model.L2Character: void stopFakeDeath(com.l2jfrozen.gameserver.model.L2Effect)
com.l2jfrozen.gameserver.model.L2Character: void stopFear(com.l2jfrozen.gameserver.model.L2Effect)
com.l2jfrozen.gameserver.model.L2Character: void stopMuted(com.l2jfrozen.gameserver.model.L2Effect)
com.l2jfrozen.gameserver.model.L2Character: void stopPsychicalMuted(com.l2jfrozen.gameserver.model.L2Effect)
com.l2jfrozen.gameserver.model.L2Character: void stopRooting(com.l2jfrozen.gameserver.model.L2Effect)
com.l2jfrozen.gameserver.model.L2Character: void stopSleeping(com.l2jfrozen.gameserver.model.L2Effect)
com.l2jfrozen.gameserver.model.L2Character: void stopStunning(com.l2jfrozen.gameserver.model.L2Effect)
com.l2jfrozen.gameserver.model.L2Character: void updateAbnormalEffect()
com.l2jfrozen.gameserver.model.L2Character: void updateEffectIcons()
com.l2jfrozen.gameserver.model.L2Character: void updateEffectIcons(boolean)
com.l2jfrozen.gameserver.model.L2Character: int getAbnormalEffect()
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.model.L2Effect[] getAllEffects()
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.model.L2Effect getFirstEffect(int)
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.model.L2Effect getFirstEffect(com.l2jfrozen.gameserver.model.SkillType)
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.model.L2Effect getFirstEffect(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.model.L2Effect getFirstEffect(com.l2jfrozen.gameserver.model.EffectType)
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.skills.effects.EffectCharge getChargeEffect()
com.l2jfrozen.gameserver.model.L2Character: void addNotifyQuestOfDeath(com.l2jfrozen.gameserver.model.quest.QuestState)
com.l2jfrozen.gameserver.model.L2Character: java.util.List getNotifyQuestOfDeath()
com.l2jfrozen.gameserver.model.L2Character: void addStatFunc(com.l2jfrozen.gameserver.skills.funcs.Func)
com.l2jfrozen.gameserver.model.L2Character: void addStatFuncs(com.l2jfrozen.gameserver.skills.funcs.Func[])
com.l2jfrozen.gameserver.model.L2Character: void removeStatFunc(com.l2jfrozen.gameserver.skills.funcs.Func)
com.l2jfrozen.gameserver.model.L2Character: void removeStatFuncs(com.l2jfrozen.gameserver.skills.funcs.Func[])
com.l2jfrozen.gameserver.model.L2Character: void removeStatsOwner(java.lang.Object)
com.l2jfrozen.gameserver.model.L2Character: void broadcastModifiedStats(javolution.util.FastList)
com.l2jfrozen.gameserver.model.L2Character: int getHeading()
com.l2jfrozen.gameserver.model.L2Character: void setHeading(int)
com.l2jfrozen.gameserver.model.L2Character: int getClientX()
com.l2jfrozen.gameserver.model.L2Character: int getClientY()
com.l2jfrozen.gameserver.model.L2Character: int getClientZ()
com.l2jfrozen.gameserver.model.L2Character: int getClientHeading()
com.l2jfrozen.gameserver.model.L2Character: void setClientX(int)
com.l2jfrozen.gameserver.model.L2Character: void setClientY(int)
com.l2jfrozen.gameserver.model.L2Character: void setClientZ(int)
com.l2jfrozen.gameserver.model.L2Character: void setClientHeading(int)
com.l2jfrozen.gameserver.model.L2Character: int getXdestination()
com.l2jfrozen.gameserver.model.L2Character: int getYdestination()
com.l2jfrozen.gameserver.model.L2Character: int getZdestination()
com.l2jfrozen.gameserver.model.L2Character: boolean isInCombat()
com.l2jfrozen.gameserver.model.L2Character: boolean isMoving()
com.l2jfrozen.gameserver.model.L2Character: boolean isOnGeodataPath()
com.l2jfrozen.gameserver.model.L2Character: boolean isCastingNow()
com.l2jfrozen.gameserver.model.L2Character: boolean isCastingPotionNow()
com.l2jfrozen.gameserver.model.L2Character: boolean canAbortCast()
com.l2jfrozen.gameserver.model.L2Character: boolean isAttackingNow()
com.l2jfrozen.gameserver.model.L2Character: boolean isAttackAborted()
com.l2jfrozen.gameserver.model.L2Character: void abortAttack()
com.l2jfrozen.gameserver.model.L2Character: int getAttackingBodyPart()
com.l2jfrozen.gameserver.model.L2Character: void abortCast()
com.l2jfrozen.gameserver.model.L2Character: void abortCast(boolean)
com.l2jfrozen.gameserver.model.L2Character: boolean updatePosition(int)
com.l2jfrozen.gameserver.model.L2Character: void revalidateZone()
com.l2jfrozen.gameserver.model.L2Character: void stopMove(com.l2jfrozen.gameserver.model.actor.position.L2CharPosition)
com.l2jfrozen.gameserver.model.L2Character: void stopMove(com.l2jfrozen.gameserver.model.actor.position.L2CharPosition,boolean)
com.l2jfrozen.gameserver.model.L2Character: void setTarget(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.L2Character: int getTargetId()
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.model.L2Object getTarget()
com.l2jfrozen.gameserver.model.L2Character: void moveToLocation(int,int,int,int)
com.l2jfrozen.gameserver.model.L2Character: boolean moveToNextRoutePoint()
com.l2jfrozen.gameserver.model.L2Character: boolean validateMovementHeading(int)
com.l2jfrozen.gameserver.model.L2Character: double getDistance(int,int)
com.l2jfrozen.gameserver.model.L2Character: double getDistance(int,int,int)
com.l2jfrozen.gameserver.model.L2Character: double getDistanceSq(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.L2Character: double getDistanceSq(int,int,int)
com.l2jfrozen.gameserver.model.L2Character: double getPlanDistanceSq(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.L2Character: double getPlanDistanceSq(int,int)
com.l2jfrozen.gameserver.model.L2Character: boolean isInsideRadius(com.l2jfrozen.gameserver.model.L2Object,int,boolean,boolean)
com.l2jfrozen.gameserver.model.L2Character: boolean isInsideRadius(int,int,int,boolean)
com.l2jfrozen.gameserver.model.L2Character: boolean isInsideRadius(int,int,int,int,boolean,boolean)
com.l2jfrozen.gameserver.model.L2Character: float getWeaponExpertisePenalty()
com.l2jfrozen.gameserver.model.L2Character: float getArmourExpertisePenalty()
com.l2jfrozen.gameserver.model.L2Character: void setAttackingBodypart()
com.l2jfrozen.gameserver.model.L2Character: boolean checkAndEquipArrows()
com.l2jfrozen.gameserver.model.L2Character: void addExpAndSp(long,int)
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance getActiveWeaponInstance()
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.templates.L2Weapon getActiveWeaponItem()
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance getSecondaryWeaponInstance()
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.templates.L2Weapon getSecondaryWeaponItem()
com.l2jfrozen.gameserver.model.L2Character: void onHitTimer(com.l2jfrozen.gameserver.model.L2Character,int,boolean,boolean,boolean,boolean)
com.l2jfrozen.gameserver.model.L2Character: void breakAttack()
com.l2jfrozen.gameserver.model.L2Character: void breakCast()
com.l2jfrozen.gameserver.model.L2Character: void reduceArrowCount()
com.l2jfrozen.gameserver.model.L2Character: void onForcedAttack(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2Character: boolean isInsidePeaceZone(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2Character: boolean isInsidePeaceZone(com.l2jfrozen.gameserver.model.L2Object,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.L2Character: java.lang.Boolean isInActiveRegion()
com.l2jfrozen.gameserver.model.L2Character: boolean isInParty()
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.model.L2Party getParty()
com.l2jfrozen.gameserver.model.L2Character: int calculateTimeBetweenAttacks(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.templates.L2Weapon)
com.l2jfrozen.gameserver.model.L2Character: int calculateReuseTime(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.templates.L2Weapon)
com.l2jfrozen.gameserver.model.L2Character: boolean isUsingDualWeapon()
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.model.L2Skill addSkill(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.L2Character: void addChanceSkill(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.L2Character: void removeChanceSkill(int)
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.model.L2Skill removeSkill(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.model.L2Skill removeSkill(int)
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.model.L2Skill removeSkill(int,boolean)
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.model.L2Skill[] getAllSkills()
com.l2jfrozen.gameserver.model.L2Character: java.util.Map getSkills()
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.model.ChanceSkillList getChanceSkills()
com.l2jfrozen.gameserver.model.L2Character: int getSkillLevel(int)
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.model.L2Skill getKnownSkill(int)
com.l2jfrozen.gameserver.model.L2Character: int getBuffCount()
com.l2jfrozen.gameserver.model.L2Character: int getDeBuffCount()
com.l2jfrozen.gameserver.model.L2Character: int getMaxBuffCount()
com.l2jfrozen.gameserver.model.L2Character: void removeFirstBuff(int)
com.l2jfrozen.gameserver.model.L2Character: void removeFirstDeBuff(int)
com.l2jfrozen.gameserver.model.L2Character: int getDanceCount()
com.l2jfrozen.gameserver.model.L2Character: boolean doesStack(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.L2Character: void onMagicLaunchedTimer(com.l2jfrozen.gameserver.model.L2Object[],com.l2jfrozen.gameserver.model.L2Skill,int,boolean)
com.l2jfrozen.gameserver.model.L2Character: void onMagicHitTimer(com.l2jfrozen.gameserver.model.L2Object[],com.l2jfrozen.gameserver.model.L2Skill,int,boolean)
com.l2jfrozen.gameserver.model.L2Character: void onMagicFinalizer(com.l2jfrozen.gameserver.model.L2Object[],com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.L2Character: void notifyQuestEventSkillFinished(com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.L2Character: void consumeItem(int,int)
com.l2jfrozen.gameserver.model.L2Character: void enableSkill(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.L2Character: void disableSkill(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.L2Character: void disableSkill(com.l2jfrozen.gameserver.model.L2Skill,long)
com.l2jfrozen.gameserver.model.L2Character: boolean isSkillDisabled(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.L2Character: void disableAllSkills()
com.l2jfrozen.gameserver.model.L2Character: void enableAllSkills()
com.l2jfrozen.gameserver.model.L2Character: void callSkill(com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.model.L2Character: void seeSpell(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Object,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.L2Character: boolean isBehind(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.L2Character: boolean isBehindTarget()
com.l2jfrozen.gameserver.model.L2Character: boolean isFacing(com.l2jfrozen.gameserver.model.L2Object,int)
com.l2jfrozen.gameserver.model.L2Character: boolean isFront(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.L2Character: boolean isFrontTarget()
com.l2jfrozen.gameserver.model.L2Character: boolean isSide(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.L2Character: boolean isSideTarget()
com.l2jfrozen.gameserver.model.L2Character: double getLevelMod()
com.l2jfrozen.gameserver.model.L2Character: void setSkillCast(java.util.concurrent.Future)
com.l2jfrozen.gameserver.model.L2Character: void setSkillCastEndTime(int)
com.l2jfrozen.gameserver.model.L2Character: void setPvpFlagLasts(long)
com.l2jfrozen.gameserver.model.L2Character: long getPvpFlagLasts()
com.l2jfrozen.gameserver.model.L2Character: void startPvPFlag()
com.l2jfrozen.gameserver.model.L2Character: void stopPvpRegTask()
com.l2jfrozen.gameserver.model.L2Character: void stopPvPFlag()
com.l2jfrozen.gameserver.model.L2Character: void updatePvPFlag(int)
com.l2jfrozen.gameserver.model.L2Character: int getRandomDamage(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Character: java.lang.String toString()
com.l2jfrozen.gameserver.model.L2Character: int getAttackEndTime()
com.l2jfrozen.gameserver.model.L2Character: int getLevel()
com.l2jfrozen.gameserver.model.L2Character: double calcStat(com.l2jfrozen.gameserver.skills.Stats,double,com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.L2Character: int getAccuracy()
com.l2jfrozen.gameserver.model.L2Character: float getAttackSpeedMultiplier()
com.l2jfrozen.gameserver.model.L2Character: int getCON()
com.l2jfrozen.gameserver.model.L2Character: int getDEX()
com.l2jfrozen.gameserver.model.L2Character: double getCriticalDmg(com.l2jfrozen.gameserver.model.L2Character,double)
com.l2jfrozen.gameserver.model.L2Character: int getCriticalHit(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.L2Character: int getEvasionRate(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Character: int getINT()
com.l2jfrozen.gameserver.model.L2Character: int getMagicalAttackRange(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.L2Character: int getMaxCp()
com.l2jfrozen.gameserver.model.L2Character: int getMAtk(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.L2Character: int getMAtkSpd()
com.l2jfrozen.gameserver.model.L2Character: int getMaxMp()
com.l2jfrozen.gameserver.model.L2Character: int getMaxHp()
com.l2jfrozen.gameserver.model.L2Character: int getMCriticalHit(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.L2Character: int getMDef(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.L2Character: int getMEN()
com.l2jfrozen.gameserver.model.L2Character: double getMReuseRate(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.L2Character: float getMovementSpeedMultiplier()
com.l2jfrozen.gameserver.model.L2Character: int getPAtk(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Character: double getPAtkAnimals(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Character: double getPAtkDragons(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Character: double getPAtkAngels(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Character: double getPAtkInsects(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Character: double getPAtkMonsters(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Character: double getPAtkPlants(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Character: int getPAtkSpd()
com.l2jfrozen.gameserver.model.L2Character: double getPAtkUndead(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Character: double getPDefUndead(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Character: double getPDefPlants(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Character: double getPDefInsects(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Character: double getPDefAnimals(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Character: double getPDefMonsters(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Character: double getPDefDragons(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Character: double getPDefAngels(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Character: int getPDef(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Character: double getPAtkGiants(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Character: double getPAtkMagicCreatures(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Character: double getPDefGiants(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Character: double getPDefMagicCreatures(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Character: int getPhysicalAttackRange()
com.l2jfrozen.gameserver.model.L2Character: int getRunSpeed()
com.l2jfrozen.gameserver.model.L2Character: int getShldDef()
com.l2jfrozen.gameserver.model.L2Character: int getSTR()
com.l2jfrozen.gameserver.model.L2Character: int getWalkSpeed()
com.l2jfrozen.gameserver.model.L2Character: int getWIT()
com.l2jfrozen.gameserver.model.L2Character: void addStatusListener(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Character: void reduceCurrentHp(double,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Character: void reduceCurrentHp(double,com.l2jfrozen.gameserver.model.L2Character,boolean)
com.l2jfrozen.gameserver.model.L2Character: void reduceCurrentHpByDamOverTime(double,com.l2jfrozen.gameserver.model.L2Character,boolean,int)
com.l2jfrozen.gameserver.model.L2Character: void reduceCurrentMpByDamOverTime(double,int)
com.l2jfrozen.gameserver.model.L2Character: void reduceCurrentMp(double)
com.l2jfrozen.gameserver.model.L2Character: void removeStatusListener(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Character: void stopHpMpRegeneration()
com.l2jfrozen.gameserver.model.L2Character: double getCurrentCp()
com.l2jfrozen.gameserver.model.L2Character: void setCurrentCp(java.lang.Double)
com.l2jfrozen.gameserver.model.L2Character: void setCurrentCp(double)
com.l2jfrozen.gameserver.model.L2Character: double getCurrentHp()
com.l2jfrozen.gameserver.model.L2Character: void setCurrentHp(double)
com.l2jfrozen.gameserver.model.L2Character: void setCurrentHpDirect(double)
com.l2jfrozen.gameserver.model.L2Character: void setCurrentCpDirect(double)
com.l2jfrozen.gameserver.model.L2Character: void setCurrentMpDirect(double)
com.l2jfrozen.gameserver.model.L2Character: void setCurrentHpMp(double,double)
com.l2jfrozen.gameserver.model.L2Character: double getCurrentMp()
com.l2jfrozen.gameserver.model.L2Character: void setCurrentMp(java.lang.Double)
com.l2jfrozen.gameserver.model.L2Character: void setCurrentMp(double)
com.l2jfrozen.gameserver.model.L2Character: void setAiClass(java.lang.String)
com.l2jfrozen.gameserver.model.L2Character: java.lang.String getAiClass()
com.l2jfrozen.gameserver.model.L2Character: void setChampion(boolean)
com.l2jfrozen.gameserver.model.L2Character: boolean isChampion()
com.l2jfrozen.gameserver.model.L2Character: int getLastHealAmount()
com.l2jfrozen.gameserver.model.L2Character: void setLastHealAmount(int)
com.l2jfrozen.gameserver.model.L2Character: boolean is_advanceFlag()
com.l2jfrozen.gameserver.model.L2Character: void set_advanceFlag(boolean)
com.l2jfrozen.gameserver.model.L2Character: void set_advanceMultiplier(int)
com.l2jfrozen.gameserver.model.L2Character: boolean reflectSkill(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.L2Character: boolean vengeanceSkill(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.L2Character: void sendDamageMessage(com.l2jfrozen.gameserver.model.L2Character,int,boolean,boolean,boolean)
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.model.ForceBuff getForceBuff()
com.l2jfrozen.gameserver.model.L2Character: void setForceBuff(com.l2jfrozen.gameserver.model.ForceBuff)
com.l2jfrozen.gameserver.model.L2Character: boolean isFearImmune()
com.l2jfrozen.gameserver.model.L2Character: void restoreHPMP()
com.l2jfrozen.gameserver.model.L2Character: void restoreCP()
com.l2jfrozen.gameserver.model.L2Character: void block()
com.l2jfrozen.gameserver.model.L2Character: void unblock()
com.l2jfrozen.gameserver.model.L2Character: boolean isBlocked()
com.l2jfrozen.gameserver.model.L2Character: boolean isMeditated()
com.l2jfrozen.gameserver.model.L2Character: void setMeditated(boolean)
com.l2jfrozen.gameserver.model.L2Character: void updateAttackStance()
com.l2jfrozen.gameserver.model.L2Character: long getAttackStance()
com.l2jfrozen.gameserver.model.L2Character: boolean isPetrified()
com.l2jfrozen.gameserver.model.L2Character: void setPetrified(boolean)
com.l2jfrozen.gameserver.model.L2Character: boolean checkBss()
com.l2jfrozen.gameserver.model.L2Character: void removeBss()
com.l2jfrozen.gameserver.model.L2Character: boolean checkSps()
com.l2jfrozen.gameserver.model.L2Character: void removeSps()
com.l2jfrozen.gameserver.model.L2Character: boolean checkSs()
com.l2jfrozen.gameserver.model.L2Character: void removeSs()
com.l2jfrozen.gameserver.model.L2Character: double getRandomDamageMultiplier()
com.l2jfrozen.gameserver.model.L2Character: void setIsBuffProtected(boolean)
com.l2jfrozen.gameserver.model.L2Character: boolean isBuffProtected()
com.l2jfrozen.gameserver.model.L2Character: java.util.Map get_triggeredSkills()
com.l2jfrozen.gameserver.model.L2Character: void setTargetTrasformedNpc(com.l2jfrozen.gameserver.model.L2Attackable)
com.l2jfrozen.gameserver.model.L2Character: boolean isUnkillable()
com.l2jfrozen.gameserver.model.L2Character: void setIsUnkillable(boolean)
com.l2jfrozen.gameserver.model.L2Character: boolean isAttackDisabled()
com.l2jfrozen.gameserver.model.L2Character: void setIsAttackDisabled(boolean)
com.l2jfrozen.gameserver.model.L2Character: void reloadShots(boolean)
com.l2jfrozen.gameserver.model.L2Character: com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList getKnownList()
com.l2jfrozen.gameserver.model.L2Character: void <clinit>()
com.l2jfrozen.gameserver.model.L2Character$1
com.l2jfrozen.gameserver.model.L2Character$1: int[] $SwitchMap$com$l2jfrozen$gameserver$model$SkillTargetType
com.l2jfrozen.gameserver.model.L2Character$1: int[] $SwitchMap$com$l2jfrozen$gameserver$templates$L2WeaponType
com.l2jfrozen.gameserver.model.L2Character$1: int[] $SwitchMap$com$l2jfrozen$gameserver$model$SkillType
com.l2jfrozen.gameserver.model.L2Character$1: void <clinit>()
com.l2jfrozen.gameserver.model.L2Character$AIAccessor
com.l2jfrozen.gameserver.model.L2Character$AIAccessor: com.l2jfrozen.gameserver.model.L2Character this$0
com.l2jfrozen.gameserver.model.L2Character$AIAccessor: L2Character$AIAccessor(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Character$AIAccessor: com.l2jfrozen.gameserver.model.L2Character getActor()
com.l2jfrozen.gameserver.model.L2Character$AIAccessor: void moveTo(int,int,int,int)
com.l2jfrozen.gameserver.model.L2Character$AIAccessor: void moveTo(int,int,int)
com.l2jfrozen.gameserver.model.L2Character$AIAccessor: void stopMove(com.l2jfrozen.gameserver.model.actor.position.L2CharPosition)
com.l2jfrozen.gameserver.model.L2Character$AIAccessor: void doAttack(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Character$AIAccessor: void doCast(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.L2Character$AIAccessor: com.l2jfrozen.gameserver.model.L2Character$NotifyAITask newNotifyTask(com.l2jfrozen.gameserver.ai.CtrlEvent)
com.l2jfrozen.gameserver.model.L2Character$AIAccessor: void detachAI()
com.l2jfrozen.gameserver.model.L2Character$EnableSkill
com.l2jfrozen.gameserver.model.L2Character$EnableSkill: com.l2jfrozen.gameserver.model.L2Skill _skillId
com.l2jfrozen.gameserver.model.L2Character$EnableSkill: com.l2jfrozen.gameserver.model.L2Character this$0
com.l2jfrozen.gameserver.model.L2Character$EnableSkill: L2Character$EnableSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.L2Character$EnableSkill: void run()
com.l2jfrozen.gameserver.model.L2Character$HitTask
com.l2jfrozen.gameserver.model.L2Character$HitTask: com.l2jfrozen.gameserver.model.L2Character _hitTarget
com.l2jfrozen.gameserver.model.L2Character$HitTask: int _damage
com.l2jfrozen.gameserver.model.L2Character$HitTask: boolean _crit
com.l2jfrozen.gameserver.model.L2Character$HitTask: boolean _miss
com.l2jfrozen.gameserver.model.L2Character$HitTask: boolean _shld
com.l2jfrozen.gameserver.model.L2Character$HitTask: boolean _soulshot
com.l2jfrozen.gameserver.model.L2Character$HitTask: com.l2jfrozen.gameserver.model.L2Character this$0
com.l2jfrozen.gameserver.model.L2Character$HitTask: L2Character$HitTask(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Character,int,boolean,boolean,boolean,boolean)
com.l2jfrozen.gameserver.model.L2Character$HitTask: void run()
com.l2jfrozen.gameserver.model.L2Character$MagicUseTask
com.l2jfrozen.gameserver.model.L2Character$MagicUseTask: com.l2jfrozen.gameserver.model.L2Object[] _targets
com.l2jfrozen.gameserver.model.L2Character$MagicUseTask: com.l2jfrozen.gameserver.model.L2Skill _skill
com.l2jfrozen.gameserver.model.L2Character$MagicUseTask: int _coolTime
com.l2jfrozen.gameserver.model.L2Character$MagicUseTask: int _phase
com.l2jfrozen.gameserver.model.L2Character$MagicUseTask: com.l2jfrozen.gameserver.model.L2Character this$0
com.l2jfrozen.gameserver.model.L2Character$MagicUseTask: L2Character$MagicUseTask(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Object[],com.l2jfrozen.gameserver.model.L2Skill,int,int)
com.l2jfrozen.gameserver.model.L2Character$MagicUseTask: void run()
com.l2jfrozen.gameserver.model.L2Character$MoveData
com.l2jfrozen.gameserver.model.L2Character$MoveData: int _moveStartTime
com.l2jfrozen.gameserver.model.L2Character$MoveData: int _moveTimestamp
com.l2jfrozen.gameserver.model.L2Character$MoveData: int _xDestination
com.l2jfrozen.gameserver.model.L2Character$MoveData: int _yDestination
com.l2jfrozen.gameserver.model.L2Character$MoveData: int _zDestination
com.l2jfrozen.gameserver.model.L2Character$MoveData: double _xAccurate
com.l2jfrozen.gameserver.model.L2Character$MoveData: double _yAccurate
com.l2jfrozen.gameserver.model.L2Character$MoveData: double _zAccurate
com.l2jfrozen.gameserver.model.L2Character$MoveData: int _heading
com.l2jfrozen.gameserver.model.L2Character$MoveData: boolean disregardingGeodata
com.l2jfrozen.gameserver.model.L2Character$MoveData: int onGeodataPathIndex
com.l2jfrozen.gameserver.model.L2Character$MoveData: com.l2jfrozen.gameserver.geo.pathfinding.Node[] geoPath
com.l2jfrozen.gameserver.model.L2Character$MoveData: int geoPathAccurateTx
com.l2jfrozen.gameserver.model.L2Character$MoveData: int geoPathAccurateTy
com.l2jfrozen.gameserver.model.L2Character$MoveData: int geoPathGtx
com.l2jfrozen.gameserver.model.L2Character$MoveData: int geoPathGty
com.l2jfrozen.gameserver.model.L2Character$MoveData: L2Character$MoveData()
com.l2jfrozen.gameserver.model.L2Character$NotifyAITask
com.l2jfrozen.gameserver.model.L2Character$NotifyAITask: com.l2jfrozen.gameserver.ai.CtrlEvent _evt
com.l2jfrozen.gameserver.model.L2Character$NotifyAITask: com.l2jfrozen.gameserver.model.L2Character this$0
com.l2jfrozen.gameserver.model.L2Character$NotifyAITask: L2Character$NotifyAITask(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.ai.CtrlEvent)
com.l2jfrozen.gameserver.model.L2Character$NotifyAITask: void run()
com.l2jfrozen.gameserver.model.L2Character$PvPFlag
com.l2jfrozen.gameserver.model.L2Character$PvPFlag: com.l2jfrozen.gameserver.model.L2Character this$0
com.l2jfrozen.gameserver.model.L2Character$PvPFlag: L2Character$PvPFlag(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Character$PvPFlag: void run()
com.l2jfrozen.gameserver.model.L2Character$QueuedMagicUseTask
com.l2jfrozen.gameserver.model.L2Character$QueuedMagicUseTask: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _currPlayer
com.l2jfrozen.gameserver.model.L2Character$QueuedMagicUseTask: com.l2jfrozen.gameserver.model.L2Skill _queuedSkill
com.l2jfrozen.gameserver.model.L2Character$QueuedMagicUseTask: boolean _isCtrlPressed
com.l2jfrozen.gameserver.model.L2Character$QueuedMagicUseTask: boolean _isShiftPressed
com.l2jfrozen.gameserver.model.L2Character$QueuedMagicUseTask: com.l2jfrozen.gameserver.model.L2Character this$0
com.l2jfrozen.gameserver.model.L2Character$QueuedMagicUseTask: L2Character$QueuedMagicUseTask(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Skill,boolean,boolean)
com.l2jfrozen.gameserver.model.L2Character$QueuedMagicUseTask: void run()
com.l2jfrozen.gameserver.model.L2Character$notifyAiTaskDelayed
com.l2jfrozen.gameserver.model.L2Character$notifyAiTaskDelayed: com.l2jfrozen.gameserver.ai.CtrlEvent event
com.l2jfrozen.gameserver.model.L2Character$notifyAiTaskDelayed: java.lang.Object object
com.l2jfrozen.gameserver.model.L2Character$notifyAiTaskDelayed: com.l2jfrozen.gameserver.model.L2Object tgt
com.l2jfrozen.gameserver.model.L2Character$notifyAiTaskDelayed: L2Character$notifyAiTaskDelayed(com.l2jfrozen.gameserver.ai.CtrlEvent,java.lang.Object,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.L2Character$notifyAiTaskDelayed: void run()
com.l2jfrozen.gameserver.model.L2Clan
com.l2jfrozen.gameserver.model.L2Clan: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.L2Clan: java.lang.String _name
com.l2jfrozen.gameserver.model.L2Clan: int _clanId
com.l2jfrozen.gameserver.model.L2Clan: com.l2jfrozen.gameserver.model.L2ClanMember _leader
com.l2jfrozen.gameserver.model.L2Clan: java.util.Map _members
com.l2jfrozen.gameserver.model.L2Clan: java.lang.String _allyName
com.l2jfrozen.gameserver.model.L2Clan: int _allyId
com.l2jfrozen.gameserver.model.L2Clan: int _level
com.l2jfrozen.gameserver.model.L2Clan: int _hasCastle
com.l2jfrozen.gameserver.model.L2Clan: int _hasFort
com.l2jfrozen.gameserver.model.L2Clan: int _hasHideout
com.l2jfrozen.gameserver.model.L2Clan: boolean _hasCrest
com.l2jfrozen.gameserver.model.L2Clan: int _hiredGuards
com.l2jfrozen.gameserver.model.L2Clan: int _crestId
com.l2jfrozen.gameserver.model.L2Clan: int _crestLargeId
com.l2jfrozen.gameserver.model.L2Clan: int _allyCrestId
com.l2jfrozen.gameserver.model.L2Clan: int _auctionBiddedAt
com.l2jfrozen.gameserver.model.L2Clan: long _allyPenaltyExpiryTime
com.l2jfrozen.gameserver.model.L2Clan: int _allyPenaltyType
com.l2jfrozen.gameserver.model.L2Clan: long _charPenaltyExpiryTime
com.l2jfrozen.gameserver.model.L2Clan: long _dissolvingExpiryTime
com.l2jfrozen.gameserver.model.L2Clan: int PENALTY_TYPE_CLAN_LEAVED
com.l2jfrozen.gameserver.model.L2Clan: int PENALTY_TYPE_CLAN_DISMISSED
com.l2jfrozen.gameserver.model.L2Clan: int PENALTY_TYPE_DISMISS_CLAN
com.l2jfrozen.gameserver.model.L2Clan: int PENALTY_TYPE_DISSOLVE_ALLY
com.l2jfrozen.gameserver.model.L2Clan: com.l2jfrozen.gameserver.model.ItemContainer _warehouse
com.l2jfrozen.gameserver.model.L2Clan: java.util.List _atWarWith
com.l2jfrozen.gameserver.model.L2Clan: java.util.List _atWarAttackers
com.l2jfrozen.gameserver.model.L2Clan: boolean _hasCrestLarge
com.l2jfrozen.gameserver.model.L2Clan: com.l2jfrozen.gameserver.communitybbs.BB.Forum _forum
com.l2jfrozen.gameserver.model.L2Clan: java.util.List _skillList
com.l2jfrozen.gameserver.model.L2Clan: java.lang.String _notice
com.l2jfrozen.gameserver.model.L2Clan: boolean _noticeEnabled
com.l2jfrozen.gameserver.model.L2Clan: int MAX_NOTICE_LENGTH
com.l2jfrozen.gameserver.model.L2Clan: int CP_NOTHING
com.l2jfrozen.gameserver.model.L2Clan: int CP_CL_JOIN_CLAN
com.l2jfrozen.gameserver.model.L2Clan: int CP_CL_GIVE_TITLE
com.l2jfrozen.gameserver.model.L2Clan: int CP_CL_VIEW_WAREHOUSE
com.l2jfrozen.gameserver.model.L2Clan: int CP_CL_MANAGE_RANKS
com.l2jfrozen.gameserver.model.L2Clan: int CP_CL_PLEDGE_WAR
com.l2jfrozen.gameserver.model.L2Clan: int CP_CL_DISMISS
com.l2jfrozen.gameserver.model.L2Clan: int CP_CL_REGISTER_CREST
com.l2jfrozen.gameserver.model.L2Clan: int CP_CL_MASTER_RIGHTS
com.l2jfrozen.gameserver.model.L2Clan: int CP_CL_MANAGE_LEVELS
com.l2jfrozen.gameserver.model.L2Clan: int CP_CH_OPEN_DOOR
com.l2jfrozen.gameserver.model.L2Clan: int CP_CH_OTHER_RIGHTS
com.l2jfrozen.gameserver.model.L2Clan: int CP_CH_AUCTION
com.l2jfrozen.gameserver.model.L2Clan: int CP_CH_DISMISS
com.l2jfrozen.gameserver.model.L2Clan: int CP_CH_SET_FUNCTIONS
com.l2jfrozen.gameserver.model.L2Clan: int CP_CS_OPEN_DOOR
com.l2jfrozen.gameserver.model.L2Clan: int CP_CS_MANOR_ADMIN
com.l2jfrozen.gameserver.model.L2Clan: int CP_CS_MANAGE_SIEGE
com.l2jfrozen.gameserver.model.L2Clan: int CP_CS_USE_FUNCTIONS
com.l2jfrozen.gameserver.model.L2Clan: int CP_CS_DISMISS
com.l2jfrozen.gameserver.model.L2Clan: int CP_CS_TAXES
com.l2jfrozen.gameserver.model.L2Clan: int CP_CS_MERCENARIES
com.l2jfrozen.gameserver.model.L2Clan: int CP_CS_SET_FUNCTIONS
com.l2jfrozen.gameserver.model.L2Clan: int CP_ALL
com.l2jfrozen.gameserver.model.L2Clan: int SUBUNIT_ACADEMY
com.l2jfrozen.gameserver.model.L2Clan: int SUBUNIT_ROYAL1
com.l2jfrozen.gameserver.model.L2Clan: int SUBUNIT_ROYAL2
com.l2jfrozen.gameserver.model.L2Clan: int SUBUNIT_KNIGHT1
com.l2jfrozen.gameserver.model.L2Clan: int SUBUNIT_KNIGHT2
com.l2jfrozen.gameserver.model.L2Clan: int SUBUNIT_KNIGHT3
com.l2jfrozen.gameserver.model.L2Clan: int SUBUNIT_KNIGHT4
com.l2jfrozen.gameserver.model.L2Clan: java.util.Map _skills
com.l2jfrozen.gameserver.model.L2Clan: java.util.Map _privs
com.l2jfrozen.gameserver.model.L2Clan: java.util.Map _subPledges
com.l2jfrozen.gameserver.model.L2Clan: int _reputationScore
com.l2jfrozen.gameserver.model.L2Clan: int _rank
com.l2jfrozen.gameserver.model.L2Clan: L2Clan(int)
com.l2jfrozen.gameserver.model.L2Clan: L2Clan(int,java.lang.String)
com.l2jfrozen.gameserver.model.L2Clan: int getClanId()
com.l2jfrozen.gameserver.model.L2Clan: void setClanId(int)
com.l2jfrozen.gameserver.model.L2Clan: int getLeaderId()
com.l2jfrozen.gameserver.model.L2Clan: com.l2jfrozen.gameserver.model.L2ClanMember getLeader()
com.l2jfrozen.gameserver.model.L2Clan: boolean setLeader(com.l2jfrozen.gameserver.model.L2ClanMember)
com.l2jfrozen.gameserver.model.L2Clan: void setNewLeader(com.l2jfrozen.gameserver.model.L2ClanMember,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2Clan: java.lang.String getLeaderName()
com.l2jfrozen.gameserver.model.L2Clan: java.lang.String getName()
com.l2jfrozen.gameserver.model.L2Clan: void setName(java.lang.String)
com.l2jfrozen.gameserver.model.L2Clan: void addClanMember(com.l2jfrozen.gameserver.model.L2ClanMember)
com.l2jfrozen.gameserver.model.L2Clan: void addClanMember(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2Clan: void updateClanMember(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2Clan: com.l2jfrozen.gameserver.model.L2ClanMember getClanMember(java.lang.String)
com.l2jfrozen.gameserver.model.L2Clan: com.l2jfrozen.gameserver.model.L2ClanMember getClanMember(int)
com.l2jfrozen.gameserver.model.L2Clan: void removeClanMember(java.lang.String,long)
com.l2jfrozen.gameserver.model.L2Clan: com.l2jfrozen.gameserver.model.L2ClanMember[] getMembers()
com.l2jfrozen.gameserver.model.L2Clan: int getMembersCount()
com.l2jfrozen.gameserver.model.L2Clan: int getSubPledgeMembersCount(int)
com.l2jfrozen.gameserver.model.L2Clan: int getMaxNrOfMembers(int)
com.l2jfrozen.gameserver.model.L2Clan: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance[] getOnlineMembers(java.lang.String)
com.l2jfrozen.gameserver.model.L2Clan: int getAllyId()
com.l2jfrozen.gameserver.model.L2Clan: java.lang.String getAllyName()
com.l2jfrozen.gameserver.model.L2Clan: void setAllyCrestId(int)
com.l2jfrozen.gameserver.model.L2Clan: int getAllyCrestId()
com.l2jfrozen.gameserver.model.L2Clan: int getLevel()
com.l2jfrozen.gameserver.model.L2Clan: int getHasCastle()
com.l2jfrozen.gameserver.model.L2Clan: int getHasFort()
com.l2jfrozen.gameserver.model.L2Clan: int getHasHideout()
com.l2jfrozen.gameserver.model.L2Clan: void setCrestId(int)
com.l2jfrozen.gameserver.model.L2Clan: int getCrestId()
com.l2jfrozen.gameserver.model.L2Clan: void setCrestLargeId(int)
com.l2jfrozen.gameserver.model.L2Clan: int getCrestLargeId()
com.l2jfrozen.gameserver.model.L2Clan: void setAllyId(int)
com.l2jfrozen.gameserver.model.L2Clan: void setAllyName(java.lang.String)
com.l2jfrozen.gameserver.model.L2Clan: void setHasCastle(int)
com.l2jfrozen.gameserver.model.L2Clan: void setHasFort(int)
com.l2jfrozen.gameserver.model.L2Clan: void setHasHideout(int)
com.l2jfrozen.gameserver.model.L2Clan: void setLevel(int)
com.l2jfrozen.gameserver.model.L2Clan: boolean isMember(java.lang.String)
com.l2jfrozen.gameserver.model.L2Clan: void updateClanInDB()
com.l2jfrozen.gameserver.model.L2Clan: void store()
com.l2jfrozen.gameserver.model.L2Clan: void removeMemberInDatabase(com.l2jfrozen.gameserver.model.L2ClanMember,long,long)
com.l2jfrozen.gameserver.model.L2Clan: void restore()
com.l2jfrozen.gameserver.model.L2Clan: void restoreNotice()
com.l2jfrozen.gameserver.model.L2Clan: void storeNotice(java.lang.String,boolean)
com.l2jfrozen.gameserver.model.L2Clan: void setNoticeEnabled(boolean)
com.l2jfrozen.gameserver.model.L2Clan: void setNotice(java.lang.String)
com.l2jfrozen.gameserver.model.L2Clan: boolean isNoticeEnabled()
com.l2jfrozen.gameserver.model.L2Clan: java.lang.String getNotice()
com.l2jfrozen.gameserver.model.L2Clan: void restoreSkills()
com.l2jfrozen.gameserver.model.L2Clan: com.l2jfrozen.gameserver.model.L2Skill[] getAllSkills()
com.l2jfrozen.gameserver.model.L2Clan: com.l2jfrozen.gameserver.model.L2Skill addSkill(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.L2Clan: com.l2jfrozen.gameserver.model.L2Skill addNewSkill(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.L2Clan: void addSkillEffects()
com.l2jfrozen.gameserver.model.L2Clan: void addSkillEffects(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2Clan: void broadcastToOnlineAllyMembers(com.l2jfrozen.gameserver.network.serverpackets.L2GameServerPacket)
com.l2jfrozen.gameserver.model.L2Clan: void broadcastToOnlineMembers(com.l2jfrozen.gameserver.network.serverpackets.L2GameServerPacket)
com.l2jfrozen.gameserver.model.L2Clan: void broadcastToOtherOnlineMembers(com.l2jfrozen.gameserver.network.serverpackets.L2GameServerPacket,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2Clan: boolean hasCrest()
com.l2jfrozen.gameserver.model.L2Clan: boolean hasCrestLarge()
com.l2jfrozen.gameserver.model.L2Clan: void setHasCrest(boolean)
com.l2jfrozen.gameserver.model.L2Clan: void setHasCrestLarge(boolean)
com.l2jfrozen.gameserver.model.L2Clan: com.l2jfrozen.gameserver.model.ItemContainer getWarehouse()
com.l2jfrozen.gameserver.model.L2Clan: boolean isAtWarWith(java.lang.Integer)
com.l2jfrozen.gameserver.model.L2Clan: boolean isAtWarAttacker(java.lang.Integer)
com.l2jfrozen.gameserver.model.L2Clan: void setEnemyClan(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.L2Clan: void setEnemyClan(java.lang.Integer)
com.l2jfrozen.gameserver.model.L2Clan: void setAttackerClan(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.L2Clan: void setAttackerClan(java.lang.Integer)
com.l2jfrozen.gameserver.model.L2Clan: void deleteEnemyClan(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.L2Clan: void deleteAttackerClan(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.L2Clan: int getHiredGuards()
com.l2jfrozen.gameserver.model.L2Clan: void incrementHiredGuards()
com.l2jfrozen.gameserver.model.L2Clan: int isAtWar()
com.l2jfrozen.gameserver.model.L2Clan: java.util.List getWarList()
com.l2jfrozen.gameserver.model.L2Clan: java.util.List getAttackerList()
com.l2jfrozen.gameserver.model.L2Clan: void broadcastClanStatus()
com.l2jfrozen.gameserver.model.L2Clan: void removeSkill(int)
com.l2jfrozen.gameserver.model.L2Clan: void removeSkill(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.L2Clan: java.util.List getSkills()
com.l2jfrozen.gameserver.model.L2Clan: void restoreSubPledges()
com.l2jfrozen.gameserver.model.L2Clan: com.l2jfrozen.gameserver.model.L2Clan$SubPledge getSubPledge(int)
com.l2jfrozen.gameserver.model.L2Clan: com.l2jfrozen.gameserver.model.L2Clan$SubPledge getSubPledge(java.lang.String)
com.l2jfrozen.gameserver.model.L2Clan: com.l2jfrozen.gameserver.model.L2Clan$SubPledge[] getAllSubPledges()
com.l2jfrozen.gameserver.model.L2Clan: com.l2jfrozen.gameserver.model.L2Clan$SubPledge createSubPledge(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.model.L2Clan: int getAvailablePledgeTypes(int)
com.l2jfrozen.gameserver.model.L2Clan: void updateSubPledgeInDB(int)
com.l2jfrozen.gameserver.model.L2Clan: void restoreRankPrivs()
com.l2jfrozen.gameserver.model.L2Clan: void initializePrivs()
com.l2jfrozen.gameserver.model.L2Clan: int getRankPrivs(int)
com.l2jfrozen.gameserver.model.L2Clan: void setRankPrivs(int,int)
com.l2jfrozen.gameserver.model.L2Clan: com.l2jfrozen.gameserver.model.L2Clan$RankPrivs[] getAllRankPrivs()
com.l2jfrozen.gameserver.model.L2Clan: int getLeaderSubPledge(java.lang.String)
com.l2jfrozen.gameserver.model.L2Clan: void setReputationScore(int,boolean)
com.l2jfrozen.gameserver.model.L2Clan: int getReputationScore()
com.l2jfrozen.gameserver.model.L2Clan: void setRank(int)
com.l2jfrozen.gameserver.model.L2Clan: int getRank()
com.l2jfrozen.gameserver.model.L2Clan: int getAuctionBiddedAt()
com.l2jfrozen.gameserver.model.L2Clan: void setAuctionBiddedAt(int,boolean)
com.l2jfrozen.gameserver.model.L2Clan: boolean checkClanJoinCondition(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.L2Clan: boolean checkAllyJoinCondition(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2Clan: long getAllyPenaltyExpiryTime()
com.l2jfrozen.gameserver.model.L2Clan: int getAllyPenaltyType()
com.l2jfrozen.gameserver.model.L2Clan: void setAllyPenaltyExpiryTime(long,int)
com.l2jfrozen.gameserver.model.L2Clan: long getCharPenaltyExpiryTime()
com.l2jfrozen.gameserver.model.L2Clan: void setCharPenaltyExpiryTime(long)
com.l2jfrozen.gameserver.model.L2Clan: long getDissolvingExpiryTime()
com.l2jfrozen.gameserver.model.L2Clan: void setDissolvingExpiryTime(long)
com.l2jfrozen.gameserver.model.L2Clan: void createAlly(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.L2Clan: void dissolveAlly(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2Clan: void levelUpClan(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2Clan: void changeLevel(int)
com.l2jfrozen.gameserver.model.L2Clan: void setAllyCrest(int)
com.l2jfrozen.gameserver.model.L2Clan: java.lang.String toString()
com.l2jfrozen.gameserver.model.L2Clan: void <clinit>()
com.l2jfrozen.gameserver.model.L2Clan$RankPrivs
com.l2jfrozen.gameserver.model.L2Clan$RankPrivs: int _rankId
com.l2jfrozen.gameserver.model.L2Clan$RankPrivs: int _party
com.l2jfrozen.gameserver.model.L2Clan$RankPrivs: int _rankPrivs
com.l2jfrozen.gameserver.model.L2Clan$RankPrivs: com.l2jfrozen.gameserver.model.L2Clan this$0
com.l2jfrozen.gameserver.model.L2Clan$RankPrivs: L2Clan$RankPrivs(com.l2jfrozen.gameserver.model.L2Clan,int,int,int)
com.l2jfrozen.gameserver.model.L2Clan$RankPrivs: int getRank()
com.l2jfrozen.gameserver.model.L2Clan$RankPrivs: int getParty()
com.l2jfrozen.gameserver.model.L2Clan$RankPrivs: int getPrivs()
com.l2jfrozen.gameserver.model.L2Clan$RankPrivs: void setPrivs(int)
com.l2jfrozen.gameserver.model.L2Clan$SubPledge
com.l2jfrozen.gameserver.model.L2Clan$SubPledge: int _id
com.l2jfrozen.gameserver.model.L2Clan$SubPledge: java.lang.String _subPledgeName
com.l2jfrozen.gameserver.model.L2Clan$SubPledge: java.lang.String _leaderName
com.l2jfrozen.gameserver.model.L2Clan$SubPledge: com.l2jfrozen.gameserver.model.L2Clan this$0
com.l2jfrozen.gameserver.model.L2Clan$SubPledge: L2Clan$SubPledge(com.l2jfrozen.gameserver.model.L2Clan,int,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.model.L2Clan$SubPledge: int getId()
com.l2jfrozen.gameserver.model.L2Clan$SubPledge: java.lang.String getName()
com.l2jfrozen.gameserver.model.L2Clan$SubPledge: java.lang.String getLeaderName()
com.l2jfrozen.gameserver.model.L2Clan$SubPledge: void setLeaderName(java.lang.String)
com.l2jfrozen.gameserver.model.L2Clan$SubPledge: void setName(java.lang.String)
com.l2jfrozen.gameserver.model.L2ClanMember
com.l2jfrozen.gameserver.model.L2ClanMember: com.l2jfrozen.gameserver.model.L2Clan _clan
com.l2jfrozen.gameserver.model.L2ClanMember: int _objectId
com.l2jfrozen.gameserver.model.L2ClanMember: java.lang.String _name
com.l2jfrozen.gameserver.model.L2ClanMember: java.lang.String _title
com.l2jfrozen.gameserver.model.L2ClanMember: int _powerGrade
com.l2jfrozen.gameserver.model.L2ClanMember: int _level
com.l2jfrozen.gameserver.model.L2ClanMember: int _classId
com.l2jfrozen.gameserver.model.L2ClanMember: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _player
com.l2jfrozen.gameserver.model.L2ClanMember: int _pledgeType
com.l2jfrozen.gameserver.model.L2ClanMember: int _apprentice
com.l2jfrozen.gameserver.model.L2ClanMember: int _sponsor
com.l2jfrozen.gameserver.model.L2ClanMember: L2ClanMember(com.l2jfrozen.gameserver.model.L2Clan,java.lang.String,int,int,int,int,int,java.lang.String)
com.l2jfrozen.gameserver.model.L2ClanMember: L2ClanMember(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2ClanMember: void setPlayerInstance(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2ClanMember: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getPlayerInstance()
com.l2jfrozen.gameserver.model.L2ClanMember: boolean isOnline()
com.l2jfrozen.gameserver.model.L2ClanMember: int getClassId()
com.l2jfrozen.gameserver.model.L2ClanMember: int getLevel()
com.l2jfrozen.gameserver.model.L2ClanMember: java.lang.String getName()
com.l2jfrozen.gameserver.model.L2ClanMember: int getObjectId()
com.l2jfrozen.gameserver.model.L2ClanMember: java.lang.String getTitle()
com.l2jfrozen.gameserver.model.L2ClanMember: int getPledgeType()
com.l2jfrozen.gameserver.model.L2ClanMember: void setPledgeType(int)
com.l2jfrozen.gameserver.model.L2ClanMember: void updatePledgeType()
com.l2jfrozen.gameserver.model.L2ClanMember: int getPowerGrade()
com.l2jfrozen.gameserver.model.L2ClanMember: void setPowerGrade(int)
com.l2jfrozen.gameserver.model.L2ClanMember: void updatePowerGrade()
com.l2jfrozen.gameserver.model.L2ClanMember: void initApprenticeAndSponsor(int,int)
com.l2jfrozen.gameserver.model.L2ClanMember: int getSponsor()
com.l2jfrozen.gameserver.model.L2ClanMember: int getApprentice()
com.l2jfrozen.gameserver.model.L2ClanMember: java.lang.String getApprenticeOrSponsorName()
com.l2jfrozen.gameserver.model.L2ClanMember: com.l2jfrozen.gameserver.model.L2Clan getClan()
com.l2jfrozen.gameserver.model.L2ClanMember: int calculatePledgeClass(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2ClanMember: void saveApprenticeAndSponsor(int,int)
com.l2jfrozen.gameserver.model.L2CommandChannel
com.l2jfrozen.gameserver.model.L2CommandChannel: java.util.List _partys
com.l2jfrozen.gameserver.model.L2CommandChannel: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _commandLeader
com.l2jfrozen.gameserver.model.L2CommandChannel: int _channelLvl
com.l2jfrozen.gameserver.model.L2CommandChannel: L2CommandChannel(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2CommandChannel: void addParty(com.l2jfrozen.gameserver.model.L2Party)
com.l2jfrozen.gameserver.model.L2CommandChannel: void removeParty(com.l2jfrozen.gameserver.model.L2Party)
com.l2jfrozen.gameserver.model.L2CommandChannel: void disbandChannel()
com.l2jfrozen.gameserver.model.L2CommandChannel: int getMemberCount()
com.l2jfrozen.gameserver.model.L2CommandChannel: void broadcastToChannelMembers(com.l2jfrozen.gameserver.network.serverpackets.L2GameServerPacket)
com.l2jfrozen.gameserver.model.L2CommandChannel: void broadcastCSToChannelMembers(com.l2jfrozen.gameserver.network.serverpackets.CreatureSay,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2CommandChannel: java.util.List getPartys()
com.l2jfrozen.gameserver.model.L2CommandChannel: java.util.List getMembers()
com.l2jfrozen.gameserver.model.L2CommandChannel: int getLevel()
com.l2jfrozen.gameserver.model.L2CommandChannel: void setChannelLeader(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2CommandChannel: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getChannelLeader()
com.l2jfrozen.gameserver.model.L2CommandChannel: boolean meetRaidWarCondition(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.L2DropCategory
com.l2jfrozen.gameserver.model.L2DropCategory: javolution.util.FastList _drops
com.l2jfrozen.gameserver.model.L2DropCategory: int _categoryChance
com.l2jfrozen.gameserver.model.L2DropCategory: int _categoryBalancedChance
com.l2jfrozen.gameserver.model.L2DropCategory: int _categoryType
com.l2jfrozen.gameserver.model.L2DropCategory: L2DropCategory(int)
com.l2jfrozen.gameserver.model.L2DropCategory: void addDropData(com.l2jfrozen.gameserver.model.L2DropData,boolean)
com.l2jfrozen.gameserver.model.L2DropCategory: javolution.util.FastList getAllDrops()
com.l2jfrozen.gameserver.model.L2DropCategory: void clearAllDrops()
com.l2jfrozen.gameserver.model.L2DropCategory: boolean isSweep()
com.l2jfrozen.gameserver.model.L2DropCategory: int getCategoryChance()
com.l2jfrozen.gameserver.model.L2DropCategory: int getCategoryBalancedChance()
com.l2jfrozen.gameserver.model.L2DropCategory: int getCategoryType()
com.l2jfrozen.gameserver.model.L2DropCategory: com.l2jfrozen.gameserver.model.L2DropData dropSeedAllowedDropsOnly()
com.l2jfrozen.gameserver.model.L2DropCategory: com.l2jfrozen.gameserver.model.L2DropData dropOne(boolean)
com.l2jfrozen.gameserver.model.L2DropData
com.l2jfrozen.gameserver.model.L2DropData: int MAX_CHANCE
com.l2jfrozen.gameserver.model.L2DropData: int _itemId
com.l2jfrozen.gameserver.model.L2DropData: int _minDrop
com.l2jfrozen.gameserver.model.L2DropData: int _maxDrop
com.l2jfrozen.gameserver.model.L2DropData: int _chance
com.l2jfrozen.gameserver.model.L2DropData: java.lang.String _questID
com.l2jfrozen.gameserver.model.L2DropData: java.lang.String[] _stateID
com.l2jfrozen.gameserver.model.L2DropData: L2DropData()
com.l2jfrozen.gameserver.model.L2DropData: int getItemId()
com.l2jfrozen.gameserver.model.L2DropData: void setItemId(int)
com.l2jfrozen.gameserver.model.L2DropData: int getMinDrop()
com.l2jfrozen.gameserver.model.L2DropData: int getMaxDrop()
com.l2jfrozen.gameserver.model.L2DropData: int getChance()
com.l2jfrozen.gameserver.model.L2DropData: void setMinDrop(int)
com.l2jfrozen.gameserver.model.L2DropData: void setMaxDrop(int)
com.l2jfrozen.gameserver.model.L2DropData: void setChance(int)
com.l2jfrozen.gameserver.model.L2DropData: java.lang.String[] getStateIDs()
com.l2jfrozen.gameserver.model.L2DropData: void addStates(java.lang.String[])
com.l2jfrozen.gameserver.model.L2DropData: java.lang.String getQuestID()
com.l2jfrozen.gameserver.model.L2DropData: void setQuestID(java.lang.String)
com.l2jfrozen.gameserver.model.L2DropData: boolean isQuestDrop()
com.l2jfrozen.gameserver.model.L2DropData: java.lang.String toString()
com.l2jfrozen.gameserver.model.L2DropData: boolean equals(java.lang.Object)
com.l2jfrozen.gameserver.model.L2DropData: int hashCode()
com.l2jfrozen.gameserver.model.L2Effect
com.l2jfrozen.gameserver.model.L2Effect: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.L2Effect: com.l2jfrozen.gameserver.skills.funcs.Func[] _emptyFunctionSet
com.l2jfrozen.gameserver.model.L2Effect: com.l2jfrozen.gameserver.model.L2Character _effector
com.l2jfrozen.gameserver.model.L2Effect: com.l2jfrozen.gameserver.model.L2Character _effected
com.l2jfrozen.gameserver.model.L2Effect: com.l2jfrozen.gameserver.model.L2Skill _skill
com.l2jfrozen.gameserver.model.L2Effect: com.l2jfrozen.gameserver.skills.funcs.Lambda _lambda
com.l2jfrozen.gameserver.model.L2Effect: com.l2jfrozen.gameserver.model.EffectState _state
com.l2jfrozen.gameserver.model.L2Effect: int _period
com.l2jfrozen.gameserver.model.L2Effect: int _periodStartTicks
com.l2jfrozen.gameserver.model.L2Effect: int _periodfirsttime
com.l2jfrozen.gameserver.model.L2Effect: com.l2jfrozen.gameserver.skills.funcs.FuncTemplate[] _funcTemplates
com.l2jfrozen.gameserver.model.L2Effect: int _totalCount
com.l2jfrozen.gameserver.model.L2Effect: int _count
com.l2jfrozen.gameserver.model.L2Effect: int _abnormalEffect
com.l2jfrozen.gameserver.model.L2Effect: boolean preventExitUpdate
com.l2jfrozen.gameserver.model.L2Effect: boolean _cancelEffect
com.l2jfrozen.gameserver.model.L2Effect: java.util.concurrent.ScheduledFuture _currentFuture
com.l2jfrozen.gameserver.model.L2Effect: com.l2jfrozen.gameserver.model.L2Effect$EffectTask _currentTask
com.l2jfrozen.gameserver.model.L2Effect: java.lang.String _stackType
com.l2jfrozen.gameserver.model.L2Effect: float _stackOrder
com.l2jfrozen.gameserver.model.L2Effect: com.l2jfrozen.gameserver.skills.effects.EffectTemplate _template
com.l2jfrozen.gameserver.model.L2Effect: boolean _inUse
com.l2jfrozen.gameserver.model.L2Effect: L2Effect(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.model.L2Effect: int getCount()
com.l2jfrozen.gameserver.model.L2Effect: int getTotalCount()
com.l2jfrozen.gameserver.model.L2Effect: void setCount(int)
com.l2jfrozen.gameserver.model.L2Effect: void setFirstTime(int)
com.l2jfrozen.gameserver.model.L2Effect: int getPeriod()
com.l2jfrozen.gameserver.model.L2Effect: int getTime()
com.l2jfrozen.gameserver.model.L2Effect: int getTaskTime()
com.l2jfrozen.gameserver.model.L2Effect: boolean getInUse()
com.l2jfrozen.gameserver.model.L2Effect: void setInUse(boolean)
com.l2jfrozen.gameserver.model.L2Effect: java.lang.String getStackType()
com.l2jfrozen.gameserver.model.L2Effect: float getStackOrder()
com.l2jfrozen.gameserver.model.L2Effect: com.l2jfrozen.gameserver.model.L2Skill getSkill()
com.l2jfrozen.gameserver.model.L2Effect: com.l2jfrozen.gameserver.model.L2Character getEffector()
com.l2jfrozen.gameserver.model.L2Effect: com.l2jfrozen.gameserver.model.L2Character getEffected()
com.l2jfrozen.gameserver.model.L2Effect: boolean isSelfEffect()
com.l2jfrozen.gameserver.model.L2Effect: boolean isHerbEffect()
com.l2jfrozen.gameserver.model.L2Effect: double calc()
com.l2jfrozen.gameserver.model.L2Effect: void startEffectTask(int)
com.l2jfrozen.gameserver.model.L2Effect: void startEffectTaskAtFixedRate(int,int)
com.l2jfrozen.gameserver.model.L2Effect: void exit()
com.l2jfrozen.gameserver.model.L2Effect: void exit(boolean)
com.l2jfrozen.gameserver.model.L2Effect: void exit(boolean,boolean)
com.l2jfrozen.gameserver.model.L2Effect: void stopEffectTask()
com.l2jfrozen.gameserver.model.L2Effect: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.model.L2Effect: void onStart()
com.l2jfrozen.gameserver.model.L2Effect: void onExit()
com.l2jfrozen.gameserver.model.L2Effect: boolean onActionTime()
com.l2jfrozen.gameserver.model.L2Effect: void rescheduleEffect()
com.l2jfrozen.gameserver.model.L2Effect: void scheduleEffect()
com.l2jfrozen.gameserver.model.L2Effect: com.l2jfrozen.gameserver.skills.funcs.Func[] getStatFuncs()
com.l2jfrozen.gameserver.model.L2Effect: void addIcon(com.l2jfrozen.gameserver.network.serverpackets.MagicEffectIcons)
com.l2jfrozen.gameserver.model.L2Effect: void addPartySpelledIcon(com.l2jfrozen.gameserver.network.serverpackets.PartySpelled)
com.l2jfrozen.gameserver.model.L2Effect: void addOlympiadSpelledIcon(com.l2jfrozen.gameserver.network.serverpackets.ExOlympiadSpelledInfo)
com.l2jfrozen.gameserver.model.L2Effect: int getLevel()
com.l2jfrozen.gameserver.model.L2Effect: int getPeriodfirsttime()
com.l2jfrozen.gameserver.model.L2Effect: void setPeriodfirsttime(int)
com.l2jfrozen.gameserver.model.L2Effect: int getPeriodStartTicks()
com.l2jfrozen.gameserver.model.L2Effect: void setPeriodStartTicks(int)
com.l2jfrozen.gameserver.model.L2Effect: boolean getShowIcon()
com.l2jfrozen.gameserver.model.L2Effect: com.l2jfrozen.gameserver.model.EffectState get_state()
com.l2jfrozen.gameserver.model.L2Effect: void <clinit>()
com.l2jfrozen.gameserver.model.L2Effect$EffectTask
com.l2jfrozen.gameserver.model.L2Effect$EffectTask: int _delay
com.l2jfrozen.gameserver.model.L2Effect$EffectTask: int _rate
com.l2jfrozen.gameserver.model.L2Effect$EffectTask: com.l2jfrozen.gameserver.model.L2Effect this$0
com.l2jfrozen.gameserver.model.L2Effect$EffectTask: L2Effect$EffectTask(com.l2jfrozen.gameserver.model.L2Effect,int,int)
com.l2jfrozen.gameserver.model.L2Effect$EffectTask: void run()
com.l2jfrozen.gameserver.model.L2EnchantSkillLearn
com.l2jfrozen.gameserver.model.L2EnchantSkillLearn: int id
com.l2jfrozen.gameserver.model.L2EnchantSkillLearn: int level
com.l2jfrozen.gameserver.model.L2EnchantSkillLearn: java.lang.String name
com.l2jfrozen.gameserver.model.L2EnchantSkillLearn: int spCost
com.l2jfrozen.gameserver.model.L2EnchantSkillLearn: int baseLvl
com.l2jfrozen.gameserver.model.L2EnchantSkillLearn: int minSkillLevel
com.l2jfrozen.gameserver.model.L2EnchantSkillLearn: int exp
com.l2jfrozen.gameserver.model.L2EnchantSkillLearn: byte rate76
com.l2jfrozen.gameserver.model.L2EnchantSkillLearn: byte rate77
com.l2jfrozen.gameserver.model.L2EnchantSkillLearn: byte rate78
com.l2jfrozen.gameserver.model.L2EnchantSkillLearn: byte rate79
com.l2jfrozen.gameserver.model.L2EnchantSkillLearn: byte rate80
com.l2jfrozen.gameserver.model.L2EnchantSkillLearn: L2EnchantSkillLearn(int,int,int,int,java.lang.String,int,int,byte,byte,byte,byte,byte)
com.l2jfrozen.gameserver.model.L2EnchantSkillLearn: int getId()
com.l2jfrozen.gameserver.model.L2EnchantSkillLearn: int getLevel()
com.l2jfrozen.gameserver.model.L2EnchantSkillLearn: int getBaseLevel()
com.l2jfrozen.gameserver.model.L2EnchantSkillLearn: int getMinSkillLevel()
com.l2jfrozen.gameserver.model.L2EnchantSkillLearn: java.lang.String getName()
com.l2jfrozen.gameserver.model.L2EnchantSkillLearn: int getSpCost()
com.l2jfrozen.gameserver.model.L2EnchantSkillLearn: int getExp()
com.l2jfrozen.gameserver.model.L2EnchantSkillLearn: byte getRate(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2ExtractableItem
com.l2jfrozen.gameserver.model.L2ExtractableItem: int _itemId
com.l2jfrozen.gameserver.model.L2ExtractableItem: java.util.List _products
com.l2jfrozen.gameserver.model.L2ExtractableItem: L2ExtractableItem(int,java.util.List)
com.l2jfrozen.gameserver.model.L2ExtractableItem: int getItemId()
com.l2jfrozen.gameserver.model.L2ExtractableItem: java.util.List getProductItems()
com.l2jfrozen.gameserver.model.L2ExtractableProductItem
com.l2jfrozen.gameserver.model.L2ExtractableProductItem: int _id
com.l2jfrozen.gameserver.model.L2ExtractableProductItem: int _ammount
com.l2jfrozen.gameserver.model.L2ExtractableProductItem: int _chance
com.l2jfrozen.gameserver.model.L2ExtractableProductItem: L2ExtractableProductItem(int,int,int)
com.l2jfrozen.gameserver.model.L2ExtractableProductItem: int getId()
com.l2jfrozen.gameserver.model.L2ExtractableProductItem: int getAmmount()
com.l2jfrozen.gameserver.model.L2ExtractableProductItem: int getChance()
com.l2jfrozen.gameserver.model.L2Fishing
com.l2jfrozen.gameserver.model.L2Fishing: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _fisher
com.l2jfrozen.gameserver.model.L2Fishing: int _time
com.l2jfrozen.gameserver.model.L2Fishing: int _stop
com.l2jfrozen.gameserver.model.L2Fishing: int _goodUse
com.l2jfrozen.gameserver.model.L2Fishing: int _anim
com.l2jfrozen.gameserver.model.L2Fishing: int _mode
com.l2jfrozen.gameserver.model.L2Fishing: int _deceptiveMode
com.l2jfrozen.gameserver.model.L2Fishing: java.util.concurrent.Future _fishAiTask
com.l2jfrozen.gameserver.model.L2Fishing: boolean _thinking
com.l2jfrozen.gameserver.model.L2Fishing: int _fishId
com.l2jfrozen.gameserver.model.L2Fishing: int _fishMaxHp
com.l2jfrozen.gameserver.model.L2Fishing: int _fishCurHp
com.l2jfrozen.gameserver.model.L2Fishing: double _regenHp
com.l2jfrozen.gameserver.model.L2Fishing: boolean _isUpperGrade
com.l2jfrozen.gameserver.model.L2Fishing: int _lureType
com.l2jfrozen.gameserver.model.L2Fishing: void run()
com.l2jfrozen.gameserver.model.L2Fishing: L2Fishing(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.FishData,boolean,boolean)
com.l2jfrozen.gameserver.model.L2Fishing: void changeHp(int,int)
com.l2jfrozen.gameserver.model.L2Fishing: void doDie(boolean)
com.l2jfrozen.gameserver.model.L2Fishing: void aiTask()
com.l2jfrozen.gameserver.model.L2Fishing: void useRealing(int,int)
com.l2jfrozen.gameserver.model.L2Fishing: void usePomping(int,int)
com.l2jfrozen.gameserver.model.L2Fishing: void PenaltyMonster()
com.l2jfrozen.gameserver.model.L2LvlupData
com.l2jfrozen.gameserver.model.L2LvlupData: int _classid
com.l2jfrozen.gameserver.model.L2LvlupData: int _classLvl
com.l2jfrozen.gameserver.model.L2LvlupData: float _classHpAdd
com.l2jfrozen.gameserver.model.L2LvlupData: float _classHpBase
com.l2jfrozen.gameserver.model.L2LvlupData: float _classHpModifier
com.l2jfrozen.gameserver.model.L2LvlupData: float _classCpAdd
com.l2jfrozen.gameserver.model.L2LvlupData: float _classCpBase
com.l2jfrozen.gameserver.model.L2LvlupData: float _classCpModifier
com.l2jfrozen.gameserver.model.L2LvlupData: float _classMpAdd
com.l2jfrozen.gameserver.model.L2LvlupData: float _classMpBase
com.l2jfrozen.gameserver.model.L2LvlupData: float _classMpModifier
com.l2jfrozen.gameserver.model.L2LvlupData: L2LvlupData()
com.l2jfrozen.gameserver.model.L2LvlupData: float getClassHpAdd()
com.l2jfrozen.gameserver.model.L2LvlupData: void setClassHpAdd(float)
com.l2jfrozen.gameserver.model.L2LvlupData: float getClassHpBase()
com.l2jfrozen.gameserver.model.L2LvlupData: void setClassHpBase(float)
com.l2jfrozen.gameserver.model.L2LvlupData: float getClassHpModifier()
com.l2jfrozen.gameserver.model.L2LvlupData: void setClassHpModifier(float)
com.l2jfrozen.gameserver.model.L2LvlupData: float getClassCpAdd()
com.l2jfrozen.gameserver.model.L2LvlupData: void setClassCpAdd(float)
com.l2jfrozen.gameserver.model.L2LvlupData: float getClassCpBase()
com.l2jfrozen.gameserver.model.L2LvlupData: void setClassCpBase(float)
com.l2jfrozen.gameserver.model.L2LvlupData: float getClassCpModifier()
com.l2jfrozen.gameserver.model.L2LvlupData: void setClassCpModifier(float)
com.l2jfrozen.gameserver.model.L2LvlupData: int getClassid()
com.l2jfrozen.gameserver.model.L2LvlupData: void setClassid(int)
com.l2jfrozen.gameserver.model.L2LvlupData: int getClassLvl()
com.l2jfrozen.gameserver.model.L2LvlupData: void setClassLvl(int)
com.l2jfrozen.gameserver.model.L2LvlupData: float getClassMpAdd()
com.l2jfrozen.gameserver.model.L2LvlupData: void setClassMpAdd(float)
com.l2jfrozen.gameserver.model.L2LvlupData: float getClassMpBase()
com.l2jfrozen.gameserver.model.L2LvlupData: void setClassMpBase(float)
com.l2jfrozen.gameserver.model.L2LvlupData: float getClassMpModifier()
com.l2jfrozen.gameserver.model.L2LvlupData: void setClassMpModifier(float)
com.l2jfrozen.gameserver.model.L2Macro
com.l2jfrozen.gameserver.model.L2Macro: int CMD_TYPE_SKILL
com.l2jfrozen.gameserver.model.L2Macro: int CMD_TYPE_ACTION
com.l2jfrozen.gameserver.model.L2Macro: int CMD_TYPE_SHORTCUT
com.l2jfrozen.gameserver.model.L2Macro: int id
com.l2jfrozen.gameserver.model.L2Macro: int icon
com.l2jfrozen.gameserver.model.L2Macro: java.lang.String name
com.l2jfrozen.gameserver.model.L2Macro: java.lang.String descr
com.l2jfrozen.gameserver.model.L2Macro: java.lang.String acronym
com.l2jfrozen.gameserver.model.L2Macro: com.l2jfrozen.gameserver.model.L2Macro$L2MacroCmd[] commands
com.l2jfrozen.gameserver.model.L2Macro: L2Macro(int,int,java.lang.String,java.lang.String,java.lang.String,com.l2jfrozen.gameserver.model.L2Macro$L2MacroCmd[])
com.l2jfrozen.gameserver.model.L2Macro$L2MacroCmd
com.l2jfrozen.gameserver.model.L2Macro$L2MacroCmd: int entry
com.l2jfrozen.gameserver.model.L2Macro$L2MacroCmd: int type
com.l2jfrozen.gameserver.model.L2Macro$L2MacroCmd: int d1
com.l2jfrozen.gameserver.model.L2Macro$L2MacroCmd: int d2
com.l2jfrozen.gameserver.model.L2Macro$L2MacroCmd: java.lang.String cmd
com.l2jfrozen.gameserver.model.L2Macro$L2MacroCmd: L2Macro$L2MacroCmd(int,int,int,int,java.lang.String)
com.l2jfrozen.gameserver.model.L2Manor
com.l2jfrozen.gameserver.model.L2Manor: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.L2Manor: com.l2jfrozen.gameserver.model.L2Manor _instance
com.l2jfrozen.gameserver.model.L2Manor: javolution.util.FastMap _seeds
com.l2jfrozen.gameserver.model.L2Manor: L2Manor()
com.l2jfrozen.gameserver.model.L2Manor: com.l2jfrozen.gameserver.model.L2Manor getInstance()
com.l2jfrozen.gameserver.model.L2Manor: javolution.util.FastList getAllCrops()
com.l2jfrozen.gameserver.model.L2Manor: int getSeedBasicPrice(int)
com.l2jfrozen.gameserver.model.L2Manor: int getSeedBasicPriceByCrop(int)
com.l2jfrozen.gameserver.model.L2Manor: int getCropBasicPrice(int)
com.l2jfrozen.gameserver.model.L2Manor: int getMatureCrop(int)
com.l2jfrozen.gameserver.model.L2Manor: int getSeedBuyPrice(int)
com.l2jfrozen.gameserver.model.L2Manor: int getSeedMinLevel(int)
com.l2jfrozen.gameserver.model.L2Manor: int getSeedMaxLevel(int)
com.l2jfrozen.gameserver.model.L2Manor: int getSeedLevelByCrop(int)
com.l2jfrozen.gameserver.model.L2Manor: int getSeedLevel(int)
com.l2jfrozen.gameserver.model.L2Manor: boolean isAlternative(int)
com.l2jfrozen.gameserver.model.L2Manor: int getCropType(int)
com.l2jfrozen.gameserver.model.L2Manor: int getRewardItem(int,int)
com.l2jfrozen.gameserver.model.L2Manor: int getRewardItemBySeed(int,int)
com.l2jfrozen.gameserver.model.L2Manor: javolution.util.FastList getCropsForCastle(int)
com.l2jfrozen.gameserver.model.L2Manor: javolution.util.FastList getSeedsForCastle(int)
com.l2jfrozen.gameserver.model.L2Manor: int getCastleIdForSeed(int)
com.l2jfrozen.gameserver.model.L2Manor: int getSeedSaleLimit(int)
com.l2jfrozen.gameserver.model.L2Manor: int getCropPuchaseLimit(int)
com.l2jfrozen.gameserver.model.L2Manor: void parseData()
com.l2jfrozen.gameserver.model.L2Manor: com.l2jfrozen.gameserver.model.L2Manor$SeedData parseList(java.lang.String)
com.l2jfrozen.gameserver.model.L2Manor: void <clinit>()
com.l2jfrozen.gameserver.model.L2Manor$SeedData
com.l2jfrozen.gameserver.model.L2Manor$SeedData: int _id
com.l2jfrozen.gameserver.model.L2Manor$SeedData: int _level
com.l2jfrozen.gameserver.model.L2Manor$SeedData: int _crop
com.l2jfrozen.gameserver.model.L2Manor$SeedData: int _mature
com.l2jfrozen.gameserver.model.L2Manor$SeedData: int _type1
com.l2jfrozen.gameserver.model.L2Manor$SeedData: int _type2
com.l2jfrozen.gameserver.model.L2Manor$SeedData: int _manorId
com.l2jfrozen.gameserver.model.L2Manor$SeedData: int _isAlternative
com.l2jfrozen.gameserver.model.L2Manor$SeedData: int _limitSeeds
com.l2jfrozen.gameserver.model.L2Manor$SeedData: int _limitCrops
com.l2jfrozen.gameserver.model.L2Manor$SeedData: com.l2jfrozen.gameserver.model.L2Manor this$0
com.l2jfrozen.gameserver.model.L2Manor$SeedData: L2Manor$SeedData(com.l2jfrozen.gameserver.model.L2Manor,int,int,int)
com.l2jfrozen.gameserver.model.L2Manor$SeedData: void setData(int,int,int,int,int,int,int)
com.l2jfrozen.gameserver.model.L2Manor$SeedData: int getManorId()
com.l2jfrozen.gameserver.model.L2Manor$SeedData: int getId()
com.l2jfrozen.gameserver.model.L2Manor$SeedData: int getCrop()
com.l2jfrozen.gameserver.model.L2Manor$SeedData: int getMature()
com.l2jfrozen.gameserver.model.L2Manor$SeedData: int getReward(int)
com.l2jfrozen.gameserver.model.L2Manor$SeedData: int getLevel()
com.l2jfrozen.gameserver.model.L2Manor$SeedData: boolean isAlternative()
com.l2jfrozen.gameserver.model.L2Manor$SeedData: int getSeedLimit()
com.l2jfrozen.gameserver.model.L2Manor$SeedData: int getCropLimit()
com.l2jfrozen.gameserver.model.L2ManufactureItem
com.l2jfrozen.gameserver.model.L2ManufactureItem: int _recipeId
com.l2jfrozen.gameserver.model.L2ManufactureItem: int _cost
com.l2jfrozen.gameserver.model.L2ManufactureItem: boolean _isDwarven
com.l2jfrozen.gameserver.model.L2ManufactureItem: L2ManufactureItem(int,int)
com.l2jfrozen.gameserver.model.L2ManufactureItem: int getRecipeId()
com.l2jfrozen.gameserver.model.L2ManufactureItem: int getCost()
com.l2jfrozen.gameserver.model.L2ManufactureItem: boolean isDwarven()
com.l2jfrozen.gameserver.model.L2ManufactureList
com.l2jfrozen.gameserver.model.L2ManufactureList: java.util.List _list
com.l2jfrozen.gameserver.model.L2ManufactureList: boolean _confirmed
com.l2jfrozen.gameserver.model.L2ManufactureList: java.lang.String _manufactureStoreName
com.l2jfrozen.gameserver.model.L2ManufactureList: L2ManufactureList()
com.l2jfrozen.gameserver.model.L2ManufactureList: int size()
com.l2jfrozen.gameserver.model.L2ManufactureList: void setConfirmedTrade(boolean)
com.l2jfrozen.gameserver.model.L2ManufactureList: boolean hasConfirmed()
com.l2jfrozen.gameserver.model.L2ManufactureList: void setStoreName(java.lang.String)
com.l2jfrozen.gameserver.model.L2ManufactureList: java.lang.String getStoreName()
com.l2jfrozen.gameserver.model.L2ManufactureList: void add(com.l2jfrozen.gameserver.model.L2ManufactureItem)
com.l2jfrozen.gameserver.model.L2ManufactureList: java.util.List getList()
com.l2jfrozen.gameserver.model.L2ManufactureList: void setList(java.util.List)
com.l2jfrozen.gameserver.model.L2MinionData
com.l2jfrozen.gameserver.model.L2MinionData: int _minionId
com.l2jfrozen.gameserver.model.L2MinionData: int _minionAmount
com.l2jfrozen.gameserver.model.L2MinionData: int _minionAmountMin
com.l2jfrozen.gameserver.model.L2MinionData: int _minionAmountMax
com.l2jfrozen.gameserver.model.L2MinionData: L2MinionData()
com.l2jfrozen.gameserver.model.L2MinionData: void setMinionId(int)
com.l2jfrozen.gameserver.model.L2MinionData: int getMinionId()
com.l2jfrozen.gameserver.model.L2MinionData: void setAmountMin(int)
com.l2jfrozen.gameserver.model.L2MinionData: void setAmountMax(int)
com.l2jfrozen.gameserver.model.L2MinionData: void setAmount(int)
com.l2jfrozen.gameserver.model.L2MinionData: int getAmount()
com.l2jfrozen.gameserver.model.L2NpcWalkerNode
com.l2jfrozen.gameserver.model.L2NpcWalkerNode: int _routeId
com.l2jfrozen.gameserver.model.L2NpcWalkerNode: int _npcId
com.l2jfrozen.gameserver.model.L2NpcWalkerNode: java.lang.String _movePoint
com.l2jfrozen.gameserver.model.L2NpcWalkerNode: java.lang.String _chatText
com.l2jfrozen.gameserver.model.L2NpcWalkerNode: int _moveX
com.l2jfrozen.gameserver.model.L2NpcWalkerNode: int _moveY
com.l2jfrozen.gameserver.model.L2NpcWalkerNode: int _moveZ
com.l2jfrozen.gameserver.model.L2NpcWalkerNode: int _delay
com.l2jfrozen.gameserver.model.L2NpcWalkerNode: boolean _running
com.l2jfrozen.gameserver.model.L2NpcWalkerNode: void setRunning(boolean)
com.l2jfrozen.gameserver.model.L2NpcWalkerNode: void setRouteId(int)
com.l2jfrozen.gameserver.model.L2NpcWalkerNode: void setNpcId(int)
com.l2jfrozen.gameserver.model.L2NpcWalkerNode: void setMovePoint(java.lang.String)
com.l2jfrozen.gameserver.model.L2NpcWalkerNode: void setChatText(java.lang.String)
com.l2jfrozen.gameserver.model.L2NpcWalkerNode: void setMoveX(int)
com.l2jfrozen.gameserver.model.L2NpcWalkerNode: void setMoveY(int)
com.l2jfrozen.gameserver.model.L2NpcWalkerNode: void setMoveZ(int)
com.l2jfrozen.gameserver.model.L2NpcWalkerNode: void setDelay(int)
com.l2jfrozen.gameserver.model.L2NpcWalkerNode: int getRouteId()
com.l2jfrozen.gameserver.model.L2NpcWalkerNode: int getNpcId()
com.l2jfrozen.gameserver.model.L2NpcWalkerNode: java.lang.String getMovePoint()
com.l2jfrozen.gameserver.model.L2NpcWalkerNode: java.lang.String getChatText()
com.l2jfrozen.gameserver.model.L2NpcWalkerNode: int getMoveX()
com.l2jfrozen.gameserver.model.L2NpcWalkerNode: int getMoveY()
com.l2jfrozen.gameserver.model.L2NpcWalkerNode: int getMoveZ()
com.l2jfrozen.gameserver.model.L2NpcWalkerNode: int getDelay()
com.l2jfrozen.gameserver.model.L2NpcWalkerNode: boolean getRunning()
com.l2jfrozen.gameserver.model.L2NpcWalkerNode: L2NpcWalkerNode()
com.l2jfrozen.gameserver.model.L2NpcWalkerNode: L2NpcWalkerNode(com.l2jfrozen.gameserver.templates.StatsSet)
com.l2jfrozen.gameserver.model.L2Object
com.l2jfrozen.gameserver.model.L2Object: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.L2Object: boolean _isVisible
com.l2jfrozen.gameserver.model.L2Object: com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList _knownList
com.l2jfrozen.gameserver.model.L2Object: java.lang.String _name
com.l2jfrozen.gameserver.model.L2Object: int _objectId
com.l2jfrozen.gameserver.model.L2Object: com.l2jfrozen.gameserver.model.actor.poly.ObjectPoly _poly
com.l2jfrozen.gameserver.model.L2Object: com.l2jfrozen.gameserver.model.actor.position.ObjectPosition _position
com.l2jfrozen.gameserver.model.L2Object: int _instanceId
com.l2jfrozen.gameserver.model.L2Object: boolean $assertionsDisabled
com.l2jfrozen.gameserver.model.L2Object: L2Object(int)
com.l2jfrozen.gameserver.model.L2Object: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2Object: void onActionShift(com.l2jfrozen.gameserver.network.L2GameClient)
com.l2jfrozen.gameserver.model.L2Object: void onActionShift(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2Object: void onForcedAttack(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2Object: void onSpawn()
com.l2jfrozen.gameserver.model.L2Object: void setXYZ(int,int,int)
com.l2jfrozen.gameserver.model.L2Object: void setXYZInvisible(int,int,int)
com.l2jfrozen.gameserver.model.L2Object: int getX()
com.l2jfrozen.gameserver.model.L2Object: int getY()
com.l2jfrozen.gameserver.model.L2Object: int getZ()
com.l2jfrozen.gameserver.model.L2Object: void decayMe()
com.l2jfrozen.gameserver.model.L2Object: void pickupMe(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Object: void refreshID()
com.l2jfrozen.gameserver.model.L2Object: void spawnMe()
com.l2jfrozen.gameserver.model.L2Object: void spawnMe(int,int,int)
com.l2jfrozen.gameserver.model.L2Object: void toggleVisible()
com.l2jfrozen.gameserver.model.L2Object: boolean isAttackable()
com.l2jfrozen.gameserver.model.L2Object: boolean isAutoAttackable(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Object: boolean isMarker()
com.l2jfrozen.gameserver.model.L2Object: boolean isVisible()
com.l2jfrozen.gameserver.model.L2Object: void setIsVisible(boolean)
com.l2jfrozen.gameserver.model.L2Object: com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList getKnownList()
com.l2jfrozen.gameserver.model.L2Object: void setKnownList(com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList)
com.l2jfrozen.gameserver.model.L2Object: java.lang.String getName()
com.l2jfrozen.gameserver.model.L2Object: void setName(java.lang.String)
com.l2jfrozen.gameserver.model.L2Object: int getObjectId()
com.l2jfrozen.gameserver.model.L2Object: com.l2jfrozen.gameserver.model.actor.poly.ObjectPoly getPoly()
com.l2jfrozen.gameserver.model.L2Object: com.l2jfrozen.gameserver.model.actor.position.ObjectPosition getPosition()
com.l2jfrozen.gameserver.model.L2Object: com.l2jfrozen.gameserver.model.L2WorldRegion getWorldRegion()
com.l2jfrozen.gameserver.model.L2Object: int getInstanceId()
com.l2jfrozen.gameserver.model.L2Object: void setInstanceId(int)
com.l2jfrozen.gameserver.model.L2Object: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getActingPlayer()
com.l2jfrozen.gameserver.model.L2Object: java.lang.String toString()
com.l2jfrozen.gameserver.model.L2Object: boolean isCharacter()
com.l2jfrozen.gameserver.model.L2Object: boolean isPlayable()
com.l2jfrozen.gameserver.model.L2Object: boolean isPlayer()
com.l2jfrozen.gameserver.model.L2Object: boolean isPet()
com.l2jfrozen.gameserver.model.L2Object: boolean isSummon()
com.l2jfrozen.gameserver.model.L2Object: boolean isNpc()
com.l2jfrozen.gameserver.model.L2Object: boolean isMonster()
com.l2jfrozen.gameserver.model.L2Object: boolean isItem()
com.l2jfrozen.gameserver.model.L2Object: boolean isRaid()
com.l2jfrozen.gameserver.model.L2Object: boolean isBoss()
com.l2jfrozen.gameserver.model.L2Object: boolean isTrap()
com.l2jfrozen.gameserver.model.L2Object: boolean isDoor()
com.l2jfrozen.gameserver.model.L2Object: boolean isArtefact()
com.l2jfrozen.gameserver.model.L2Object: boolean isSiegeGuard()
com.l2jfrozen.gameserver.model.L2Object: boolean isBoat()
com.l2jfrozen.gameserver.model.L2Object: boolean isVehicle()
com.l2jfrozen.gameserver.model.L2Object: boolean isMinion()
com.l2jfrozen.gameserver.model.L2Object: void <clinit>()
com.l2jfrozen.gameserver.model.L2Party
com.l2jfrozen.gameserver.model.L2Party: double[] BONUS_EXP_SP
com.l2jfrozen.gameserver.model.L2Party: int PARTY_POSITION_BROADCAST
com.l2jfrozen.gameserver.model.L2Party: int ITEM_LOOTER
com.l2jfrozen.gameserver.model.L2Party: int ITEM_RANDOM
com.l2jfrozen.gameserver.model.L2Party: int ITEM_RANDOM_SPOIL
com.l2jfrozen.gameserver.model.L2Party: int ITEM_ORDER
com.l2jfrozen.gameserver.model.L2Party: int ITEM_ORDER_SPOIL
com.l2jfrozen.gameserver.model.L2Party: javolution.util.FastList _members
com.l2jfrozen.gameserver.model.L2Party: boolean _pendingInvitation
com.l2jfrozen.gameserver.model.L2Party: long _pendingInviteTimeout
com.l2jfrozen.gameserver.model.L2Party: int _partyLvl
com.l2jfrozen.gameserver.model.L2Party: int _itemDistribution
com.l2jfrozen.gameserver.model.L2Party: int _itemLastLoot
com.l2jfrozen.gameserver.model.L2Party: com.l2jfrozen.gameserver.model.L2CommandChannel _commandChannel
com.l2jfrozen.gameserver.model.L2Party: com.l2jfrozen.gameserver.model.entity.DimensionalRift _dr
com.l2jfrozen.gameserver.model.L2Party: java.util.concurrent.Future _positionBroadcastTask
com.l2jfrozen.gameserver.model.L2Party: com.l2jfrozen.gameserver.network.serverpackets.PartyMemberPosition _positionPacket
com.l2jfrozen.gameserver.model.L2Party: L2Party(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.L2Party: int getMemberCount()
com.l2jfrozen.gameserver.model.L2Party: boolean getPendingInvitation()
com.l2jfrozen.gameserver.model.L2Party: void setPendingInvitation(boolean)
com.l2jfrozen.gameserver.model.L2Party: boolean isInvitationRequestExpired()
com.l2jfrozen.gameserver.model.L2Party: javolution.util.FastList getPartyMembers()
com.l2jfrozen.gameserver.model.L2Party: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getCheckedRandomMember(int,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Party: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getCheckedNextLooter(int,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Party: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getActualLooter(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,boolean,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Party: boolean isLeader(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2Party: int getPartyLeaderOID()
com.l2jfrozen.gameserver.model.L2Party: void broadcastToPartyMembers(com.l2jfrozen.gameserver.network.serverpackets.L2GameServerPacket)
com.l2jfrozen.gameserver.model.L2Party: void broadcastToPartyMembersNewLeader()
com.l2jfrozen.gameserver.model.L2Party: void broadcastCSToPartyMembers(com.l2jfrozen.gameserver.network.serverpackets.CreatureSay,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2Party: void broadcastToPartyMembers(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.network.serverpackets.L2GameServerPacket)
com.l2jfrozen.gameserver.model.L2Party: void addPartyMember(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2Party: void removePartyMember(java.lang.String)
com.l2jfrozen.gameserver.model.L2Party: void removePartyMember(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2Party: void removePartyMember(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.model.L2Party: void changePartyLeader(java.lang.String)
com.l2jfrozen.gameserver.model.L2Party: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getPlayerByName(java.lang.String)
com.l2jfrozen.gameserver.model.L2Party: void distributeItem(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.L2Party: void distributeItem(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Attackable$RewardItem,boolean,com.l2jfrozen.gameserver.model.L2Attackable)
com.l2jfrozen.gameserver.model.L2Party: void distributeAdena(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Party: void distributeXpAndSp(long,int,java.util.List,int)
com.l2jfrozen.gameserver.model.L2Party: void recalculatePartyLevel()
com.l2jfrozen.gameserver.model.L2Party: java.util.List getValidMembers(java.util.List,int)
com.l2jfrozen.gameserver.model.L2Party: double getBaseExpSpBonus(int)
com.l2jfrozen.gameserver.model.L2Party: double getExpBonus(int)
com.l2jfrozen.gameserver.model.L2Party: double getSpBonus(int)
com.l2jfrozen.gameserver.model.L2Party: int getLevel()
com.l2jfrozen.gameserver.model.L2Party: int getLootDistribution()
com.l2jfrozen.gameserver.model.L2Party: boolean isInCommandChannel()
com.l2jfrozen.gameserver.model.L2Party: com.l2jfrozen.gameserver.model.L2CommandChannel getCommandChannel()
com.l2jfrozen.gameserver.model.L2Party: void setCommandChannel(com.l2jfrozen.gameserver.model.L2CommandChannel)
com.l2jfrozen.gameserver.model.L2Party: boolean isInDimensionalRift()
com.l2jfrozen.gameserver.model.L2Party: void setDimensionalRift(com.l2jfrozen.gameserver.model.entity.DimensionalRift)
com.l2jfrozen.gameserver.model.L2Party: com.l2jfrozen.gameserver.model.entity.DimensionalRift getDimensionalRift()
com.l2jfrozen.gameserver.model.L2Party: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getLeader()
com.l2jfrozen.gameserver.model.L2Party: void <clinit>()
com.l2jfrozen.gameserver.model.L2Party$PositionBroadcast
com.l2jfrozen.gameserver.model.L2Party$PositionBroadcast: com.l2jfrozen.gameserver.model.L2Party this$0
com.l2jfrozen.gameserver.model.L2Party$PositionBroadcast: L2Party$PositionBroadcast(com.l2jfrozen.gameserver.model.L2Party)
com.l2jfrozen.gameserver.model.L2Party$PositionBroadcast: void run()
com.l2jfrozen.gameserver.model.L2PetData
com.l2jfrozen.gameserver.model.L2PetData: java.lang.String PET_TYPE
com.l2jfrozen.gameserver.model.L2PetData: java.lang.String PET_LEVEL
com.l2jfrozen.gameserver.model.L2PetData: java.lang.String PET_MAX_EXP
com.l2jfrozen.gameserver.model.L2PetData: java.lang.String PET_MAX_HP
com.l2jfrozen.gameserver.model.L2PetData: java.lang.String PET_MAX_MP
com.l2jfrozen.gameserver.model.L2PetData: java.lang.String PET_PATK
com.l2jfrozen.gameserver.model.L2PetData: java.lang.String PET_PDEF
com.l2jfrozen.gameserver.model.L2PetData: java.lang.String PET_MATK
com.l2jfrozen.gameserver.model.L2PetData: java.lang.String PET_MDEF
com.l2jfrozen.gameserver.model.L2PetData: java.lang.String PET_ACCURACY
com.l2jfrozen.gameserver.model.L2PetData: java.lang.String PET_EVASION
com.l2jfrozen.gameserver.model.L2PetData: java.lang.String PET_CRITICAL
com.l2jfrozen.gameserver.model.L2PetData: java.lang.String PET_SPEED
com.l2jfrozen.gameserver.model.L2PetData: java.lang.String PET_ATK_SPEED
com.l2jfrozen.gameserver.model.L2PetData: java.lang.String PET_CAST_SPEED
com.l2jfrozen.gameserver.model.L2PetData: java.lang.String PET_MAX_FEED
com.l2jfrozen.gameserver.model.L2PetData: java.lang.String PET_FEED_BATTLE
com.l2jfrozen.gameserver.model.L2PetData: java.lang.String PET_FEED_NORMAL
com.l2jfrozen.gameserver.model.L2PetData: java.lang.String PET_MAX_LOAD
com.l2jfrozen.gameserver.model.L2PetData: java.lang.String PET_REGEN_HP
com.l2jfrozen.gameserver.model.L2PetData: java.lang.String PET_REGEN_MP
com.l2jfrozen.gameserver.model.L2PetData: java.lang.String OWNER_EXP_TAKEN
com.l2jfrozen.gameserver.model.L2PetData: int _petId
com.l2jfrozen.gameserver.model.L2PetData: int _petLevel
com.l2jfrozen.gameserver.model.L2PetData: float _ownerExpTaken
com.l2jfrozen.gameserver.model.L2PetData: long _petMaxExp
com.l2jfrozen.gameserver.model.L2PetData: int _petMaxHP
com.l2jfrozen.gameserver.model.L2PetData: int _petMaxMP
com.l2jfrozen.gameserver.model.L2PetData: int _petPAtk
com.l2jfrozen.gameserver.model.L2PetData: int _petPDef
com.l2jfrozen.gameserver.model.L2PetData: int _petMAtk
com.l2jfrozen.gameserver.model.L2PetData: int _petMDef
com.l2jfrozen.gameserver.model.L2PetData: int _petAccuracy
com.l2jfrozen.gameserver.model.L2PetData: int _petEvasion
com.l2jfrozen.gameserver.model.L2PetData: int _petCritical
com.l2jfrozen.gameserver.model.L2PetData: int _petSpeed
com.l2jfrozen.gameserver.model.L2PetData: int _petAtkSpeed
com.l2jfrozen.gameserver.model.L2PetData: int _petCastSpeed
com.l2jfrozen.gameserver.model.L2PetData: int _petMaxFeed
com.l2jfrozen.gameserver.model.L2PetData: int _petFeedBattle
com.l2jfrozen.gameserver.model.L2PetData: int _petFeedNormal
com.l2jfrozen.gameserver.model.L2PetData: int _petMaxLoad
com.l2jfrozen.gameserver.model.L2PetData: int _petRegenHP
com.l2jfrozen.gameserver.model.L2PetData: int _petRegenMP
com.l2jfrozen.gameserver.model.L2PetData: L2PetData()
com.l2jfrozen.gameserver.model.L2PetData: void setStat(java.lang.String,int)
com.l2jfrozen.gameserver.model.L2PetData: void setStat(java.lang.String,long)
com.l2jfrozen.gameserver.model.L2PetData: void setStat(java.lang.String,float)
com.l2jfrozen.gameserver.model.L2PetData: int getPetID()
com.l2jfrozen.gameserver.model.L2PetData: void setPetID(int)
com.l2jfrozen.gameserver.model.L2PetData: int getPetLevel()
com.l2jfrozen.gameserver.model.L2PetData: void setPetLevel(int)
com.l2jfrozen.gameserver.model.L2PetData: long getPetMaxExp()
com.l2jfrozen.gameserver.model.L2PetData: void setPetMaxExp(long)
com.l2jfrozen.gameserver.model.L2PetData: float getOwnerExpTaken()
com.l2jfrozen.gameserver.model.L2PetData: void setOwnerExpTaken(float)
com.l2jfrozen.gameserver.model.L2PetData: int getPetMaxHP()
com.l2jfrozen.gameserver.model.L2PetData: void setPetMaxHP(int)
com.l2jfrozen.gameserver.model.L2PetData: int getPetMaxMP()
com.l2jfrozen.gameserver.model.L2PetData: void setPetMaxMP(int)
com.l2jfrozen.gameserver.model.L2PetData: int getPetPAtk()
com.l2jfrozen.gameserver.model.L2PetData: void setPetPAtk(int)
com.l2jfrozen.gameserver.model.L2PetData: int getPetPDef()
com.l2jfrozen.gameserver.model.L2PetData: void setPetPDef(int)
com.l2jfrozen.gameserver.model.L2PetData: int getPetMAtk()
com.l2jfrozen.gameserver.model.L2PetData: void setPetMAtk(int)
com.l2jfrozen.gameserver.model.L2PetData: int getPetMDef()
com.l2jfrozen.gameserver.model.L2PetData: void setPetMDef(int)
com.l2jfrozen.gameserver.model.L2PetData: int getPetAccuracy()
com.l2jfrozen.gameserver.model.L2PetData: void setPetAccuracy(int)
com.l2jfrozen.gameserver.model.L2PetData: int getPetEvasion()
com.l2jfrozen.gameserver.model.L2PetData: void setPetEvasion(int)
com.l2jfrozen.gameserver.model.L2PetData: int getPetCritical()
com.l2jfrozen.gameserver.model.L2PetData: void setPetCritical(int)
com.l2jfrozen.gameserver.model.L2PetData: int getPetSpeed()
com.l2jfrozen.gameserver.model.L2PetData: void setPetSpeed(int)
com.l2jfrozen.gameserver.model.L2PetData: int getPetAtkSpeed()
com.l2jfrozen.gameserver.model.L2PetData: void setPetAtkSpeed(int)
com.l2jfrozen.gameserver.model.L2PetData: int getPetCastSpeed()
com.l2jfrozen.gameserver.model.L2PetData: void setPetCastSpeed(int)
com.l2jfrozen.gameserver.model.L2PetData: int getPetMaxFeed()
com.l2jfrozen.gameserver.model.L2PetData: void setPetMaxFeed(int)
com.l2jfrozen.gameserver.model.L2PetData: int getPetFeedNormal()
com.l2jfrozen.gameserver.model.L2PetData: void setPetFeedNormal(int)
com.l2jfrozen.gameserver.model.L2PetData: int getPetFeedBattle()
com.l2jfrozen.gameserver.model.L2PetData: void setPetFeedBattle(int)
com.l2jfrozen.gameserver.model.L2PetData: int getPetMaxLoad()
com.l2jfrozen.gameserver.model.L2PetData: void setPetMaxLoad(int)
com.l2jfrozen.gameserver.model.L2PetData: int getPetRegenHP()
com.l2jfrozen.gameserver.model.L2PetData: void setPetRegenHP(int)
com.l2jfrozen.gameserver.model.L2PetData: int getPetRegenMP()
com.l2jfrozen.gameserver.model.L2PetData: void setPetRegenMP(int)
com.l2jfrozen.gameserver.model.L2PetData: java.lang.String toString()
com.l2jfrozen.gameserver.model.L2PledgeSkillLearn
com.l2jfrozen.gameserver.model.L2PledgeSkillLearn: int _id
com.l2jfrozen.gameserver.model.L2PledgeSkillLearn: int _level
com.l2jfrozen.gameserver.model.L2PledgeSkillLearn: java.lang.String _name
com.l2jfrozen.gameserver.model.L2PledgeSkillLearn: int _repCost
com.l2jfrozen.gameserver.model.L2PledgeSkillLearn: int _baseLvl
com.l2jfrozen.gameserver.model.L2PledgeSkillLearn: int _itemId
com.l2jfrozen.gameserver.model.L2PledgeSkillLearn: L2PledgeSkillLearn(int,int,int,java.lang.String,int,int)
com.l2jfrozen.gameserver.model.L2PledgeSkillLearn: int getId()
com.l2jfrozen.gameserver.model.L2PledgeSkillLearn: int getLevel()
com.l2jfrozen.gameserver.model.L2PledgeSkillLearn: int getBaseLevel()
com.l2jfrozen.gameserver.model.L2PledgeSkillLearn: java.lang.String getName()
com.l2jfrozen.gameserver.model.L2PledgeSkillLearn: int getRepCost()
com.l2jfrozen.gameserver.model.L2PledgeSkillLearn: int getItemId()
com.l2jfrozen.gameserver.model.L2Potion
com.l2jfrozen.gameserver.model.L2Potion: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.L2Potion: java.util.concurrent.Future _potionhpRegTask
com.l2jfrozen.gameserver.model.L2Potion: java.util.concurrent.Future _potionmpRegTask
com.l2jfrozen.gameserver.model.L2Potion: int _milliseconds
com.l2jfrozen.gameserver.model.L2Potion: double _effect
com.l2jfrozen.gameserver.model.L2Potion: int _duration
com.l2jfrozen.gameserver.model.L2Potion: int _potion
com.l2jfrozen.gameserver.model.L2Potion: java.lang.Object _mpLock
com.l2jfrozen.gameserver.model.L2Potion: java.lang.Object _hpLock
com.l2jfrozen.gameserver.model.L2Potion: L2Potion(int)
com.l2jfrozen.gameserver.model.L2Potion: void stopPotionHpRegeneration()
com.l2jfrozen.gameserver.model.L2Potion: void setCurrentHpPotion2()
com.l2jfrozen.gameserver.model.L2Potion: void setCurrentHpPotion1(com.l2jfrozen.gameserver.model.L2Character,int)
com.l2jfrozen.gameserver.model.L2Potion: void startPotionMpRegeneration(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Potion: void stopPotionMpRegeneration()
com.l2jfrozen.gameserver.model.L2Potion: void setCurrentMpPotion2()
com.l2jfrozen.gameserver.model.L2Potion: void setCurrentMpPotion1(com.l2jfrozen.gameserver.model.L2Character,int)
com.l2jfrozen.gameserver.model.L2Potion: boolean isAutoAttackable(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Potion: void <clinit>()
com.l2jfrozen.gameserver.model.L2Potion$PotionHpHealing
com.l2jfrozen.gameserver.model.L2Potion$PotionHpHealing: com.l2jfrozen.gameserver.model.L2Character _instance
com.l2jfrozen.gameserver.model.L2Potion$PotionHpHealing: com.l2jfrozen.gameserver.model.L2Potion this$0
com.l2jfrozen.gameserver.model.L2Potion$PotionHpHealing: L2Potion$PotionHpHealing(com.l2jfrozen.gameserver.model.L2Potion,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Potion$PotionHpHealing: void run()
com.l2jfrozen.gameserver.model.L2Potion$PotionMpHealing
com.l2jfrozen.gameserver.model.L2Potion$PotionMpHealing: com.l2jfrozen.gameserver.model.L2Character _instance
com.l2jfrozen.gameserver.model.L2Potion$PotionMpHealing: com.l2jfrozen.gameserver.model.L2Potion this$0
com.l2jfrozen.gameserver.model.L2Potion$PotionMpHealing: L2Potion$PotionMpHealing(com.l2jfrozen.gameserver.model.L2Potion,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Potion$PotionMpHealing: void run()
com.l2jfrozen.gameserver.model.L2Radar
com.l2jfrozen.gameserver.model.L2Radar: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _player
com.l2jfrozen.gameserver.model.L2Radar: java.util.Vector _markers
com.l2jfrozen.gameserver.model.L2Radar: L2Radar(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2Radar: void addMarker(int,int,int)
com.l2jfrozen.gameserver.model.L2Radar: void removeMarker(int,int,int)
com.l2jfrozen.gameserver.model.L2Radar: void removeAllMarkers()
com.l2jfrozen.gameserver.model.L2Radar: void loadMarkers()
com.l2jfrozen.gameserver.model.L2Radar$RadarMarker
com.l2jfrozen.gameserver.model.L2Radar$RadarMarker: int _type
com.l2jfrozen.gameserver.model.L2Radar$RadarMarker: int _x
com.l2jfrozen.gameserver.model.L2Radar$RadarMarker: int _y
com.l2jfrozen.gameserver.model.L2Radar$RadarMarker: int _z
com.l2jfrozen.gameserver.model.L2Radar$RadarMarker: L2Radar$RadarMarker(int,int,int)
com.l2jfrozen.gameserver.model.L2Radar$RadarMarker: boolean equals(java.lang.Object)
com.l2jfrozen.gameserver.model.L2Radar$RadarOnPlayer
com.l2jfrozen.gameserver.model.L2Radar$RadarOnPlayer: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _myTarget
com.l2jfrozen.gameserver.model.L2Radar$RadarOnPlayer: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _me
com.l2jfrozen.gameserver.model.L2Radar$RadarOnPlayer: com.l2jfrozen.gameserver.model.L2Radar this$0
com.l2jfrozen.gameserver.model.L2Radar$RadarOnPlayer: L2Radar$RadarOnPlayer(com.l2jfrozen.gameserver.model.L2Radar,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2Radar$RadarOnPlayer: void run()
com.l2jfrozen.gameserver.model.L2RecipeList
com.l2jfrozen.gameserver.model.L2RecipeList: com.l2jfrozen.gameserver.model.actor.instance.L2RecipeInstance[] _recipes
com.l2jfrozen.gameserver.model.L2RecipeList: int _id
com.l2jfrozen.gameserver.model.L2RecipeList: int _level
com.l2jfrozen.gameserver.model.L2RecipeList: int _recipeId
com.l2jfrozen.gameserver.model.L2RecipeList: java.lang.String _recipeName
com.l2jfrozen.gameserver.model.L2RecipeList: int _successRate
com.l2jfrozen.gameserver.model.L2RecipeList: int _mpCost
com.l2jfrozen.gameserver.model.L2RecipeList: int _itemId
com.l2jfrozen.gameserver.model.L2RecipeList: int _count
com.l2jfrozen.gameserver.model.L2RecipeList: boolean _isDwarvenRecipe
com.l2jfrozen.gameserver.model.L2RecipeList: L2RecipeList(int,int,int,java.lang.String,int,int,int,int,boolean)
com.l2jfrozen.gameserver.model.L2RecipeList: void addRecipe(com.l2jfrozen.gameserver.model.actor.instance.L2RecipeInstance)
com.l2jfrozen.gameserver.model.L2RecipeList: int getId()
com.l2jfrozen.gameserver.model.L2RecipeList: int getLevel()
com.l2jfrozen.gameserver.model.L2RecipeList: int getRecipeId()
com.l2jfrozen.gameserver.model.L2RecipeList: java.lang.String getRecipeName()
com.l2jfrozen.gameserver.model.L2RecipeList: int getSuccessRate()
com.l2jfrozen.gameserver.model.L2RecipeList: int getMpCost()
com.l2jfrozen.gameserver.model.L2RecipeList: boolean isConsumable()
com.l2jfrozen.gameserver.model.L2RecipeList: int getItemId()
com.l2jfrozen.gameserver.model.L2RecipeList: int getCount()
com.l2jfrozen.gameserver.model.L2RecipeList: boolean isDwarvenRecipe()
com.l2jfrozen.gameserver.model.L2RecipeList: com.l2jfrozen.gameserver.model.actor.instance.L2RecipeInstance[] getRecipes()
com.l2jfrozen.gameserver.model.L2Request
com.l2jfrozen.gameserver.model.L2Request: int REQUEST_TIMEOUT
com.l2jfrozen.gameserver.model.L2Request: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _player
com.l2jfrozen.gameserver.model.L2Request: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _partner
com.l2jfrozen.gameserver.model.L2Request: boolean _isRequestor
com.l2jfrozen.gameserver.model.L2Request: boolean _isAnswerer
com.l2jfrozen.gameserver.model.L2Request: com.l2jfrozen.gameserver.network.clientpackets.L2GameClientPacket _requestPacket
com.l2jfrozen.gameserver.model.L2Request: L2Request(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2Request: void clear()
com.l2jfrozen.gameserver.model.L2Request: void setPartner(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2Request: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getPartner()
com.l2jfrozen.gameserver.model.L2Request: void setRequestPacket(com.l2jfrozen.gameserver.network.clientpackets.L2GameClientPacket)
com.l2jfrozen.gameserver.model.L2Request: com.l2jfrozen.gameserver.network.clientpackets.L2GameClientPacket getRequestPacket()
com.l2jfrozen.gameserver.model.L2Request: boolean setRequest(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.network.clientpackets.L2GameClientPacket)
com.l2jfrozen.gameserver.model.L2Request: void setOnRequestTimer(boolean)
com.l2jfrozen.gameserver.model.L2Request: void onRequestResponse()
com.l2jfrozen.gameserver.model.L2Request: boolean isProcessingRequest()
com.l2jfrozen.gameserver.model.L2Request$1
com.l2jfrozen.gameserver.model.L2Request$1: com.l2jfrozen.gameserver.model.L2Request this$0
com.l2jfrozen.gameserver.model.L2Request$1: L2Request$1(com.l2jfrozen.gameserver.model.L2Request)
com.l2jfrozen.gameserver.model.L2Request$1: void run()
com.l2jfrozen.gameserver.model.L2ShortCut
com.l2jfrozen.gameserver.model.L2ShortCut: int TYPE_ITEM
com.l2jfrozen.gameserver.model.L2ShortCut: int TYPE_SKILL
com.l2jfrozen.gameserver.model.L2ShortCut: int TYPE_ACTION
com.l2jfrozen.gameserver.model.L2ShortCut: int TYPE_MACRO
com.l2jfrozen.gameserver.model.L2ShortCut: int TYPE_RECIPE
com.l2jfrozen.gameserver.model.L2ShortCut: int _slot
com.l2jfrozen.gameserver.model.L2ShortCut: int _page
com.l2jfrozen.gameserver.model.L2ShortCut: int _type
com.l2jfrozen.gameserver.model.L2ShortCut: int _id
com.l2jfrozen.gameserver.model.L2ShortCut: int _level
com.l2jfrozen.gameserver.model.L2ShortCut: L2ShortCut(int,int,int,int,int,int)
com.l2jfrozen.gameserver.model.L2ShortCut: int getId()
com.l2jfrozen.gameserver.model.L2ShortCut: int getLevel()
com.l2jfrozen.gameserver.model.L2ShortCut: int getPage()
com.l2jfrozen.gameserver.model.L2ShortCut: int getSlot()
com.l2jfrozen.gameserver.model.L2ShortCut: int getType()
com.l2jfrozen.gameserver.model.L2SiegeClan
com.l2jfrozen.gameserver.model.L2SiegeClan: int _clanId
com.l2jfrozen.gameserver.model.L2SiegeClan: java.util.List _flag
com.l2jfrozen.gameserver.model.L2SiegeClan: int _numFlagsAdded
com.l2jfrozen.gameserver.model.L2SiegeClan: com.l2jfrozen.gameserver.model.SiegeClanType _type
com.l2jfrozen.gameserver.model.L2SiegeClan: L2SiegeClan(int,com.l2jfrozen.gameserver.model.SiegeClanType)
com.l2jfrozen.gameserver.model.L2SiegeClan: int getNumFlags()
com.l2jfrozen.gameserver.model.L2SiegeClan: void addFlag(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.model.L2SiegeClan: boolean removeFlag(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.model.L2SiegeClan: void removeFlags()
com.l2jfrozen.gameserver.model.L2SiegeClan: int getClanId()
com.l2jfrozen.gameserver.model.L2SiegeClan: java.util.List getFlag()
com.l2jfrozen.gameserver.model.L2SiegeClan: com.l2jfrozen.gameserver.model.SiegeClanType getType()
com.l2jfrozen.gameserver.model.L2SiegeClan: void setType(com.l2jfrozen.gameserver.model.SiegeClanType)
com.l2jfrozen.gameserver.model.L2Skill
com.l2jfrozen.gameserver.model.L2Skill: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.L2Skill: int SKILL_CUBIC_MASTERY
com.l2jfrozen.gameserver.model.L2Skill: int SKILL_LUCKY
com.l2jfrozen.gameserver.model.L2Skill: int SKILL_CREATE_COMMON
com.l2jfrozen.gameserver.model.L2Skill: int SKILL_CREATE_DWARVEN
com.l2jfrozen.gameserver.model.L2Skill: int SKILL_CRYSTALLIZE
com.l2jfrozen.gameserver.model.L2Skill: int SKILL_DIVINE_INSPIRATION
com.l2jfrozen.gameserver.model.L2Skill: int SKILL_FAKE_INT
com.l2jfrozen.gameserver.model.L2Skill: int SKILL_FAKE_WIT
com.l2jfrozen.gameserver.model.L2Skill: int SKILL_FAKE_MEN
com.l2jfrozen.gameserver.model.L2Skill: int SKILL_FAKE_CON
com.l2jfrozen.gameserver.model.L2Skill: int SKILL_FAKE_DEX
com.l2jfrozen.gameserver.model.L2Skill: int SKILL_FAKE_STR
com.l2jfrozen.gameserver.model.L2Skill: int _targetConsumeId
com.l2jfrozen.gameserver.model.L2Skill: int _targetConsume
com.l2jfrozen.gameserver.model.L2Skill: com.l2jfrozen.gameserver.model.ChanceCondition _chanceCondition
com.l2jfrozen.gameserver.model.L2Skill: int ELEMENT_WIND
com.l2jfrozen.gameserver.model.L2Skill: int ELEMENT_FIRE
com.l2jfrozen.gameserver.model.L2Skill: int ELEMENT_WATER
com.l2jfrozen.gameserver.model.L2Skill: int ELEMENT_EARTH
com.l2jfrozen.gameserver.model.L2Skill: int ELEMENT_HOLY
com.l2jfrozen.gameserver.model.L2Skill: int ELEMENT_DARK
com.l2jfrozen.gameserver.model.L2Skill: int STAT_PATK
com.l2jfrozen.gameserver.model.L2Skill: int STAT_PDEF
com.l2jfrozen.gameserver.model.L2Skill: int STAT_MATK
com.l2jfrozen.gameserver.model.L2Skill: int STAT_MDEF
com.l2jfrozen.gameserver.model.L2Skill: int STAT_MAXHP
com.l2jfrozen.gameserver.model.L2Skill: int STAT_MAXMP
com.l2jfrozen.gameserver.model.L2Skill: int STAT_CURHP
com.l2jfrozen.gameserver.model.L2Skill: int STAT_CURMP
com.l2jfrozen.gameserver.model.L2Skill: int STAT_HPREGEN
com.l2jfrozen.gameserver.model.L2Skill: int STAT_MPREGEN
com.l2jfrozen.gameserver.model.L2Skill: int STAT_CASTINGSPEED
com.l2jfrozen.gameserver.model.L2Skill: int STAT_ATKSPD
com.l2jfrozen.gameserver.model.L2Skill: int STAT_CRITDAM
com.l2jfrozen.gameserver.model.L2Skill: int STAT_CRITRATE
com.l2jfrozen.gameserver.model.L2Skill: int STAT_FIRERES
com.l2jfrozen.gameserver.model.L2Skill: int STAT_WINDRES
com.l2jfrozen.gameserver.model.L2Skill: int STAT_WATERRES
com.l2jfrozen.gameserver.model.L2Skill: int STAT_EARTHRES
com.l2jfrozen.gameserver.model.L2Skill: int STAT_HOLYRES
com.l2jfrozen.gameserver.model.L2Skill: int STAT_DARKRES
com.l2jfrozen.gameserver.model.L2Skill: int STAT_ROOTRES
com.l2jfrozen.gameserver.model.L2Skill: int STAT_SLEEPRES
com.l2jfrozen.gameserver.model.L2Skill: int STAT_CONFUSIONRES
com.l2jfrozen.gameserver.model.L2Skill: int STAT_BREATH
com.l2jfrozen.gameserver.model.L2Skill: int STAT_AGGRESSION
com.l2jfrozen.gameserver.model.L2Skill: int STAT_BLEED
com.l2jfrozen.gameserver.model.L2Skill: int STAT_POISON
com.l2jfrozen.gameserver.model.L2Skill: int STAT_STUN
com.l2jfrozen.gameserver.model.L2Skill: int STAT_ROOT
com.l2jfrozen.gameserver.model.L2Skill: int STAT_MOVEMENT
com.l2jfrozen.gameserver.model.L2Skill: int STAT_EVASION
com.l2jfrozen.gameserver.model.L2Skill: int STAT_ACCURACY
com.l2jfrozen.gameserver.model.L2Skill: int STAT_COMBAT_STRENGTH
com.l2jfrozen.gameserver.model.L2Skill: int STAT_COMBAT_WEAKNESS
com.l2jfrozen.gameserver.model.L2Skill: int STAT_ATTACK_RANGE
com.l2jfrozen.gameserver.model.L2Skill: int STAT_NOAGG
com.l2jfrozen.gameserver.model.L2Skill: int STAT_SHIELDDEF
com.l2jfrozen.gameserver.model.L2Skill: int STAT_MP_CONSUME_RATE
com.l2jfrozen.gameserver.model.L2Skill: int STAT_HP_CONSUME_RATE
com.l2jfrozen.gameserver.model.L2Skill: int STAT_MCRITRATE
com.l2jfrozen.gameserver.model.L2Skill: int COMBAT_MOD_ANIMAL
com.l2jfrozen.gameserver.model.L2Skill: int COMBAT_MOD_BEAST
com.l2jfrozen.gameserver.model.L2Skill: int COMBAT_MOD_BUG
com.l2jfrozen.gameserver.model.L2Skill: int COMBAT_MOD_DRAGON
com.l2jfrozen.gameserver.model.L2Skill: int COMBAT_MOD_MONSTER
com.l2jfrozen.gameserver.model.L2Skill: int COMBAT_MOD_PLANT
com.l2jfrozen.gameserver.model.L2Skill: int COMBAT_MOD_HOLY
com.l2jfrozen.gameserver.model.L2Skill: int COMBAT_MOD_UNHOLY
com.l2jfrozen.gameserver.model.L2Skill: int COMBAT_MOD_BOW
com.l2jfrozen.gameserver.model.L2Skill: int COMBAT_MOD_BLUNT
com.l2jfrozen.gameserver.model.L2Skill: int COMBAT_MOD_DAGGER
com.l2jfrozen.gameserver.model.L2Skill: int COMBAT_MOD_FIST
com.l2jfrozen.gameserver.model.L2Skill: int COMBAT_MOD_DUAL
com.l2jfrozen.gameserver.model.L2Skill: int COMBAT_MOD_SWORD
com.l2jfrozen.gameserver.model.L2Skill: int COMBAT_MOD_POISON
com.l2jfrozen.gameserver.model.L2Skill: int COMBAT_MOD_BLEED
com.l2jfrozen.gameserver.model.L2Skill: int COMBAT_MOD_FIRE
com.l2jfrozen.gameserver.model.L2Skill: int COMBAT_MOD_WATER
com.l2jfrozen.gameserver.model.L2Skill: int COMBAT_MOD_EARTH
com.l2jfrozen.gameserver.model.L2Skill: int COMBAT_MOD_WIND
com.l2jfrozen.gameserver.model.L2Skill: int COMBAT_MOD_ROOT
com.l2jfrozen.gameserver.model.L2Skill: int COMBAT_MOD_STUN
com.l2jfrozen.gameserver.model.L2Skill: int COMBAT_MOD_CONFUSION
com.l2jfrozen.gameserver.model.L2Skill: int COMBAT_MOD_DARK
com.l2jfrozen.gameserver.model.L2Skill: int COND_RUNNING
com.l2jfrozen.gameserver.model.L2Skill: int COND_WALKING
com.l2jfrozen.gameserver.model.L2Skill: int COND_SIT
com.l2jfrozen.gameserver.model.L2Skill: int COND_BEHIND
com.l2jfrozen.gameserver.model.L2Skill: int COND_CRIT
com.l2jfrozen.gameserver.model.L2Skill: int COND_LOWHP
com.l2jfrozen.gameserver.model.L2Skill: int COND_ROBES
com.l2jfrozen.gameserver.model.L2Skill: int COND_CHARGES
com.l2jfrozen.gameserver.model.L2Skill: int COND_SHIELD
com.l2jfrozen.gameserver.model.L2Skill: int COND_GRADEA
com.l2jfrozen.gameserver.model.L2Skill: int COND_GRADEB
com.l2jfrozen.gameserver.model.L2Skill: int COND_GRADEC
com.l2jfrozen.gameserver.model.L2Skill: int COND_GRADED
com.l2jfrozen.gameserver.model.L2Skill: int COND_GRADES
com.l2jfrozen.gameserver.model.L2Skill: com.l2jfrozen.gameserver.skills.funcs.Func[] _emptyFunctionSet
com.l2jfrozen.gameserver.model.L2Skill: com.l2jfrozen.gameserver.model.L2Effect[] _emptyEffectSet
com.l2jfrozen.gameserver.model.L2Skill: int _id
com.l2jfrozen.gameserver.model.L2Skill: int _level
com.l2jfrozen.gameserver.model.L2Skill: int _displayId
com.l2jfrozen.gameserver.model.L2Skill: java.lang.String _name
com.l2jfrozen.gameserver.model.L2Skill: com.l2jfrozen.gameserver.model.SkillOpType _operateType
com.l2jfrozen.gameserver.model.L2Skill: boolean _magic
com.l2jfrozen.gameserver.model.L2Skill: boolean _staticReuse
com.l2jfrozen.gameserver.model.L2Skill: boolean _staticHitTime
com.l2jfrozen.gameserver.model.L2Skill: int _mpConsume
com.l2jfrozen.gameserver.model.L2Skill: int _mpInitialConsume
com.l2jfrozen.gameserver.model.L2Skill: int _hpConsume
com.l2jfrozen.gameserver.model.L2Skill: int _itemConsume
com.l2jfrozen.gameserver.model.L2Skill: int _itemConsumeId
com.l2jfrozen.gameserver.model.L2Skill: int _itemConsumeOT
com.l2jfrozen.gameserver.model.L2Skill: int _itemConsumeIdOT
com.l2jfrozen.gameserver.model.L2Skill: int _itemConsumeSteps
com.l2jfrozen.gameserver.model.L2Skill: int _summonTotalLifeTime
com.l2jfrozen.gameserver.model.L2Skill: int _summonTimeLostIdle
com.l2jfrozen.gameserver.model.L2Skill: int _summonTimeLostActive
com.l2jfrozen.gameserver.model.L2Skill: int _itemConsumeTime
com.l2jfrozen.gameserver.model.L2Skill: int _castRange
com.l2jfrozen.gameserver.model.L2Skill: int _effectRange
com.l2jfrozen.gameserver.model.L2Skill: int _hitTime
com.l2jfrozen.gameserver.model.L2Skill: int _coolTime
com.l2jfrozen.gameserver.model.L2Skill: int _reuseDelay
com.l2jfrozen.gameserver.model.L2Skill: int _buffDuration
com.l2jfrozen.gameserver.model.L2Skill: int _reuseHashCode
com.l2jfrozen.gameserver.model.L2Skill: com.l2jfrozen.gameserver.model.SkillTargetType _targetType
com.l2jfrozen.gameserver.model.L2Skill: double _power
com.l2jfrozen.gameserver.model.L2Skill: int _effectPoints
com.l2jfrozen.gameserver.model.L2Skill: int _magicLevel
com.l2jfrozen.gameserver.model.L2Skill: java.lang.String[] _negateSkillTypes
com.l2jfrozen.gameserver.model.L2Skill: java.lang.String[] _negateEffectTypes
com.l2jfrozen.gameserver.model.L2Skill: float _negatePower
com.l2jfrozen.gameserver.model.L2Skill: int _negateId
com.l2jfrozen.gameserver.model.L2Skill: int _levelDepend
com.l2jfrozen.gameserver.model.L2Skill: int _skillRadius
com.l2jfrozen.gameserver.model.L2Skill: com.l2jfrozen.gameserver.model.SkillType _skillType
com.l2jfrozen.gameserver.model.L2Skill: com.l2jfrozen.gameserver.model.SkillType _effectType
com.l2jfrozen.gameserver.model.L2Skill: int _effectPower
com.l2jfrozen.gameserver.model.L2Skill: int _effectId
com.l2jfrozen.gameserver.model.L2Skill: int _effectLvl
com.l2jfrozen.gameserver.model.L2Skill: boolean _ispotion
com.l2jfrozen.gameserver.model.L2Skill: int _element
com.l2jfrozen.gameserver.model.L2Skill: com.l2jfrozen.gameserver.skills.BaseStats _saveVs
com.l2jfrozen.gameserver.model.L2Skill: boolean _isSuicideAttack
com.l2jfrozen.gameserver.model.L2Skill: com.l2jfrozen.gameserver.skills.Stats _stat
com.l2jfrozen.gameserver.model.L2Skill: int _condition
com.l2jfrozen.gameserver.model.L2Skill: int _conditionValue
com.l2jfrozen.gameserver.model.L2Skill: boolean _overhit
com.l2jfrozen.gameserver.model.L2Skill: int _weaponsAllowed
com.l2jfrozen.gameserver.model.L2Skill: int _armorsAllowed
com.l2jfrozen.gameserver.model.L2Skill: int _addCrossLearn
com.l2jfrozen.gameserver.model.L2Skill: float _mulCrossLearn
com.l2jfrozen.gameserver.model.L2Skill: float _mulCrossLearnRace
com.l2jfrozen.gameserver.model.L2Skill: float _mulCrossLearnProf
com.l2jfrozen.gameserver.model.L2Skill: java.util.List _canLearn
com.l2jfrozen.gameserver.model.L2Skill: java.util.List _teachers
com.l2jfrozen.gameserver.model.L2Skill: int _minPledgeClass
com.l2jfrozen.gameserver.model.L2Skill: boolean _isOffensive
com.l2jfrozen.gameserver.model.L2Skill: int _numCharges
com.l2jfrozen.gameserver.model.L2Skill: int _triggeredId
com.l2jfrozen.gameserver.model.L2Skill: int _triggeredLevel
com.l2jfrozen.gameserver.model.L2Skill: boolean _bestowed
com.l2jfrozen.gameserver.model.L2Skill: boolean _isHeroSkill
com.l2jfrozen.gameserver.model.L2Skill: int _baseCritRate
com.l2jfrozen.gameserver.model.L2Skill: int _lethalEffect1
com.l2jfrozen.gameserver.model.L2Skill: int _lethalEffect2
com.l2jfrozen.gameserver.model.L2Skill: boolean _directHpDmg
com.l2jfrozen.gameserver.model.L2Skill: boolean _isDance
com.l2jfrozen.gameserver.model.L2Skill: int _nextDanceCost
com.l2jfrozen.gameserver.model.L2Skill: float _sSBoost
com.l2jfrozen.gameserver.model.L2Skill: int _aggroPoints
com.l2jfrozen.gameserver.model.L2Skill: float _pvpMulti
com.l2jfrozen.gameserver.model.L2Skill: com.l2jfrozen.gameserver.skills.conditions.Condition _preCondition
com.l2jfrozen.gameserver.model.L2Skill: com.l2jfrozen.gameserver.skills.conditions.Condition _itemPreCondition
com.l2jfrozen.gameserver.model.L2Skill: com.l2jfrozen.gameserver.skills.funcs.FuncTemplate[] _funcTemplates
com.l2jfrozen.gameserver.model.L2Skill: com.l2jfrozen.gameserver.skills.effects.EffectTemplate[] _effectTemplates
com.l2jfrozen.gameserver.model.L2Skill: com.l2jfrozen.gameserver.skills.effects.EffectTemplate[] _effectTemplatesSelf
com.l2jfrozen.gameserver.model.L2Skill: boolean _nextActionIsAttack
com.l2jfrozen.gameserver.model.L2Skill: int _minChance
com.l2jfrozen.gameserver.model.L2Skill: int _maxChance
com.l2jfrozen.gameserver.model.L2Skill: boolean _singleEffect
com.l2jfrozen.gameserver.model.L2Skill: boolean _isDebuff
com.l2jfrozen.gameserver.model.L2Skill: boolean _advancedFlag
com.l2jfrozen.gameserver.model.L2Skill: int _advancedMultiplier
com.l2jfrozen.gameserver.model.L2Skill: L2Skill(com.l2jfrozen.gameserver.templates.StatsSet)
com.l2jfrozen.gameserver.model.L2Skill: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.model.L2Skill: boolean is_singleEffect()
com.l2jfrozen.gameserver.model.L2Skill: boolean is_Debuff()
com.l2jfrozen.gameserver.model.L2Skill: boolean nextActionIsAttack()
com.l2jfrozen.gameserver.model.L2Skill: boolean isPotion()
com.l2jfrozen.gameserver.model.L2Skill: int getArmorsAllowed()
com.l2jfrozen.gameserver.model.L2Skill: int getConditionValue()
com.l2jfrozen.gameserver.model.L2Skill: com.l2jfrozen.gameserver.model.SkillType getSkillType()
com.l2jfrozen.gameserver.model.L2Skill: boolean hasEffectWhileCasting()
com.l2jfrozen.gameserver.model.L2Skill: com.l2jfrozen.gameserver.skills.BaseStats getSavevs()
com.l2jfrozen.gameserver.model.L2Skill: int getElement()
com.l2jfrozen.gameserver.model.L2Skill: com.l2jfrozen.gameserver.model.SkillTargetType getTargetType()
com.l2jfrozen.gameserver.model.L2Skill: int getCondition()
com.l2jfrozen.gameserver.model.L2Skill: boolean isOverhit()
com.l2jfrozen.gameserver.model.L2Skill: boolean isSuicideAttack()
com.l2jfrozen.gameserver.model.L2Skill: double getPower(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Skill: double getPower()
com.l2jfrozen.gameserver.model.L2Skill: int getEffectPoints()
com.l2jfrozen.gameserver.model.L2Skill: java.lang.String[] getNegateSkillTypes()
com.l2jfrozen.gameserver.model.L2Skill: java.lang.String[] getNegateEffectTypes()
com.l2jfrozen.gameserver.model.L2Skill: float getNegatePower()
com.l2jfrozen.gameserver.model.L2Skill: int getNegateId()
com.l2jfrozen.gameserver.model.L2Skill: int getMagicLevel()
com.l2jfrozen.gameserver.model.L2Skill: boolean isStaticReuse()
com.l2jfrozen.gameserver.model.L2Skill: boolean isStaticHitTime()
com.l2jfrozen.gameserver.model.L2Skill: int getLevelDepend()
com.l2jfrozen.gameserver.model.L2Skill: int getEffectPower()
com.l2jfrozen.gameserver.model.L2Skill: int getEffectId()
com.l2jfrozen.gameserver.model.L2Skill: int getEffectLvl()
com.l2jfrozen.gameserver.model.L2Skill: com.l2jfrozen.gameserver.model.SkillType getEffectType()
com.l2jfrozen.gameserver.model.L2Skill: int getBuffDuration()
com.l2jfrozen.gameserver.model.L2Skill: int getCastRange()
com.l2jfrozen.gameserver.model.L2Skill: int getEffectRange()
com.l2jfrozen.gameserver.model.L2Skill: int getHpConsume()
com.l2jfrozen.gameserver.model.L2Skill: int getId()
com.l2jfrozen.gameserver.model.L2Skill: int getDisplayId()
com.l2jfrozen.gameserver.model.L2Skill: void setDisplayId(int)
com.l2jfrozen.gameserver.model.L2Skill: int getTriggeredId()
com.l2jfrozen.gameserver.model.L2Skill: int getTriggeredLevel()
com.l2jfrozen.gameserver.model.L2Skill: com.l2jfrozen.gameserver.skills.Stats getStat()
com.l2jfrozen.gameserver.model.L2Skill: int getItemConsume()
com.l2jfrozen.gameserver.model.L2Skill: int getItemConsumeId()
com.l2jfrozen.gameserver.model.L2Skill: int getItemConsumeOT()
com.l2jfrozen.gameserver.model.L2Skill: int getItemConsumeIdOT()
com.l2jfrozen.gameserver.model.L2Skill: int getItemConsumeSteps()
com.l2jfrozen.gameserver.model.L2Skill: int getTotalLifeTime()
com.l2jfrozen.gameserver.model.L2Skill: int getTimeLostIdle()
com.l2jfrozen.gameserver.model.L2Skill: int getTimeLostActive()
com.l2jfrozen.gameserver.model.L2Skill: int getItemConsumeTime()
com.l2jfrozen.gameserver.model.L2Skill: int getLevel()
com.l2jfrozen.gameserver.model.L2Skill: boolean isMagic()
com.l2jfrozen.gameserver.model.L2Skill: int getMpConsume()
com.l2jfrozen.gameserver.model.L2Skill: int getMpInitialConsume()
com.l2jfrozen.gameserver.model.L2Skill: java.lang.String getName()
com.l2jfrozen.gameserver.model.L2Skill: int getReuseDelay()
com.l2jfrozen.gameserver.model.L2Skill: int getSkillTime()
com.l2jfrozen.gameserver.model.L2Skill: int getHitTime()
com.l2jfrozen.gameserver.model.L2Skill: int getCoolTime()
com.l2jfrozen.gameserver.model.L2Skill: int getSkillRadius()
com.l2jfrozen.gameserver.model.L2Skill: boolean isActive()
com.l2jfrozen.gameserver.model.L2Skill: boolean isPassive()
com.l2jfrozen.gameserver.model.L2Skill: boolean isToggle()
com.l2jfrozen.gameserver.model.L2Skill: boolean isChance()
com.l2jfrozen.gameserver.model.L2Skill: com.l2jfrozen.gameserver.model.ChanceCondition getChanceCondition()
com.l2jfrozen.gameserver.model.L2Skill: boolean isDance()
com.l2jfrozen.gameserver.model.L2Skill: int getNextDanceMpCost()
com.l2jfrozen.gameserver.model.L2Skill: float getSSBoost()
com.l2jfrozen.gameserver.model.L2Skill: int getAggroPoints()
com.l2jfrozen.gameserver.model.L2Skill: float getPvpMulti()
com.l2jfrozen.gameserver.model.L2Skill: boolean useSoulShot()
com.l2jfrozen.gameserver.model.L2Skill: boolean useSpiritShot()
com.l2jfrozen.gameserver.model.L2Skill: boolean useFishShot()
com.l2jfrozen.gameserver.model.L2Skill: int getWeaponsAllowed()
com.l2jfrozen.gameserver.model.L2Skill: int getCrossLearnAdd()
com.l2jfrozen.gameserver.model.L2Skill: float getCrossLearnMul()
com.l2jfrozen.gameserver.model.L2Skill: float getCrossLearnRace()
com.l2jfrozen.gameserver.model.L2Skill: float getCrossLearnProf()
com.l2jfrozen.gameserver.model.L2Skill: boolean getCanLearn(com.l2jfrozen.gameserver.model.base.ClassId)
com.l2jfrozen.gameserver.model.L2Skill: boolean canTeachBy(int)
com.l2jfrozen.gameserver.model.L2Skill: int getMinPledgeClass()
com.l2jfrozen.gameserver.model.L2Skill: boolean isPvpSkill()
com.l2jfrozen.gameserver.model.L2Skill: boolean isOffensive()
com.l2jfrozen.gameserver.model.L2Skill: boolean isHeroSkill()
com.l2jfrozen.gameserver.model.L2Skill: int getNumCharges()
com.l2jfrozen.gameserver.model.L2Skill: int getBaseCritRate()
com.l2jfrozen.gameserver.model.L2Skill: int getLethalChance1()
com.l2jfrozen.gameserver.model.L2Skill: int getLethalChance2()
com.l2jfrozen.gameserver.model.L2Skill: boolean getDmgDirectlyToHP()
com.l2jfrozen.gameserver.model.L2Skill: boolean bestowed()
com.l2jfrozen.gameserver.model.L2Skill: boolean triggerAnotherSkill()
com.l2jfrozen.gameserver.model.L2Skill: boolean isSkillTypeOffensive()
com.l2jfrozen.gameserver.model.L2Skill: boolean getWeaponDependancy(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Skill: boolean getWeaponDependancy(com.l2jfrozen.gameserver.model.L2Character,boolean)
com.l2jfrozen.gameserver.model.L2Skill: boolean checkCondition(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Object,boolean)
com.l2jfrozen.gameserver.model.L2Skill: com.l2jfrozen.gameserver.model.L2Object[] getTargetList(com.l2jfrozen.gameserver.model.L2Character,boolean)
com.l2jfrozen.gameserver.model.L2Skill: com.l2jfrozen.gameserver.model.L2Object[] getTargetList(com.l2jfrozen.gameserver.model.L2Character,boolean,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Skill: com.l2jfrozen.gameserver.model.L2Object[] getTargetList(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Skill: com.l2jfrozen.gameserver.model.L2Object getFirstOfTargetList(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Skill: com.l2jfrozen.gameserver.skills.funcs.Func[] getStatFuncs(com.l2jfrozen.gameserver.model.L2Effect,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Skill: boolean hasEffects()
com.l2jfrozen.gameserver.model.L2Skill: com.l2jfrozen.gameserver.model.L2Effect[] getEffects(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Skill: com.l2jfrozen.gameserver.model.L2Effect[] getEffects(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Character,boolean,boolean,boolean)
com.l2jfrozen.gameserver.model.L2Skill: com.l2jfrozen.gameserver.model.L2Effect[] getEffectsSelf(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Skill: void attach(com.l2jfrozen.gameserver.skills.funcs.FuncTemplate)
com.l2jfrozen.gameserver.model.L2Skill: void attach(com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.model.L2Skill: void attachSelf(com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.model.L2Skill: boolean isAbnormalEffectByName(int)
com.l2jfrozen.gameserver.model.L2Skill: void attach(com.l2jfrozen.gameserver.skills.conditions.Condition,boolean)
com.l2jfrozen.gameserver.model.L2Skill: boolean checkPartyClan(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.L2Skill: java.lang.String toString()
com.l2jfrozen.gameserver.model.L2Skill: int getTargetConsumeId()
com.l2jfrozen.gameserver.model.L2Skill: int getTargetConsume()
com.l2jfrozen.gameserver.model.L2Skill: boolean hasSelfEffects()
com.l2jfrozen.gameserver.model.L2Skill: int getMinChance()
com.l2jfrozen.gameserver.model.L2Skill: int getMaxChance()
com.l2jfrozen.gameserver.model.L2Skill: boolean is_advancedFlag()
com.l2jfrozen.gameserver.model.L2Skill: int get_advancedMultiplier()
com.l2jfrozen.gameserver.model.L2Skill: int getReuseHashCode()
com.l2jfrozen.gameserver.model.L2Skill: void <clinit>()
com.l2jfrozen.gameserver.model.L2Skill$1
com.l2jfrozen.gameserver.model.L2Skill$1: int[] $SwitchMap$com$l2jfrozen$gameserver$model$SkillType
com.l2jfrozen.gameserver.model.L2Skill$1: int[] $SwitchMap$com$l2jfrozen$gameserver$model$SkillTargetType
com.l2jfrozen.gameserver.model.L2Skill$1: void <clinit>()
com.l2jfrozen.gameserver.model.L2SkillLearn
com.l2jfrozen.gameserver.model.L2SkillLearn: int _id
com.l2jfrozen.gameserver.model.L2SkillLearn: int _level
com.l2jfrozen.gameserver.model.L2SkillLearn: java.lang.String _name
com.l2jfrozen.gameserver.model.L2SkillLearn: int _spCost
com.l2jfrozen.gameserver.model.L2SkillLearn: int _minLevel
com.l2jfrozen.gameserver.model.L2SkillLearn: int _costid
com.l2jfrozen.gameserver.model.L2SkillLearn: int _costcount
com.l2jfrozen.gameserver.model.L2SkillLearn: L2SkillLearn(int,int,int,java.lang.String,int,int,int)
com.l2jfrozen.gameserver.model.L2SkillLearn: int getId()
com.l2jfrozen.gameserver.model.L2SkillLearn: int getLevel()
com.l2jfrozen.gameserver.model.L2SkillLearn: int getMinLevel()
com.l2jfrozen.gameserver.model.L2SkillLearn: java.lang.String getName()
com.l2jfrozen.gameserver.model.L2SkillLearn: int getSpCost()
com.l2jfrozen.gameserver.model.L2SkillLearn: int getIdCost()
com.l2jfrozen.gameserver.model.L2SkillLearn: int getCostCount()
com.l2jfrozen.gameserver.model.L2Summon
com.l2jfrozen.gameserver.model.L2Summon: int _pkKills
com.l2jfrozen.gameserver.model.L2Summon: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _owner
com.l2jfrozen.gameserver.model.L2Summon: int _attackRange
com.l2jfrozen.gameserver.model.L2Summon: boolean _follow
com.l2jfrozen.gameserver.model.L2Summon: boolean _previousFollowStatus
com.l2jfrozen.gameserver.model.L2Summon: int _maxLoad
com.l2jfrozen.gameserver.model.L2Summon: int _chargedSoulShot
com.l2jfrozen.gameserver.model.L2Summon: int _chargedSpiritShot
com.l2jfrozen.gameserver.model.L2Summon: int _soulShotsPerHit
com.l2jfrozen.gameserver.model.L2Summon: int _spiritShotsPerHit
com.l2jfrozen.gameserver.model.L2Summon: boolean _showSummonAnimation
com.l2jfrozen.gameserver.model.L2Summon: L2Summon(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2Summon: com.l2jfrozen.gameserver.model.actor.knownlist.SummonKnownList getKnownList()
com.l2jfrozen.gameserver.model.L2Summon: com.l2jfrozen.gameserver.model.actor.stat.SummonStat getStat()
com.l2jfrozen.gameserver.model.L2Summon: com.l2jfrozen.gameserver.model.actor.status.SummonStatus getStatus()
com.l2jfrozen.gameserver.model.L2Summon: com.l2jfrozen.gameserver.ai.L2CharacterAI getAI()
com.l2jfrozen.gameserver.model.L2Summon: com.l2jfrozen.gameserver.templates.L2NpcTemplate getTemplate()
com.l2jfrozen.gameserver.model.L2Summon: int getSummonType()
com.l2jfrozen.gameserver.model.L2Summon: void updateAbnormalEffect()
com.l2jfrozen.gameserver.model.L2Summon: boolean isMountable()
com.l2jfrozen.gameserver.model.L2Summon: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2Summon: long getExpForThisLevel()
com.l2jfrozen.gameserver.model.L2Summon: long getExpForNextLevel()
com.l2jfrozen.gameserver.model.L2Summon: int getKarma()
com.l2jfrozen.gameserver.model.L2Summon: byte getPvpFlag()
com.l2jfrozen.gameserver.model.L2Summon: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getOwner()
com.l2jfrozen.gameserver.model.L2Summon: int getNpcId()
com.l2jfrozen.gameserver.model.L2Summon: void doAttack(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Summon: void setPkKills(int)
com.l2jfrozen.gameserver.model.L2Summon: int getPkKills()
com.l2jfrozen.gameserver.model.L2Summon: int getMaxLoad()
com.l2jfrozen.gameserver.model.L2Summon: int getSoulShotsPerHit()
com.l2jfrozen.gameserver.model.L2Summon: int getSpiritShotsPerHit()
com.l2jfrozen.gameserver.model.L2Summon: void setMaxLoad(int)
com.l2jfrozen.gameserver.model.L2Summon: void setChargedSoulShot(int)
com.l2jfrozen.gameserver.model.L2Summon: void setChargedSpiritShot(int)
com.l2jfrozen.gameserver.model.L2Summon: void followOwner()
com.l2jfrozen.gameserver.model.L2Summon: boolean doDie(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Summon: boolean doDie(com.l2jfrozen.gameserver.model.L2Character,boolean)
com.l2jfrozen.gameserver.model.L2Summon: void stopDecay()
com.l2jfrozen.gameserver.model.L2Summon: void onDecay()
com.l2jfrozen.gameserver.model.L2Summon: void broadcastStatusUpdate()
com.l2jfrozen.gameserver.model.L2Summon: void deleteMe(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2Summon: void unSummon(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2Summon: int getAttackRange()
com.l2jfrozen.gameserver.model.L2Summon: void setAttackRange(int)
com.l2jfrozen.gameserver.model.L2Summon: void setFollowStatus(boolean)
com.l2jfrozen.gameserver.model.L2Summon: boolean getFollowStatus()
com.l2jfrozen.gameserver.model.L2Summon: boolean isAutoAttackable(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2Summon: int getChargedSoulShot()
com.l2jfrozen.gameserver.model.L2Summon: int getChargedSpiritShot()
com.l2jfrozen.gameserver.model.L2Summon: int getControlItemId()
com.l2jfrozen.gameserver.model.L2Summon: com.l2jfrozen.gameserver.templates.L2Weapon getActiveWeapon()
com.l2jfrozen.gameserver.model.L2Summon: com.l2jfrozen.gameserver.model.PetInventory getInventory()
com.l2jfrozen.gameserver.model.L2Summon: void doPickupItem(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.L2Summon: void giveAllToOwner()
com.l2jfrozen.gameserver.model.L2Summon: void store()
com.l2jfrozen.gameserver.model.L2Summon: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance getActiveWeaponInstance()
com.l2jfrozen.gameserver.model.L2Summon: com.l2jfrozen.gameserver.templates.L2Weapon getActiveWeaponItem()
com.l2jfrozen.gameserver.model.L2Summon: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance getSecondaryWeaponInstance()
com.l2jfrozen.gameserver.model.L2Summon: com.l2jfrozen.gameserver.templates.L2Weapon getSecondaryWeaponItem()
com.l2jfrozen.gameserver.model.L2Summon: com.l2jfrozen.gameserver.model.L2Party getParty()
com.l2jfrozen.gameserver.model.L2Summon: boolean isInParty()
com.l2jfrozen.gameserver.model.L2Summon: void useMagic(com.l2jfrozen.gameserver.model.L2Skill,boolean,boolean)
com.l2jfrozen.gameserver.model.L2Summon: void setIsImobilised(boolean)
com.l2jfrozen.gameserver.model.L2Summon: void setOwner(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2Summon: boolean isShowSummonAnimation()
com.l2jfrozen.gameserver.model.L2Summon: void setShowSummonAnimation(boolean)
com.l2jfrozen.gameserver.model.L2Summon: boolean isInCombat()
com.l2jfrozen.gameserver.model.L2Summon: void doCast(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.L2Summon: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getActingPlayer()
com.l2jfrozen.gameserver.model.L2Summon: com.l2jfrozen.gameserver.model.actor.status.PlayableStatus getStatus()
com.l2jfrozen.gameserver.model.L2Summon: com.l2jfrozen.gameserver.model.actor.stat.PlayableStat getStat()
com.l2jfrozen.gameserver.model.L2Summon: com.l2jfrozen.gameserver.model.actor.knownlist.PlayableKnownList getKnownList()
com.l2jfrozen.gameserver.model.L2Summon: com.l2jfrozen.gameserver.templates.L2CharTemplate getTemplate()
com.l2jfrozen.gameserver.model.L2Summon: com.l2jfrozen.gameserver.model.actor.status.CharStatus getStatus()
com.l2jfrozen.gameserver.model.L2Summon: com.l2jfrozen.gameserver.model.actor.stat.CharStat getStat()
com.l2jfrozen.gameserver.model.L2Summon: com.l2jfrozen.gameserver.model.actor.knownlist.CharKnownList getKnownList()
com.l2jfrozen.gameserver.model.L2Summon: com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList getKnownList()
com.l2jfrozen.gameserver.model.L2Summon$1
com.l2jfrozen.gameserver.model.L2Summon$1: int[] $SwitchMap$com$l2jfrozen$gameserver$model$SkillTargetType
com.l2jfrozen.gameserver.model.L2Summon$1: void <clinit>()
com.l2jfrozen.gameserver.model.L2Summon$AIAccessor
com.l2jfrozen.gameserver.model.L2Summon$AIAccessor: com.l2jfrozen.gameserver.model.L2Summon this$0
com.l2jfrozen.gameserver.model.L2Summon$AIAccessor: L2Summon$AIAccessor(com.l2jfrozen.gameserver.model.L2Summon)
com.l2jfrozen.gameserver.model.L2Summon$AIAccessor: com.l2jfrozen.gameserver.model.L2Summon getSummon()
com.l2jfrozen.gameserver.model.L2Summon$AIAccessor: boolean isAutoFollow()
com.l2jfrozen.gameserver.model.L2Summon$AIAccessor: void doPickupItem(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.L2SummonItem
com.l2jfrozen.gameserver.model.L2SummonItem: int _itemId
com.l2jfrozen.gameserver.model.L2SummonItem: int _npcId
com.l2jfrozen.gameserver.model.L2SummonItem: byte _type
com.l2jfrozen.gameserver.model.L2SummonItem: L2SummonItem(int,int,byte)
com.l2jfrozen.gameserver.model.L2SummonItem: int getItemId()
com.l2jfrozen.gameserver.model.L2SummonItem: int getNpcId()
com.l2jfrozen.gameserver.model.L2SummonItem: byte getType()
com.l2jfrozen.gameserver.model.L2SummonItem: boolean isPetSummon()
com.l2jfrozen.gameserver.model.L2TeleportLocation
com.l2jfrozen.gameserver.model.L2TeleportLocation: int _teleId
com.l2jfrozen.gameserver.model.L2TeleportLocation: int _locX
com.l2jfrozen.gameserver.model.L2TeleportLocation: int _locY
com.l2jfrozen.gameserver.model.L2TeleportLocation: int _locZ
com.l2jfrozen.gameserver.model.L2TeleportLocation: int _price
com.l2jfrozen.gameserver.model.L2TeleportLocation: boolean _forNoble
com.l2jfrozen.gameserver.model.L2TeleportLocation: L2TeleportLocation()
com.l2jfrozen.gameserver.model.L2TeleportLocation: void setTeleId(int)
com.l2jfrozen.gameserver.model.L2TeleportLocation: void setLocX(int)
com.l2jfrozen.gameserver.model.L2TeleportLocation: void setLocY(int)
com.l2jfrozen.gameserver.model.L2TeleportLocation: void setLocZ(int)
com.l2jfrozen.gameserver.model.L2TeleportLocation: void setPrice(int)
com.l2jfrozen.gameserver.model.L2TeleportLocation: void setIsForNoble(boolean)
com.l2jfrozen.gameserver.model.L2TeleportLocation: int getTeleId()
com.l2jfrozen.gameserver.model.L2TeleportLocation: int getLocX()
com.l2jfrozen.gameserver.model.L2TeleportLocation: int getLocY()
com.l2jfrozen.gameserver.model.L2TeleportLocation: int getLocZ()
com.l2jfrozen.gameserver.model.L2TeleportLocation: int getPrice()
com.l2jfrozen.gameserver.model.L2TeleportLocation: boolean getIsForNoble()
com.l2jfrozen.gameserver.model.L2Territory
com.l2jfrozen.gameserver.model.L2Territory: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.L2Territory: com.l2jfrozen.gameserver.model.L2Territory$Point[] _points
com.l2jfrozen.gameserver.model.L2Territory: int _xMin
com.l2jfrozen.gameserver.model.L2Territory: int _xMax
com.l2jfrozen.gameserver.model.L2Territory: int _yMin
com.l2jfrozen.gameserver.model.L2Territory: int _yMax
com.l2jfrozen.gameserver.model.L2Territory: int _zMin
com.l2jfrozen.gameserver.model.L2Territory: int _zMax
com.l2jfrozen.gameserver.model.L2Territory: int _procMax
com.l2jfrozen.gameserver.model.L2Territory: java.awt.Polygon poly
com.l2jfrozen.gameserver.model.L2Territory: L2Territory()
com.l2jfrozen.gameserver.model.L2Territory: void add(int,int,int,int,int)
com.l2jfrozen.gameserver.model.L2Territory: void print()
com.l2jfrozen.gameserver.model.L2Territory: boolean isIntersect(int,int,com.l2jfrozen.gameserver.model.L2Territory$Point,com.l2jfrozen.gameserver.model.L2Territory$Point)
com.l2jfrozen.gameserver.model.L2Territory: boolean isInside(int,int)
com.l2jfrozen.gameserver.model.L2Territory: int[] getRandomPoint()
com.l2jfrozen.gameserver.model.L2Territory: int getProcMax()
com.l2jfrozen.gameserver.model.L2Territory: int getYmin()
com.l2jfrozen.gameserver.model.L2Territory: int getXmax()
com.l2jfrozen.gameserver.model.L2Territory: int getXmin()
com.l2jfrozen.gameserver.model.L2Territory: int getYmax()
com.l2jfrozen.gameserver.model.L2Territory: int getZmin()
com.l2jfrozen.gameserver.model.L2Territory: int getZmax()
com.l2jfrozen.gameserver.model.L2Territory: void <clinit>()
com.l2jfrozen.gameserver.model.L2Territory$Point
com.l2jfrozen.gameserver.model.L2Territory$Point: int _x
com.l2jfrozen.gameserver.model.L2Territory$Point: int _y
com.l2jfrozen.gameserver.model.L2Territory$Point: int _zmin
com.l2jfrozen.gameserver.model.L2Territory$Point: int _zmax
com.l2jfrozen.gameserver.model.L2Territory$Point: int _proc
com.l2jfrozen.gameserver.model.L2Territory$Point: com.l2jfrozen.gameserver.model.L2Territory this$0
com.l2jfrozen.gameserver.model.L2Territory$Point: L2Territory$Point(com.l2jfrozen.gameserver.model.L2Territory,int,int,int,int,int)
com.l2jfrozen.gameserver.model.L2TradeList
com.l2jfrozen.gameserver.model.L2TradeList: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.L2TradeList: java.util.List _items
com.l2jfrozen.gameserver.model.L2TradeList: int _listId
com.l2jfrozen.gameserver.model.L2TradeList: boolean _confirmed
com.l2jfrozen.gameserver.model.L2TradeList: boolean _gm
com.l2jfrozen.gameserver.model.L2TradeList: java.lang.String _buystorename
com.l2jfrozen.gameserver.model.L2TradeList: java.lang.String _sellstorename
com.l2jfrozen.gameserver.model.L2TradeList: java.lang.String _npcId
com.l2jfrozen.gameserver.model.L2TradeList: L2TradeList(int)
com.l2jfrozen.gameserver.model.L2TradeList: void setNpcId(java.lang.String)
com.l2jfrozen.gameserver.model.L2TradeList: java.lang.String getNpcId()
com.l2jfrozen.gameserver.model.L2TradeList: void addItem(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.L2TradeList: void replaceItem(int,int)
com.l2jfrozen.gameserver.model.L2TradeList: boolean decreaseCount(int,int)
com.l2jfrozen.gameserver.model.L2TradeList: void restoreCount(int)
com.l2jfrozen.gameserver.model.L2TradeList: void removeItem(int)
com.l2jfrozen.gameserver.model.L2TradeList: int getListId()
com.l2jfrozen.gameserver.model.L2TradeList: void setSellStoreName(java.lang.String)
com.l2jfrozen.gameserver.model.L2TradeList: java.lang.String getSellStoreName()
com.l2jfrozen.gameserver.model.L2TradeList: void setBuyStoreName(java.lang.String)
com.l2jfrozen.gameserver.model.L2TradeList: java.lang.String getBuyStoreName()
com.l2jfrozen.gameserver.model.L2TradeList: java.util.List getItems()
com.l2jfrozen.gameserver.model.L2TradeList: java.util.List getItems(int,int)
com.l2jfrozen.gameserver.model.L2TradeList: int getPriceForItemId(int)
com.l2jfrozen.gameserver.model.L2TradeList: boolean countDecrease(int)
com.l2jfrozen.gameserver.model.L2TradeList: boolean containsItemId(int)
com.l2jfrozen.gameserver.model.L2TradeList: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance getItem(int)
com.l2jfrozen.gameserver.model.L2TradeList: void setConfirmedTrade(boolean)
com.l2jfrozen.gameserver.model.L2TradeList: boolean hasConfirmed()
com.l2jfrozen.gameserver.model.L2TradeList: void removeItem(int,int)
com.l2jfrozen.gameserver.model.L2TradeList: boolean contains(int)
com.l2jfrozen.gameserver.model.L2TradeList: void updateBuyList(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.util.List)
com.l2jfrozen.gameserver.model.L2TradeList: void updateSellList(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.util.List)
com.l2jfrozen.gameserver.model.L2TradeList: boolean isGm()
com.l2jfrozen.gameserver.model.L2TradeList: void <clinit>()
com.l2jfrozen.gameserver.model.L2World
com.l2jfrozen.gameserver.model.L2World: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.L2World: int SHIFT_BY
com.l2jfrozen.gameserver.model.L2World: int MAP_MIN_X
com.l2jfrozen.gameserver.model.L2World: int MAP_MAX_X
com.l2jfrozen.gameserver.model.L2World: int MAP_MIN_Y
com.l2jfrozen.gameserver.model.L2World: int MAP_MAX_Y
com.l2jfrozen.gameserver.model.L2World: int OFFSET_X
com.l2jfrozen.gameserver.model.L2World: int OFFSET_Y
com.l2jfrozen.gameserver.model.L2World: int REGIONS_X
com.l2jfrozen.gameserver.model.L2World: int REGIONS_Y
com.l2jfrozen.gameserver.model.L2World: java.util.Map _allPlayers
com.l2jfrozen.gameserver.model.L2World: com.l2jfrozen.gameserver.util.object.L2ObjectMap _allObjects
com.l2jfrozen.gameserver.model.L2World: javolution.util.FastMap _petsInstance
com.l2jfrozen.gameserver.model.L2World: com.l2jfrozen.gameserver.model.L2World _instance
com.l2jfrozen.gameserver.model.L2World: com.l2jfrozen.gameserver.model.L2WorldRegion[][] _worldRegions
com.l2jfrozen.gameserver.model.L2World: L2World()
com.l2jfrozen.gameserver.model.L2World: com.l2jfrozen.gameserver.model.L2World getInstance()
com.l2jfrozen.gameserver.model.L2World: void storeObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.L2World: long timeStoreObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.L2World: void removeObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.L2World: void removeObjects(java.util.List)
com.l2jfrozen.gameserver.model.L2World: void removeObjects(com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.model.L2World: long timeRemoveObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.L2World: com.l2jfrozen.gameserver.model.L2Object findObject(int)
com.l2jfrozen.gameserver.model.L2World: long timeFindObject(int)
com.l2jfrozen.gameserver.model.L2World: com.l2jfrozen.gameserver.util.object.L2ObjectMap getAllVisibleObjects()
com.l2jfrozen.gameserver.model.L2World: int getAllVisibleObjectsCount()
com.l2jfrozen.gameserver.model.L2World: javolution.util.FastList getAllGMs()
com.l2jfrozen.gameserver.model.L2World: java.util.Collection getAllPlayers()
com.l2jfrozen.gameserver.model.L2World: java.lang.Integer getAllPlayersCount()
com.l2jfrozen.gameserver.model.L2World: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getPlayer(java.lang.String)
com.l2jfrozen.gameserver.model.L2World: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getPlayer(int)
com.l2jfrozen.gameserver.model.L2World: java.util.Collection getAllPets()
com.l2jfrozen.gameserver.model.L2World: com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance getPet(int)
com.l2jfrozen.gameserver.model.L2World: com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance addPet(int,com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance)
com.l2jfrozen.gameserver.model.L2World: void removePet(int)
com.l2jfrozen.gameserver.model.L2World: void removePet(com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance)
com.l2jfrozen.gameserver.model.L2World: void addVisibleObject(com.l2jfrozen.gameserver.model.L2Object,com.l2jfrozen.gameserver.model.L2WorldRegion,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2World: void addToAllPlayers(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2World: void removeFromAllPlayers(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.L2World: void removeVisibleObject(com.l2jfrozen.gameserver.model.L2Object,com.l2jfrozen.gameserver.model.L2WorldRegion)
com.l2jfrozen.gameserver.model.L2World: javolution.util.FastList getVisibleObjects(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.L2World: javolution.util.FastList getVisibleObjects(com.l2jfrozen.gameserver.model.L2Object,int)
com.l2jfrozen.gameserver.model.L2World: javolution.util.FastList getVisibleObjects3D(com.l2jfrozen.gameserver.model.L2Object,int)
com.l2jfrozen.gameserver.model.L2World: javolution.util.FastList getVisiblePlayable(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.L2World: com.l2jfrozen.gameserver.model.L2WorldRegion getRegion(com.l2jfrozen.common.util.Point3D)
com.l2jfrozen.gameserver.model.L2World: com.l2jfrozen.gameserver.model.L2WorldRegion getRegion(int,int)
com.l2jfrozen.gameserver.model.L2World: com.l2jfrozen.gameserver.model.L2WorldRegion[][] getAllWorldRegions()
com.l2jfrozen.gameserver.model.L2World: boolean validRegion(int,int)
com.l2jfrozen.gameserver.model.L2World: void initRegions()
com.l2jfrozen.gameserver.model.L2World: void deleteVisibleNpcSpawns()
com.l2jfrozen.gameserver.model.L2World: javolution.util.FastList getAccountPlayers(java.lang.String)
com.l2jfrozen.gameserver.model.L2World: void <clinit>()
com.l2jfrozen.gameserver.model.L2WorldRegion
com.l2jfrozen.gameserver.model.L2WorldRegion: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.L2WorldRegion: com.l2jfrozen.gameserver.util.object.L2ObjectSet _allPlayable
com.l2jfrozen.gameserver.model.L2WorldRegion: com.l2jfrozen.gameserver.util.object.L2ObjectSet _visibleObjects
com.l2jfrozen.gameserver.model.L2WorldRegion: javolution.util.FastList _surroundingRegions
com.l2jfrozen.gameserver.model.L2WorldRegion: int _tileX
com.l2jfrozen.gameserver.model.L2WorldRegion: int _tileY
com.l2jfrozen.gameserver.model.L2WorldRegion: java.lang.Boolean _active
com.l2jfrozen.gameserver.model.L2WorldRegion: java.util.concurrent.ScheduledFuture _neighborsTask
com.l2jfrozen.gameserver.model.L2WorldRegion: com.l2jfrozen.gameserver.model.zone.L2ZoneManager _zoneManager
com.l2jfrozen.gameserver.model.L2WorldRegion: boolean $assertionsDisabled
com.l2jfrozen.gameserver.model.L2WorldRegion: L2WorldRegion(int,int)
com.l2jfrozen.gameserver.model.L2WorldRegion: void addZone(com.l2jfrozen.gameserver.model.zone.L2ZoneType)
com.l2jfrozen.gameserver.model.L2WorldRegion: void removeZone(com.l2jfrozen.gameserver.model.zone.L2ZoneType)
com.l2jfrozen.gameserver.model.L2WorldRegion: void revalidateZones(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2WorldRegion: void removeFromZones(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2WorldRegion: void onDeath(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2WorldRegion: void onRevive(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.L2WorldRegion: void switchAI(java.lang.Boolean)
com.l2jfrozen.gameserver.model.L2WorldRegion: java.lang.Boolean isActive()
com.l2jfrozen.gameserver.model.L2WorldRegion: java.lang.Boolean areNeighborsEmpty()
com.l2jfrozen.gameserver.model.L2WorldRegion: void setActive(boolean)
com.l2jfrozen.gameserver.model.L2WorldRegion: void startActivation()
com.l2jfrozen.gameserver.model.L2WorldRegion: void startDeactivation()
com.l2jfrozen.gameserver.model.L2WorldRegion: void addVisibleObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.L2WorldRegion: void removeVisibleObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.L2WorldRegion: void addSurroundingRegion(com.l2jfrozen.gameserver.model.L2WorldRegion)
com.l2jfrozen.gameserver.model.L2WorldRegion: javolution.util.FastList getSurroundingRegions()
com.l2jfrozen.gameserver.model.L2WorldRegion: java.util.Iterator iterateAllPlayers()
com.l2jfrozen.gameserver.model.L2WorldRegion: com.l2jfrozen.gameserver.util.object.L2ObjectSet getVisibleObjects()
com.l2jfrozen.gameserver.model.L2WorldRegion: java.lang.String getName()
com.l2jfrozen.gameserver.model.L2WorldRegion: void deleteVisibleNpcSpawns()
com.l2jfrozen.gameserver.model.L2WorldRegion: boolean checkEffectRangeInsidePeaceZone(com.l2jfrozen.gameserver.model.L2Skill,int,int,int)
com.l2jfrozen.gameserver.model.L2WorldRegion: void <clinit>()
com.l2jfrozen.gameserver.model.L2WorldRegion$NeighborsTask
com.l2jfrozen.gameserver.model.L2WorldRegion$NeighborsTask: boolean _isActivating
com.l2jfrozen.gameserver.model.L2WorldRegion$NeighborsTask: com.l2jfrozen.gameserver.model.L2WorldRegion this$0
com.l2jfrozen.gameserver.model.L2WorldRegion$NeighborsTask: L2WorldRegion$NeighborsTask(com.l2jfrozen.gameserver.model.L2WorldRegion,boolean)
com.l2jfrozen.gameserver.model.L2WorldRegion$NeighborsTask: void run()
com.l2jfrozen.gameserver.model.Location
com.l2jfrozen.gameserver.model.Location: int _x
com.l2jfrozen.gameserver.model.Location: int _y
com.l2jfrozen.gameserver.model.Location: int _z
com.l2jfrozen.gameserver.model.Location: int _heading
com.l2jfrozen.gameserver.model.Location: Location(int,int,int)
com.l2jfrozen.gameserver.model.Location: Location(int,int,int,int)
com.l2jfrozen.gameserver.model.Location: Location(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.Location: Location(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.Location: int getX()
com.l2jfrozen.gameserver.model.Location: int getY()
com.l2jfrozen.gameserver.model.Location: int getZ()
com.l2jfrozen.gameserver.model.Location: int getHeading()
com.l2jfrozen.gameserver.model.Location: void setX(int)
com.l2jfrozen.gameserver.model.Location: void setY(int)
com.l2jfrozen.gameserver.model.Location: void setZ(int)
com.l2jfrozen.gameserver.model.Location: void setHeading(int)
com.l2jfrozen.gameserver.model.Location: void setXYZ(int,int,int)
com.l2jfrozen.gameserver.model.Location: boolean equals(int,int,int)
com.l2jfrozen.gameserver.model.MacroList
com.l2jfrozen.gameserver.model.MacroList: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.MacroList: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _owner
com.l2jfrozen.gameserver.model.MacroList: int _revision
com.l2jfrozen.gameserver.model.MacroList: int _macroId
com.l2jfrozen.gameserver.model.MacroList: java.util.Map _macroses
com.l2jfrozen.gameserver.model.MacroList: MacroList(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.MacroList: int getRevision()
com.l2jfrozen.gameserver.model.MacroList: com.l2jfrozen.gameserver.model.L2Macro[] getAllMacroses()
com.l2jfrozen.gameserver.model.MacroList: com.l2jfrozen.gameserver.model.L2Macro getMacro(int)
com.l2jfrozen.gameserver.model.MacroList: void registerMacro(com.l2jfrozen.gameserver.model.L2Macro)
com.l2jfrozen.gameserver.model.MacroList: void deleteMacro(int)
com.l2jfrozen.gameserver.model.MacroList: void sendUpdate()
com.l2jfrozen.gameserver.model.MacroList: void registerMacroInDb(com.l2jfrozen.gameserver.model.L2Macro)
com.l2jfrozen.gameserver.model.MacroList: void deleteMacroFromDb(com.l2jfrozen.gameserver.model.L2Macro)
com.l2jfrozen.gameserver.model.MacroList: void restore()
com.l2jfrozen.gameserver.model.MacroList: void <clinit>()
com.l2jfrozen.gameserver.model.MobGroup
com.l2jfrozen.gameserver.model.MobGroup: com.l2jfrozen.gameserver.templates.L2NpcTemplate _npcTemplate
com.l2jfrozen.gameserver.model.MobGroup: int _groupId
com.l2jfrozen.gameserver.model.MobGroup: int _maxMobCount
com.l2jfrozen.gameserver.model.MobGroup: java.util.List _mobs
com.l2jfrozen.gameserver.model.MobGroup: MobGroup(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate,int)
com.l2jfrozen.gameserver.model.MobGroup: int getActiveMobCount()
com.l2jfrozen.gameserver.model.MobGroup: int getGroupId()
com.l2jfrozen.gameserver.model.MobGroup: int getMaxMobCount()
com.l2jfrozen.gameserver.model.MobGroup: java.util.List getMobs()
com.l2jfrozen.gameserver.model.MobGroup: java.lang.String getStatus()
com.l2jfrozen.gameserver.model.MobGroup: com.l2jfrozen.gameserver.templates.L2NpcTemplate getTemplate()
com.l2jfrozen.gameserver.model.MobGroup: boolean isGroupMember(com.l2jfrozen.gameserver.model.actor.instance.L2ControllableMobInstance)
com.l2jfrozen.gameserver.model.MobGroup: void spawnGroup(int,int,int)
com.l2jfrozen.gameserver.model.MobGroup: void spawnGroup(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.MobGroup: void teleportGroup(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.MobGroup: com.l2jfrozen.gameserver.model.actor.instance.L2ControllableMobInstance getRandomMob()
com.l2jfrozen.gameserver.model.MobGroup: void unspawnGroup()
com.l2jfrozen.gameserver.model.MobGroup: void killGroup(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.MobGroup: void setAttackRandom()
com.l2jfrozen.gameserver.model.MobGroup: void setAttackTarget(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.MobGroup: void setIdleMode()
com.l2jfrozen.gameserver.model.MobGroup: void returnGroup(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.MobGroup: void setFollowMode(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.MobGroup: void setCastMode()
com.l2jfrozen.gameserver.model.MobGroup: void setNoMoveMode(boolean)
com.l2jfrozen.gameserver.model.MobGroup: void removeDead()
com.l2jfrozen.gameserver.model.MobGroup: void setInvul(boolean)
com.l2jfrozen.gameserver.model.MobGroup: void setAttackGroup(com.l2jfrozen.gameserver.model.MobGroup)
com.l2jfrozen.gameserver.model.PartyMatchRoom
com.l2jfrozen.gameserver.model.PartyMatchRoom: int _id
com.l2jfrozen.gameserver.model.PartyMatchRoom: java.lang.String _title
com.l2jfrozen.gameserver.model.PartyMatchRoom: int _loot
com.l2jfrozen.gameserver.model.PartyMatchRoom: int _location
com.l2jfrozen.gameserver.model.PartyMatchRoom: int _minlvl
com.l2jfrozen.gameserver.model.PartyMatchRoom: int _maxlvl
com.l2jfrozen.gameserver.model.PartyMatchRoom: int _maxmem
com.l2jfrozen.gameserver.model.PartyMatchRoom: java.util.List _members
com.l2jfrozen.gameserver.model.PartyMatchRoom: PartyMatchRoom(int,java.lang.String,int,int,int,int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.PartyMatchRoom: java.util.List getPartyMembers()
com.l2jfrozen.gameserver.model.PartyMatchRoom: void addMember(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.PartyMatchRoom: void deleteMember(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.PartyMatchRoom: void notifyMembersAboutExit(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.PartyMatchRoom: void changeLeader(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.PartyMatchRoom: int getId()
com.l2jfrozen.gameserver.model.PartyMatchRoom: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getOwner()
com.l2jfrozen.gameserver.model.PartyMatchRoom: int getMembers()
com.l2jfrozen.gameserver.model.PartyMatchRoom: int getLootType()
com.l2jfrozen.gameserver.model.PartyMatchRoom: void setLootType(int)
com.l2jfrozen.gameserver.model.PartyMatchRoom: int getMinLvl()
com.l2jfrozen.gameserver.model.PartyMatchRoom: void setMinLvl(int)
com.l2jfrozen.gameserver.model.PartyMatchRoom: int getMaxLvl()
com.l2jfrozen.gameserver.model.PartyMatchRoom: void setMaxLvl(int)
com.l2jfrozen.gameserver.model.PartyMatchRoom: int getLocation()
com.l2jfrozen.gameserver.model.PartyMatchRoom: void setLocation(int)
com.l2jfrozen.gameserver.model.PartyMatchRoom: int getMaxMembers()
com.l2jfrozen.gameserver.model.PartyMatchRoom: void setMaxMembers(int)
com.l2jfrozen.gameserver.model.PartyMatchRoom: java.lang.String getTitle()
com.l2jfrozen.gameserver.model.PartyMatchRoom: void setTitle(java.lang.String)
com.l2jfrozen.gameserver.model.PartyMatchRoomList
com.l2jfrozen.gameserver.model.PartyMatchRoomList: int _maxid
com.l2jfrozen.gameserver.model.PartyMatchRoomList: java.util.Map _rooms
com.l2jfrozen.gameserver.model.PartyMatchRoomList: PartyMatchRoomList()
com.l2jfrozen.gameserver.model.PartyMatchRoomList: void addPartyMatchRoom(int,com.l2jfrozen.gameserver.model.PartyMatchRoom)
com.l2jfrozen.gameserver.model.PartyMatchRoomList: void deleteRoom(int)
com.l2jfrozen.gameserver.model.PartyMatchRoomList: com.l2jfrozen.gameserver.model.PartyMatchRoom getRoom(int)
com.l2jfrozen.gameserver.model.PartyMatchRoomList: com.l2jfrozen.gameserver.model.PartyMatchRoom[] getRooms()
com.l2jfrozen.gameserver.model.PartyMatchRoomList: int getPartyMatchRoomCount()
com.l2jfrozen.gameserver.model.PartyMatchRoomList: int getMaxId()
com.l2jfrozen.gameserver.model.PartyMatchRoomList: com.l2jfrozen.gameserver.model.PartyMatchRoom getPlayerRoom(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.PartyMatchRoomList: int getPlayerRoomId(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.PartyMatchRoomList: com.l2jfrozen.gameserver.model.PartyMatchRoomList getInstance()
com.l2jfrozen.gameserver.model.PartyMatchRoomList: PartyMatchRoomList(com.l2jfrozen.gameserver.model.PartyMatchRoomList$1)
com.l2jfrozen.gameserver.model.PartyMatchRoomList$1
com.l2jfrozen.gameserver.model.PartyMatchRoomList$SingletonHolder
com.l2jfrozen.gameserver.model.PartyMatchRoomList$SingletonHolder: com.l2jfrozen.gameserver.model.PartyMatchRoomList _instance
com.l2jfrozen.gameserver.model.PartyMatchRoomList$SingletonHolder: PartyMatchRoomList$SingletonHolder()
com.l2jfrozen.gameserver.model.PartyMatchRoomList$SingletonHolder: void <clinit>()
com.l2jfrozen.gameserver.model.PartyMatchWaitingList
com.l2jfrozen.gameserver.model.PartyMatchWaitingList: java.util.List _members
com.l2jfrozen.gameserver.model.PartyMatchWaitingList: PartyMatchWaitingList()
com.l2jfrozen.gameserver.model.PartyMatchWaitingList: void addPlayer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.PartyMatchWaitingList: void removePlayer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.PartyMatchWaitingList: java.util.List getPlayers()
com.l2jfrozen.gameserver.model.PartyMatchWaitingList: com.l2jfrozen.gameserver.model.PartyMatchWaitingList getInstance()
com.l2jfrozen.gameserver.model.PartyMatchWaitingList: PartyMatchWaitingList(com.l2jfrozen.gameserver.model.PartyMatchWaitingList$1)
com.l2jfrozen.gameserver.model.PartyMatchWaitingList$1
com.l2jfrozen.gameserver.model.PartyMatchWaitingList$SingletonHolder
com.l2jfrozen.gameserver.model.PartyMatchWaitingList$SingletonHolder: com.l2jfrozen.gameserver.model.PartyMatchWaitingList _instance
com.l2jfrozen.gameserver.model.PartyMatchWaitingList$SingletonHolder: PartyMatchWaitingList$SingletonHolder()
com.l2jfrozen.gameserver.model.PartyMatchWaitingList$SingletonHolder: void <clinit>()
com.l2jfrozen.gameserver.model.PcFreight
com.l2jfrozen.gameserver.model.PcFreight: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _owner
com.l2jfrozen.gameserver.model.PcFreight: int _activeLocationId
com.l2jfrozen.gameserver.model.PcFreight: PcFreight(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.PcFreight: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getOwner()
com.l2jfrozen.gameserver.model.PcFreight: com.l2jfrozen.gameserver.model.actor.instance.ItemLocation getBaseLocation()
com.l2jfrozen.gameserver.model.PcFreight: void setActiveLocation(int)
com.l2jfrozen.gameserver.model.PcFreight: int getactiveLocation()
com.l2jfrozen.gameserver.model.PcFreight: int getSize()
com.l2jfrozen.gameserver.model.PcFreight: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance[] getItems()
com.l2jfrozen.gameserver.model.PcFreight: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance getItemByItemId(int)
com.l2jfrozen.gameserver.model.PcFreight: void addItem(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.PcFreight: void restore()
com.l2jfrozen.gameserver.model.PcFreight: boolean validateCapacity(int)
com.l2jfrozen.gameserver.model.PcFreight: com.l2jfrozen.gameserver.model.L2Character getOwner()
com.l2jfrozen.gameserver.model.PcInventory
com.l2jfrozen.gameserver.model.PcInventory: int ADENA_ID
com.l2jfrozen.gameserver.model.PcInventory: int ANCIENT_ADENA_ID
com.l2jfrozen.gameserver.model.PcInventory: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _owner
com.l2jfrozen.gameserver.model.PcInventory: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance _adena
com.l2jfrozen.gameserver.model.PcInventory: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance _ancientAdena
com.l2jfrozen.gameserver.model.PcInventory: PcInventory(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.PcInventory: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getOwner()
com.l2jfrozen.gameserver.model.PcInventory: com.l2jfrozen.gameserver.model.actor.instance.ItemLocation getBaseLocation()
com.l2jfrozen.gameserver.model.PcInventory: com.l2jfrozen.gameserver.model.actor.instance.ItemLocation getEquipLocation()
com.l2jfrozen.gameserver.model.PcInventory: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance getAdenaInstance()
com.l2jfrozen.gameserver.model.PcInventory: int getAdena()
com.l2jfrozen.gameserver.model.PcInventory: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance getAncientAdenaInstance()
com.l2jfrozen.gameserver.model.PcInventory: int getAncientAdena()
com.l2jfrozen.gameserver.model.PcInventory: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance[] getUniqueItems(boolean,boolean,boolean)
com.l2jfrozen.gameserver.model.PcInventory: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance[] getUniqueItems(boolean,boolean,boolean,boolean)
com.l2jfrozen.gameserver.model.PcInventory: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance[] getUniqueItemsByEnchantLevel(boolean,boolean,boolean)
com.l2jfrozen.gameserver.model.PcInventory: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance[] getUniqueItemsByEnchantLevel(boolean,boolean,boolean,boolean)
com.l2jfrozen.gameserver.model.PcInventory: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance[] getAllItemsByItemId(int)
com.l2jfrozen.gameserver.model.PcInventory: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance[] getAllItemsByItemId(int,int)
com.l2jfrozen.gameserver.model.PcInventory: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance[] getAvailableItems(boolean)
com.l2jfrozen.gameserver.model.PcInventory: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance[] getAugmentedItems()
com.l2jfrozen.gameserver.model.PcInventory: com.l2jfrozen.gameserver.model.TradeList$TradeItem[] getAvailableItems(com.l2jfrozen.gameserver.model.TradeList)
com.l2jfrozen.gameserver.model.PcInventory: com.l2jfrozen.gameserver.model.TradeList$TradeItem adjustAvailableItem(com.l2jfrozen.gameserver.model.TradeList$TradeItem,java.util.List)
com.l2jfrozen.gameserver.model.PcInventory: void addAdena(java.lang.String,int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.PcInventory: void reduceAdena(java.lang.String,int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.PcInventory: void addAncientAdena(java.lang.String,int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.PcInventory: void reduceAncientAdena(java.lang.String,int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.PcInventory: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance addItem(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.PcInventory: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance addItem(java.lang.String,int,int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.PcInventory: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance transferItem(java.lang.String,int,int,com.l2jfrozen.gameserver.model.ItemContainer,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.PcInventory: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance destroyItem(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.PcInventory: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance destroyItem(java.lang.String,int,int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.PcInventory: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance destroyItemByItemId(java.lang.String,int,int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.PcInventory: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance dropItem(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.PcInventory: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance dropItem(java.lang.String,int,int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.PcInventory: void removeItem(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.PcInventory: void refreshWeight()
com.l2jfrozen.gameserver.model.PcInventory: void restore()
com.l2jfrozen.gameserver.model.PcInventory: int[][] restoreVisibleInventory(int)
com.l2jfrozen.gameserver.model.PcInventory: boolean validateCapacity(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.PcInventory: boolean validateCapacity(java.util.List)
com.l2jfrozen.gameserver.model.PcInventory: boolean validateCapacityByItemId(int)
com.l2jfrozen.gameserver.model.PcInventory: boolean validateCapacity(int)
com.l2jfrozen.gameserver.model.PcInventory: boolean validateWeight(int)
com.l2jfrozen.gameserver.model.PcInventory: boolean validateCapacity(com.l2jfrozen.gameserver.templates.L2Item)
com.l2jfrozen.gameserver.model.PcInventory: boolean checkIfEquipped(int)
com.l2jfrozen.gameserver.model.PcInventory: int checkHowManyEquipped(int)
com.l2jfrozen.gameserver.model.PcInventory: com.l2jfrozen.gameserver.model.L2Character getOwner()
com.l2jfrozen.gameserver.model.PcWarehouse
com.l2jfrozen.gameserver.model.PcWarehouse: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _owner
com.l2jfrozen.gameserver.model.PcWarehouse: PcWarehouse(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.PcWarehouse: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getOwner()
com.l2jfrozen.gameserver.model.PcWarehouse: com.l2jfrozen.gameserver.model.actor.instance.ItemLocation getBaseLocation()
com.l2jfrozen.gameserver.model.PcWarehouse: java.lang.String getLocationId()
com.l2jfrozen.gameserver.model.PcWarehouse: int getLocationId(boolean)
com.l2jfrozen.gameserver.model.PcWarehouse: void setLocationId(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.PcWarehouse: boolean validateCapacity(int)
com.l2jfrozen.gameserver.model.PcWarehouse: com.l2jfrozen.gameserver.model.L2Character getOwner()
com.l2jfrozen.gameserver.model.PetInventory
com.l2jfrozen.gameserver.model.PetInventory: com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance _owner
com.l2jfrozen.gameserver.model.PetInventory: PetInventory(com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance)
com.l2jfrozen.gameserver.model.PetInventory: com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance getOwner()
com.l2jfrozen.gameserver.model.PetInventory: com.l2jfrozen.gameserver.model.actor.instance.ItemLocation getBaseLocation()
com.l2jfrozen.gameserver.model.PetInventory: com.l2jfrozen.gameserver.model.actor.instance.ItemLocation getEquipLocation()
com.l2jfrozen.gameserver.model.PetInventory: com.l2jfrozen.gameserver.model.L2Character getOwner()
com.l2jfrozen.gameserver.model.PlayerStatus
com.l2jfrozen.gameserver.model.PlayerStatus: int level
com.l2jfrozen.gameserver.model.PlayerStatus: int EXP
com.l2jfrozen.gameserver.model.PlayerStatus: int STR
com.l2jfrozen.gameserver.model.PlayerStatus: int DEX
com.l2jfrozen.gameserver.model.PlayerStatus: int CON
com.l2jfrozen.gameserver.model.PlayerStatus: int INT
com.l2jfrozen.gameserver.model.PlayerStatus: int WIT
com.l2jfrozen.gameserver.model.PlayerStatus: int MEN
com.l2jfrozen.gameserver.model.PlayerStatus: int CUR_HP
com.l2jfrozen.gameserver.model.PlayerStatus: int MAX_HP
com.l2jfrozen.gameserver.model.PlayerStatus: int CUR_MP
com.l2jfrozen.gameserver.model.PlayerStatus: int MAX_MP
com.l2jfrozen.gameserver.model.PlayerStatus: int SP
com.l2jfrozen.gameserver.model.PlayerStatus: int CUR_LOAD
com.l2jfrozen.gameserver.model.PlayerStatus: int MAX_LOAD
com.l2jfrozen.gameserver.model.PlayerStatus: int P_ATK
com.l2jfrozen.gameserver.model.PlayerStatus: int ATK_SPD
com.l2jfrozen.gameserver.model.PlayerStatus: int P_DEF
com.l2jfrozen.gameserver.model.PlayerStatus: int EVASION
com.l2jfrozen.gameserver.model.PlayerStatus: int ACCURACY
com.l2jfrozen.gameserver.model.PlayerStatus: int CRITICAL
com.l2jfrozen.gameserver.model.PlayerStatus: int M_ATK
com.l2jfrozen.gameserver.model.PlayerStatus: int CAST_SPD
com.l2jfrozen.gameserver.model.PlayerStatus: int M_DEF
com.l2jfrozen.gameserver.model.PlayerStatus: int PVP_FLAG
com.l2jfrozen.gameserver.model.PlayerStatus: int KARMA
com.l2jfrozen.gameserver.model.PlayerStatus: int CUR_CP
com.l2jfrozen.gameserver.model.PlayerStatus: int MAX_CP
com.l2jfrozen.gameserver.model.PlayerStatus: PlayerStatus(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.ShortCuts
com.l2jfrozen.gameserver.model.ShortCuts: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.ShortCuts: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _owner
com.l2jfrozen.gameserver.model.ShortCuts: java.util.Map _shortCuts
com.l2jfrozen.gameserver.model.ShortCuts: ShortCuts(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.ShortCuts: com.l2jfrozen.gameserver.model.L2ShortCut[] getAllShortCuts()
com.l2jfrozen.gameserver.model.ShortCuts: com.l2jfrozen.gameserver.model.L2ShortCut getShortCut(int,int)
com.l2jfrozen.gameserver.model.ShortCuts: void registerShortCut(com.l2jfrozen.gameserver.model.L2ShortCut)
com.l2jfrozen.gameserver.model.ShortCuts: void registerShortCutInDb(com.l2jfrozen.gameserver.model.L2ShortCut,com.l2jfrozen.gameserver.model.L2ShortCut)
com.l2jfrozen.gameserver.model.ShortCuts: void deleteShortCut(int,int)
com.l2jfrozen.gameserver.model.ShortCuts: void deleteShortCutByObjectId(int)
com.l2jfrozen.gameserver.model.ShortCuts: void deleteShortCutFromDb(com.l2jfrozen.gameserver.model.L2ShortCut)
com.l2jfrozen.gameserver.model.ShortCuts: void restore()
com.l2jfrozen.gameserver.model.ShortCuts: void <clinit>()
com.l2jfrozen.gameserver.model.SiegeClanType
com.l2jfrozen.gameserver.model.SiegeClanType: com.l2jfrozen.gameserver.model.SiegeClanType OWNER
com.l2jfrozen.gameserver.model.SiegeClanType: com.l2jfrozen.gameserver.model.SiegeClanType DEFENDER
com.l2jfrozen.gameserver.model.SiegeClanType: com.l2jfrozen.gameserver.model.SiegeClanType ATTACKER
com.l2jfrozen.gameserver.model.SiegeClanType: com.l2jfrozen.gameserver.model.SiegeClanType DEFENDER_PENDING
com.l2jfrozen.gameserver.model.SiegeClanType: com.l2jfrozen.gameserver.model.SiegeClanType[] $VALUES
com.l2jfrozen.gameserver.model.SiegeClanType: com.l2jfrozen.gameserver.model.SiegeClanType[] values()
com.l2jfrozen.gameserver.model.SiegeClanType: com.l2jfrozen.gameserver.model.SiegeClanType valueOf(java.lang.String)
com.l2jfrozen.gameserver.model.SiegeClanType: SiegeClanType(java.lang.String,int)
com.l2jfrozen.gameserver.model.SiegeClanType: void <clinit>()
com.l2jfrozen.gameserver.model.SkillOpType
com.l2jfrozen.gameserver.model.SkillOpType: com.l2jfrozen.gameserver.model.SkillOpType OP_PASSIVE
com.l2jfrozen.gameserver.model.SkillOpType: com.l2jfrozen.gameserver.model.SkillOpType OP_ACTIVE
com.l2jfrozen.gameserver.model.SkillOpType: com.l2jfrozen.gameserver.model.SkillOpType OP_TOGGLE
com.l2jfrozen.gameserver.model.SkillOpType: com.l2jfrozen.gameserver.model.SkillOpType OP_CHANCE
com.l2jfrozen.gameserver.model.SkillOpType: com.l2jfrozen.gameserver.model.SkillOpType[] $VALUES
com.l2jfrozen.gameserver.model.SkillOpType: com.l2jfrozen.gameserver.model.SkillOpType[] values()
com.l2jfrozen.gameserver.model.SkillOpType: com.l2jfrozen.gameserver.model.SkillOpType valueOf(java.lang.String)
com.l2jfrozen.gameserver.model.SkillOpType: SkillOpType(java.lang.String,int)
com.l2jfrozen.gameserver.model.SkillOpType: void <clinit>()
com.l2jfrozen.gameserver.model.SkillTargetType
com.l2jfrozen.gameserver.model.SkillTargetType: com.l2jfrozen.gameserver.model.SkillTargetType TARGET_NONE
com.l2jfrozen.gameserver.model.SkillTargetType: com.l2jfrozen.gameserver.model.SkillTargetType TARGET_SELF
com.l2jfrozen.gameserver.model.SkillTargetType: com.l2jfrozen.gameserver.model.SkillTargetType TARGET_ONE
com.l2jfrozen.gameserver.model.SkillTargetType: com.l2jfrozen.gameserver.model.SkillTargetType TARGET_PARTY
com.l2jfrozen.gameserver.model.SkillTargetType: com.l2jfrozen.gameserver.model.SkillTargetType TARGET_ALLY
com.l2jfrozen.gameserver.model.SkillTargetType: com.l2jfrozen.gameserver.model.SkillTargetType TARGET_CLAN
com.l2jfrozen.gameserver.model.SkillTargetType: com.l2jfrozen.gameserver.model.SkillTargetType TARGET_PET
com.l2jfrozen.gameserver.model.SkillTargetType: com.l2jfrozen.gameserver.model.SkillTargetType TARGET_AREA
com.l2jfrozen.gameserver.model.SkillTargetType: com.l2jfrozen.gameserver.model.SkillTargetType TARGET_AURA
com.l2jfrozen.gameserver.model.SkillTargetType: com.l2jfrozen.gameserver.model.SkillTargetType TARGET_CORPSE
com.l2jfrozen.gameserver.model.SkillTargetType: com.l2jfrozen.gameserver.model.SkillTargetType TARGET_UNDEAD
com.l2jfrozen.gameserver.model.SkillTargetType: com.l2jfrozen.gameserver.model.SkillTargetType TARGET_AREA_UNDEAD
com.l2jfrozen.gameserver.model.SkillTargetType: com.l2jfrozen.gameserver.model.SkillTargetType TARGET_MULTIFACE
com.l2jfrozen.gameserver.model.SkillTargetType: com.l2jfrozen.gameserver.model.SkillTargetType TARGET_CORPSE_ALLY
com.l2jfrozen.gameserver.model.SkillTargetType: com.l2jfrozen.gameserver.model.SkillTargetType TARGET_CORPSE_CLAN
com.l2jfrozen.gameserver.model.SkillTargetType: com.l2jfrozen.gameserver.model.SkillTargetType TARGET_CORPSE_PLAYER
com.l2jfrozen.gameserver.model.SkillTargetType: com.l2jfrozen.gameserver.model.SkillTargetType TARGET_CORPSE_PET
com.l2jfrozen.gameserver.model.SkillTargetType: com.l2jfrozen.gameserver.model.SkillTargetType TARGET_ITEM
com.l2jfrozen.gameserver.model.SkillTargetType: com.l2jfrozen.gameserver.model.SkillTargetType TARGET_AREA_CORPSE_MOB
com.l2jfrozen.gameserver.model.SkillTargetType: com.l2jfrozen.gameserver.model.SkillTargetType TARGET_CORPSE_MOB
com.l2jfrozen.gameserver.model.SkillTargetType: com.l2jfrozen.gameserver.model.SkillTargetType TARGET_UNLOCKABLE
com.l2jfrozen.gameserver.model.SkillTargetType: com.l2jfrozen.gameserver.model.SkillTargetType TARGET_HOLY
com.l2jfrozen.gameserver.model.SkillTargetType: com.l2jfrozen.gameserver.model.SkillTargetType TARGET_PARTY_MEMBER
com.l2jfrozen.gameserver.model.SkillTargetType: com.l2jfrozen.gameserver.model.SkillTargetType TARGET_PARTY_OTHER
com.l2jfrozen.gameserver.model.SkillTargetType: com.l2jfrozen.gameserver.model.SkillTargetType TARGET_ENEMY_SUMMON
com.l2jfrozen.gameserver.model.SkillTargetType: com.l2jfrozen.gameserver.model.SkillTargetType TARGET_OWNER_PET
com.l2jfrozen.gameserver.model.SkillTargetType: com.l2jfrozen.gameserver.model.SkillTargetType TARGET_GROUND
com.l2jfrozen.gameserver.model.SkillTargetType: com.l2jfrozen.gameserver.model.SkillTargetType TARGET_SIEGE
com.l2jfrozen.gameserver.model.SkillTargetType: com.l2jfrozen.gameserver.model.SkillTargetType TARGET_TYRANNOSAURUS
com.l2jfrozen.gameserver.model.SkillTargetType: com.l2jfrozen.gameserver.model.SkillTargetType TARGET_AREA_AIM_CORPSE
com.l2jfrozen.gameserver.model.SkillTargetType: com.l2jfrozen.gameserver.model.SkillTargetType TARGET_CLAN_MEMBER
com.l2jfrozen.gameserver.model.SkillTargetType: com.l2jfrozen.gameserver.model.SkillTargetType[] $VALUES
com.l2jfrozen.gameserver.model.SkillTargetType: com.l2jfrozen.gameserver.model.SkillTargetType[] values()
com.l2jfrozen.gameserver.model.SkillTargetType: com.l2jfrozen.gameserver.model.SkillTargetType valueOf(java.lang.String)
com.l2jfrozen.gameserver.model.SkillTargetType: SkillTargetType(java.lang.String,int)
com.l2jfrozen.gameserver.model.SkillTargetType: void <clinit>()
com.l2jfrozen.gameserver.model.SkillType
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType PDAM
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType MDAM
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType CPDAM
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType MANADAM
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType DOT
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType MDOT
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType DRAIN_SOUL
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType DRAIN
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType DEATHLINK
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType FATALCOUNTER
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType BLOW
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType BLEED
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType POISON
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType STUN
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType ROOT
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType CONFUSION
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType FEAR
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType SLEEP
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType CONFUSE_MOB_ONLY
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType MUTE
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType PARALYZE
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType WEAKNESS
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType HEAL
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType HOT
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType BALANCE_LIFE
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType HEAL_PERCENT
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType HEAL_STATIC
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType COMBATPOINTHEAL
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType COMBATPOINTPERCENTHEAL
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType CPHOT
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType MANAHEAL
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType MANA_BY_LEVEL
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType MANAHEAL_PERCENT
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType MANARECHARGE
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType MPHOT
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType AGGDAMAGE
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType AGGREDUCE
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType AGGREMOVE
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType AGGREDUCE_CHAR
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType AGGDEBUFF
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType FISHING
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType PUMPING
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType REELING
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType UNLOCK
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType ENCHANT_ARMOR
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType ENCHANT_WEAPON
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType SOULSHOT
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType SPIRITSHOT
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType SIEGEFLAG
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType TAKECASTLE
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType DELUXE_KEY_UNLOCK
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType SOW
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType HARVEST
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType GET_PLAYER
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType COMMON_CRAFT
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType DWARVEN_CRAFT
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType CREATE_ITEM
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType SUMMON_TREASURE_KEY
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType SUMMON
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType FEED_PET
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType DEATHLINK_PET
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType STRSIEGEASSAULT
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType ERASE
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType BETRAY
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType CANCEL
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType MAGE_BANE
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType WARRIOR_BANE
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType NEGATE
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType BUFF
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType DEBUFF
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType PASSIVE
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType CONT
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType SIGNET
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType SIGNET_CASTTIME
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType RESURRECT
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType CHARGE
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType CHARGE_EFFECT
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType CHARGEDAM
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType MHOT
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType DETECT_WEAKNESS
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType LUCK
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType RECALL
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType SUMMON_FRIEND
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType REFLECT
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType SPOIL
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType SWEEP
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType FAKE_DEATH
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType UNBLEED
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType UNPOISON
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType UNDEAD_DEFENSE
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType SEED
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType BEAST_FEED
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType FORCE_BUFF
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType CLAN_GATE
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType GIVE_SP
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType COREDONE
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType ZAKENPLAYER
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType ZAKENSELF
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType NOTDONE
com.l2jfrozen.gameserver.model.SkillType: java.lang.Class _class
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType[] $VALUES
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType[] values()
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.SkillType valueOf(java.lang.String)
com.l2jfrozen.gameserver.model.SkillType: com.l2jfrozen.gameserver.model.L2Skill makeSkill(com.l2jfrozen.gameserver.templates.StatsSet)
com.l2jfrozen.gameserver.model.SkillType: SkillType(java.lang.String,int)
com.l2jfrozen.gameserver.model.SkillType: SkillType(java.lang.String,int,java.lang.Class)
com.l2jfrozen.gameserver.model.SkillType: void <clinit>()
com.l2jfrozen.gameserver.model.TradeItem
com.l2jfrozen.gameserver.model.TradeItem: int _objectId
com.l2jfrozen.gameserver.model.TradeItem: int _itemId
com.l2jfrozen.gameserver.model.TradeItem: int _price
com.l2jfrozen.gameserver.model.TradeItem: int _storePrice
com.l2jfrozen.gameserver.model.TradeItem: int _count
com.l2jfrozen.gameserver.model.TradeItem: int _enchantLevel
com.l2jfrozen.gameserver.model.TradeItem: TradeItem()
com.l2jfrozen.gameserver.model.TradeItem: void setObjectId(int)
com.l2jfrozen.gameserver.model.TradeItem: int getObjectId()
com.l2jfrozen.gameserver.model.TradeItem: void setItemId(int)
com.l2jfrozen.gameserver.model.TradeItem: int getItemId()
com.l2jfrozen.gameserver.model.TradeItem: void setOwnersPrice(int)
com.l2jfrozen.gameserver.model.TradeItem: int getOwnersPrice()
com.l2jfrozen.gameserver.model.TradeItem: void setstorePrice(int)
com.l2jfrozen.gameserver.model.TradeItem: int getStorePrice()
com.l2jfrozen.gameserver.model.TradeItem: void setCount(int)
com.l2jfrozen.gameserver.model.TradeItem: int getCount()
com.l2jfrozen.gameserver.model.TradeItem: void setEnchantLevel(int)
com.l2jfrozen.gameserver.model.TradeItem: int getEnchantLevel()
com.l2jfrozen.gameserver.model.TradeList
com.l2jfrozen.gameserver.model.TradeList: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.TradeList: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _owner
com.l2jfrozen.gameserver.model.TradeList: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _partner
com.l2jfrozen.gameserver.model.TradeList: java.util.List _items
com.l2jfrozen.gameserver.model.TradeList: java.lang.String _title
com.l2jfrozen.gameserver.model.TradeList: boolean _packaged
com.l2jfrozen.gameserver.model.TradeList: boolean _confirmed
com.l2jfrozen.gameserver.model.TradeList: boolean _locked
com.l2jfrozen.gameserver.model.TradeList: TradeList(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.TradeList: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getOwner()
com.l2jfrozen.gameserver.model.TradeList: void setPartner(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.TradeList: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getPartner()
com.l2jfrozen.gameserver.model.TradeList: void setTitle(java.lang.String)
com.l2jfrozen.gameserver.model.TradeList: java.lang.String getTitle()
com.l2jfrozen.gameserver.model.TradeList: boolean isLocked()
com.l2jfrozen.gameserver.model.TradeList: boolean isConfirmed()
com.l2jfrozen.gameserver.model.TradeList: boolean isPackaged()
com.l2jfrozen.gameserver.model.TradeList: void setPackaged(boolean)
com.l2jfrozen.gameserver.model.TradeList: com.l2jfrozen.gameserver.model.TradeList$TradeItem[] getItems()
com.l2jfrozen.gameserver.model.TradeList: com.l2jfrozen.gameserver.model.TradeList$TradeItem[] getAvailableItems(com.l2jfrozen.gameserver.model.PcInventory)
com.l2jfrozen.gameserver.model.TradeList: int getItemCount()
com.l2jfrozen.gameserver.model.TradeList: com.l2jfrozen.gameserver.model.TradeList$TradeItem adjustAvailableItem(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.TradeList: void adjustItemRequest(com.l2jfrozen.gameserver.model.ItemRequest)
com.l2jfrozen.gameserver.model.TradeList: void adjustItemRequestByItemId(com.l2jfrozen.gameserver.model.ItemRequest)
com.l2jfrozen.gameserver.model.TradeList: com.l2jfrozen.gameserver.model.TradeList$TradeItem addItem(int,int)
com.l2jfrozen.gameserver.model.TradeList: com.l2jfrozen.gameserver.model.TradeList$TradeItem addItem(int,int,int)
com.l2jfrozen.gameserver.model.TradeList: com.l2jfrozen.gameserver.model.TradeList$TradeItem addItemByItemId(int,int,int,int)
com.l2jfrozen.gameserver.model.TradeList: com.l2jfrozen.gameserver.model.TradeList$TradeItem removeItem(int,int,int)
com.l2jfrozen.gameserver.model.TradeList: void updateItems()
com.l2jfrozen.gameserver.model.TradeList: void lock()
com.l2jfrozen.gameserver.model.TradeList: void clear()
com.l2jfrozen.gameserver.model.TradeList: boolean confirm()
com.l2jfrozen.gameserver.model.TradeList: void invalidateConfirmation()
com.l2jfrozen.gameserver.model.TradeList: boolean validate()
com.l2jfrozen.gameserver.model.TradeList: boolean TransferItems(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.network.serverpackets.InventoryUpdate,com.l2jfrozen.gameserver.network.serverpackets.InventoryUpdate)
com.l2jfrozen.gameserver.model.TradeList: int countItemsSlots(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.TradeList: int calcItemsWeight()
com.l2jfrozen.gameserver.model.TradeList: void doExchange(com.l2jfrozen.gameserver.model.TradeList)
com.l2jfrozen.gameserver.model.TradeList: boolean PrivateStoreBuy(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.ItemRequest[],int)
com.l2jfrozen.gameserver.model.TradeList: boolean PrivateStoreSell(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.ItemRequest[],int)
com.l2jfrozen.gameserver.model.TradeList: com.l2jfrozen.gameserver.model.TradeList$TradeItem getItem(int)
com.l2jfrozen.gameserver.model.TradeList: void <clinit>()
com.l2jfrozen.gameserver.model.TradeList$TradeItem
com.l2jfrozen.gameserver.model.TradeList$TradeItem: int _objectId
com.l2jfrozen.gameserver.model.TradeList$TradeItem: com.l2jfrozen.gameserver.templates.L2Item _item
com.l2jfrozen.gameserver.model.TradeList$TradeItem: int _enchant
com.l2jfrozen.gameserver.model.TradeList$TradeItem: int _count
com.l2jfrozen.gameserver.model.TradeList$TradeItem: int _price
com.l2jfrozen.gameserver.model.TradeList$TradeItem: int _curcount
com.l2jfrozen.gameserver.model.TradeList$TradeItem: com.l2jfrozen.gameserver.model.L2Augmentation _augmentation
com.l2jfrozen.gameserver.model.TradeList$TradeItem: com.l2jfrozen.gameserver.model.TradeList this$0
com.l2jfrozen.gameserver.model.TradeList$TradeItem: TradeList$TradeItem(com.l2jfrozen.gameserver.model.TradeList,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance,int,int)
com.l2jfrozen.gameserver.model.TradeList$TradeItem: TradeList$TradeItem(com.l2jfrozen.gameserver.model.TradeList,com.l2jfrozen.gameserver.templates.L2Item,int,int)
com.l2jfrozen.gameserver.model.TradeList$TradeItem: TradeList$TradeItem(com.l2jfrozen.gameserver.model.TradeList,com.l2jfrozen.gameserver.model.TradeList$TradeItem,int,int)
com.l2jfrozen.gameserver.model.TradeList$TradeItem: void setObjectId(int)
com.l2jfrozen.gameserver.model.TradeList$TradeItem: int getObjectId()
com.l2jfrozen.gameserver.model.TradeList$TradeItem: com.l2jfrozen.gameserver.templates.L2Item getItem()
com.l2jfrozen.gameserver.model.TradeList$TradeItem: void setEnchant(int)
com.l2jfrozen.gameserver.model.TradeList$TradeItem: int getEnchant()
com.l2jfrozen.gameserver.model.TradeList$TradeItem: void setCount(int)
com.l2jfrozen.gameserver.model.TradeList$TradeItem: int getCount()
com.l2jfrozen.gameserver.model.TradeList$TradeItem: void setPrice(int)
com.l2jfrozen.gameserver.model.TradeList$TradeItem: int getPrice()
com.l2jfrozen.gameserver.model.TradeList$TradeItem: void setCurCount(int)
com.l2jfrozen.gameserver.model.TradeList$TradeItem: int getCurCount()
com.l2jfrozen.gameserver.model.TradeList$TradeItem: boolean isAugmented()
com.l2jfrozen.gameserver.model.TriggerType
com.l2jfrozen.gameserver.model.TriggerType: com.l2jfrozen.gameserver.model.TriggerType ON_HIT
com.l2jfrozen.gameserver.model.TriggerType: com.l2jfrozen.gameserver.model.TriggerType ON_CRIT
com.l2jfrozen.gameserver.model.TriggerType: com.l2jfrozen.gameserver.model.TriggerType ON_CAST
com.l2jfrozen.gameserver.model.TriggerType: com.l2jfrozen.gameserver.model.TriggerType ON_PHYSICAL
com.l2jfrozen.gameserver.model.TriggerType: com.l2jfrozen.gameserver.model.TriggerType ON_MAGIC
com.l2jfrozen.gameserver.model.TriggerType: com.l2jfrozen.gameserver.model.TriggerType ON_MAGIC_GOOD
com.l2jfrozen.gameserver.model.TriggerType: com.l2jfrozen.gameserver.model.TriggerType ON_MAGIC_OFFENSIVE
com.l2jfrozen.gameserver.model.TriggerType: com.l2jfrozen.gameserver.model.TriggerType ON_ATTACKED
com.l2jfrozen.gameserver.model.TriggerType: com.l2jfrozen.gameserver.model.TriggerType ON_ATTACKED_HIT
com.l2jfrozen.gameserver.model.TriggerType: com.l2jfrozen.gameserver.model.TriggerType ON_ATTACKED_CRIT
com.l2jfrozen.gameserver.model.TriggerType: com.l2jfrozen.gameserver.model.TriggerType ON_HIT_BY_SKILL
com.l2jfrozen.gameserver.model.TriggerType: com.l2jfrozen.gameserver.model.TriggerType ON_HIT_BY_OFFENSIVE_SKILL
com.l2jfrozen.gameserver.model.TriggerType: com.l2jfrozen.gameserver.model.TriggerType ON_HIT_BY_GOOD_MAGIC
com.l2jfrozen.gameserver.model.TriggerType: int _mask
com.l2jfrozen.gameserver.model.TriggerType: com.l2jfrozen.gameserver.model.TriggerType[] $VALUES
com.l2jfrozen.gameserver.model.TriggerType: com.l2jfrozen.gameserver.model.TriggerType[] values()
com.l2jfrozen.gameserver.model.TriggerType: com.l2jfrozen.gameserver.model.TriggerType valueOf(java.lang.String)
com.l2jfrozen.gameserver.model.TriggerType: TriggerType(java.lang.String,int,int)
com.l2jfrozen.gameserver.model.TriggerType: boolean check(int)
com.l2jfrozen.gameserver.model.TriggerType: void <clinit>()
com.l2jfrozen.gameserver.model.Warehouse
com.l2jfrozen.gameserver.model.Warehouse: Warehouse()
com.l2jfrozen.gameserver.model.actor.appearance.PcAppearance
com.l2jfrozen.gameserver.model.actor.appearance.PcAppearance: byte _face
com.l2jfrozen.gameserver.model.actor.appearance.PcAppearance: byte _hairColor
com.l2jfrozen.gameserver.model.actor.appearance.PcAppearance: byte _hairStyle
com.l2jfrozen.gameserver.model.actor.appearance.PcAppearance: boolean _sex
com.l2jfrozen.gameserver.model.actor.appearance.PcAppearance: boolean _invisible
com.l2jfrozen.gameserver.model.actor.appearance.PcAppearance: int _nameColor
com.l2jfrozen.gameserver.model.actor.appearance.PcAppearance: int _titleColor
com.l2jfrozen.gameserver.model.actor.appearance.PcAppearance: PcAppearance(byte,byte,byte,boolean)
com.l2jfrozen.gameserver.model.actor.appearance.PcAppearance: byte getFace()
com.l2jfrozen.gameserver.model.actor.appearance.PcAppearance: void setFace(int)
com.l2jfrozen.gameserver.model.actor.appearance.PcAppearance: byte getHairColor()
com.l2jfrozen.gameserver.model.actor.appearance.PcAppearance: void setHairColor(int)
com.l2jfrozen.gameserver.model.actor.appearance.PcAppearance: byte getHairStyle()
com.l2jfrozen.gameserver.model.actor.appearance.PcAppearance: void setHairStyle(int)
com.l2jfrozen.gameserver.model.actor.appearance.PcAppearance: boolean getSex()
com.l2jfrozen.gameserver.model.actor.appearance.PcAppearance: void setSex(boolean)
com.l2jfrozen.gameserver.model.actor.appearance.PcAppearance: void setInvisible()
com.l2jfrozen.gameserver.model.actor.appearance.PcAppearance: void setVisible()
com.l2jfrozen.gameserver.model.actor.appearance.PcAppearance: boolean getInvisible()
com.l2jfrozen.gameserver.model.actor.appearance.PcAppearance: int getNameColor()
com.l2jfrozen.gameserver.model.actor.appearance.PcAppearance: void setNameColor(int)
com.l2jfrozen.gameserver.model.actor.appearance.PcAppearance: void setNameColor(int,int,int)
com.l2jfrozen.gameserver.model.actor.appearance.PcAppearance: int getTitleColor()
com.l2jfrozen.gameserver.model.actor.appearance.PcAppearance: void setTitleColor(int)
com.l2jfrozen.gameserver.model.actor.appearance.PcAppearance: void setTitleColor(int,int,int)
com.l2jfrozen.gameserver.model.actor.instance.ItemLocation
com.l2jfrozen.gameserver.model.actor.instance.ItemLocation: com.l2jfrozen.gameserver.model.actor.instance.ItemLocation VOID
com.l2jfrozen.gameserver.model.actor.instance.ItemLocation: com.l2jfrozen.gameserver.model.actor.instance.ItemLocation INVENTORY
com.l2jfrozen.gameserver.model.actor.instance.ItemLocation: com.l2jfrozen.gameserver.model.actor.instance.ItemLocation PAPERDOLL
com.l2jfrozen.gameserver.model.actor.instance.ItemLocation: com.l2jfrozen.gameserver.model.actor.instance.ItemLocation WAREHOUSE
com.l2jfrozen.gameserver.model.actor.instance.ItemLocation: com.l2jfrozen.gameserver.model.actor.instance.ItemLocation CLANWH
com.l2jfrozen.gameserver.model.actor.instance.ItemLocation: com.l2jfrozen.gameserver.model.actor.instance.ItemLocation PET
com.l2jfrozen.gameserver.model.actor.instance.ItemLocation: com.l2jfrozen.gameserver.model.actor.instance.ItemLocation PET_EQUIP
com.l2jfrozen.gameserver.model.actor.instance.ItemLocation: com.l2jfrozen.gameserver.model.actor.instance.ItemLocation LEASE
com.l2jfrozen.gameserver.model.actor.instance.ItemLocation: com.l2jfrozen.gameserver.model.actor.instance.ItemLocation FREIGHT
com.l2jfrozen.gameserver.model.actor.instance.ItemLocation: com.l2jfrozen.gameserver.model.actor.instance.ItemLocation[] $VALUES
com.l2jfrozen.gameserver.model.actor.instance.ItemLocation: com.l2jfrozen.gameserver.model.actor.instance.ItemLocation[] values()
com.l2jfrozen.gameserver.model.actor.instance.ItemLocation: com.l2jfrozen.gameserver.model.actor.instance.ItemLocation valueOf(java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.ItemLocation: ItemLocation(java.lang.String,int)
com.l2jfrozen.gameserver.model.actor.instance.ItemLocation: void <clinit>()
com.l2jfrozen.gameserver.model.actor.instance.L2AdventurerInstance
com.l2jfrozen.gameserver.model.actor.instance.L2AdventurerInstance: L2AdventurerInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2AdventurerInstance: void onBypassFeedback(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2AdventurerInstance: java.lang.String getHtmlPath(int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2AdventurerInstance: void showChatWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2AdventurerInstance$1
com.l2jfrozen.gameserver.model.actor.instance.L2AdventurerInstance$1: int[] $SwitchMap$com$l2jfrozen$gameserver$managers$StatusEnum
com.l2jfrozen.gameserver.model.actor.instance.L2AdventurerInstance$1: void <clinit>()
com.l2jfrozen.gameserver.model.actor.instance.L2ArtefactInstance
com.l2jfrozen.gameserver.model.actor.instance.L2ArtefactInstance: L2ArtefactInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2ArtefactInstance: boolean isAutoAttackable(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2ArtefactInstance: boolean isAttackable()
com.l2jfrozen.gameserver.model.actor.instance.L2ArtefactInstance: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2ArtefactInstance: void reduceCurrentHp(double,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2ArtefactInstance: void reduceCurrentHp(double,com.l2jfrozen.gameserver.model.L2Character,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2ArtefactInstance: void onForcedAttack(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2AuctioneerInstance
com.l2jfrozen.gameserver.model.actor.instance.L2AuctioneerInstance: int COND_ALL_FALSE
com.l2jfrozen.gameserver.model.actor.instance.L2AuctioneerInstance: int COND_BUSY_BECAUSE_OF_SIEGE
com.l2jfrozen.gameserver.model.actor.instance.L2AuctioneerInstance: int COND_REGULAR
com.l2jfrozen.gameserver.model.actor.instance.L2AuctioneerInstance: java.util.Map _pendingAuctions
com.l2jfrozen.gameserver.model.actor.instance.L2AuctioneerInstance: L2AuctioneerInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2AuctioneerInstance: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2AuctioneerInstance: void onBypassFeedback(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2AuctioneerInstance: void showMessageWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2AuctioneerInstance: int validateCondition(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2AuctioneerInstance: java.lang.String getPictureName(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2BabyPetInstance
com.l2jfrozen.gameserver.model.actor.instance.L2BabyPetInstance: com.l2jfrozen.gameserver.model.L2Skill _weakHeal
com.l2jfrozen.gameserver.model.actor.instance.L2BabyPetInstance: com.l2jfrozen.gameserver.model.L2Skill _strongHeal
com.l2jfrozen.gameserver.model.actor.instance.L2BabyPetInstance: java.util.concurrent.Future _healingTask
com.l2jfrozen.gameserver.model.actor.instance.L2BabyPetInstance: L2BabyPetInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2BabyPetInstance: boolean doDie(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2BabyPetInstance: void unSummon(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2BabyPetInstance: void doRevive()
com.l2jfrozen.gameserver.model.actor.instance.L2BabyPetInstance$Heal
com.l2jfrozen.gameserver.model.actor.instance.L2BabyPetInstance$Heal: com.l2jfrozen.gameserver.model.actor.instance.L2BabyPetInstance _baby
com.l2jfrozen.gameserver.model.actor.instance.L2BabyPetInstance$Heal: com.l2jfrozen.gameserver.model.actor.instance.L2BabyPetInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2BabyPetInstance$Heal: L2BabyPetInstance$Heal(com.l2jfrozen.gameserver.model.actor.instance.L2BabyPetInstance,com.l2jfrozen.gameserver.model.actor.instance.L2BabyPetInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2BabyPetInstance$Heal: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2BlacksmithInstance
com.l2jfrozen.gameserver.model.actor.instance.L2BlacksmithInstance: L2BlacksmithInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2BlacksmithInstance: void onBypassFeedback(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2BlacksmithInstance: java.lang.String getHtmlPath(int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: float boatSpeed
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: java.lang.String _name
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$L2BoatTrajet _t1
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$L2BoatTrajet _t2
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: int _cycle
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: com.l2jfrozen.gameserver.network.serverpackets.VehicleDeparture _vd
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: java.util.Map _inboat
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: int _runstate
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: int lastx
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: int lasty
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: boolean needOnVehicleCheckLocation
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: boolean _inCycle
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: int _id
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: L2BoatInstance(int,com.l2jfrozen.gameserver.templates.L2CharTemplate,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: void moveToLocation(int,int,int,float)
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: void evtArrived()
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: void sendVehicleDeparture(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: com.l2jfrozen.gameserver.network.serverpackets.VehicleDeparture getVehicleDeparture()
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: void beginCycle()
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: void updatePeopleInTheBoat(int,int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: void begin()
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: void say(int)
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: void spawn()
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: void setTrajet1(int,int,int,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: void setTrajet2(int,int,int,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: void updateAbnormalEffect()
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance getActiveWeaponInstance()
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: com.l2jfrozen.gameserver.templates.L2Weapon getActiveWeaponItem()
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance getSecondaryWeaponInstance()
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: com.l2jfrozen.gameserver.templates.L2Weapon getSecondaryWeaponItem()
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: int getLevel()
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: boolean isAutoAttackable(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: boolean isInCycle()
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: void stopCycle()
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: void startCycle()
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: void reloadPath()
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: java.lang.String getBoatName()
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: int getSizeInside()
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: int getCycle()
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: int getId()
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: void setId(int)
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance: void <clinit>()
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$BoatCaptain
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$BoatCaptain: int _state
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$BoatCaptain: com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance _boat
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$BoatCaptain: com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$BoatCaptain: L2BoatInstance$BoatCaptain(com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance,int,com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$BoatCaptain: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$Boatrun
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$Boatrun: int _state
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$Boatrun: com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance _boat
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$Boatrun: com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$Boatrun: L2BoatInstance$Boatrun(com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance,int,com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$Boatrun: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$L2BoatTrajet
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$L2BoatTrajet: java.util.Map _path
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$L2BoatTrajet: int idWaypoint1
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$L2BoatTrajet: int idWTicket1
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$L2BoatTrajet: int ntx1
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$L2BoatTrajet: int nty1
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$L2BoatTrajet: int ntz1
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$L2BoatTrajet: int max
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$L2BoatTrajet: java.lang.String boatName
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$L2BoatTrajet: java.lang.String npc1
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$L2BoatTrajet: java.lang.String sysmess10_1
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$L2BoatTrajet: java.lang.String sysmess5_1
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$L2BoatTrajet: java.lang.String sysmess1_1
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$L2BoatTrajet: java.lang.String sysmessb_1
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$L2BoatTrajet: java.lang.String sysmess0_1
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$L2BoatTrajet: com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$L2BoatTrajet: L2BoatInstance$L2BoatTrajet(com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance,int,int,int,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$L2BoatTrajet: void parseLine(java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$L2BoatTrajet: void loadBoatPath()
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$L2BoatTrajet: int state(int,com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$L2BoatTrajet$L2BoatPoint
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$L2BoatTrajet$L2BoatPoint: int speed1
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$L2BoatTrajet$L2BoatPoint: int speed2
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$L2BoatTrajet$L2BoatPoint: int x
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$L2BoatTrajet$L2BoatPoint: int y
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$L2BoatTrajet$L2BoatPoint: int z
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$L2BoatTrajet$L2BoatPoint: int time
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$L2BoatTrajet$L2BoatPoint: com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$L2BoatTrajet this$1
com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$L2BoatTrajet$L2BoatPoint: L2BoatInstance$L2BoatTrajet$L2BoatPoint(com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance$L2BoatTrajet)
com.l2jfrozen.gameserver.model.actor.instance.L2BoxInstance
com.l2jfrozen.gameserver.model.actor.instance.L2BoxInstance: int MAX_ITEMS_PER_PAGE
com.l2jfrozen.gameserver.model.actor.instance.L2BoxInstance: java.lang.String INSERT_GRANT
com.l2jfrozen.gameserver.model.actor.instance.L2BoxInstance: java.lang.String DELETE_GRANT
com.l2jfrozen.gameserver.model.actor.instance.L2BoxInstance: java.lang.String LIST_GRANT
com.l2jfrozen.gameserver.model.actor.instance.L2BoxInstance: java.lang.String VARIABLE_PREFIX
com.l2jfrozen.gameserver.model.actor.instance.L2BoxInstance: L2BoxInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2BoxInstance: void onBypassFeedback(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2BoxInstance: boolean hasRandomAnimation()
com.l2jfrozen.gameserver.model.actor.instance.L2BoxInstance: java.lang.String getHtmlPath(int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2BoxInstance: boolean hasAccess(java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2BoxInstance: java.util.List getAccess()
com.l2jfrozen.gameserver.model.actor.instance.L2BoxInstance: boolean grantAccess(java.lang.String,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2BoxInstance: void showWithdrawWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2BoxInstance: void showDepositWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2BoxInstance: java.util.Set getItems(java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2BoxInstance: void putInBox(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2BoxInstance: void takeOutBox(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2BoxInstance$L2BoxItem
com.l2jfrozen.gameserver.model.actor.instance.L2BoxInstance$L2BoxItem: int itemid
com.l2jfrozen.gameserver.model.actor.instance.L2BoxInstance$L2BoxItem: int id
com.l2jfrozen.gameserver.model.actor.instance.L2BoxInstance$L2BoxItem: int count
com.l2jfrozen.gameserver.model.actor.instance.L2BoxInstance$L2BoxItem: java.lang.String name
com.l2jfrozen.gameserver.model.actor.instance.L2BoxInstance$L2BoxItem: com.l2jfrozen.gameserver.model.actor.instance.L2BoxInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2BoxInstance$L2BoxItem: L2BoxInstance$L2BoxItem(com.l2jfrozen.gameserver.model.actor.instance.L2BoxInstance,int,int,java.lang.String,int)
com.l2jfrozen.gameserver.model.actor.instance.L2BoxInstance$L2BoxItem: int compareTo(java.lang.Object)
com.l2jfrozen.gameserver.model.actor.instance.L2BugReportInstance
com.l2jfrozen.gameserver.model.actor.instance.L2BugReportInstance: java.lang.String _type
com.l2jfrozen.gameserver.model.actor.instance.L2BugReportInstance: L2BugReportInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2BugReportInstance: void onBypassFeedback(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2BugReportInstance: void sendReport(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2BugReportInstance: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2BugReportInstance: void showHtmlWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2BugReportInstance: void <clinit>()
com.l2jfrozen.gameserver.model.actor.instance.L2CabaleBufferInstance
com.l2jfrozen.gameserver.model.actor.instance.L2CabaleBufferInstance: java.util.concurrent.ScheduledFuture _aiTask
com.l2jfrozen.gameserver.model.actor.instance.L2CabaleBufferInstance: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2CabaleBufferInstance: L2CabaleBufferInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2CabaleBufferInstance: void deleteMe()
com.l2jfrozen.gameserver.model.actor.instance.L2CabaleBufferInstance: int getDistanceToWatchObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.instance.L2CabaleBufferInstance: boolean isAutoAttackable(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2CabaleBufferInstance$CabalaAI
com.l2jfrozen.gameserver.model.actor.instance.L2CabaleBufferInstance$CabalaAI: com.l2jfrozen.gameserver.model.actor.instance.L2CabaleBufferInstance _caster
com.l2jfrozen.gameserver.model.actor.instance.L2CabaleBufferInstance$CabalaAI: com.l2jfrozen.gameserver.model.actor.instance.L2CabaleBufferInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2CabaleBufferInstance$CabalaAI: L2CabaleBufferInstance$CabalaAI(com.l2jfrozen.gameserver.model.actor.instance.L2CabaleBufferInstance,com.l2jfrozen.gameserver.model.actor.instance.L2CabaleBufferInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2CabaleBufferInstance$CabalaAI: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2CabaleBufferInstance$CabalaAI: boolean handleCast(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.actor.instance.L2CastleBlacksmithInstance
com.l2jfrozen.gameserver.model.actor.instance.L2CastleBlacksmithInstance: int COND_ALL_FALSE
com.l2jfrozen.gameserver.model.actor.instance.L2CastleBlacksmithInstance: int COND_BUSY_BECAUSE_OF_SIEGE
com.l2jfrozen.gameserver.model.actor.instance.L2CastleBlacksmithInstance: int COND_OWNER
com.l2jfrozen.gameserver.model.actor.instance.L2CastleBlacksmithInstance: L2CastleBlacksmithInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2CastleBlacksmithInstance: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2CastleBlacksmithInstance: void onBypassFeedback(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2CastleBlacksmithInstance: void showMessageWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.actor.instance.L2CastleBlacksmithInstance: int validateCondition(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2CastleChamberlainInstance
com.l2jfrozen.gameserver.model.actor.instance.L2CastleChamberlainInstance: int COND_ALL_FALSE
com.l2jfrozen.gameserver.model.actor.instance.L2CastleChamberlainInstance: int COND_BUSY_BECAUSE_OF_SIEGE
com.l2jfrozen.gameserver.model.actor.instance.L2CastleChamberlainInstance: int COND_OWNER
com.l2jfrozen.gameserver.model.actor.instance.L2CastleChamberlainInstance: L2CastleChamberlainInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2CastleChamberlainInstance: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2CastleChamberlainInstance: void onBypassFeedback(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2CastleChamberlainInstance: void sendHtmlMessage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2CastleChamberlainInstance: void showMessageWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2CastleChamberlainInstance: int validateCondition(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2CastleMagicianInstance
com.l2jfrozen.gameserver.model.actor.instance.L2CastleMagicianInstance: int COND_ALL_FALSE
com.l2jfrozen.gameserver.model.actor.instance.L2CastleMagicianInstance: int COND_BUSY_BECAUSE_OF_SIEGE
com.l2jfrozen.gameserver.model.actor.instance.L2CastleMagicianInstance: int COND_OWNER
com.l2jfrozen.gameserver.model.actor.instance.L2CastleMagicianInstance: L2CastleMagicianInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2CastleMagicianInstance: void showChatWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.actor.instance.L2CastleMagicianInstance: void onBypassFeedback(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2CastleMagicianInstance: int validateCondition(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2CastleMagicianInstance: boolean validateGateCondition(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2CastleTeleporterInstance
com.l2jfrozen.gameserver.model.actor.instance.L2CastleTeleporterInstance: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.actor.instance.L2CastleTeleporterInstance: boolean _currentTask
com.l2jfrozen.gameserver.model.actor.instance.L2CastleTeleporterInstance: L2CastleTeleporterInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2CastleTeleporterInstance: void onBypassFeedback(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2CastleTeleporterInstance: void showChatWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2CastleTeleporterInstance: void oustAllPlayers()
com.l2jfrozen.gameserver.model.actor.instance.L2CastleTeleporterInstance: boolean getTask()
com.l2jfrozen.gameserver.model.actor.instance.L2CastleTeleporterInstance: void setTask(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2CastleTeleporterInstance: void <clinit>()
com.l2jfrozen.gameserver.model.actor.instance.L2CastleTeleporterInstance$oustAllPlayers
com.l2jfrozen.gameserver.model.actor.instance.L2CastleTeleporterInstance$oustAllPlayers: com.l2jfrozen.gameserver.model.actor.instance.L2CastleTeleporterInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2CastleTeleporterInstance$oustAllPlayers: L2CastleTeleporterInstance$oustAllPlayers(com.l2jfrozen.gameserver.model.actor.instance.L2CastleTeleporterInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2CastleTeleporterInstance$oustAllPlayers: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2CastleWarehouseInstance
com.l2jfrozen.gameserver.model.actor.instance.L2CastleWarehouseInstance: int COND_ALL_FALSE
com.l2jfrozen.gameserver.model.actor.instance.L2CastleWarehouseInstance: int COND_BUSY_BECAUSE_OF_SIEGE
com.l2jfrozen.gameserver.model.actor.instance.L2CastleWarehouseInstance: int COND_OWNER
com.l2jfrozen.gameserver.model.actor.instance.L2CastleWarehouseInstance: L2CastleWarehouseInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2CastleWarehouseInstance: void showRetrieveWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2CastleWarehouseInstance: void showDepositWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2CastleWarehouseInstance: void showDepositWindowClan(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2CastleWarehouseInstance: void showWithdrawWindowClan(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2CastleWarehouseInstance: void onBypassFeedback(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2CastleWarehouseInstance: void showChatWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.actor.instance.L2CastleWarehouseInstance: int validateCondition(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2ChestInstance
com.l2jfrozen.gameserver.model.actor.instance.L2ChestInstance: boolean _isInteracted
com.l2jfrozen.gameserver.model.actor.instance.L2ChestInstance: boolean _specialDrop
com.l2jfrozen.gameserver.model.actor.instance.L2ChestInstance: L2ChestInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2ChestInstance: void onSpawn()
com.l2jfrozen.gameserver.model.actor.instance.L2ChestInstance: boolean isInteracted()
com.l2jfrozen.gameserver.model.actor.instance.L2ChestInstance: void setInteracted()
com.l2jfrozen.gameserver.model.actor.instance.L2ChestInstance: boolean isSpecialDrop()
com.l2jfrozen.gameserver.model.actor.instance.L2ChestInstance: void setSpecialDrop()
com.l2jfrozen.gameserver.model.actor.instance.L2ChestInstance: void doItemDrop(com.l2jfrozen.gameserver.templates.L2NpcTemplate,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2ChestInstance: void chestTrap(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2ChestInstance: boolean handleCast(com.l2jfrozen.gameserver.model.L2Character,int)
com.l2jfrozen.gameserver.model.actor.instance.L2ChestInstance: boolean isMovementDisabled()
com.l2jfrozen.gameserver.model.actor.instance.L2ChestInstance: boolean hasRandomAnimation()
com.l2jfrozen.gameserver.model.actor.instance.L2ClanHallManagerInstance
com.l2jfrozen.gameserver.model.actor.instance.L2ClanHallManagerInstance: int COND_OWNER_FALSE
com.l2jfrozen.gameserver.model.actor.instance.L2ClanHallManagerInstance: int COND_ALL_FALSE
com.l2jfrozen.gameserver.model.actor.instance.L2ClanHallManagerInstance: int COND_BUSY_BECAUSE_OF_SIEGE
com.l2jfrozen.gameserver.model.actor.instance.L2ClanHallManagerInstance: int COND_OWNER
com.l2jfrozen.gameserver.model.actor.instance.L2ClanHallManagerInstance: int _clanHallId
com.l2jfrozen.gameserver.model.actor.instance.L2ClanHallManagerInstance: L2ClanHallManagerInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2ClanHallManagerInstance: void onBypassFeedback(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2ClanHallManagerInstance: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2ClanHallManagerInstance: void sendHtmlMessage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.network.serverpackets.NpcHtmlMessage)
com.l2jfrozen.gameserver.model.actor.instance.L2ClanHallManagerInstance: void showMessageWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2ClanHallManagerInstance: int validateCondition(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2ClanHallManagerInstance: com.l2jfrozen.gameserver.model.entity.ClanHall getClanHall()
com.l2jfrozen.gameserver.model.actor.instance.L2ClanHallManagerInstance: void showVaultWindowDeposit(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2ClanHallManagerInstance: void showVaultWindowWithdraw(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2ClanHallManagerInstance: void doTeleport(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.actor.instance.L2ClanHallManagerInstance: void showBuyWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.actor.instance.L2ClanHallManagerInstance: void revalidateDeco(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2ClanHallSiegeInfInstance
com.l2jfrozen.gameserver.model.actor.instance.L2ClanHallSiegeInfInstance: L2ClanHallSiegeInfInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2ClanHallSiegeInfInstance: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2ClanHallSiegeInfInstance: void onBypassFeedback(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2ClanHallSiegeInfInstance: void showPlayersList(com.l2jfrozen.gameserver.model.L2Clan,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2ClanHallSiegeInfInstance: void showMessageWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.actor.instance.L2ClassMasterInstance
com.l2jfrozen.gameserver.model.actor.instance.L2ClassMasterInstance: com.l2jfrozen.gameserver.model.actor.instance.L2ClassMasterInstance _instance
com.l2jfrozen.gameserver.model.actor.instance.L2ClassMasterInstance: L2ClassMasterInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2ClassMasterInstance: com.l2jfrozen.gameserver.model.actor.instance.L2ClassMasterInstance getInstance()
com.l2jfrozen.gameserver.model.actor.instance.L2ClassMasterInstance: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2ClassMasterInstance: void onBypassFeedback(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2ClassMasterInstance: void showChatWindowChooseClass(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2ClassMasterInstance: void showChatWindow1st(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2ClassMasterInstance: void showChatWindow2nd(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2ClassMasterInstance: void showChatWindow3rd(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2ClassMasterInstance: void showChatWindowBase(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2ClassMasterInstance: void changeClass(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.actor.instance.L2ClassMasterInstance$1
com.l2jfrozen.gameserver.model.actor.instance.L2ClassMasterInstance$1: int[] $SwitchMap$com$l2jfrozen$gameserver$model$base$ClassLevel
com.l2jfrozen.gameserver.model.actor.instance.L2ClassMasterInstance$1: void <clinit>()
com.l2jfrozen.gameserver.model.actor.instance.L2CommanderInstance
com.l2jfrozen.gameserver.model.actor.instance.L2CommanderInstance: int _homeX
com.l2jfrozen.gameserver.model.actor.instance.L2CommanderInstance: int _homeY
com.l2jfrozen.gameserver.model.actor.instance.L2CommanderInstance: int _homeZ
com.l2jfrozen.gameserver.model.actor.instance.L2CommanderInstance: L2CommanderInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2CommanderInstance: boolean isAutoAttackable(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2CommanderInstance: com.l2jfrozen.gameserver.model.actor.knownlist.CommanderKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2CommanderInstance: void addDamageHate(com.l2jfrozen.gameserver.model.L2Character,int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2CommanderInstance: boolean doDie(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2CommanderInstance: void getHomeLocation()
com.l2jfrozen.gameserver.model.actor.instance.L2CommanderInstance: int getHomeX()
com.l2jfrozen.gameserver.model.actor.instance.L2CommanderInstance: int getHomeY()
com.l2jfrozen.gameserver.model.actor.instance.L2CommanderInstance: void returnHome()
com.l2jfrozen.gameserver.model.actor.instance.L2CommanderInstance: com.l2jfrozen.gameserver.model.actor.knownlist.AttackableKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2CommanderInstance: com.l2jfrozen.gameserver.model.actor.knownlist.NpcKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2CommanderInstance: com.l2jfrozen.gameserver.model.actor.knownlist.CharKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2CommanderInstance: com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2ControlTowerInstance
com.l2jfrozen.gameserver.model.actor.instance.L2ControlTowerInstance: java.util.List _guards
com.l2jfrozen.gameserver.model.actor.instance.L2ControlTowerInstance: L2ControlTowerInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2ControlTowerInstance: boolean isAttackable()
com.l2jfrozen.gameserver.model.actor.instance.L2ControlTowerInstance: boolean isAutoAttackable(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2ControlTowerInstance: void onForcedAttack(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2ControlTowerInstance: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2ControlTowerInstance: void onDeath()
com.l2jfrozen.gameserver.model.actor.instance.L2ControlTowerInstance: void registerGuard(com.l2jfrozen.gameserver.model.spawn.L2Spawn)
com.l2jfrozen.gameserver.model.actor.instance.L2ControlTowerInstance: java.util.List getGuards()
com.l2jfrozen.gameserver.model.actor.instance.L2ControllableMobInstance
com.l2jfrozen.gameserver.model.actor.instance.L2ControllableMobInstance: boolean _isInvul
com.l2jfrozen.gameserver.model.actor.instance.L2ControllableMobInstance: com.l2jfrozen.gameserver.ai.L2ControllableMobAI _aiBackup
com.l2jfrozen.gameserver.model.actor.instance.L2ControllableMobInstance: boolean isAggressive()
com.l2jfrozen.gameserver.model.actor.instance.L2ControllableMobInstance: int getAggroRange()
com.l2jfrozen.gameserver.model.actor.instance.L2ControllableMobInstance: L2ControllableMobInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2ControllableMobInstance: com.l2jfrozen.gameserver.ai.L2CharacterAI getAI()
com.l2jfrozen.gameserver.model.actor.instance.L2ControllableMobInstance: boolean isInvul()
com.l2jfrozen.gameserver.model.actor.instance.L2ControllableMobInstance: void setInvul(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2ControllableMobInstance: void reduceCurrentHp(double,com.l2jfrozen.gameserver.model.L2Character,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2ControllableMobInstance: boolean doDie(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2ControllableMobInstance: void deleteMe()
com.l2jfrozen.gameserver.model.actor.instance.L2ControllableMobInstance: void removeAI()
com.l2jfrozen.gameserver.model.actor.instance.L2ControllableMobInstance$ControllableAIAcessor
com.l2jfrozen.gameserver.model.actor.instance.L2ControllableMobInstance$ControllableAIAcessor: com.l2jfrozen.gameserver.model.actor.instance.L2ControllableMobInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2ControllableMobInstance$ControllableAIAcessor: L2ControllableMobInstance$ControllableAIAcessor(com.l2jfrozen.gameserver.model.actor.instance.L2ControllableMobInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2ControllableMobInstance$ControllableAIAcessor: void detachAI()
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: int STORM_CUBIC
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: int VAMPIRIC_CUBIC
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: int LIFE_CUBIC
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: int VIPER_CUBIC
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: int POLTERGEIST_CUBIC
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: int BINDING_CUBIC
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: int AQUA_CUBIC
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: int SPARK_CUBIC
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: int ATTRACT_CUBIC
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: int SMART_CUBIC_EVATEMPLAR
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: int SMART_CUBIC_SHILLIENTEMPLAR
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: int SMART_CUBIC_ARCANALORD
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: int SMART_CUBIC_ELEMENTALMASTER
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: int SMART_CUBIC_SPECTRALMASTER
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: int MAX_MAGIC_RANGE
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: int SKILL_CUBIC_HEAL
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: int SKILL_CUBIC_CURE
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _owner
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: com.l2jfrozen.gameserver.model.L2Character _target
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: int _id
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: int _matk
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: int _activationtime
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: int _activationchance
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: boolean _active
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: boolean _givenByOther
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: java.util.List _skills
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: java.util.concurrent.Future _disappearTask
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: java.util.concurrent.Future _actionTask
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: L2CubicInstance(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int,int,int,int,int,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: void doAction()
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: int getId()
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getOwner()
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: int getMCriticalHit(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: int getMAtk()
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: void stopAction()
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: void cancelDisappear()
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: void getCubicTarget()
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: void useCubicContinuous(com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: void useCubicMdam(com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: void useCubicDisabler(com.l2jfrozen.gameserver.model.SkillType,com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance,com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: boolean isInCubicRange(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: void cubicTargetForHeal()
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: boolean givenByOther()
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance: void <clinit>()
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance$1
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance$1: int[] $SwitchMap$com$l2jfrozen$gameserver$model$SkillType
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance$1: void <clinit>()
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance$Action
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance$Action: int _chance
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance$Action: com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance$Action: L2CubicInstance$Action(com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance,int)
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance$Action: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance$Disappear
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance$Disappear: com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance$Disappear: L2CubicInstance$Disappear(com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance$Disappear: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance$Heal
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance$Heal: com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance$Heal: L2CubicInstance$Heal(com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance$Heal: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: boolean _allowRandomWeapons
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: boolean _allowRandomClass
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: boolean _allowRandomAppearance
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: java.lang.String _name
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: java.lang.String _title
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: int[] _int
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: boolean[] _boolean
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance _NpcInstance
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: com.l2jfrozen.gameserver.model.base.ClassId _classId
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: L2CustomNpcInstance(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: void initialize()
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: java.lang.String getName()
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: java.lang.String getTitle()
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: int getKarma()
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: int getClanId()
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: int getAllyId()
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: int getClanCrestId()
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: int getAllyCrestId()
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: int getRace()
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: int getClassId()
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: int getEnchantWeapon()
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: int getPledgeClass()
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: int getCursedWeaponLevel()
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: int PAPERDOLL_RHAND()
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: int PAPERDOLL_LHAND()
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: int PAPERDOLL_GLOVES()
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: int PAPERDOLL_CHEST()
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: int PAPERDOLL_LEGS()
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: int PAPERDOLL_FEET()
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: int PAPERDOLL_HAIR()
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: int PAPERDOLL_HAIR2()
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: int getHairStyle()
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: int getHairColor()
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: int getFace()
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: int nameColor()
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: int titleColor()
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: boolean getPvpFlag()
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: int getHeading()
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: boolean isNoble()
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: boolean isHero()
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: boolean isFemaleSex()
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: void chooseRandomWeapon()
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: void chooseRandomClass()
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: void chooseRandomAppearance()
com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance: void setPcInstanceData(com.l2jfrozen.gameserver.managers.CustomNpcInstanceManager$customInfo)
com.l2jfrozen.gameserver.model.actor.instance.L2DecoInstance
com.l2jfrozen.gameserver.model.actor.instance.L2DecoInstance: L2DecoInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2DecoInstance: void reduceCurrentHp(double,com.l2jfrozen.gameserver.model.L2Character,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: int _castleIndex
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: int _mapRegion
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: int _fortIndex
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: int _rangeXMin
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: int _rangeYMin
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: int _rangeZMin
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: int _rangeXMax
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: int _rangeYMax
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: int _rangeZMax
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: int _A
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: int _B
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: int _C
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: int _D
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: int _doorId
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: java.lang.String _name
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: boolean _open
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: boolean _unlockable
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: com.l2jfrozen.gameserver.model.entity.ClanHall _clanHall
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: int _autoActionDelay
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: java.util.concurrent.ScheduledFuture _autoActionTask
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: com.l2jfrozen.gameserver.model.L2Territory pos
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: com.l2jfrozen.gameserver.ai.L2CharacterAI getAI()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: boolean hasAI()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: L2DoorInstance(int,com.l2jfrozen.gameserver.templates.L2CharTemplate,int,java.lang.String,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: com.l2jfrozen.gameserver.model.actor.knownlist.DoorKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: com.l2jfrozen.gameserver.model.actor.stat.DoorStat getStat()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: com.l2jfrozen.gameserver.model.actor.status.DoorStatus getStatus()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: boolean isUnlockable()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: int getLevel()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: int getDoorId()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: boolean getOpen()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: void setOpen(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: void setAutoActionDelay(int)
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: int getDamage()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: com.l2jfrozen.gameserver.model.entity.siege.Castle getCastle()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: com.l2jfrozen.gameserver.model.entity.siege.Fort getFort()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: void setClanHall(com.l2jfrozen.gameserver.model.entity.ClanHall)
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: com.l2jfrozen.gameserver.model.entity.ClanHall getClanHall()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: boolean isEnemyOf(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: boolean isAutoAttackable(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: boolean isAttackable(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: void updateAbnormalEffect()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: int getDistanceToWatchObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: int getDistanceToForgetObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance getActiveWeaponInstance()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: com.l2jfrozen.gameserver.templates.L2Weapon getActiveWeaponItem()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance getSecondaryWeaponInstance()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: com.l2jfrozen.gameserver.templates.L2Weapon getSecondaryWeaponItem()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: void onActionShift(com.l2jfrozen.gameserver.network.L2GameClient)
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: void broadcastStatusUpdate()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: void onOpen()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: void onClose()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: void closeMe()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: void openMe()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: java.lang.String toString()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: java.lang.String getDoorName()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: int getXMin()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: int getYMin()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: int getZMin()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: int getXMax()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: int getYMax()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: int getZMax()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: void setRange(int,int,int,int,int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: int getA()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: int getB()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: int getC()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: int getD()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: int getMapRegion()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: void setMapRegion(int)
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: java.util.Collection getKnownSiegeGuards()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: java.util.Collection getKnownFortSiegeGuards()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: void reduceCurrentHp(double,com.l2jfrozen.gameserver.model.L2Character,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: boolean doDie(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: com.l2jfrozen.gameserver.model.actor.status.CharStatus getStatus()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: com.l2jfrozen.gameserver.model.actor.stat.CharStat getStat()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: com.l2jfrozen.gameserver.model.actor.knownlist.CharKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance: void <clinit>()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance$AIAccessor
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance$AIAccessor: com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance$AIAccessor: L2DoorInstance$AIAccessor(com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance$AIAccessor: com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance getActor()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance$AIAccessor: void moveTo(int,int,int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance$AIAccessor: void moveTo(int,int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance$AIAccessor: void stopMove(com.l2jfrozen.gameserver.model.actor.position.L2CharPosition)
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance$AIAccessor: void doAttack(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance$AIAccessor: void doCast(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance$AIAccessor: com.l2jfrozen.gameserver.model.L2Character getActor()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance$AutoOpenClose
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance$AutoOpenClose: com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance$AutoOpenClose: L2DoorInstance$AutoOpenClose(com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance$AutoOpenClose: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance$CloseTask
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance$CloseTask: com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance$CloseTask: L2DoorInstance$CloseTask(com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance$CloseTask: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2DoormenInstance
com.l2jfrozen.gameserver.model.actor.instance.L2DoormenInstance: com.l2jfrozen.gameserver.model.entity.ClanHall _clanHall
com.l2jfrozen.gameserver.model.actor.instance.L2DoormenInstance: int COND_ALL_FALSE
com.l2jfrozen.gameserver.model.actor.instance.L2DoormenInstance: int COND_BUSY_BECAUSE_OF_SIEGE
com.l2jfrozen.gameserver.model.actor.instance.L2DoormenInstance: int COND_CASTLE_OWNER
com.l2jfrozen.gameserver.model.actor.instance.L2DoormenInstance: int COND_HALL_OWNER
com.l2jfrozen.gameserver.model.actor.instance.L2DoormenInstance: int COND_FORT_OWNER
com.l2jfrozen.gameserver.model.actor.instance.L2DoormenInstance: L2DoormenInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2DoormenInstance: com.l2jfrozen.gameserver.model.entity.ClanHall getClanHall()
com.l2jfrozen.gameserver.model.actor.instance.L2DoormenInstance: void onBypassFeedback(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2DoormenInstance: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2DoormenInstance: void showMessageWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2DoormenInstance: int validateCondition(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2DoormenInstance: void <clinit>()
com.l2jfrozen.gameserver.model.actor.instance.L2EffectPointInstance
com.l2jfrozen.gameserver.model.actor.instance.L2EffectPointInstance: com.l2jfrozen.gameserver.model.L2Character _owner
com.l2jfrozen.gameserver.model.actor.instance.L2EffectPointInstance: L2EffectPointInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2EffectPointInstance: com.l2jfrozen.gameserver.model.L2Character getOwner()
com.l2jfrozen.gameserver.model.actor.instance.L2EffectPointInstance: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2EffectPointInstance: void onActionShift(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2FeedableBeastInstance
com.l2jfrozen.gameserver.model.actor.instance.L2FeedableBeastInstance: L2FeedableBeastInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2FestivalGuideInstance
com.l2jfrozen.gameserver.model.actor.instance.L2FestivalGuideInstance: int _festivalType
com.l2jfrozen.gameserver.model.actor.instance.L2FestivalGuideInstance: int _festivalOracle
com.l2jfrozen.gameserver.model.actor.instance.L2FestivalGuideInstance: int _blueStonesNeeded
com.l2jfrozen.gameserver.model.actor.instance.L2FestivalGuideInstance: int _greenStonesNeeded
com.l2jfrozen.gameserver.model.actor.instance.L2FestivalGuideInstance: int _redStonesNeeded
com.l2jfrozen.gameserver.model.actor.instance.L2FestivalGuideInstance: L2FestivalGuideInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2FestivalGuideInstance: void onBypassFeedback(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2FestivalGuideInstance: void showChatWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,java.lang.String,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2FestivalGuideInstance: java.lang.String getStatsTable()
com.l2jfrozen.gameserver.model.actor.instance.L2FestivalGuideInstance: java.lang.String getBonusTable()
com.l2jfrozen.gameserver.model.actor.instance.L2FestivalGuideInstance: java.lang.String calculateDate(java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2FestivalMonsterInstance
com.l2jfrozen.gameserver.model.actor.instance.L2FestivalMonsterInstance: int _bonusMultiplier
com.l2jfrozen.gameserver.model.actor.instance.L2FestivalMonsterInstance: L2FestivalMonsterInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2FestivalMonsterInstance: void setOfferingBonus(int)
com.l2jfrozen.gameserver.model.actor.instance.L2FestivalMonsterInstance: boolean isAutoAttackable(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2FestivalMonsterInstance: boolean isAggressive()
com.l2jfrozen.gameserver.model.actor.instance.L2FestivalMonsterInstance: boolean hasRandomAnimation()
com.l2jfrozen.gameserver.model.actor.instance.L2FestivalMonsterInstance: void doItemDrop(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2FishermanInstance
com.l2jfrozen.gameserver.model.actor.instance.L2FishermanInstance: L2FishermanInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2FishermanInstance: java.lang.String getHtmlPath(int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2FishermanInstance: void showBuyWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.actor.instance.L2FishermanInstance: void showSellWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2FishermanInstance: void onBypassFeedback(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2FishermanInstance: void showSkillList(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2FolkInstance
com.l2jfrozen.gameserver.model.actor.instance.L2FolkInstance: com.l2jfrozen.gameserver.model.base.ClassId[] _classesToTeach
com.l2jfrozen.gameserver.model.actor.instance.L2FolkInstance: L2FolkInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2FolkInstance: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2FolkInstance: void showSkillList(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.base.ClassId)
com.l2jfrozen.gameserver.model.actor.instance.L2FolkInstance: void showEnchantSkillList(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.base.ClassId)
com.l2jfrozen.gameserver.model.actor.instance.L2FolkInstance: void onBypassFeedback(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2FortManagerInstance
com.l2jfrozen.gameserver.model.actor.instance.L2FortManagerInstance: int COND_ALL_FALSE
com.l2jfrozen.gameserver.model.actor.instance.L2FortManagerInstance: int COND_BUSY_BECAUSE_OF_SIEGE
com.l2jfrozen.gameserver.model.actor.instance.L2FortManagerInstance: int COND_OWNER
com.l2jfrozen.gameserver.model.actor.instance.L2FortManagerInstance: L2FortManagerInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2FortManagerInstance: boolean isWarehouse()
com.l2jfrozen.gameserver.model.actor.instance.L2FortManagerInstance: void sendHtmlMessage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.network.serverpackets.NpcHtmlMessage)
com.l2jfrozen.gameserver.model.actor.instance.L2FortManagerInstance: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2FortManagerInstance: void onBypassFeedback(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2FortManagerInstance: void showMessageWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2FortManagerInstance: void showVaultWindowDeposit(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2FortManagerInstance: void showVaultWindowWithdraw(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2FortManagerInstance: int validateCondition(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2FortMerchantInstance
com.l2jfrozen.gameserver.model.actor.instance.L2FortMerchantInstance: L2FortMerchantInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2FortMerchantInstance: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2FortMerchantInstance: void onBypassFeedback(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2FortMerchantInstance: void showMessageWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2FortMerchantInstance: void showMessageWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.actor.instance.L2FortMerchantInstance: void showSiegeInfoWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2FortMerchantInstance: boolean validateCondition(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2FortSiegeGuardInstance
com.l2jfrozen.gameserver.model.actor.instance.L2FortSiegeGuardInstance: L2FortSiegeGuardInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2FortSiegeGuardInstance: com.l2jfrozen.gameserver.model.actor.knownlist.FortSiegeGuardKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2FortSiegeGuardInstance: com.l2jfrozen.gameserver.ai.L2CharacterAI getAI()
com.l2jfrozen.gameserver.model.actor.instance.L2FortSiegeGuardInstance: boolean isAutoAttackable(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2FortSiegeGuardInstance: boolean hasRandomAnimation()
com.l2jfrozen.gameserver.model.actor.instance.L2FortSiegeGuardInstance: void returnHome()
com.l2jfrozen.gameserver.model.actor.instance.L2FortSiegeGuardInstance: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2FortSiegeGuardInstance: void addDamageHate(com.l2jfrozen.gameserver.model.L2Character,int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2FortSiegeGuardInstance: com.l2jfrozen.gameserver.model.actor.knownlist.AttackableKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2FortSiegeGuardInstance: com.l2jfrozen.gameserver.model.actor.knownlist.NpcKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2FortSiegeGuardInstance: com.l2jfrozen.gameserver.model.actor.knownlist.CharKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2FortSiegeGuardInstance: com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2FortWyvernManagerInstance
com.l2jfrozen.gameserver.model.actor.instance.L2FortWyvernManagerInstance: int COND_ALL_FALSE
com.l2jfrozen.gameserver.model.actor.instance.L2FortWyvernManagerInstance: int COND_BUSY_BECAUSE_OF_SIEGE
com.l2jfrozen.gameserver.model.actor.instance.L2FortWyvernManagerInstance: int COND_OWNER
com.l2jfrozen.gameserver.model.actor.instance.L2FortWyvernManagerInstance: L2FortWyvernManagerInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2FortWyvernManagerInstance: void onBypassFeedback(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2FortWyvernManagerInstance: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2FortWyvernManagerInstance: void showMessageWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2FortWyvernManagerInstance: int validateCondition(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2FriendlyMobInstance
com.l2jfrozen.gameserver.model.actor.instance.L2FriendlyMobInstance: L2FriendlyMobInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2FriendlyMobInstance: com.l2jfrozen.gameserver.model.actor.knownlist.FriendlyMobKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2FriendlyMobInstance: boolean isAutoAttackable(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2FriendlyMobInstance: boolean isAggressive()
com.l2jfrozen.gameserver.model.actor.instance.L2FriendlyMobInstance: com.l2jfrozen.gameserver.model.actor.knownlist.AttackableKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2FriendlyMobInstance: com.l2jfrozen.gameserver.model.actor.knownlist.NpcKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2FriendlyMobInstance: com.l2jfrozen.gameserver.model.actor.knownlist.CharKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2FriendlyMobInstance: com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2GourdInstance
com.l2jfrozen.gameserver.model.actor.instance.L2GourdInstance: java.lang.String _name
com.l2jfrozen.gameserver.model.actor.instance.L2GourdInstance: byte _nectar
com.l2jfrozen.gameserver.model.actor.instance.L2GourdInstance: byte _good
com.l2jfrozen.gameserver.model.actor.instance.L2GourdInstance: L2GourdInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2GourdInstance: void setOwner(java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2GourdInstance: java.lang.String getOwner()
com.l2jfrozen.gameserver.model.actor.instance.L2GourdInstance: void addNectar()
com.l2jfrozen.gameserver.model.actor.instance.L2GourdInstance: byte getNectar()
com.l2jfrozen.gameserver.model.actor.instance.L2GourdInstance: void addGood()
com.l2jfrozen.gameserver.model.actor.instance.L2GourdInstance: byte getGood()
com.l2jfrozen.gameserver.model.actor.instance.L2GourdInstance: void reduceCurrentHp(double,com.l2jfrozen.gameserver.model.L2Character,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2GrandBossInstance
com.l2jfrozen.gameserver.model.actor.instance.L2GrandBossInstance: int BOSS_MAINTENANCE_INTERVAL
com.l2jfrozen.gameserver.model.actor.instance.L2GrandBossInstance: L2GrandBossInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2GrandBossInstance: int getMaintenanceInterval()
com.l2jfrozen.gameserver.model.actor.instance.L2GrandBossInstance: boolean doDie(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2GrandBossInstance: void onSpawn()
com.l2jfrozen.gameserver.model.actor.instance.L2GrandBossInstance: void manageMinions()
com.l2jfrozen.gameserver.model.actor.instance.L2GrandBossInstance: boolean isRaid()
com.l2jfrozen.gameserver.model.actor.instance.L2GrandBossInstance: void healFull()
com.l2jfrozen.gameserver.model.actor.instance.L2GrandBossInstance$1
com.l2jfrozen.gameserver.model.actor.instance.L2GrandBossInstance$1: com.l2jfrozen.gameserver.model.actor.instance.L2GrandBossInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2GrandBossInstance$1: L2GrandBossInstance$1(com.l2jfrozen.gameserver.model.actor.instance.L2GrandBossInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2GrandBossInstance$1: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2GuardInstance
com.l2jfrozen.gameserver.model.actor.instance.L2GuardInstance: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.actor.instance.L2GuardInstance: int _homeX
com.l2jfrozen.gameserver.model.actor.instance.L2GuardInstance: int _homeY
com.l2jfrozen.gameserver.model.actor.instance.L2GuardInstance: int _homeZ
com.l2jfrozen.gameserver.model.actor.instance.L2GuardInstance: int RETURN_INTERVAL
com.l2jfrozen.gameserver.model.actor.instance.L2GuardInstance: L2GuardInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2GuardInstance: com.l2jfrozen.gameserver.model.actor.knownlist.GuardKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2GuardInstance: boolean isAutoAttackable(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2GuardInstance: void getHomeLocation()
com.l2jfrozen.gameserver.model.actor.instance.L2GuardInstance: int getHomeX()
com.l2jfrozen.gameserver.model.actor.instance.L2GuardInstance: void returnHome()
com.l2jfrozen.gameserver.model.actor.instance.L2GuardInstance: void onSpawn()
com.l2jfrozen.gameserver.model.actor.instance.L2GuardInstance: java.lang.String getHtmlPath(int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2GuardInstance: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2GuardInstance: com.l2jfrozen.gameserver.model.actor.knownlist.AttackableKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2GuardInstance: com.l2jfrozen.gameserver.model.actor.knownlist.NpcKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2GuardInstance: com.l2jfrozen.gameserver.model.actor.knownlist.CharKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2GuardInstance: com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2GuardInstance: void <clinit>()
com.l2jfrozen.gameserver.model.actor.instance.L2GuardInstance$ReturnTask
com.l2jfrozen.gameserver.model.actor.instance.L2GuardInstance$ReturnTask: com.l2jfrozen.gameserver.model.actor.instance.L2GuardInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2GuardInstance$ReturnTask: L2GuardInstance$ReturnTask(com.l2jfrozen.gameserver.model.actor.instance.L2GuardInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2GuardInstance$ReturnTask: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2GuardNoHTMLInstance
com.l2jfrozen.gameserver.model.actor.instance.L2GuardNoHTMLInstance: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.actor.instance.L2GuardNoHTMLInstance: int _homeX
com.l2jfrozen.gameserver.model.actor.instance.L2GuardNoHTMLInstance: int _homeY
com.l2jfrozen.gameserver.model.actor.instance.L2GuardNoHTMLInstance: int _homeZ
com.l2jfrozen.gameserver.model.actor.instance.L2GuardNoHTMLInstance: int RETURN_INTERVAL
com.l2jfrozen.gameserver.model.actor.instance.L2GuardNoHTMLInstance: L2GuardNoHTMLInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2GuardNoHTMLInstance: com.l2jfrozen.gameserver.model.actor.knownlist.GuardNoHTMLKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2GuardNoHTMLInstance: boolean isAutoAttackable(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2GuardNoHTMLInstance: void getHomeLocation()
com.l2jfrozen.gameserver.model.actor.instance.L2GuardNoHTMLInstance: int getHomeX()
com.l2jfrozen.gameserver.model.actor.instance.L2GuardNoHTMLInstance: void returnHome()
com.l2jfrozen.gameserver.model.actor.instance.L2GuardNoHTMLInstance: void onSpawn()
com.l2jfrozen.gameserver.model.actor.instance.L2GuardNoHTMLInstance: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2GuardNoHTMLInstance: com.l2jfrozen.gameserver.model.actor.knownlist.AttackableKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2GuardNoHTMLInstance: com.l2jfrozen.gameserver.model.actor.knownlist.NpcKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2GuardNoHTMLInstance: com.l2jfrozen.gameserver.model.actor.knownlist.CharKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2GuardNoHTMLInstance: com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2GuardNoHTMLInstance: void <clinit>()
com.l2jfrozen.gameserver.model.actor.instance.L2GuardNoHTMLInstance$ReturnTask
com.l2jfrozen.gameserver.model.actor.instance.L2GuardNoHTMLInstance$ReturnTask: com.l2jfrozen.gameserver.model.actor.instance.L2GuardNoHTMLInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2GuardNoHTMLInstance$ReturnTask: L2GuardNoHTMLInstance$ReturnTask(com.l2jfrozen.gameserver.model.actor.instance.L2GuardNoHTMLInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2GuardNoHTMLInstance$ReturnTask: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance
com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance: com.l2jfrozen.gameserver.templates.L2Henna _template
com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance: int _symbolId
com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance: int _itemIdDye
com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance: int _price
com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance: int _statINT
com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance: int _statSTR
com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance: int _statCON
com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance: int _statMEM
com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance: int _statDEX
com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance: int _statWIT
com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance: int _amountDyeRequire
com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance: L2HennaInstance(com.l2jfrozen.gameserver.templates.L2Henna)
com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance: java.lang.String getName()
com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance: com.l2jfrozen.gameserver.templates.L2Henna getTemplate()
com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance: int getSymbolId()
com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance: void setSymbolId(int)
com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance: int getItemIdDye()
com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance: void setItemIdDye(int)
com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance: int getAmountDyeRequire()
com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance: void setAmountDyeRequire(int)
com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance: int getPrice()
com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance: void setPrice(int)
com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance: int getStatINT()
com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance: void setStatINT(int)
com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance: int getStatSTR()
com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance: void setStatSTR(int)
com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance: int getStatCON()
com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance: void setStatCON(int)
com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance: int getStatMEM()
com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance: void setStatMEM(int)
com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance: int getStatDEX()
com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance: void setStatDEX(int)
com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance: int getStatWIT()
com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance: void setStatWIT(int)
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: java.util.logging.Logger _logItems
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: com.l2jfrozen.gameserver.model.DropProtection _dropProtection
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int _ownerId
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int _count
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int _initCount
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int _time
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: boolean _decrease
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int _itemId
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: com.l2jfrozen.gameserver.templates.L2Item _item
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: com.l2jfrozen.gameserver.model.actor.instance.ItemLocation _loc
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int _locData
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int _enchantLevel
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int _priceSell
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int _priceBuy
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: boolean _wear
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: com.l2jfrozen.gameserver.model.L2Augmentation _augmentation
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int _mana
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: boolean _consumingMana
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int MANA_CONSUMPTION_RATE
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int _type1
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int _type2
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: long _dropTime
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int CHARGED_NONE
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int CHARGED_SOULSHOT
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int CHARGED_SPIRITSHOT
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int CHARGED_BLESSED_SOULSHOT
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int CHARGED_BLESSED_SPIRITSHOT
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int _chargedSoulshot
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int _chargedSpiritshot
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: boolean _chargedFishtshot
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: boolean _protected
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int UNCHANGED
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int ADDED
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int REMOVED
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int MODIFIED
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int _lastChange
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: boolean _existsInDb
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: boolean _storedInDb
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: java.util.concurrent.ScheduledFuture itemLootShedule
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: boolean $assertionsDisabled
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: L2ItemInstance(int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: L2ItemInstance(int,com.l2jfrozen.gameserver.templates.L2Item)
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: void setOwnerId(java.lang.String,int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: void setOwnerId(int)
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int getOwnerId()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: void setLocation(com.l2jfrozen.gameserver.model.actor.instance.ItemLocation)
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: void setLocation(com.l2jfrozen.gameserver.model.actor.instance.ItemLocation,int)
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: com.l2jfrozen.gameserver.model.actor.instance.ItemLocation getLocation()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: boolean isPotion()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int getCount()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: void changeCount(java.lang.String,int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: void changeCountWithoutTrace(java.lang.String,int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: void setCount(int)
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: boolean isEquipable()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: boolean isEquipped()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int getEquipSlot()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: com.l2jfrozen.gameserver.templates.L2Item getItem()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int getCustomType1()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int getCustomType2()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: void setCustomType1(int)
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: void setCustomType2(int)
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: void setDropTime(long)
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: long getDropTime()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: boolean isCupidBow()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: boolean isWear()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: void setWear(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: java.lang.Enum getItemType()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int getItemId()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int getCrystalCount()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int getReferencePrice()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: java.lang.String getItemName()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int getPriceToSell()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: void setPriceToSell(int)
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int getLastChange()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: void setLastChange(int)
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: boolean isStackable()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: boolean isDropable()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: boolean isDestroyable()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: boolean isTradeable()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: boolean isConsumable()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: boolean isAvailable(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int getEnchantLevel()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: void setEnchantLevel(int)
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int getPDef()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: boolean isAugmented()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: com.l2jfrozen.gameserver.model.L2Augmentation getAugmentation()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: boolean setAugmentation(com.l2jfrozen.gameserver.model.L2Augmentation)
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: void removeAugmentation()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: boolean isShadowItem()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: void setMana(int)
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int getMana()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: void decreaseMana(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: void scheduleConsumeManaTask()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: boolean isAutoAttackable(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int getChargedSoulshot()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int getChargedSpiritshot()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: boolean getChargedFishshot()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: void setChargedSoulshot(int)
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: void setChargedSpiritshot(int)
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: void setChargedFishshot(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: com.l2jfrozen.gameserver.skills.funcs.Func[] getStatFuncs(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: void updateDatabase()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance restoreFromDb(int)
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: void dropMe(com.l2jfrozen.gameserver.model.L2Character,int,int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: void updateInDb()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: void insertIntoDb()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: void removeFromDb()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: java.lang.String toString()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: void resetOwnerTimer()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: void setItemLootShedule(java.util.concurrent.ScheduledFuture)
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: java.util.concurrent.ScheduledFuture getItemLootShedule()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: void setProtected(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: boolean isProtected()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: boolean isNightLure()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: void setCountDecrease(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: boolean getCountDecrease()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: void setInitCount(int)
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int getInitCount()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: void restoreInitCount()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: void setTime(int)
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int getTime()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: int getLocationSlot()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: com.l2jfrozen.gameserver.model.DropProtection getDropProtection()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: boolean isVarkaKetraAllyQuestItem()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: boolean isOlyRestrictedItem()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: boolean isHeroItem()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: boolean checkOlympCondition()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: boolean isWeapon()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance: void <clinit>()
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance$ScheduleConsumeManaTask
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance$ScheduleConsumeManaTask: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance _shadowItem
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance$ScheduleConsumeManaTask: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance$ScheduleConsumeManaTask: L2ItemInstance$ScheduleConsumeManaTask(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance$ScheduleConsumeManaTask: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2ManorManagerInstance
com.l2jfrozen.gameserver.model.actor.instance.L2ManorManagerInstance: L2ManorManagerInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2ManorManagerInstance: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2ManorManagerInstance: void showBuyWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2ManorManagerInstance: void onBypassFeedback(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2ManorManagerInstance: java.lang.String getHtmlPath()
com.l2jfrozen.gameserver.model.actor.instance.L2ManorManagerInstance: java.lang.String getHtmlPath(int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2ManorManagerInstance: void showMessageWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2MercManagerInstance
com.l2jfrozen.gameserver.model.actor.instance.L2MercManagerInstance: int COND_ALL_FALSE
com.l2jfrozen.gameserver.model.actor.instance.L2MercManagerInstance: int COND_BUSY_BECAUSE_OF_SIEGE
com.l2jfrozen.gameserver.model.actor.instance.L2MercManagerInstance: int COND_OWNER
com.l2jfrozen.gameserver.model.actor.instance.L2MercManagerInstance: L2MercManagerInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2MercManagerInstance: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2MercManagerInstance: void onBypassFeedback(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2MercManagerInstance: void showBuyWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.actor.instance.L2MercManagerInstance: void showMessageWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2MercManagerInstance: int validateCondition(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2MerchantInstance
com.l2jfrozen.gameserver.model.actor.instance.L2MerchantInstance: L2MerchantInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2MerchantInstance: java.lang.String getHtmlPath(int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2MerchantInstance: void showWearWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.actor.instance.L2MerchantInstance: void showBuyWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.actor.instance.L2MerchantInstance: void showSellWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2MerchantInstance: void onBypassFeedback(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2MerchantInstance: void showRentPetWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2MerchantInstance: void tryRentPet(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.actor.instance.L2MerchantInstance: void onActionShift(com.l2jfrozen.gameserver.network.L2GameClient)
com.l2jfrozen.gameserver.model.actor.instance.L2MinionInstance
com.l2jfrozen.gameserver.model.actor.instance.L2MinionInstance: com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance _master
com.l2jfrozen.gameserver.model.actor.instance.L2MinionInstance: L2MinionInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2MinionInstance: boolean isRaid()
com.l2jfrozen.gameserver.model.actor.instance.L2MinionInstance: com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance getLeader()
com.l2jfrozen.gameserver.model.actor.instance.L2MinionInstance: void onSpawn()
com.l2jfrozen.gameserver.model.actor.instance.L2MinionInstance: void setLeader(com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2MinionInstance: boolean doDie(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance
com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance: com.l2jfrozen.gameserver.util.MinionList _minionList
com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance: java.util.concurrent.ScheduledFuture _minionMaintainTask
com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance: int MONSTER_MAINTENANCE_INTERVAL
com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance: L2MonsterInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance: com.l2jfrozen.gameserver.model.actor.knownlist.MonsterKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance: void returnHome()
com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance: boolean isAutoAttackable(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance: boolean isAggressive()
com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance: void onSpawn()
com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance: int getMaintenanceInterval()
com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance: void manageMinions()
com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance: void callMinions()
com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance: void callMinionsToAssist(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance: boolean doDie(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance: java.util.List getSpawnedMinions()
com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance: int getTotalSpawnedMinionsInstances()
com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance: int getTotalSpawnedMinionsGroups()
com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance: void notifyMinionDied(com.l2jfrozen.gameserver.model.actor.instance.L2MinionInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance: void notifyMinionSpawned(com.l2jfrozen.gameserver.model.actor.instance.L2MinionInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance: boolean hasMinions()
com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance: void addDamageHate(com.l2jfrozen.gameserver.model.L2Character,int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance: void deleteMe()
com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance: void deleteSpawnedMinions()
com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance: com.l2jfrozen.gameserver.model.actor.knownlist.AttackableKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance: com.l2jfrozen.gameserver.model.actor.knownlist.NpcKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance: com.l2jfrozen.gameserver.model.actor.knownlist.CharKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance: com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance$1
com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance$1: com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance$1: L2MonsterInstance$1(com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance$1: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance$2
com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance$2: com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance$2: L2MonsterInstance$2(com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance$2: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: int INTERACTION_DISTANCE
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance _customNpcInstance
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: com.l2jfrozen.gameserver.model.spawn.L2Spawn _spawn
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: boolean _isBusy
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: java.lang.String _busyMessage
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: boolean _isDecayed
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: boolean _isSpoil
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: int _castleIndex
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: int _fortIndex
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: boolean isEventMob
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: boolean _isEventMobTvT
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: boolean _isEventMobDM
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: boolean _isEventMobCTF
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: boolean _isCTF_throneSpawn
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: boolean _isCTF_Flag
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: boolean _isInTown
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: java.lang.String _CTF_FlagTeamName
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: int _isSpoiledBy
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance$RandomAnimationTask _rAniTask
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: int _currentLHandId
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: int _currentRHandId
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: int _currentCollisionHeight
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: int _currentCollisionRadius
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: void onRandomAnimation()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: void startRandomAnimationTimer()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: boolean hasRandomAnimation()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: L2NpcInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: com.l2jfrozen.gameserver.model.actor.knownlist.NpcKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: com.l2jfrozen.gameserver.model.actor.stat.NpcStat getStat()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: com.l2jfrozen.gameserver.model.actor.status.NpcStatus getStatus()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: com.l2jfrozen.gameserver.templates.L2NpcTemplate getTemplate()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: int getNpcId()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: boolean isAttackable()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: java.lang.String getFactionId()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: int getLevel()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: boolean isAggressive()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: int getAggroRange()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: int getFactionRange()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: boolean isUndead()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: void updateAbnormalEffect()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: int getDistanceToWatchObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: int getDistanceToForgetObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: boolean isAutoAttackable(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: int getLeftHandItem()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: int getRightHandItem()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: boolean isSpoil()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: void setSpoil(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: int getIsSpoiledBy()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: void setIsSpoiledBy(int)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: boolean isBusy()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: void setBusy(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: java.lang.String getBusyMessage()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: void setBusyMessage(java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: boolean canTarget(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: boolean canInteract(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: void onActionShift(com.l2jfrozen.gameserver.network.L2GameClient)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: com.l2jfrozen.gameserver.model.entity.siege.Castle getCastle()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: com.l2jfrozen.gameserver.model.entity.siege.Fort getFort()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: boolean getIsInTown()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: void onBypassFeedback(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance getActiveWeaponInstance()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: com.l2jfrozen.gameserver.templates.L2Weapon getActiveWeaponItem()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: void giveBlessingSupport(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance getSecondaryWeaponInstance()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: com.l2jfrozen.gameserver.templates.L2Weapon getSecondaryWeaponItem()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: void insertObjectIdAndShowChatWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: java.lang.String getHtmlPath(int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: void showQuestChooseWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.quest.Quest[])
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: void showQuestWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: void showQuestWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: void showLotoWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: void makeCPRecovery(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: void makeSupportMagic(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: void showChatWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: boolean showPkDenyChatWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: void showChatWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: void showChatWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: int getExpReward()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: int getSpReward()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: boolean doDie(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: void setSpawn(com.l2jfrozen.gameserver.model.spawn.L2Spawn)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: void onDecay()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: void deleteMe()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: com.l2jfrozen.gameserver.model.spawn.L2Spawn getSpawn()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: java.lang.String toString()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: boolean isDecayed()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: void setDecayed(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: void endDecayTask()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: boolean isMob()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: void setLHandId(int)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: void setRHandId(int)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: void setCollisionHeight(int)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: void setCollisionRadius(int)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: int getCollisionHeight()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: int getCollisionRadius()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance getCustomNpcInstance()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: void setCustomNpcInstance(com.l2jfrozen.gameserver.model.actor.instance.L2CustomNpcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: void makeBuffs(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: com.l2jfrozen.gameserver.templates.L2CharTemplate getTemplate()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: com.l2jfrozen.gameserver.model.actor.status.CharStatus getStatus()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: com.l2jfrozen.gameserver.model.actor.stat.CharStat getStat()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: com.l2jfrozen.gameserver.model.actor.knownlist.CharKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance: com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance$RandomAnimationTask
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance$RandomAnimationTask: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance$RandomAnimationTask: L2NpcInstance$RandomAnimationTask(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance$RandomAnimationTask: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance$destroyTemporalNPC
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance$destroyTemporalNPC: com.l2jfrozen.gameserver.model.spawn.L2Spawn _oldSpawn
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance$destroyTemporalNPC: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance$destroyTemporalNPC: L2NpcInstance$destroyTemporalNPC(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.spawn.L2Spawn)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance$destroyTemporalNPC: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance$destroyTemporalSummon
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance$destroyTemporalSummon: com.l2jfrozen.gameserver.model.L2Summon _summon
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance$destroyTemporalSummon: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _player
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance$destroyTemporalSummon: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance$destroyTemporalSummon: L2NpcInstance$destroyTemporalSummon(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.L2Summon,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance$destroyTemporalSummon: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcWalkerInstance
com.l2jfrozen.gameserver.model.actor.instance.L2NpcWalkerInstance: L2NpcWalkerInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcWalkerInstance: void setAI(com.l2jfrozen.gameserver.ai.L2CharacterAI)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcWalkerInstance: void onSpawn()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcWalkerInstance: void broadcastChat(java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcWalkerInstance: void reduceCurrentHp(double,com.l2jfrozen.gameserver.model.L2Character,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcWalkerInstance: boolean doDie(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcWalkerInstance: com.l2jfrozen.gameserver.ai.L2CharacterAI getAI()
com.l2jfrozen.gameserver.model.actor.instance.L2NpcWalkerInstance$L2NpcWalkerAIAccessor
com.l2jfrozen.gameserver.model.actor.instance.L2NpcWalkerInstance$L2NpcWalkerAIAccessor: com.l2jfrozen.gameserver.model.actor.instance.L2NpcWalkerInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2NpcWalkerInstance$L2NpcWalkerAIAccessor: L2NpcWalkerInstance$L2NpcWalkerAIAccessor(com.l2jfrozen.gameserver.model.actor.instance.L2NpcWalkerInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2NpcWalkerInstance$L2NpcWalkerAIAccessor: void detachAI()
com.l2jfrozen.gameserver.model.actor.instance.L2ObservationInstance
com.l2jfrozen.gameserver.model.actor.instance.L2ObservationInstance: L2ObservationInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2ObservationInstance: void onBypassFeedback(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2ObservationInstance: java.lang.String getHtmlPath(int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2ObservationInstance: void doObserve(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2OlympiadManagerInstance
com.l2jfrozen.gameserver.model.actor.instance.L2OlympiadManagerInstance: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.actor.instance.L2OlympiadManagerInstance: int GATE_PASS
com.l2jfrozen.gameserver.model.actor.instance.L2OlympiadManagerInstance: L2OlympiadManagerInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2OlympiadManagerInstance: void onBypassFeedback(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2OlympiadManagerInstance: void showChatWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2OlympiadManagerInstance: void <clinit>()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.String RESTORE_SKILLS_FOR_CHAR
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.String ADD_NEW_SKILL
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.String UPDATE_CHARACTER_SKILL_LEVEL
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.String DELETE_SKILL_FROM_CHAR
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.String DELETE_CHAR_SKILLS
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.String ADD_SKILL_SAVE
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.String RESTORE_SKILL_SAVE
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.String DELETE_SKILL_SAVE
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long _voteTimestamp
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _posticipateSit
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean sittingTaskLaunched
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.PlayerStatus saved_status
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long _instanceLoginTime
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long _lastTeleportAction
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long TOGGLE_USE
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _active_boxes
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.util.List active_boxes_characters
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.String UPDATE_CHARACTER
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.String RESTORE_CHARACTER
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.String STATUS_DATA_GET
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.String RESTORE_SKILLS_FOR_CHAR_ALT_SUBCLASS
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.String RESTORE_CHAR_SUBCLASSES
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.String ADD_CHAR_SUBCLASS
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.String UPDATE_CHAR_SUBCLASS
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.String DELETE_CHAR_SUBCLASS
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.String RESTORE_CHAR_HENNAS
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.String ADD_CHAR_HENNA
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.String DELETE_CHAR_HENNA
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.String DELETE_CHAR_HENNAS
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.String DELETE_CHAR_SHORTCUTS
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.String RESTORE_CHAR_RECOMS
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.String ADD_CHAR_RECOM
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.String DELETE_CHAR_RECOMS
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int REQUEST_TIMEOUT
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int STORE_PRIVATE_NONE
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int STORE_PRIVATE_SELL
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int STORE_PRIVATE_BUY
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int STORE_PRIVATE_MANUFACTURE
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int STORE_PRIVATE_PACKAGE_SELL
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.text.SimpleDateFormat fmt
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int[] EXPERTISE_LEVELS
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int[] COMMON_CRAFT_LEVELS
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.network.L2GameClient _client
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.String _accountName
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long _deleteTimer
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _isOnline
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long _onlineTime
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long _onlineBeginTime
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long _lastAccess
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long _uptime
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _baseClass
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _activeClass
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _classIndex
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _first_log
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int pcBangPoint
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.util.Map _subClasses
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.appearance.PcAppearance _appearance
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _charId
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long _expBeforeDeath
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _karma
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _pvpKills
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _pkKills
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _lastKill
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int count
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: byte _pvpFlag
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: byte _siegeState
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _curWeightPenalty
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _lastCompassZone
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: byte _zoneValidateCounter
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _isIn7sDungeon
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int heroConsecutiveKillCount
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isPVPHero
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _awaying
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _isAway
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _originalTitleColorAway
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.String _originalTitleAway
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _isAio
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long _aio_endTime
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int eventX
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int eventY
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int eventZ
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int eventKarma
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int eventPvpKills
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int eventPkKills
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.String eventTitle
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.util.List kills
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean eventSitForced
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean atEvent
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.String _teamNameTvT
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.String _originalTitleTvT
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _originalNameColorTvT
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _countTvTkills
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _countTvTdies
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _originalKarmaTvT
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _inEventTvT
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.String _teamNameCTF
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.String _teamNameHaveFlagCTF
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.String _originalTitleCTF
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _originalNameColorCTF
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _originalKarmaCTF
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _countCTFflags
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _inEventCTF
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _haveFlagCTF
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.util.concurrent.Future _posCheckerCTF
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.String _originalTitleDM
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _originalNameColorDM
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _countDMkills
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _originalKarmaDM
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _inEventDM
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _correctWord
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _stopKickBotTask
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _originalNameColor
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _countKills
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _originalKarma
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _eventKills
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _inEvent
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _inOlympiadMode
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _OlympiadStart
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int[] _OlympiadPosition
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _olympiadGameId
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _olympiadSide
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _isInDuel
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _duelState
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _duelId
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.network.SystemMessageId _noDuelReason
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _inBoat
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance _boat
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.common.util.Point3D _inBoatPosition
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _mountType
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _mountObjectID
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _telemode
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _isSilentMoving
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _inCrystallize
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _inCraftMode
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.util.Map _dwarvenRecipeBook
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.util.Map _commonRecipeBook
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _waitTypeSitting
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _relax
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _obsX
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _obsY
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _obsZ
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _observerMode
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.Location _lastClientPosition
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.Location _lastServerPosition
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _recomHave
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _recomLeft
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long _lastRecomUpdate
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.util.List _recomChars
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.PcInventory _inventory
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.PcWarehouse _warehouse
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.PcFreight _freight
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _privatestore
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.TradeList _activeTradeList
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.ItemContainer _activeWarehouse
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.L2ManufactureList _createList
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.TradeList _sellList
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.TradeList _buyList
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _newbie
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _noble
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _hero
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _donator
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2FolkInstance _lastFolkNpc
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _questNpcObject
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _party_find
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$SummonRequest _summonRequest
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.util.Map _quests
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.ShortCuts _shortCuts
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.MacroList _macroses
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.util.List _snoopListener
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.util.List _snoopedPlayer
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.base.ClassId _skillLearningClassId
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance[] _henna
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _hennaSTR
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _hennaINT
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _hennaDEX
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _hennaMEN
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _hennaWIT
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _hennaCON
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.L2Summon _summon
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance _tamedBeast
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.L2Radar _radar
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _clanId
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.L2Clan _clan
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _apprentice
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _sponsor
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long _clanJoinExpiryTime
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long _clanCreateExpiryTime
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _powerGrade
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _clanPrivileges
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _pledgeClass
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _pledgeType
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _lvlJoinedAcademy
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _wantsPeace
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _deathPenaltyBuffLevel
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.datatables.AccessLevel _accessLevel
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _messageRefusal
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _dietMode
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _exchangeRefusal
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.L2Party _party
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long _lastAttackPacket
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeRequester
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long _requestExpireTime
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.L2Request _request
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance _arrowItem
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long _protectEndTime
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long _teleportProtectEndTime
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long _recentFakeDeathEndTime
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.templates.L2Weapon _fistsWeaponItem
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.util.Map _chars
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _expertiseIndex
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _expertisePenalty
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _heavy_mastery
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _light_mastery
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _robe_mastery
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _masteryPenalty
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance _activeEnchantItem
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _inventoryDisable
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.util.Map _cubics
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.util.Map _activeSoulShots
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.util.concurrent.locks.ReentrantLock soulShotLock
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.quest.Quest dialog
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int[] _loto
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int[] _race
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.BlockList _blockList
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _team
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _alliedVarkaKetra
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _hasCoupon
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.L2Fishing _fishCombat
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _fishing
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _fishx
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _fishy
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _fishz
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.util.concurrent.ScheduledFuture _taskRentPet
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.util.concurrent.ScheduledFuture _taskWater
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.util.List _validBypass
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.util.List _validBypass2
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.util.List _validLink
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.communitybbs.BB.Forum _forumMail
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.communitybbs.BB.Forum _forumMemo
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$SkillDat _currentSkill
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$SkillDat _currentPetSkill
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$SkillDat _queuedSkill
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _IsWearingFormalWear
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.common.util.Point3D _currentSkillWorldPosition
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _cursedWeaponEquipedId
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _reviveRequested
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: double _revivePower
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _revivePet
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: double _cpUpdateIncCheck
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: double _cpUpdateDecCheck
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: double _cpUpdateInterval
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: double _mpUpdateIncCheck
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: double _mpUpdateDecCheck
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: double _mpUpdateInterval
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long timerToAttack
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _isInOfflineMode
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _isTradeOff
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long _offlineShopStart
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _originalNameColorOffline
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _herbstask
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _married
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _marriedType
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _partnerId
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _coupleId
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _engagerequest
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _engageid
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _marryrequest
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _marryaccepted
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int quakeSystem
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _isLocked
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _isStored
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _kicked
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _blunt_mastery
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _pole_mastery
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _dagger_mastery
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _sword_mastery
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _bow_mastery
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _fist_mastery
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _dual_mastery
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _2hands_mastery
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _masteryWeapPenalty
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$MoveOnAttack launchedMovingTask
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.Boolean _movingTaskDefined
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _learningSkill
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.util.concurrent.ScheduledFuture _taskWarnUserTakeBreak
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.util.concurrent.ScheduledFuture _taskBotChecker
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.util.concurrent.ScheduledFuture _taskKickBot
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.util.concurrent.ScheduledFuture _taskforfish
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _wasInvisible
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.util.concurrent.ScheduledFuture _shortBuffTask
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.util.List _friendList
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.FishData _fish
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance _lure
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _charmOfCourage
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: javolution.util.FastMap ReuseTimeStamps
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean _gmStatus
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.L2Object _saymode
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.String Dropzor
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isintwtown
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int FALLING_VALIDATION_DELAY
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long _fallingTimestamp
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.common.util.Point3D _lastPartyPosition
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.PunishLevel _punishLevel
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long _punishTimer
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.util.concurrent.ScheduledFuture _punishTask
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$GatesRequest _gatesRequest
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.util.HashMap confirmDlgRequests
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _currentMultiSellId
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int _partyroom
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean fakeplayer
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.PlayerStatus getActualStatus()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.PlayerStatus getLastSavedStatus()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long getVoteTimestamp()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setVoteTimestamp(long)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getVotePoints()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setVotePoints(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getVoteTime()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isSpawnProtected()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isTeleportProtected()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance create(int,com.l2jfrozen.gameserver.templates.L2PcTemplate,java.lang.String,java.lang.String,byte,byte,byte,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance createDummyPlayer(int,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.String getAccountName()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.util.Map getAccountChars()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getRelation(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance load(int,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void initPcStatusUpdateValues()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: L2PcInstance(int,com.l2jfrozen.gameserver.templates.L2PcTemplate,java.lang.String,com.l2jfrozen.gameserver.model.actor.appearance.PcAppearance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: L2PcInstance(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.knownlist.PcKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.stat.PcStat getStat()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.status.PcStatus getStatus()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.appearance.PcAppearance getAppearance()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.templates.L2PcTemplate getBaseTemplate()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.templates.L2PcTemplate getTemplate()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setTemplate(com.l2jfrozen.gameserver.model.base.ClassId)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setTimerToAttack(long)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long getTimerToAttack()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.ai.L2CharacterAI getAI()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getLevel()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isNewbie()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setNewbie(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setBaseClass(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setBaseClass(com.l2jfrozen.gameserver.model.base.ClassId)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isInStoreMode()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isInCraftMode()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void isInCraftMode(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void logout(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isKicked()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setKicked(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void logout()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.L2RecipeList[] getCommonRecipeBook()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.L2RecipeList[] getDwarvenRecipeBook()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void registerCommonRecipeList(com.l2jfrozen.gameserver.model.L2RecipeList)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void registerDwarvenRecipeList(com.l2jfrozen.gameserver.model.L2RecipeList)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean hasRecipeList(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void unregisterRecipeList(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getLastQuestNpcObject()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setLastQuestNpcObject(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.quest.QuestState getQuestState(java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setQuestState(com.l2jfrozen.gameserver.model.quest.QuestState)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void delQuestState(java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.quest.QuestState[] addToQuestStateArray(com.l2jfrozen.gameserver.model.quest.QuestState[],com.l2jfrozen.gameserver.model.quest.QuestState)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.quest.Quest[] getAllActiveQuests()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.quest.QuestState[] getQuestsForAttacks(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.quest.QuestState[] getQuestsForKills(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.quest.QuestState[] getQuestsForTalk(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.quest.QuestState processQuestEvent(java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void showQuestWindow(java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.L2ShortCut[] getAllShortCuts()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.L2ShortCut getShortCut(int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void registerShortCut(com.l2jfrozen.gameserver.model.L2ShortCut)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void deleteShortCut(int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void registerMacro(com.l2jfrozen.gameserver.model.L2Macro)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void deleteMacro(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.MacroList getMacroses()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setSiegeState(byte)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: byte getSiegeState()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setPvpFlag(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: byte getPvpFlag()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void updatePvPFlag(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void revalidateZone(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean hasDwarvenCraft()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getDwarvenCraft()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean hasCommonCraft()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getCommonCraft()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getPkKills()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setPkKills(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long getDeleteTimer()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setDeleteTimer(long)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getCurrentLoad()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long getLastRecomUpdate()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setLastRecomUpdate(long)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getRecomHave()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void incRecomHave()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setRecomHave(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getRecomLeft()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void decRecomLeft()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void giveRecom(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean canRecom(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setExpBeforeDeath(long)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long getExpBeforeDeath()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getKarma()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setKarma(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getMaxLoad()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getExpertisePenalty()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getMasteryPenalty()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getMasteryWeapPenalty()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getWeightPenalty()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void refreshOverloaded()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void refreshMasteryPenality()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean canInteract(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void refreshMasteryWeapPenality()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void refreshExpertisePenalty()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void checkIfWeaponIsAllowed()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void checkSSMatch(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getPvpKills()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setPvpKills(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.base.ClassId getClassId()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setClassId(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long getExp()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setActiveEnchantItem(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance getActiveEnchantItem()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setFistsWeaponItem(com.l2jfrozen.gameserver.templates.L2Weapon)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.templates.L2Weapon getFistsWeaponItem()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.templates.L2Weapon findFistsWeaponItem(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void rewardSkills()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void rewardSkills(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void regiveTemporarySkills()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void giveAvailableSkills()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setExp(long)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.base.Race getRace()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.L2Radar getRadar()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getSp()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setSp(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isCastleLord(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getClanId()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getClanCrestId()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getClanCrestLargeId()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long getClanJoinExpiryTime()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setClanJoinExpiryTime(long)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long getClanCreateExpiryTime()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setClanCreateExpiryTime(long)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setOnlineTime(long)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long getOnlineTime()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.PcInventory getInventory()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void removeItemFromShortCut(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isMovingTaskDefined()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setMovingTaskDefined(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void defineNewMovingTask(com.l2jfrozen.gameserver.model.actor.position.L2CharPosition)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void modifyMovingTask(com.l2jfrozen.gameserver.model.actor.position.L2CharPosition)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void startMovingTask()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isSitting()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isSittingTaskLaunched()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setIsSitting(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setPosticipateSit(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean getPosticipateSit()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void sitDown()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void standUp()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setRelax(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.PcWarehouse getWarehouse()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void clearWarehouse()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.PcFreight getFreight()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getCharId()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setCharId(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getAdena()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getItemCount(int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getAncientAdena()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void addAdena(java.lang.String,int,com.l2jfrozen.gameserver.model.L2Object,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean reduceAdena(java.lang.String,int,com.l2jfrozen.gameserver.model.L2Object,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void addAncientAdena(java.lang.String,int,com.l2jfrozen.gameserver.model.L2Object,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean reduceAncientAdena(java.lang.String,int,com.l2jfrozen.gameserver.model.L2Object,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void addItem(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance,com.l2jfrozen.gameserver.model.L2Object,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void addItem(java.lang.String,int,int,com.l2jfrozen.gameserver.model.L2Object,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean destroyItem(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance,com.l2jfrozen.gameserver.model.L2Object,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean destroyItem(java.lang.String,int,int,com.l2jfrozen.gameserver.model.L2Object,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean destroyItemWithoutTrace(java.lang.String,int,int,com.l2jfrozen.gameserver.model.L2Object,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean destroyItemByItemId(java.lang.String,int,int,com.l2jfrozen.gameserver.model.L2Object,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void destroyWearedItems(java.lang.String,com.l2jfrozen.gameserver.model.L2Object,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance transferItem(java.lang.String,int,int,com.l2jfrozen.gameserver.model.Inventory,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean dropItem(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance,com.l2jfrozen.gameserver.model.L2Object,boolean,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance dropItem(java.lang.String,int,int,int,int,int,com.l2jfrozen.gameserver.model.L2Object,boolean,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance checkItemManipulation(int,int,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setProtection(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setTeleportProtection(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setRecentFakeDeath(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isRecentFakeDeath()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.network.L2GameClient getClient()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setClient(com.l2jfrozen.gameserver.network.L2GameClient)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void closeNetConnection()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void onActionShift(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isInFunEvent()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isInStartedTVTEvent()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isRegisteredInTVTEvent()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isInStartedDMEvent()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isRegisteredInDMEvent()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isInStartedCTFEvent()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isRegisteredInCTFEvent()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isRegisteredInFunEvent()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean arePlayerOffensiveSkillsLocked()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean needCpUpdate(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean needMpUpdate(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void broadcastStatusUpdate()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void updatePvPColor(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void updatePkColor(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void broadcastUserInfo()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void broadcastTitleInfo()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getAllyId()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getAllyCrestId()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void doInteract(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void doAutoLoot(com.l2jfrozen.gameserver.model.L2Attackable,com.l2jfrozen.gameserver.model.L2Attackable$RewardItem)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void doPickupItem(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setTarget(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance getActiveWeaponInstance()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.templates.L2Weapon getActiveWeaponItem()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance getChestArmorInstance()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance getLegsArmorInstance()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.templates.L2Armor getActiveChestArmorItem()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.templates.L2Armor getActiveLegsArmorItem()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isWearingHeavyArmor()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isWearingLightArmor()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isWearingMagicArmor()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isWearingFormalWear()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setIsWearingFormalWear(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isMarried()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setMarried(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int marriedType()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setmarriedType(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isEngageRequest()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setEngageRequest(boolean,int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setMaryRequest(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isMaryRequest()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setMarryAccepted(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isMarryAccepted()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getEngageId()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getPartnerId()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setPartnerId(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getCoupleId()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setCoupleId(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void EngageAnswer(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance getSecondaryWeaponInstance()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.templates.L2Weapon getSecondaryWeaponItem()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean doDie(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void removeCTFFlagOnDie()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void onDieDropItem(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void onDieUpdateKarma()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void onKillUpdatePvPKarma(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean checkAntiFarm(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void addItemReward(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void increasePvpKills()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void QuakeSystem()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void doPkInfo(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void increasePkKillsAndKarma(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int calculateKarmaLost(long)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void updatePvPStatus()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void updatePvPStatus(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void restoreExp(double)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void deathPenalty(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void increaseLevel()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void stopAllTimers()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.L2Summon getPet()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setPet(com.l2jfrozen.gameserver.model.L2Summon)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance getTrainedBeast()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setTrainedBeast(com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.L2Request getRequest()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setActiveRequester(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getActiveRequester()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isProcessingRequest()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isProcessingTransaction()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void onTransactionRequest(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void onTransactionResponse()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setActiveWarehouse(com.l2jfrozen.gameserver.model.ItemContainer)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.ItemContainer getActiveWarehouse()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setActiveTradeList(com.l2jfrozen.gameserver.model.TradeList)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.TradeList getActiveTradeList()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void onTradeStart(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void onTradeConfirm(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void onTradeCancel(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void onTradeFinish(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void startTrade(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void cancelActiveTrade()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.L2ManufactureList getCreateList()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setCreateList(com.l2jfrozen.gameserver.model.L2ManufactureList)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.TradeList getSellList()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.TradeList getBuyList()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setPrivateStoreType(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getPrivateStoreType()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setSkillLearningClassId(com.l2jfrozen.gameserver.model.base.ClassId)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.base.ClassId getSkillLearningClassId()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setClan(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.L2Clan getClan()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isClanLeader()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void reduceArrowCount()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean checkAndEquipArrows()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean disarmWeapons()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isUsingDualWeapon()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setUptime(long)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long getUptime()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isInvul()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isInParty()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setParty(com.l2jfrozen.gameserver.model.L2Party)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void joinParty(com.l2jfrozen.gameserver.model.L2Party)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isGM()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isAdministrator()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isUser()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isNormalGm()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void leaveParty()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.L2Party getParty()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setFirstLog(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setFirstLog(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean getFirstLog()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void cancelCastMagic()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setAccessLevel(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setAccountAccesslevel(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.datatables.AccessLevel getAccessLevel()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: double getLevelMod()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void updateAndBroadcastStatus(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setKarmaFlag(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void broadcastKarma()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setOnlineStatus(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setIsIn7sDungeon(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void updateOnlineStatus()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void updateIsIn7sDungeonStatus()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void updateFirstLog()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean createDb()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance restore(int,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.communitybbs.BB.Forum getMail()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setMail(com.l2jfrozen.gameserver.communitybbs.BB.Forum)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.communitybbs.BB.Forum getMemo()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setMemo(com.l2jfrozen.gameserver.communitybbs.BB.Forum)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean restoreSubClassData(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void restoreCharData()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void storeRecipeBook()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void restoreRecipeBook()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void store(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void store()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void storeCharBase()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void storeCharSub()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void storeEffect()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int isOnline()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isIn7sDungeon()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.L2Skill addSkill(com.l2jfrozen.gameserver.model.L2Skill,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isLearningSkill()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.L2Skill removeSkill(com.l2jfrozen.gameserver.model.L2Skill,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.L2Skill removeSkill(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void storeSkill(com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Skill,int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void checkAllowedSkills()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void restoreSkills()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void restoreEffects()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void restoreEffects(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void restoreHenna()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void restoreRecom()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getHennaEmptySlots()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean removeHenna(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean addHenna(com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void recalcHennaStats()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance getHennas(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getHennaStatINT()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getHennaStatSTR()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getHennaStatCON()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getHennaStatMEN()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getHennaStatWIT()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getHennaStatDEX()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isAutoAttackable(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void useMagic(com.l2jfrozen.gameserver.model.L2Skill,boolean,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isInLooterParty(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean checkPvpSkill(com.l2jfrozen.gameserver.model.L2Object,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean checkPvpSkill(com.l2jfrozen.gameserver.model.L2Object,com.l2jfrozen.gameserver.model.L2Skill,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void consumeItem(int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isMageClass()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isMounted()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean checkLandingState()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean setMountType(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getMountType()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void updateAbnormalEffect()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void tempInvetoryDisable()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isInvetoryDisabled()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.util.Map getCubics()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void addCubic(int,int,double,int,int,int,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void delCubic(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance getCubic(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void unsummonAllCubics()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.String toString()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getEnchantEffect()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setLastFolkNPC(com.l2jfrozen.gameserver.model.actor.instance.L2FolkInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2FolkInstance getLastFolkNPC()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setSilentMoving(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isSilentMoving()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isFestivalParticipant()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void addAutoSoulShot(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void removeAutoSoulShot(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.util.Map getAutoSoulShot()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void rechargeAutoSoulShot(boolean,boolean,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void rechargeAutoSoulShot(boolean,boolean,boolean,int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getClanPrivileges()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setClanPrivileges(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setPledgeClass(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getPledgeClass()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setPledgeType(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getPledgeType()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getApprentice()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setApprentice(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getSponsor()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setSponsor(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void sendMessage(java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void enterObserverMode(int,int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void enterOlympiadObserverMode(int,int,int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void leaveObserverMode()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void updateNameTitleColor()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void updateGmNameTitleColor()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setOlympiadSide(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getOlympiadSide()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setOlympiadGameId(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getOlympiadGameId()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getObsX()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getObsY()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getObsZ()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean inObserverMode()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setObserverMode(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getTeleMode()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setTeleMode(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setLoto(int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getLoto(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setRace(int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getRace(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void sendPacket(com.l2jfrozen.gameserver.network.serverpackets.L2GameServerPacket)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void sendPacket(com.l2jfrozen.gameserver.network.SystemMessageId)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean getMessageRefusal()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setMessageRefusal(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setDietMode(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean getDietMode()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setExchangeRefusal(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean getExchangeRefusal()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.BlockList getBlockList()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setHeroAura(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean getIsPVPHero()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getCount()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void reloadPVPHeroAura()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setDonator(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isDonator()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isAway()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setIsAway(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setIsInOlympiadMode(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setIsOlympiadStart(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isOlympiadStart()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setOlympiadPosition(int[])
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int[] getOlympiadPosition()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isHero()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isInOlympiadMode()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isInDuel()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getDuelId()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setDuelState(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getDuelState()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setCoupon(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void addCoupon(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean getCoupon(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setIsInDuel(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.network.serverpackets.SystemMessage getNoDuelReason()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean canDuel()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isNoble()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setNoble(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void addClanLeaderSkills(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setLvlJoinedAcademy(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getLvlJoinedAcademy()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isAcademyMember()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setTeam(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getTeam()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setWantsPeace(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getWantsPeace()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isFishing()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setFishing(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setAllianceWithVarkaKetra(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getAllianceWithVarkaKetra()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isAlliedWithVarka()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isAlliedWithKetra()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void sendSkillList()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void sendSkillList(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean addSubClass(int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean modifySubClass(int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isSubClassActive()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.util.Map getSubClasses()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getTotalSubClasses()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getBaseClass()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getActiveClass()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getClassIndex()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setClassTemplate(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean setActiveClass(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void broadcastClassIcon()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void stopWarnUserTakeBreak()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void startWarnUserTakeBreak()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void startBotChecker()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void stopBotChecker()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void checkAnswer(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void stopRentPet()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void startRentPet(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isRentedPet()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void stopWaterTask()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void startWaterTask()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isInWater()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void checkWaterState()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void onPlayerEnter()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long getLastAccess()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void checkRecom(int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void restartRecom()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void doRevive()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void doRevive(double)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void reviveRequest(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Skill,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void reviveAnswer(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isReviveRequested()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isRevivingPet()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void removeReviving()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void onActionRequest()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setExpertiseIndex(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getExpertiseIndex()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void onTeleported()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean updatePosition(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setLastClientPosition(int,int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setLastClientPosition(com.l2jfrozen.gameserver.model.Location)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean checkLastClientPosition(int,int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getLastClientDistance(int,int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setLastServerPosition(int,int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setLastServerPosition(com.l2jfrozen.gameserver.model.Location)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean checkLastServerPosition(int,int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getLastServerDistance(int,int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void addExpAndSp(long,int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void removeExpAndSp(long,int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void reduceCurrentHp(double,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean teleportRequest(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void teleportAnswer(int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void teleToTarget(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean checkSummonerStatus(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean checkSummonTargetStatus(com.l2jfrozen.gameserver.model.L2Object,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void reduceCurrentHp(double,com.l2jfrozen.gameserver.model.L2Character,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void broadcastSnoop(int,java.lang.String,java.lang.String,com.l2jfrozen.gameserver.network.serverpackets.CreatureSay)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void addSnooper(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void removeSnooper(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void addSnooped(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void removeSnooped(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void addBypass(java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void addBypass2(java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean validateBypass(java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean validateItemManipulationByItemId(int,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean validateItemManipulation(int,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void clearBypass()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean validateLink(java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void clearLinks()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void addLink(java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isInBoat()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setInBoat(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance getBoat()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setBoat(com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setInCrystallize(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isInCrystallize()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.common.util.Point3D getInBoatPosition()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setInBoatPosition(com.l2jfrozen.common.util.Point3D)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void deleteMe(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void shortBuffStatusUpdate(int,int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.util.List getFriendList()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void restoreFriendList()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void notifyFriends(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void startFishing(int,int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void stopLookingForFishTask()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void StartLookingForFishTask()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int GetRandomGroup()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int GetRandomFishType(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int GetRandomFishLvl()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void StartFishCombat(boolean,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void EndFishing(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.L2Fishing GetFishCombat()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int GetFishx()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int GetFishy()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int GetFishz()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void SetPartyFind(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int GetPartyFind()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void SetLure(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance GetLure()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getInventoryLimit()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int GetWareHouseLimit()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int GetPrivateSellStoreLimit()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int GetPrivateBuyStoreLimit()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int GetFreightLimit()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int GetDwarfRecipeLimit()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int GetCommonRecipeLimit()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setMountObjectID(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getMountObjectID()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$SkillDat getCurrentSkill()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setCurrentSkill(com.l2jfrozen.gameserver.model.L2Skill,boolean,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$SkillDat getQueuedSkill()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setQueuedSkill(com.l2jfrozen.gameserver.model.L2Skill,boolean,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getPowerGrade()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setPowerGrade(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isCursedWeaponEquiped()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setCursedWeaponEquipedId(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getCursedWeaponEquipedId()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean getCharmOfCourage()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setCharmOfCourage(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getDeathPenaltyBuffLevel()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setDeathPenaltyBuffLevel(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void calculateDeathPenaltyBuffLevel(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void increaseDeathPenaltyBuffLevel()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void reduceDeathPenaltyBuffLevel()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void restoreCustomStatus()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void restoreDeathPenaltyBuffLevel()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void addTimeStamp(com.l2jfrozen.gameserver.model.L2Skill,int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void addTimeStamp(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$TimeStamp)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void removeTimeStamp(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.util.Collection getReuseTimeStamps()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void resetSkillTime(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void sendDamageMessage(com.l2jfrozen.gameserver.model.L2Character,int,boolean,boolean,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void updateTitle()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isRequestExpired()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setGmStatusActive(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean hasGmStatusActive()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.L2Object getSayMode()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setSayMode(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void saveEventStats()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void restoreEventStats()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.common.util.Point3D getCurrentSkillWorldPosition()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setCurrentSkillWorldPosition(com.l2jfrozen.common.util.Point3D)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isCursedWeaponEquipped()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean dismount()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getPcBangScore()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void reducePcBangScore(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void addPcBangScore(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void updatePcBangWnd(int,boolean,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void showPcBangWindow()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.String StringToHex(java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isInOfflineMode()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setOfflineMode(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isTradeDisabled()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setTradeDisabled(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void showTeleportHtml()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void showRaidbossInfoLevel40()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void showRaidbossInfoLevel45()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void showRaidbossInfoLevel50()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void showRaidbossInfoLevel55()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void showRaidbossInfoLevel60()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void showRaidbossInfoLevel65()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void showRaidbossInfoLevel70()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isInsideTWTown()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setInsideTWTown(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean checkMultiBox()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void refreshOtherBoxes()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void decreaseBoxes()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isAio()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setAio(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void rewardAioSkills()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void lostAioSkills()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setAioEndTime(long)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setEndTime(java.lang.String,int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long getAioEndTime()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long getOfflineStartTime()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setOfflineStartTime(long)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isFalling(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setFalling()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setLastPartyPosition(int,int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getLastPartyPositionDistance(int,int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isAwaying()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void set_awaying(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isLocked()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setLocked(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isStored()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setStored(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void gatesRequest(com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void gatesAnswer(int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.PunishLevel getPunishLevel()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isInJail()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isChatBanned()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setPunishLevel(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setPunishLevel(com.l2jfrozen.gameserver.model.actor.instance.PunishLevel,int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setPunishLevel(com.l2jfrozen.gameserver.model.actor.instance.PunishLevel,long)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long getPunishTimer()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setPunishTimer(long)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void updatePunishState()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void stopPunishTask(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void addConfirmDlgRequestTime(int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: java.lang.Long getConfirmDlgRequestTime(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void removeConfirmDlgRequestTime(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.util.FloodProtectors getFloodProtectors()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isInventoryUnder80()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getMultiSellId()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setMultiSellId(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isPartyWaiting()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setPartyRoom(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: int getPartyRoom()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isInPartyMatchRoom()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isItemEquippedByItemId(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long get_instanceLoginTime()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setSexDB(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean checkTeleportOverTime()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setIsTeleporting(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getActingPlayer()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void sendBlockList()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: long getLastAttackPacket()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setLastAttackPacket()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void checkItemRestriction()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void enterOlympiadObserverMode(int,int,int,int,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void leaveOlympiadObserverMode(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setHero(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void giveHeroSkills()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void removeHeroSkills()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$SkillDat getCurrentPetSkill()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setCurrentPetSkill(com.l2jfrozen.gameserver.model.L2Skill,boolean,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: boolean isFakeOfflinePlayer()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setfakeplayer(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void setLastCords(int,int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.status.PlayableStatus getStatus()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.stat.PlayableStat getStat()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.knownlist.PlayableKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.templates.L2CharTemplate getTemplate()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.status.CharStatus getStatus()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.stat.CharStat getStat()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.knownlist.CharKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance: void <clinit>()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$1
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$1: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$1: L2PcInstance$1(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$1: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$2
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$2: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$2: L2PcInstance$2(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$2: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$3
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$3: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$3: L2PcInstance$3(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$3: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$4
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$4: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$4: L2PcInstance$4(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$4: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$5
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$5: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$5: L2PcInstance$5(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$5: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$6
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$6: boolean val$physical
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$6: boolean val$magic
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$6: boolean val$summon
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$6: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$6: L2PcInstance$6(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean,boolean,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$6: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$7
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$7: int[] $SwitchMap$com$l2jfrozen$gameserver$model$SkillTargetType
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$7: int[] $SwitchMap$com$l2jfrozen$gameserver$templates$L2ArmorType
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$7: int[] $SwitchMap$com$l2jfrozen$gameserver$templates$L2WeaponType
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$7: int[] $SwitchMap$com$l2jfrozen$gameserver$model$actor$instance$PunishLevel
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$7: void <clinit>()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$AIAccessor
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$AIAccessor: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$AIAccessor: L2PcInstance$AIAccessor(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$AIAccessor: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getPlayer()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$AIAccessor: void doPickupItem(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$AIAccessor: void doInteract(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$AIAccessor: void doAttack(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$AIAccessor: void doCast(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$GatesRequest
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$GatesRequest: com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance _target
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$GatesRequest: L2PcInstance$GatesRequest()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$GatesRequest: void setTarget(com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$GatesRequest: com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance getDoor()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$GatesRequest: L2PcInstance$GatesRequest(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$1)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$HerbTask
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$HerbTask: java.lang.String _process
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$HerbTask: int _itemId
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$HerbTask: int _count
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$HerbTask: com.l2jfrozen.gameserver.model.L2Object _reference
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$HerbTask: boolean _sendMessage
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$HerbTask: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$HerbTask: L2PcInstance$HerbTask(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String,int,int,com.l2jfrozen.gameserver.model.L2Object,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$HerbTask: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$InventoryEnable
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$InventoryEnable: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$InventoryEnable: L2PcInstance$InventoryEnable(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$InventoryEnable: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$LookingForFishTask
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$LookingForFishTask: boolean _isNoob
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$LookingForFishTask: boolean _isUpperGrade
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$LookingForFishTask: int _fishType
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$LookingForFishTask: int _fishGutsCheck
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$LookingForFishTask: int _gutsCheckTime
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$LookingForFishTask: long _endTaskTime
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$LookingForFishTask: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$LookingForFishTask: L2PcInstance$LookingForFishTask(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int,int,boolean,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$LookingForFishTask: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$MoveOnAttack
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$MoveOnAttack: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _player
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$MoveOnAttack: com.l2jfrozen.gameserver.model.actor.position.L2CharPosition _pos
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$MoveOnAttack: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$MoveOnAttack: L2PcInstance$MoveOnAttack(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.position.L2CharPosition)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$MoveOnAttack: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$MoveOnAttack: void setNewPosition(com.l2jfrozen.gameserver.model.actor.position.L2CharPosition)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$PunishTask
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$PunishTask: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _player
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$PunishTask: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$PunishTask: L2PcInstance$PunishTask(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$PunishTask: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$RentPetTask
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$RentPetTask: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$RentPetTask: L2PcInstance$RentPetTask(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$RentPetTask: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$ShortBuffTask
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$ShortBuffTask: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _player
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$ShortBuffTask: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$ShortBuffTask: L2PcInstance$ShortBuffTask(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$ShortBuffTask: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$SitDownTask
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$SitDownTask: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _player
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$SitDownTask: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$SitDownTask: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance this$0$
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$SitDownTask: L2PcInstance$SitDownTask(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$SitDownTask: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$SkillDat
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$SkillDat: com.l2jfrozen.gameserver.model.L2Skill _skill
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$SkillDat: boolean _ctrlPressed
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$SkillDat: boolean _shiftPressed
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$SkillDat: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$SkillDat: L2PcInstance$SkillDat(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Skill,boolean,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$SkillDat: boolean isCtrlPressed()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$SkillDat: boolean isShiftPressed()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$SkillDat: com.l2jfrozen.gameserver.model.L2Skill getSkill()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$SkillDat: int getSkillId()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$StandUpTask
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$StandUpTask: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _player
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$StandUpTask: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$StandUpTask: L2PcInstance$StandUpTask(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$StandUpTask: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$SummonRequest
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$SummonRequest: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _target
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$SummonRequest: com.l2jfrozen.gameserver.model.L2Skill _skill
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$SummonRequest: L2PcInstance$SummonRequest()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$SummonRequest: void setTarget(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$SummonRequest: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getTarget()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$SummonRequest: com.l2jfrozen.gameserver.model.L2Skill getSkill()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$TeleportProtectionFinalizer
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$TeleportProtectionFinalizer: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$TeleportProtectionFinalizer: L2PcInstance$TeleportProtectionFinalizer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$TeleportProtectionFinalizer: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$TimeStamp
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$TimeStamp: com.l2jfrozen.gameserver.model.L2Skill skill
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$TimeStamp: long reuse
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$TimeStamp: long stamp
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$TimeStamp: long getStamp()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$TimeStamp: com.l2jfrozen.gameserver.model.L2Skill getSkill()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$TimeStamp: long getReuse()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$TimeStamp: long getRemaining()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$TimeStamp: boolean hasNotPassed()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$TimeStamp: L2PcInstance$TimeStamp(com.l2jfrozen.gameserver.model.L2Skill,long)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$TimeStamp: L2PcInstance$TimeStamp(com.l2jfrozen.gameserver.model.L2Skill,long,long)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$WarnUserTakeBreak
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$WarnUserTakeBreak: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$WarnUserTakeBreak: L2PcInstance$WarnUserTakeBreak(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$WarnUserTakeBreak: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$WaterTask
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$WaterTask: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$WaterTask: L2PcInstance$WaterTask(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$WaterTask: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$botChecker
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$botChecker: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$botChecker: L2PcInstance$botChecker(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$botChecker: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$kickBot
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$kickBot: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$kickBot: L2PcInstance$kickBot(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance$kickBot: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2PenaltyMonsterInstance
com.l2jfrozen.gameserver.model.actor.instance.L2PenaltyMonsterInstance: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _ptk
com.l2jfrozen.gameserver.model.actor.instance.L2PenaltyMonsterInstance: L2PenaltyMonsterInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2PenaltyMonsterInstance: com.l2jfrozen.gameserver.model.L2Character getMostHated()
com.l2jfrozen.gameserver.model.actor.instance.L2PenaltyMonsterInstance: void notifyPlayerDead()
com.l2jfrozen.gameserver.model.actor.instance.L2PenaltyMonsterInstance: void setPlayerToKill(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PenaltyMonsterInstance: boolean doDie(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: int _curFed
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: com.l2jfrozen.gameserver.model.PetInventory _inventory
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: int _controlItemId
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: boolean _respawned
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: boolean _mountable
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: java.util.concurrent.Future _feedTask
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: int _feedTime
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: boolean _feedMode
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: com.l2jfrozen.gameserver.model.L2PetData _data
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: long _expBeforeDeath
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: int FOOD_ITEM_CONSUME_COUNT
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: com.l2jfrozen.gameserver.model.L2PetData getPetData()
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: void setPetData(com.l2jfrozen.gameserver.model.L2PetData)
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance spawnPet(com.l2jfrozen.gameserver.templates.L2NpcTemplate,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: L2PetInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: com.l2jfrozen.gameserver.model.actor.stat.PetStat getStat()
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: double getLevelMod()
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: boolean isRespawned()
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: int getSummonType()
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: int getControlItemId()
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance getControlItem()
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: int getCurrentFed()
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: void setCurrentFed(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: void setPkKills(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance getActiveWeaponInstance()
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: com.l2jfrozen.gameserver.templates.L2Weapon getActiveWeaponItem()
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance getSecondaryWeaponInstance()
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: com.l2jfrozen.gameserver.templates.L2Weapon getSecondaryWeaponItem()
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: com.l2jfrozen.gameserver.model.PetInventory getInventory()
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: boolean destroyItem(java.lang.String,int,int,com.l2jfrozen.gameserver.model.L2Object,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: boolean destroyItemByItemId(java.lang.String,int,int,com.l2jfrozen.gameserver.model.L2Object,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: void doPickupItem(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: void deleteMe(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: boolean doDie(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: void doRevive()
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: void doRevive(double)
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance transferItem(java.lang.String,int,int,com.l2jfrozen.gameserver.model.Inventory,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: void giveAllToOwner()
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: void giveItemToOwner(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: void destroyControlItem(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: void dropAllItems()
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: void dropItemHere(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: void dropItemHere(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: boolean isMountable()
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance restore(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance,com.l2jfrozen.gameserver.templates.L2NpcTemplate,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: void store()
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: void stopFeed()
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: void startFeed(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: void unSummon(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: void restoreExp(double)
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: void deathPenalty()
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: void addExpAndSp(long,int)
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: long getExpForThisLevel()
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: long getExpForNextLevel()
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: int getLevel()
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: int getMaxFed()
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: int getAccuracy()
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: int getCriticalHit(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: int getEvasionRate(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: int getRunSpeed()
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: int getPAtkSpd()
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: int getMAtkSpd()
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: int getMAtk(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: int getMDef(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: int getPAtk(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: int getPDef(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: int getSkillLevel(int)
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: void updateRefOwner(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: void sendDamageMessage(com.l2jfrozen.gameserver.model.L2Character,int,boolean,boolean,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: com.l2jfrozen.gameserver.model.actor.stat.SummonStat getStat()
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: com.l2jfrozen.gameserver.model.actor.stat.PlayableStat getStat()
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: com.l2jfrozen.gameserver.model.actor.stat.CharStat getStat()
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance: void <clinit>()
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance$FeedTask
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance$FeedTask: com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance$FeedTask: L2PetInstance$FeedTask(com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance$FeedTask: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: boolean _isNoblesseBlessed
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: boolean _getCharmOfLuck
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: boolean _isPhoenixBlessed
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: boolean _ProtectionBlessing
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: com.l2jfrozen.gameserver.model.L2Effect _lastNoblessEffect
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: com.l2jfrozen.gameserver.model.L2Effect _lastProtectionBlessingEffect
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: com.l2jfrozen.gameserver.model.L2Effect _lastPhoenixBlessedEffect
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: com.l2jfrozen.gameserver.model.L2Effect _lastCharmOfLuckEffect
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: L2PlayableInstance(int,com.l2jfrozen.gameserver.templates.L2CharTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: com.l2jfrozen.gameserver.model.actor.knownlist.PlayableKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: com.l2jfrozen.gameserver.model.actor.stat.PlayableStat getStat()
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: com.l2jfrozen.gameserver.model.actor.status.PlayableStatus getStatus()
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: boolean doDie(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: boolean checkIfPvP(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: boolean isAttackable()
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: boolean isNoblesseBlessed()
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: void setIsNoblesseBlessed(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: void startNoblesseBlessing(com.l2jfrozen.gameserver.model.L2Effect)
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: void stopNoblesseBlessing(com.l2jfrozen.gameserver.model.L2Effect)
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: boolean getProtectionBlessing()
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: void setProtectionBlessing(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: void startProtectionBlessing(com.l2jfrozen.gameserver.model.L2Effect)
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: void stopProtectionBlessing(com.l2jfrozen.gameserver.model.L2Effect)
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: boolean isPhoenixBlessed()
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: void setIsPhoenixBlessed(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: void startPhoenixBlessing(com.l2jfrozen.gameserver.model.L2Effect)
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: void stopPhoenixBlessing(com.l2jfrozen.gameserver.model.L2Effect)
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: boolean destroyItemByItemId(java.lang.String,int,int,com.l2jfrozen.gameserver.model.L2Object,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: boolean destroyItem(java.lang.String,int,int,com.l2jfrozen.gameserver.model.L2Object,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: boolean getCharmOfLuck()
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: void setCharmOfLuck(boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: void startCharmOfLuck(com.l2jfrozen.gameserver.model.L2Effect)
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: void stopCharmOfLuck(com.l2jfrozen.gameserver.model.L2Effect)
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: boolean isInFunEvent()
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getActingPlayer()
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: com.l2jfrozen.gameserver.model.actor.status.CharStatus getStatus()
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: com.l2jfrozen.gameserver.model.actor.stat.CharStat getStat()
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: com.l2jfrozen.gameserver.model.actor.knownlist.CharKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance: com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2ProtectorInstance
com.l2jfrozen.gameserver.model.actor.instance.L2ProtectorInstance: java.util.concurrent.ScheduledFuture _aiTask
com.l2jfrozen.gameserver.model.actor.instance.L2ProtectorInstance: L2ProtectorInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2ProtectorInstance: void deleteMe()
com.l2jfrozen.gameserver.model.actor.instance.L2ProtectorInstance: boolean isAutoAttackable(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2ProtectorInstance$ProtectorAI
com.l2jfrozen.gameserver.model.actor.instance.L2ProtectorInstance$ProtectorAI: com.l2jfrozen.gameserver.model.actor.instance.L2ProtectorInstance _caster
com.l2jfrozen.gameserver.model.actor.instance.L2ProtectorInstance$ProtectorAI: com.l2jfrozen.gameserver.model.actor.instance.L2ProtectorInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2ProtectorInstance$ProtectorAI: L2ProtectorInstance$ProtectorAI(com.l2jfrozen.gameserver.model.actor.instance.L2ProtectorInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ProtectorInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2ProtectorInstance$ProtectorAI: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2ProtectorInstance$ProtectorAI: boolean handleCast(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2ProtectorInstance$ProtectorAI: boolean handleCastonPet(com.l2jfrozen.gameserver.model.L2Summon,int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance: int LANES
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance: int WINDOW_START
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance: java.util.List _managers
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance: int _raceNumber
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance: long SECOND
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance: long MINUTE
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance: int _minutes
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance: int ACCEPTING_BETS
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance: int WAITING
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance: int STARTING_RACE
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance: int RACE_END
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance: int _state
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance: int[][] _codes
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance: boolean _notInitialized
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance: com.l2jfrozen.gameserver.network.serverpackets.MonRaceInfo _packet
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance: int[] _cost
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance: L2RaceManagerInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance: com.l2jfrozen.gameserver.model.actor.knownlist.RaceManagerKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance: void makeAnnouncement(com.l2jfrozen.gameserver.network.SystemMessageId)
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance: void broadcast(com.l2jfrozen.gameserver.network.serverpackets.L2GameServerPacket)
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance: void sendMonsterInfo()
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance: void startRace()
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance: void onBypassFeedback(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance: void showOdds(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance: void showMonsterInfo(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance: void showBuyTicket(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance: com.l2jfrozen.gameserver.model.actor.knownlist.NpcKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance: com.l2jfrozen.gameserver.model.actor.knownlist.CharKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance: com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance: void <clinit>()
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance$Announcement
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance$Announcement: com.l2jfrozen.gameserver.network.SystemMessageId _type
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance$Announcement: com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance$Announcement: L2RaceManagerInstance$Announcement(com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance,com.l2jfrozen.gameserver.network.SystemMessageId)
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance$Announcement: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance$Race
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance$Race: com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance$Race$Info[] _info
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance$Race: com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance$Race: L2RaceManagerInstance$Race(com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance,com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance$Race$Info[])
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance$Race: com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance$Race$Info getLaneInfo(int)
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance$Race$Info
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance$Race$Info: int _id
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance$Race$Info: int _place
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance$Race$Info: int _odds
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance$Race$Info: int _payout
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance$Race$Info: com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance$Race this$1
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance$Race$Info: L2RaceManagerInstance$Race$Info(com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance$Race,int,int,int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance$Race$Info: int getId()
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance$Race$Info: int getOdds()
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance$Race$Info: int getPayout()
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance$Race$Info: int getPlace()
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance$RunEnd
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance$RunEnd: com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance$RunEnd: L2RaceManagerInstance$RunEnd(com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance$RunEnd: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance$RunRace
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance$RunRace: com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance$RunRace: L2RaceManagerInstance$RunRace(com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance$RunRace: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2RaidBossInstance
com.l2jfrozen.gameserver.model.actor.instance.L2RaidBossInstance: int RAIDBOSS_MAINTENANCE_INTERVAL
com.l2jfrozen.gameserver.model.actor.instance.L2RaidBossInstance: com.l2jfrozen.gameserver.managers.StatusEnum _raidStatus
com.l2jfrozen.gameserver.model.actor.instance.L2RaidBossInstance: L2RaidBossInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2RaidBossInstance: boolean isRaid()
com.l2jfrozen.gameserver.model.actor.instance.L2RaidBossInstance: int getMaintenanceInterval()
com.l2jfrozen.gameserver.model.actor.instance.L2RaidBossInstance: boolean doDie(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2RaidBossInstance: void manageMinions()
com.l2jfrozen.gameserver.model.actor.instance.L2RaidBossInstance: void setRaidStatus(com.l2jfrozen.gameserver.managers.StatusEnum)
com.l2jfrozen.gameserver.model.actor.instance.L2RaidBossInstance: com.l2jfrozen.gameserver.managers.StatusEnum getRaidStatus()
com.l2jfrozen.gameserver.model.actor.instance.L2RaidBossInstance: void healFull()
com.l2jfrozen.gameserver.model.actor.instance.L2RaidBossInstance$1
com.l2jfrozen.gameserver.model.actor.instance.L2RaidBossInstance$1: com.l2jfrozen.gameserver.model.actor.instance.L2RaidBossInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2RaidBossInstance$1: L2RaidBossInstance$1(com.l2jfrozen.gameserver.model.actor.instance.L2RaidBossInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2RaidBossInstance$1: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2RaidBossManagerInstance
com.l2jfrozen.gameserver.model.actor.instance.L2RaidBossManagerInstance: L2RaidBossManagerInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2RaidBossManagerInstance: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2RaidBossManagerInstance: void showChatWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.actor.instance.L2RaidBossManagerInstance: java.lang.String rbWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2RecipeInstance
com.l2jfrozen.gameserver.model.actor.instance.L2RecipeInstance: int _itemId
com.l2jfrozen.gameserver.model.actor.instance.L2RecipeInstance: int _quantity
com.l2jfrozen.gameserver.model.actor.instance.L2RecipeInstance: L2RecipeInstance(int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2RecipeInstance: int getItemId()
com.l2jfrozen.gameserver.model.actor.instance.L2RecipeInstance: int getQuantity()
com.l2jfrozen.gameserver.model.actor.instance.L2RiftInvaderInstance
com.l2jfrozen.gameserver.model.actor.instance.L2RiftInvaderInstance: L2RiftInvaderInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance: int mysteriousBoxId
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance: java.util.concurrent.Future _victimSpawnKeyBoxTask
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance: java.util.concurrent.Future _victimShout
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance: java.util.concurrent.Future _changeImmortalTask
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance: java.util.concurrent.Future _onDeadEventTask
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance: L2SepulcherMonsterInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance: void onSpawn()
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance: boolean doDie(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance: void deleteMe()
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance: boolean isRaid()
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance: void giveCup(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance: boolean isAutoAttackable(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance$ChangeImmortal
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance$ChangeImmortal: com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance activeChar
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance$ChangeImmortal: com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance$ChangeImmortal: L2SepulcherMonsterInstance$ChangeImmortal(com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance,com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance$ChangeImmortal: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance$OnDeadEvent
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance$OnDeadEvent: com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance _activeChar
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance$OnDeadEvent: com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance$OnDeadEvent: L2SepulcherMonsterInstance$OnDeadEvent(com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance,com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance$OnDeadEvent: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance$VictimShout
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance$VictimShout: com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance _activeChar
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance$VictimShout: com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance$VictimShout: L2SepulcherMonsterInstance$VictimShout(com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance,com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance$VictimShout: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance$VictimSpawnKeyBox
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance$VictimSpawnKeyBox: com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance _activeChar
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance$VictimSpawnKeyBox: com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance$VictimSpawnKeyBox: L2SepulcherMonsterInstance$VictimSpawnKeyBox(com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance,com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherMonsterInstance$VictimSpawnKeyBox: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance: java.util.Map _hallGateKeepers
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance: java.util.concurrent.Future _closeTask
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance: java.util.concurrent.Future _spawnNextMysteriousBoxTask
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance: java.util.concurrent.Future _spawnMonsterTask
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance: java.lang.String HTML_FILE_PATH
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance: int HALLS_KEY
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance: L2SepulcherNpcInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance: void deleteMe()
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance: void doAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance: java.lang.String getHtmlPath(int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance: void showChatWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance: void onBypassFeedback(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance: void openNextDoor(int)
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance: void sayInShout(java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance: void showHtmlFile(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance: void <clinit>()
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance$CloseNextDoor
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance$CloseNextDoor: com.l2jfrozen.gameserver.datatables.csv.DoorTable _DoorTable
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance$CloseNextDoor: int _DoorId
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance$CloseNextDoor: com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance$CloseNextDoor: L2SepulcherNpcInstance$CloseNextDoor(com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance,int)
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance$CloseNextDoor: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance$SpawnMonster
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance$SpawnMonster: int _NpcId
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance$SpawnMonster: com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance$SpawnMonster: L2SepulcherNpcInstance$SpawnMonster(com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance,int)
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance$SpawnMonster: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance$SpawnNextMysteriousBox
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance$SpawnNextMysteriousBox: int _NpcId
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance$SpawnNextMysteriousBox: com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance$SpawnNextMysteriousBox: L2SepulcherNpcInstance$SpawnNextMysteriousBox(com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance,int)
com.l2jfrozen.gameserver.model.actor.instance.L2SepulcherNpcInstance$SpawnNextMysteriousBox: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeFlagInstance
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeFlagInstance: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _player
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeFlagInstance: com.l2jfrozen.gameserver.model.entity.siege.Siege _siege
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeFlagInstance: L2SiegeFlagInstance(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeFlagInstance: boolean isAttackable()
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeFlagInstance: boolean isAutoAttackable(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeFlagInstance: boolean doDie(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeFlagInstance: void onForcedAttack(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeFlagInstance: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeGuardInstance
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeGuardInstance: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeGuardInstance: int _homeX
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeGuardInstance: int _homeY
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeGuardInstance: int _homeZ
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeGuardInstance: L2SiegeGuardInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeGuardInstance: com.l2jfrozen.gameserver.model.actor.knownlist.SiegeGuardKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeGuardInstance: com.l2jfrozen.gameserver.ai.L2CharacterAI getAI()
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeGuardInstance: boolean isAutoAttackable(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeGuardInstance: boolean hasRandomAnimation()
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeGuardInstance: void getHomeLocation()
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeGuardInstance: int getHomeX()
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeGuardInstance: int getHomeY()
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeGuardInstance: void returnHome()
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeGuardInstance: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeGuardInstance: void addDamageHate(com.l2jfrozen.gameserver.model.L2Character,int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeGuardInstance: com.l2jfrozen.gameserver.model.actor.knownlist.AttackableKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeGuardInstance: com.l2jfrozen.gameserver.model.actor.knownlist.NpcKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeGuardInstance: com.l2jfrozen.gameserver.model.actor.knownlist.CharKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeGuardInstance: com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList getKnownList()
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeGuardInstance: void <clinit>()
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeNpcInstance
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeNpcInstance: L2SiegeNpcInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeNpcInstance: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeNpcInstance: void showSiegeInfoWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeNpcInstance: boolean validateCondition(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeSummonInstance
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeSummonInstance: int SIEGE_GOLEM_ID
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeSummonInstance: int HOG_CANNON_ID
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeSummonInstance: int SWOOP_CANNON_ID
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeSummonInstance: L2SiegeSummonInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.actor.instance.L2SiegeSummonInstance: void onSpawn()
com.l2jfrozen.gameserver.model.actor.instance.L2SignsPriestInstance
com.l2jfrozen.gameserver.model.actor.instance.L2SignsPriestInstance: L2SignsPriestInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2SignsPriestInstance: void onBypassFeedback(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2SignsPriestInstance: boolean getPlayerAllyHasCastle(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2SignsPriestInstance: void showChatWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,java.lang.String,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2StaticObjectInstance
com.l2jfrozen.gameserver.model.actor.instance.L2StaticObjectInstance: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.actor.instance.L2StaticObjectInstance: int INTERACTION_DISTANCE
com.l2jfrozen.gameserver.model.actor.instance.L2StaticObjectInstance: int _staticObjectId
com.l2jfrozen.gameserver.model.actor.instance.L2StaticObjectInstance: int _type
com.l2jfrozen.gameserver.model.actor.instance.L2StaticObjectInstance: int _x
com.l2jfrozen.gameserver.model.actor.instance.L2StaticObjectInstance: int _y
com.l2jfrozen.gameserver.model.actor.instance.L2StaticObjectInstance: java.lang.String _texture
com.l2jfrozen.gameserver.model.actor.instance.L2StaticObjectInstance: int getStaticObjectId()
com.l2jfrozen.gameserver.model.actor.instance.L2StaticObjectInstance: void setStaticObjectId(int)
com.l2jfrozen.gameserver.model.actor.instance.L2StaticObjectInstance: L2StaticObjectInstance(int)
com.l2jfrozen.gameserver.model.actor.instance.L2StaticObjectInstance: int getType()
com.l2jfrozen.gameserver.model.actor.instance.L2StaticObjectInstance: void setType(int)
com.l2jfrozen.gameserver.model.actor.instance.L2StaticObjectInstance: void setMap(java.lang.String,int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2StaticObjectInstance: int getMapX()
com.l2jfrozen.gameserver.model.actor.instance.L2StaticObjectInstance: int getMapY()
com.l2jfrozen.gameserver.model.actor.instance.L2StaticObjectInstance: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2StaticObjectInstance: boolean isAutoAttackable(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2StaticObjectInstance: void <clinit>()
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance: float _expPenalty
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance: int _itemConsumeId
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance: int _itemConsumeCount
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance: int _itemConsumeSteps
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance: int _totalLifeTime
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance: int _timeLostIdle
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance: int _timeLostActive
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance: int _timeRemaining
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance: int _nextItemConsumeTime
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance: int lastShowntimeRemaining
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance: java.util.concurrent.Future _summonLifeTask
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance: L2SummonInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance: int getLevel()
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance: int getSummonType()
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance: void setExpPenalty(float)
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance: float getExpPenalty()
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance: int getItemConsumeCount()
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance: int getItemConsumeId()
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance: int getItemConsumeSteps()
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance: int getNextItemConsumeTime()
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance: int getTotalLifeTime()
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance: int getTimeLostIdle()
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance: int getTimeLostActive()
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance: int getTimeRemaining()
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance: void setNextItemConsumeTime(int)
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance: void decNextItemConsumeTime(int)
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance: void decTimeRemaining(int)
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance: void addExpAndSp(int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance: void reduceCurrentHp(int,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance: boolean doDie(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance: void unSummon(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance: boolean destroyItem(java.lang.String,int,int,com.l2jfrozen.gameserver.model.L2Object,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance: boolean destroyItemByItemId(java.lang.String,int,int,com.l2jfrozen.gameserver.model.L2Object,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance: void sendDamageMessage(com.l2jfrozen.gameserver.model.L2Character,int,boolean,boolean,boolean)
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance: void <clinit>()
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance$SummonLifetime
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance$SummonLifetime: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance$SummonLifetime: com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance _summon
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance$SummonLifetime: L2SummonInstance$SummonLifetime(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2SummonInstance$SummonLifetime: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2SymbolMakerInstance
com.l2jfrozen.gameserver.model.actor.instance.L2SymbolMakerInstance: void onBypassFeedback(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2SymbolMakerInstance: void showRemoveChat(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2SymbolMakerInstance: L2SymbolMakerInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2SymbolMakerInstance: java.lang.String getHtmlPath(int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2SymbolMakerInstance: boolean isAutoAttackable(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance: int _foodSkillId
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance: int MAX_DISTANCE_FROM_HOME
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance: int MAX_DISTANCE_FROM_OWNER
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance: int MAX_DURATION
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance: int DURATION_CHECK_INTERVAL
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance: int DURATION_INCREASE_INTERVAL
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance: int BUFF_INTERVAL
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance: int _remainingTime
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance: int _homeX
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance: int _homeY
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance: int _homeZ
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _owner
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance: java.util.concurrent.Future _buffTask
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance: java.util.concurrent.Future _durationCheckTask
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance: L2TamedBeastInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance: L2TamedBeastInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int,int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance: void onReceiveFood()
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance: com.l2jfrozen.common.util.Point3D getHome()
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance: void setHome(int,int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance: void setHome(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance: int getRemainingTime()
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance: void setRemainingTime(int)
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance: int getFoodType()
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance: void setFoodType(int)
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance: boolean doDie(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance: void cleanTasks()
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getOwner()
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance: void setOwner(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance: boolean isTooFarFromHome()
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance: void doDespawn()
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance: void onOwnerGotAttacked(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance: void sitCastAndFollow(com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance$CheckDuration
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance$CheckDuration: com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance _tamedBeast
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance$CheckDuration: com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance$CheckDuration: L2TamedBeastInstance$CheckDuration(com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance,com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance$CheckDuration: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance$CheckOwnerBuffs
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance$CheckOwnerBuffs: com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance _tamedBeast
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance$CheckOwnerBuffs: int _numBuffs
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance$CheckOwnerBuffs: com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance$CheckOwnerBuffs: L2TamedBeastInstance$CheckOwnerBuffs(com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance,com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance,int)
com.l2jfrozen.gameserver.model.actor.instance.L2TamedBeastInstance$CheckOwnerBuffs: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2TeleporterInstance
com.l2jfrozen.gameserver.model.actor.instance.L2TeleporterInstance: int COND_ALL_FALSE
com.l2jfrozen.gameserver.model.actor.instance.L2TeleporterInstance: int COND_BUSY_BECAUSE_OF_SIEGE
com.l2jfrozen.gameserver.model.actor.instance.L2TeleporterInstance: int COND_OWNER
com.l2jfrozen.gameserver.model.actor.instance.L2TeleporterInstance: int COND_REGULAR
com.l2jfrozen.gameserver.model.actor.instance.L2TeleporterInstance: L2TeleporterInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2TeleporterInstance: void onBypassFeedback(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2TeleporterInstance: java.lang.String getHtmlPath(int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2TeleporterInstance: void showChatWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2TeleporterInstance: void doTeleport(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.actor.instance.L2TeleporterInstance: int validateCondition(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2TownPetInstance
com.l2jfrozen.gameserver.model.actor.instance.L2TownPetInstance: int randomX
com.l2jfrozen.gameserver.model.actor.instance.L2TownPetInstance: int randomY
com.l2jfrozen.gameserver.model.actor.instance.L2TownPetInstance: int spawnX
com.l2jfrozen.gameserver.model.actor.instance.L2TownPetInstance: int spawnY
com.l2jfrozen.gameserver.model.actor.instance.L2TownPetInstance: L2TownPetInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2TownPetInstance: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2TownPetInstance: void onSpawn()
com.l2jfrozen.gameserver.model.actor.instance.L2TownPetInstance$RandomWalkTask
com.l2jfrozen.gameserver.model.actor.instance.L2TownPetInstance$RandomWalkTask: com.l2jfrozen.gameserver.model.actor.instance.L2TownPetInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2TownPetInstance$RandomWalkTask: L2TownPetInstance$RandomWalkTask(com.l2jfrozen.gameserver.model.actor.instance.L2TownPetInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2TownPetInstance$RandomWalkTask: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2TrainerInstance
com.l2jfrozen.gameserver.model.actor.instance.L2TrainerInstance: L2TrainerInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2TrainerInstance: java.lang.String getHtmlPath(int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2VillageMasterInstance
com.l2jfrozen.gameserver.model.actor.instance.L2VillageMasterInstance: L2VillageMasterInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2VillageMasterInstance: void onBypassFeedback(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2VillageMasterInstance: java.lang.String getHtmlPath(int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2VillageMasterInstance: void dissolveClan(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.actor.instance.L2VillageMasterInstance: void recoverClan(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.actor.instance.L2VillageMasterInstance: void changeClanLeader(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2VillageMasterInstance: void createSubPledge(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String,java.lang.String,int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2VillageMasterInstance: void renameSubPledge(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2VillageMasterInstance: void assignSubPledgeLeader(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2VillageMasterInstance: java.util.Set getAvailableSubClasses(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2VillageMasterInstance: void showPledgeSkillList(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2VillageMasterInstance: java.lang.String formatClassForDisplay(com.l2jfrozen.gameserver.model.base.PlayerClass)
com.l2jfrozen.gameserver.model.actor.instance.L2VillageMasterInstance: com.l2jfrozen.gameserver.model.base.PlayerRace getVillageMasterRace()
com.l2jfrozen.gameserver.model.actor.instance.L2VillageMasterInstance: com.l2jfrozen.gameserver.model.base.ClassType getVillageMasterTeachType()
com.l2jfrozen.gameserver.model.actor.instance.L2VillageMasterInstance: java.util.Iterator iterSubClasses(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2WarehouseInstance
com.l2jfrozen.gameserver.model.actor.instance.L2WarehouseInstance: L2WarehouseInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2WarehouseInstance: java.lang.String getHtmlPath(int,int)
com.l2jfrozen.gameserver.model.actor.instance.L2WarehouseInstance: void showRetrieveWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2WarehouseInstance: void showDepositWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2WarehouseInstance: void showDepositWindowClan(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2WarehouseInstance: void showWithdrawWindowClan(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2WarehouseInstance: void showWithdrawWindowFreight(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2WarehouseInstance: void showDepositWindowFreight(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2WarehouseInstance: void showDepositWindowFreight(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.actor.instance.L2WarehouseInstance: void onBypassFeedback(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2WeddingManagerInstance
com.l2jfrozen.gameserver.model.actor.instance.L2WeddingManagerInstance: L2WeddingManagerInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2WeddingManagerInstance: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2WeddingManagerInstance: void showMessageWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2WeddingManagerInstance: void onBypassFeedback(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2WeddingManagerInstance: void sendHtmlMessage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2WyvernManagerInstance
com.l2jfrozen.gameserver.model.actor.instance.L2WyvernManagerInstance: int COND_CLAN_OWNER
com.l2jfrozen.gameserver.model.actor.instance.L2WyvernManagerInstance: int _clanHallId
com.l2jfrozen.gameserver.model.actor.instance.L2WyvernManagerInstance: L2WyvernManagerInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2WyvernManagerInstance: void onBypassFeedback(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.L2WyvernManagerInstance: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2WyvernManagerInstance: void showMessageWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2WyvernManagerInstance: com.l2jfrozen.gameserver.model.entity.ClanHall getClanHall()
com.l2jfrozen.gameserver.model.actor.instance.L2WyvernManagerInstance: int validateCondition(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2XmassTreeInstance
com.l2jfrozen.gameserver.model.actor.instance.L2XmassTreeInstance: java.util.concurrent.ScheduledFuture _aiTask
com.l2jfrozen.gameserver.model.actor.instance.L2XmassTreeInstance: L2XmassTreeInstance(int,com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.actor.instance.L2XmassTreeInstance: void deleteMe()
com.l2jfrozen.gameserver.model.actor.instance.L2XmassTreeInstance: int getDistanceToWatchObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.instance.L2XmassTreeInstance: boolean isAutoAttackable(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.instance.L2XmassTreeInstance$XmassAI
com.l2jfrozen.gameserver.model.actor.instance.L2XmassTreeInstance$XmassAI: com.l2jfrozen.gameserver.model.actor.instance.L2XmassTreeInstance _caster
com.l2jfrozen.gameserver.model.actor.instance.L2XmassTreeInstance$XmassAI: com.l2jfrozen.gameserver.model.actor.instance.L2XmassTreeInstance this$0
com.l2jfrozen.gameserver.model.actor.instance.L2XmassTreeInstance$XmassAI: L2XmassTreeInstance$XmassAI(com.l2jfrozen.gameserver.model.actor.instance.L2XmassTreeInstance,com.l2jfrozen.gameserver.model.actor.instance.L2XmassTreeInstance)
com.l2jfrozen.gameserver.model.actor.instance.L2XmassTreeInstance$XmassAI: void run()
com.l2jfrozen.gameserver.model.actor.instance.L2XmassTreeInstance$XmassAI: boolean handleCast(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.actor.instance.PunishLevel
com.l2jfrozen.gameserver.model.actor.instance.PunishLevel: com.l2jfrozen.gameserver.model.actor.instance.PunishLevel NONE
com.l2jfrozen.gameserver.model.actor.instance.PunishLevel: com.l2jfrozen.gameserver.model.actor.instance.PunishLevel CHAT
com.l2jfrozen.gameserver.model.actor.instance.PunishLevel: com.l2jfrozen.gameserver.model.actor.instance.PunishLevel JAIL
com.l2jfrozen.gameserver.model.actor.instance.PunishLevel: com.l2jfrozen.gameserver.model.actor.instance.PunishLevel CHAR
com.l2jfrozen.gameserver.model.actor.instance.PunishLevel: com.l2jfrozen.gameserver.model.actor.instance.PunishLevel ACC
com.l2jfrozen.gameserver.model.actor.instance.PunishLevel: int punValue
com.l2jfrozen.gameserver.model.actor.instance.PunishLevel: java.lang.String punString
com.l2jfrozen.gameserver.model.actor.instance.PunishLevel: com.l2jfrozen.gameserver.model.actor.instance.PunishLevel[] $VALUES
com.l2jfrozen.gameserver.model.actor.instance.PunishLevel: com.l2jfrozen.gameserver.model.actor.instance.PunishLevel[] values()
com.l2jfrozen.gameserver.model.actor.instance.PunishLevel: com.l2jfrozen.gameserver.model.actor.instance.PunishLevel valueOf(java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.PunishLevel: PunishLevel(java.lang.String,int,int,java.lang.String)
com.l2jfrozen.gameserver.model.actor.instance.PunishLevel: int value()
com.l2jfrozen.gameserver.model.actor.instance.PunishLevel: java.lang.String string()
com.l2jfrozen.gameserver.model.actor.instance.PunishLevel: void <clinit>()
com.l2jfrozen.gameserver.model.actor.knownlist.AttackableKnownList
com.l2jfrozen.gameserver.model.actor.knownlist.AttackableKnownList: AttackableKnownList(com.l2jfrozen.gameserver.model.L2Attackable)
com.l2jfrozen.gameserver.model.actor.knownlist.AttackableKnownList: boolean removeKnownObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.AttackableKnownList: com.l2jfrozen.gameserver.model.L2Attackable getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.AttackableKnownList: int getDistanceToForgetObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.AttackableKnownList: int getDistanceToWatchObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.AttackableKnownList: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.AttackableKnownList: com.l2jfrozen.gameserver.model.L2Character getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.BoatKnownList
com.l2jfrozen.gameserver.model.actor.knownlist.BoatKnownList: BoatKnownList(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.knownlist.BoatKnownList: int getDistanceToForgetObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.BoatKnownList: int getDistanceToWatchObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.CharKnownList
com.l2jfrozen.gameserver.model.actor.knownlist.CharKnownList: java.util.Map _knownPlayers
com.l2jfrozen.gameserver.model.actor.knownlist.CharKnownList: java.util.Map _knownRelations
com.l2jfrozen.gameserver.model.actor.knownlist.CharKnownList: CharKnownList(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.knownlist.CharKnownList: boolean addKnownObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.CharKnownList: boolean addKnownObject(com.l2jfrozen.gameserver.model.L2Object,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.knownlist.CharKnownList: boolean knowsThePlayer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.knownlist.CharKnownList: void removeAllKnownObjects()
com.l2jfrozen.gameserver.model.actor.knownlist.CharKnownList: boolean removeKnownObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.CharKnownList: com.l2jfrozen.gameserver.model.L2Character getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.CharKnownList: int getDistanceToForgetObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.CharKnownList: int getDistanceToWatchObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.CharKnownList: java.util.Collection getKnownCharacters()
com.l2jfrozen.gameserver.model.actor.knownlist.CharKnownList: java.util.Collection getKnownCharactersInRadius(long)
com.l2jfrozen.gameserver.model.actor.knownlist.CharKnownList: java.util.Map getKnownPlayers()
com.l2jfrozen.gameserver.model.actor.knownlist.CharKnownList: java.util.Map getKnownRelations()
com.l2jfrozen.gameserver.model.actor.knownlist.CharKnownList: java.util.Collection getKnownPlayersInRadius(long)
com.l2jfrozen.gameserver.model.actor.knownlist.CommanderKnownList
com.l2jfrozen.gameserver.model.actor.knownlist.CommanderKnownList: CommanderKnownList(com.l2jfrozen.gameserver.model.actor.instance.L2CommanderInstance)
com.l2jfrozen.gameserver.model.actor.knownlist.CommanderKnownList: boolean addKnownObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.CommanderKnownList: boolean addKnownObject(com.l2jfrozen.gameserver.model.L2Object,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.knownlist.CommanderKnownList: com.l2jfrozen.gameserver.model.actor.instance.L2CommanderInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.CommanderKnownList: com.l2jfrozen.gameserver.model.L2Attackable getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.CommanderKnownList: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.CommanderKnownList: com.l2jfrozen.gameserver.model.L2Character getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.DoorKnownList
com.l2jfrozen.gameserver.model.actor.knownlist.DoorKnownList: DoorKnownList(com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance)
com.l2jfrozen.gameserver.model.actor.knownlist.DoorKnownList: com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.DoorKnownList: int getDistanceToForgetObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.DoorKnownList: int getDistanceToWatchObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.DoorKnownList: com.l2jfrozen.gameserver.model.L2Character getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.FortSiegeGuardKnownList
com.l2jfrozen.gameserver.model.actor.knownlist.FortSiegeGuardKnownList: FortSiegeGuardKnownList(com.l2jfrozen.gameserver.model.actor.instance.L2FortSiegeGuardInstance)
com.l2jfrozen.gameserver.model.actor.knownlist.FortSiegeGuardKnownList: boolean addKnownObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.FortSiegeGuardKnownList: boolean addKnownObject(com.l2jfrozen.gameserver.model.L2Object,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.knownlist.FortSiegeGuardKnownList: com.l2jfrozen.gameserver.model.actor.instance.L2FortSiegeGuardInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.FortSiegeGuardKnownList: com.l2jfrozen.gameserver.model.L2Attackable getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.FortSiegeGuardKnownList: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.FortSiegeGuardKnownList: com.l2jfrozen.gameserver.model.L2Character getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.FriendlyMobKnownList
com.l2jfrozen.gameserver.model.actor.knownlist.FriendlyMobKnownList: FriendlyMobKnownList(com.l2jfrozen.gameserver.model.actor.instance.L2FriendlyMobInstance)
com.l2jfrozen.gameserver.model.actor.knownlist.FriendlyMobKnownList: boolean addKnownObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.FriendlyMobKnownList: boolean addKnownObject(com.l2jfrozen.gameserver.model.L2Object,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.knownlist.FriendlyMobKnownList: boolean removeKnownObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.FriendlyMobKnownList: com.l2jfrozen.gameserver.model.actor.instance.L2FriendlyMobInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.FriendlyMobKnownList: com.l2jfrozen.gameserver.model.L2Attackable getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.FriendlyMobKnownList: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.FriendlyMobKnownList: com.l2jfrozen.gameserver.model.L2Character getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.GuardKnownList
com.l2jfrozen.gameserver.model.actor.knownlist.GuardKnownList: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.actor.knownlist.GuardKnownList: GuardKnownList(com.l2jfrozen.gameserver.model.actor.instance.L2GuardInstance)
com.l2jfrozen.gameserver.model.actor.knownlist.GuardKnownList: boolean addKnownObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.GuardKnownList: boolean addKnownObject(com.l2jfrozen.gameserver.model.L2Object,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.knownlist.GuardKnownList: boolean removeKnownObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.GuardKnownList: com.l2jfrozen.gameserver.model.actor.instance.L2GuardInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.GuardKnownList: com.l2jfrozen.gameserver.model.L2Attackable getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.GuardKnownList: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.GuardKnownList: com.l2jfrozen.gameserver.model.L2Character getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.GuardKnownList: void <clinit>()
com.l2jfrozen.gameserver.model.actor.knownlist.GuardNoHTMLKnownList
com.l2jfrozen.gameserver.model.actor.knownlist.GuardNoHTMLKnownList: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.actor.knownlist.GuardNoHTMLKnownList: GuardNoHTMLKnownList(com.l2jfrozen.gameserver.model.actor.instance.L2GuardNoHTMLInstance)
com.l2jfrozen.gameserver.model.actor.knownlist.GuardNoHTMLKnownList: boolean addKnownObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.GuardNoHTMLKnownList: boolean addKnownObject(com.l2jfrozen.gameserver.model.L2Object,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.knownlist.GuardNoHTMLKnownList: boolean removeKnownObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.GuardNoHTMLKnownList: com.l2jfrozen.gameserver.model.actor.instance.L2GuardNoHTMLInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.GuardNoHTMLKnownList: com.l2jfrozen.gameserver.model.L2Attackable getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.GuardNoHTMLKnownList: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.GuardNoHTMLKnownList: com.l2jfrozen.gameserver.model.L2Character getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.GuardNoHTMLKnownList: void <clinit>()
com.l2jfrozen.gameserver.model.actor.knownlist.MonsterKnownList
com.l2jfrozen.gameserver.model.actor.knownlist.MonsterKnownList: MonsterKnownList(com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance)
com.l2jfrozen.gameserver.model.actor.knownlist.MonsterKnownList: boolean addKnownObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.MonsterKnownList: boolean addKnownObject(com.l2jfrozen.gameserver.model.L2Object,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.knownlist.MonsterKnownList: boolean removeKnownObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.MonsterKnownList: com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.MonsterKnownList: com.l2jfrozen.gameserver.model.L2Attackable getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.MonsterKnownList: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.MonsterKnownList: com.l2jfrozen.gameserver.model.L2Character getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.NpcKnownList
com.l2jfrozen.gameserver.model.actor.knownlist.NpcKnownList: NpcKnownList(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.model.actor.knownlist.NpcKnownList: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.NpcKnownList: int getDistanceToForgetObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.NpcKnownList: int getDistanceToWatchObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.NpcKnownList: com.l2jfrozen.gameserver.model.L2Character getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.NullKnownList
com.l2jfrozen.gameserver.model.actor.knownlist.NullKnownList: NullKnownList(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.NullKnownList: boolean addKnownObject(com.l2jfrozen.gameserver.model.L2Object,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.knownlist.NullKnownList: boolean addKnownObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.NullKnownList: com.l2jfrozen.gameserver.model.L2Object getActiveObject()
com.l2jfrozen.gameserver.model.actor.knownlist.NullKnownList: int getDistanceToForgetObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.NullKnownList: int getDistanceToWatchObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.NullKnownList: void removeAllKnownObjects()
com.l2jfrozen.gameserver.model.actor.knownlist.NullKnownList: boolean removeKnownObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList
com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList: com.l2jfrozen.gameserver.model.L2Object _activeObject
com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList: java.util.Map _knownObjects
com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList: ObjectKnownList(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList: boolean addKnownObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList: boolean addKnownObject(com.l2jfrozen.gameserver.model.L2Object,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList: boolean knowsObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList: void removeAllKnownObjects()
com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList: boolean removeKnownObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList: void updateKnownObjects()
com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList: void findCloseObjects()
com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList: void forgetObjects()
com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList: com.l2jfrozen.gameserver.model.L2Object getActiveObject()
com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList: int getDistanceToForgetObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList: int getDistanceToWatchObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList: java.util.Map getKnownObjects()
com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList$KnownListAsynchronousUpdateTask
com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList$KnownListAsynchronousUpdateTask: com.l2jfrozen.gameserver.model.L2Object _obj
com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList$KnownListAsynchronousUpdateTask: ObjectKnownList$KnownListAsynchronousUpdateTask(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.ObjectKnownList$KnownListAsynchronousUpdateTask: void run()
com.l2jfrozen.gameserver.model.actor.knownlist.PcKnownList
com.l2jfrozen.gameserver.model.actor.knownlist.PcKnownList: PcKnownList(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.knownlist.PcKnownList: boolean addKnownObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.PcKnownList: boolean addKnownObject(com.l2jfrozen.gameserver.model.L2Object,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.knownlist.PcKnownList: boolean removeKnownObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.PcKnownList: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.PcKnownList: int getDistanceToForgetObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.PcKnownList: int getDistanceToWatchObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.PcKnownList: com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.PcKnownList: com.l2jfrozen.gameserver.model.L2Character getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.PlayableKnownList
com.l2jfrozen.gameserver.model.actor.knownlist.PlayableKnownList: PlayableKnownList(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance)
com.l2jfrozen.gameserver.model.actor.knownlist.PlayableKnownList: com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.PlayableKnownList: com.l2jfrozen.gameserver.model.L2Character getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.RaceManagerKnownList
com.l2jfrozen.gameserver.model.actor.knownlist.RaceManagerKnownList: RaceManagerKnownList(com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance)
com.l2jfrozen.gameserver.model.actor.knownlist.RaceManagerKnownList: boolean addKnownObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.RaceManagerKnownList: boolean addKnownObject(com.l2jfrozen.gameserver.model.L2Object,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.knownlist.RaceManagerKnownList: boolean removeKnownObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.RaceManagerKnownList: com.l2jfrozen.gameserver.model.actor.instance.L2RaceManagerInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.RaceManagerKnownList: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.RaceManagerKnownList: com.l2jfrozen.gameserver.model.L2Character getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.SiegeGuardKnownList
com.l2jfrozen.gameserver.model.actor.knownlist.SiegeGuardKnownList: SiegeGuardKnownList(com.l2jfrozen.gameserver.model.actor.instance.L2SiegeGuardInstance)
com.l2jfrozen.gameserver.model.actor.knownlist.SiegeGuardKnownList: boolean addKnownObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.SiegeGuardKnownList: boolean addKnownObject(com.l2jfrozen.gameserver.model.L2Object,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.knownlist.SiegeGuardKnownList: com.l2jfrozen.gameserver.model.actor.instance.L2SiegeGuardInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.SiegeGuardKnownList: com.l2jfrozen.gameserver.model.L2Attackable getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.SiegeGuardKnownList: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.SiegeGuardKnownList: com.l2jfrozen.gameserver.model.L2Character getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.SummonKnownList
com.l2jfrozen.gameserver.model.actor.knownlist.SummonKnownList: SummonKnownList(com.l2jfrozen.gameserver.model.L2Summon)
com.l2jfrozen.gameserver.model.actor.knownlist.SummonKnownList: com.l2jfrozen.gameserver.model.L2Summon getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.SummonKnownList: int getDistanceToForgetObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.SummonKnownList: int getDistanceToWatchObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.knownlist.SummonKnownList: com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.knownlist.SummonKnownList: com.l2jfrozen.gameserver.model.L2Character getActiveChar()
com.l2jfrozen.gameserver.model.actor.poly.ObjectPoly
com.l2jfrozen.gameserver.model.actor.poly.ObjectPoly: com.l2jfrozen.gameserver.model.L2Object _activeObject
com.l2jfrozen.gameserver.model.actor.poly.ObjectPoly: int _polyId
com.l2jfrozen.gameserver.model.actor.poly.ObjectPoly: java.lang.String _polyType
com.l2jfrozen.gameserver.model.actor.poly.ObjectPoly: ObjectPoly(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.poly.ObjectPoly: void setPolyInfo(java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.model.actor.poly.ObjectPoly: com.l2jfrozen.gameserver.model.L2Object getActiveObject()
com.l2jfrozen.gameserver.model.actor.poly.ObjectPoly: boolean isMorphed()
com.l2jfrozen.gameserver.model.actor.poly.ObjectPoly: int getPolyId()
com.l2jfrozen.gameserver.model.actor.poly.ObjectPoly: void setPolyId(int)
com.l2jfrozen.gameserver.model.actor.poly.ObjectPoly: java.lang.String getPolyType()
com.l2jfrozen.gameserver.model.actor.poly.ObjectPoly: void setPolyType(java.lang.String)
com.l2jfrozen.gameserver.model.actor.position.L2CharPosition
com.l2jfrozen.gameserver.model.actor.position.L2CharPosition: int x
com.l2jfrozen.gameserver.model.actor.position.L2CharPosition: int y
com.l2jfrozen.gameserver.model.actor.position.L2CharPosition: int z
com.l2jfrozen.gameserver.model.actor.position.L2CharPosition: int heading
com.l2jfrozen.gameserver.model.actor.position.L2CharPosition: L2CharPosition(int,int,int,int)
com.l2jfrozen.gameserver.model.actor.position.L2CharPosition: L2CharPosition(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.position.ObjectPosition
com.l2jfrozen.gameserver.model.actor.position.ObjectPosition: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.actor.position.ObjectPosition: com.l2jfrozen.gameserver.model.L2Object _activeObject
com.l2jfrozen.gameserver.model.actor.position.ObjectPosition: int _heading
com.l2jfrozen.gameserver.model.actor.position.ObjectPosition: com.l2jfrozen.common.util.Point3D _worldPosition
com.l2jfrozen.gameserver.model.actor.position.ObjectPosition: com.l2jfrozen.gameserver.model.L2WorldRegion _worldRegion
com.l2jfrozen.gameserver.model.actor.position.ObjectPosition: java.lang.Boolean _changingRegion
com.l2jfrozen.gameserver.model.actor.position.ObjectPosition: boolean $assertionsDisabled
com.l2jfrozen.gameserver.model.actor.position.ObjectPosition: ObjectPosition(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.actor.position.ObjectPosition: void setXYZ(int,int,int)
com.l2jfrozen.gameserver.model.actor.position.ObjectPosition: void setXYZInvisible(int,int,int)
com.l2jfrozen.gameserver.model.actor.position.ObjectPosition: void updateWorldRegion()
com.l2jfrozen.gameserver.model.actor.position.ObjectPosition: com.l2jfrozen.gameserver.model.L2Object getActiveObject()
com.l2jfrozen.gameserver.model.actor.position.ObjectPosition: int getHeading()
com.l2jfrozen.gameserver.model.actor.position.ObjectPosition: void setHeading(int)
com.l2jfrozen.gameserver.model.actor.position.ObjectPosition: int getX()
com.l2jfrozen.gameserver.model.actor.position.ObjectPosition: void setX(int)
com.l2jfrozen.gameserver.model.actor.position.ObjectPosition: int getY()
com.l2jfrozen.gameserver.model.actor.position.ObjectPosition: void setY(int)
com.l2jfrozen.gameserver.model.actor.position.ObjectPosition: int getZ()
com.l2jfrozen.gameserver.model.actor.position.ObjectPosition: void setZ(int)
com.l2jfrozen.gameserver.model.actor.position.ObjectPosition: com.l2jfrozen.common.util.Point3D getWorldPosition()
com.l2jfrozen.gameserver.model.actor.position.ObjectPosition: void setWorldPosition(int,int,int)
com.l2jfrozen.gameserver.model.actor.position.ObjectPosition: void setWorldPosition(com.l2jfrozen.common.util.Point3D)
com.l2jfrozen.gameserver.model.actor.position.ObjectPosition: com.l2jfrozen.gameserver.model.L2WorldRegion getWorldRegion()
com.l2jfrozen.gameserver.model.actor.position.ObjectPosition: void setWorldRegion(com.l2jfrozen.gameserver.model.L2WorldRegion)
com.l2jfrozen.gameserver.model.actor.position.ObjectPosition: void <clinit>()
com.l2jfrozen.gameserver.model.actor.stat.CharStat
com.l2jfrozen.gameserver.model.actor.stat.CharStat: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.actor.stat.CharStat: com.l2jfrozen.gameserver.model.L2Character _activeChar
com.l2jfrozen.gameserver.model.actor.stat.CharStat: long _exp
com.l2jfrozen.gameserver.model.actor.stat.CharStat: int _sp
com.l2jfrozen.gameserver.model.actor.stat.CharStat: int _level
com.l2jfrozen.gameserver.model.actor.stat.CharStat: CharStat(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.stat.CharStat: double calcStat(com.l2jfrozen.gameserver.skills.Stats,double,com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.actor.stat.CharStat: int getAccuracy()
com.l2jfrozen.gameserver.model.actor.stat.CharStat: com.l2jfrozen.gameserver.model.L2Character getActiveChar()
com.l2jfrozen.gameserver.model.actor.stat.CharStat: float getAttackSpeedMultiplier()
com.l2jfrozen.gameserver.model.actor.stat.CharStat: int getCON()
com.l2jfrozen.gameserver.model.actor.stat.CharStat: double getCriticalDmg(com.l2jfrozen.gameserver.model.L2Character,double)
com.l2jfrozen.gameserver.model.actor.stat.CharStat: int getCriticalHit(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.actor.stat.CharStat: int getDEX()
com.l2jfrozen.gameserver.model.actor.stat.CharStat: int getEvasionRate(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.stat.CharStat: long getExp()
com.l2jfrozen.gameserver.model.actor.stat.CharStat: void setExp(long)
com.l2jfrozen.gameserver.model.actor.stat.CharStat: int getINT()
com.l2jfrozen.gameserver.model.actor.stat.CharStat: int getLevel()
com.l2jfrozen.gameserver.model.actor.stat.CharStat: void setLevel(int)
com.l2jfrozen.gameserver.model.actor.stat.CharStat: int getMagicalAttackRange(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.actor.stat.CharStat: int getMaxCp()
com.l2jfrozen.gameserver.model.actor.stat.CharStat: int getMaxHp()
com.l2jfrozen.gameserver.model.actor.stat.CharStat: int getMaxMp()
com.l2jfrozen.gameserver.model.actor.stat.CharStat: int getMAtk(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.actor.stat.CharStat: int getMAtkSpd()
com.l2jfrozen.gameserver.model.actor.stat.CharStat: int getMCriticalHit(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.actor.stat.CharStat: int getMDef(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.actor.stat.CharStat: int getMEN()
com.l2jfrozen.gameserver.model.actor.stat.CharStat: float getMovementSpeedMultiplier()
com.l2jfrozen.gameserver.model.actor.stat.CharStat: float getMoveSpeed()
com.l2jfrozen.gameserver.model.actor.stat.CharStat: double getMReuseRate(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.actor.stat.CharStat: double getPReuseRate(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.actor.stat.CharStat: int getPAtk(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.stat.CharStat: double getPAtkAnimals(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.stat.CharStat: double getPAtkDragons(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.stat.CharStat: double getPAtkAngels(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.stat.CharStat: double getPAtkInsects(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.stat.CharStat: double getPAtkMonsters(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.stat.CharStat: double getPAtkPlants(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.stat.CharStat: int getPAtkSpd()
com.l2jfrozen.gameserver.model.actor.stat.CharStat: double getPAtkUndead(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.stat.CharStat: double getPDefUndead(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.stat.CharStat: double getPDefPlants(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.stat.CharStat: double getPDefInsects(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.stat.CharStat: double getPDefAnimals(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.stat.CharStat: double getPDefMonsters(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.stat.CharStat: double getPDefDragons(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.stat.CharStat: double getPDefAngels(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.stat.CharStat: int getPDef(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.stat.CharStat: int getPhysicalAttackRange()
com.l2jfrozen.gameserver.model.actor.stat.CharStat: double getReuseModifier(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.stat.CharStat: int getRunSpeed()
com.l2jfrozen.gameserver.model.actor.stat.CharStat: int getShldDef()
com.l2jfrozen.gameserver.model.actor.stat.CharStat: int getSp()
com.l2jfrozen.gameserver.model.actor.stat.CharStat: void setSp(int)
com.l2jfrozen.gameserver.model.actor.stat.CharStat: int getSTR()
com.l2jfrozen.gameserver.model.actor.stat.CharStat: int getWalkSpeed()
com.l2jfrozen.gameserver.model.actor.stat.CharStat: int getWIT()
com.l2jfrozen.gameserver.model.actor.stat.CharStat: int getMpConsume(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.actor.stat.CharStat: int getMpInitialConsume(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.actor.stat.CharStat: double getPDefGiants(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.stat.CharStat: double getPDefMagicCreatures(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.stat.CharStat: double getPAtkGiants(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.stat.CharStat: double getPAtkMagicCreatures(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.stat.CharStat$1
com.l2jfrozen.gameserver.model.actor.stat.CharStat$1: int[] $SwitchMap$com$l2jfrozen$gameserver$skills$Stats
com.l2jfrozen.gameserver.model.actor.stat.CharStat$1: void <clinit>()
com.l2jfrozen.gameserver.model.actor.stat.DoorStat
com.l2jfrozen.gameserver.model.actor.stat.DoorStat: DoorStat(com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance)
com.l2jfrozen.gameserver.model.actor.stat.DoorStat: com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.stat.DoorStat: int getLevel()
com.l2jfrozen.gameserver.model.actor.stat.DoorStat: com.l2jfrozen.gameserver.model.L2Character getActiveChar()
com.l2jfrozen.gameserver.model.actor.stat.NpcStat
com.l2jfrozen.gameserver.model.actor.stat.NpcStat: NpcStat(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.model.actor.stat.NpcStat: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.stat.NpcStat: int getMaxHp()
com.l2jfrozen.gameserver.model.actor.stat.NpcStat: com.l2jfrozen.gameserver.model.L2Character getActiveChar()
com.l2jfrozen.gameserver.model.actor.stat.PcStat
com.l2jfrozen.gameserver.model.actor.stat.PcStat: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.actor.stat.PcStat: int _oldMaxHp
com.l2jfrozen.gameserver.model.actor.stat.PcStat: int _oldMaxMp
com.l2jfrozen.gameserver.model.actor.stat.PcStat: int _oldMaxCp
com.l2jfrozen.gameserver.model.actor.stat.PcStat: PcStat(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.stat.PcStat: boolean addExp(long)
com.l2jfrozen.gameserver.model.actor.stat.PcStat: boolean addExpAndSp(long,int)
com.l2jfrozen.gameserver.model.actor.stat.PcStat: boolean removeExpAndSp(long,int)
com.l2jfrozen.gameserver.model.actor.stat.PcStat: boolean addLevel(byte)
com.l2jfrozen.gameserver.model.actor.stat.PcStat: boolean addSp(int)
com.l2jfrozen.gameserver.model.actor.stat.PcStat: long getExpForLevel(int)
com.l2jfrozen.gameserver.model.actor.stat.PcStat: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.stat.PcStat: long getExp()
com.l2jfrozen.gameserver.model.actor.stat.PcStat: void setExp(long)
com.l2jfrozen.gameserver.model.actor.stat.PcStat: int getLevel()
com.l2jfrozen.gameserver.model.actor.stat.PcStat: void setLevel(int)
com.l2jfrozen.gameserver.model.actor.stat.PcStat: int getMaxCp()
com.l2jfrozen.gameserver.model.actor.stat.PcStat: int getMaxHp()
com.l2jfrozen.gameserver.model.actor.stat.PcStat: int getMaxMp()
com.l2jfrozen.gameserver.model.actor.stat.PcStat: int getSp()
com.l2jfrozen.gameserver.model.actor.stat.PcStat: void setSp(int)
com.l2jfrozen.gameserver.model.actor.stat.PcStat: com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.stat.PcStat: com.l2jfrozen.gameserver.model.L2Character getActiveChar()
com.l2jfrozen.gameserver.model.actor.stat.PcStat: void <clinit>()
com.l2jfrozen.gameserver.model.actor.stat.PetStat
com.l2jfrozen.gameserver.model.actor.stat.PetStat: PetStat(com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance)
com.l2jfrozen.gameserver.model.actor.stat.PetStat: boolean addExp(int)
com.l2jfrozen.gameserver.model.actor.stat.PetStat: boolean addExpAndSp(long,int)
com.l2jfrozen.gameserver.model.actor.stat.PetStat: boolean addLevel(byte)
com.l2jfrozen.gameserver.model.actor.stat.PetStat: long getExpForLevel(int)
com.l2jfrozen.gameserver.model.actor.stat.PetStat: com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.stat.PetStat: int getFeedBattle()
com.l2jfrozen.gameserver.model.actor.stat.PetStat: int getFeedNormal()
com.l2jfrozen.gameserver.model.actor.stat.PetStat: void setLevel(int)
com.l2jfrozen.gameserver.model.actor.stat.PetStat: int getMaxFeed()
com.l2jfrozen.gameserver.model.actor.stat.PetStat: int getMaxHp()
com.l2jfrozen.gameserver.model.actor.stat.PetStat: int getMaxMp()
com.l2jfrozen.gameserver.model.actor.stat.PetStat: int getMAtk(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.actor.stat.PetStat: int getMDef(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.actor.stat.PetStat: int getPAtk(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.stat.PetStat: int getPDef(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.stat.PetStat: int getAccuracy()
com.l2jfrozen.gameserver.model.actor.stat.PetStat: int getCriticalHit(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.actor.stat.PetStat: int getEvasionRate(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.stat.PetStat: int getRunSpeed()
com.l2jfrozen.gameserver.model.actor.stat.PetStat: int getPAtkSpd()
com.l2jfrozen.gameserver.model.actor.stat.PetStat: int getMAtkSpd()
com.l2jfrozen.gameserver.model.actor.stat.PetStat: com.l2jfrozen.gameserver.model.L2Summon getActiveChar()
com.l2jfrozen.gameserver.model.actor.stat.PetStat: com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.stat.PetStat: com.l2jfrozen.gameserver.model.L2Character getActiveChar()
com.l2jfrozen.gameserver.model.actor.stat.PetStat$1
com.l2jfrozen.gameserver.model.actor.stat.PetStat$1: int[] $SwitchMap$com$l2jfrozen$gameserver$skills$Stats
com.l2jfrozen.gameserver.model.actor.stat.PetStat$1: void <clinit>()
com.l2jfrozen.gameserver.model.actor.stat.PlayableStat
com.l2jfrozen.gameserver.model.actor.stat.PlayableStat: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.actor.stat.PlayableStat: PlayableStat(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance)
com.l2jfrozen.gameserver.model.actor.stat.PlayableStat: boolean addExp(long)
com.l2jfrozen.gameserver.model.actor.stat.PlayableStat: boolean removeExp(long)
com.l2jfrozen.gameserver.model.actor.stat.PlayableStat: boolean addExpAndSp(long,int)
com.l2jfrozen.gameserver.model.actor.stat.PlayableStat: boolean removeExpAndSp(long,int)
com.l2jfrozen.gameserver.model.actor.stat.PlayableStat: boolean addLevel(byte)
com.l2jfrozen.gameserver.model.actor.stat.PlayableStat: boolean addSp(int)
com.l2jfrozen.gameserver.model.actor.stat.PlayableStat: boolean removeSp(int)
com.l2jfrozen.gameserver.model.actor.stat.PlayableStat: long getExpForLevel(int)
com.l2jfrozen.gameserver.model.actor.stat.PlayableStat: com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.stat.PlayableStat: com.l2jfrozen.gameserver.model.L2Character getActiveChar()
com.l2jfrozen.gameserver.model.actor.stat.SummonStat
com.l2jfrozen.gameserver.model.actor.stat.SummonStat: SummonStat(com.l2jfrozen.gameserver.model.L2Summon)
com.l2jfrozen.gameserver.model.actor.stat.SummonStat: com.l2jfrozen.gameserver.model.L2Summon getActiveChar()
com.l2jfrozen.gameserver.model.actor.stat.SummonStat: com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.stat.SummonStat: com.l2jfrozen.gameserver.model.L2Character getActiveChar()
com.l2jfrozen.gameserver.model.actor.status.CharStatus
com.l2jfrozen.gameserver.model.actor.status.CharStatus: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.actor.status.CharStatus: com.l2jfrozen.gameserver.model.L2Character _activeChar
com.l2jfrozen.gameserver.model.actor.status.CharStatus: double _currentCp
com.l2jfrozen.gameserver.model.actor.status.CharStatus: double _currentHp
com.l2jfrozen.gameserver.model.actor.status.CharStatus: double _currentMp
com.l2jfrozen.gameserver.model.actor.status.CharStatus: java.util.Set _StatusListener
com.l2jfrozen.gameserver.model.actor.status.CharStatus: java.util.concurrent.Future _regTask
com.l2jfrozen.gameserver.model.actor.status.CharStatus: byte _flagsRegenActive
com.l2jfrozen.gameserver.model.actor.status.CharStatus: byte REGEN_FLAG_CP
com.l2jfrozen.gameserver.model.actor.status.CharStatus: byte REGEN_FLAG_HP
com.l2jfrozen.gameserver.model.actor.status.CharStatus: byte REGEN_FLAG_MP
com.l2jfrozen.gameserver.model.actor.status.CharStatus: CharStatus(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.status.CharStatus: void addStatusListener(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.status.CharStatus: void reduceCp(int)
com.l2jfrozen.gameserver.model.actor.status.CharStatus: void reduceHp(double,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.status.CharStatus: void reduceHp(double,com.l2jfrozen.gameserver.model.L2Character,boolean)
com.l2jfrozen.gameserver.model.actor.status.CharStatus: void reduceMp(double)
com.l2jfrozen.gameserver.model.actor.status.CharStatus: void removeStatusListener(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.status.CharStatus: void startHpMpRegeneration()
com.l2jfrozen.gameserver.model.actor.status.CharStatus: void stopHpMpRegeneration()
com.l2jfrozen.gameserver.model.actor.status.CharStatus: com.l2jfrozen.gameserver.model.L2Character getActiveChar()
com.l2jfrozen.gameserver.model.actor.status.CharStatus: double getCurrentCp()
com.l2jfrozen.gameserver.model.actor.status.CharStatus: void setCurrentCpDirect(double)
com.l2jfrozen.gameserver.model.actor.status.CharStatus: void setCurrentCp(double)
com.l2jfrozen.gameserver.model.actor.status.CharStatus: void setCurrentCp(double,boolean)
com.l2jfrozen.gameserver.model.actor.status.CharStatus: void setCurrentCp(double,boolean,boolean)
com.l2jfrozen.gameserver.model.actor.status.CharStatus: double getCurrentHp()
com.l2jfrozen.gameserver.model.actor.status.CharStatus: void setCurrentHp(double)
com.l2jfrozen.gameserver.model.actor.status.CharStatus: void setCurrentHpDirect(double)
com.l2jfrozen.gameserver.model.actor.status.CharStatus: void setCurrentMpDirect(double)
com.l2jfrozen.gameserver.model.actor.status.CharStatus: void setCurrentHp(double,boolean)
com.l2jfrozen.gameserver.model.actor.status.CharStatus: void setCurrentHp(double,boolean,boolean)
com.l2jfrozen.gameserver.model.actor.status.CharStatus: void setCurrentHpMp(double,double)
com.l2jfrozen.gameserver.model.actor.status.CharStatus: double getCurrentMp()
com.l2jfrozen.gameserver.model.actor.status.CharStatus: void setCurrentMp(double)
com.l2jfrozen.gameserver.model.actor.status.CharStatus: void setCurrentMp(double,boolean)
com.l2jfrozen.gameserver.model.actor.status.CharStatus: void setCurrentMp(double,boolean,boolean)
com.l2jfrozen.gameserver.model.actor.status.CharStatus: java.util.Set getStatusListener()
com.l2jfrozen.gameserver.model.actor.status.CharStatus: void doRegeneration()
com.l2jfrozen.gameserver.model.actor.status.CharStatus: void <clinit>()
com.l2jfrozen.gameserver.model.actor.status.CharStatus$RegenTask
com.l2jfrozen.gameserver.model.actor.status.CharStatus$RegenTask: com.l2jfrozen.gameserver.model.actor.status.CharStatus this$0
com.l2jfrozen.gameserver.model.actor.status.CharStatus$RegenTask: CharStatus$RegenTask(com.l2jfrozen.gameserver.model.actor.status.CharStatus)
com.l2jfrozen.gameserver.model.actor.status.CharStatus$RegenTask: void run()
com.l2jfrozen.gameserver.model.actor.status.DoorStatus
com.l2jfrozen.gameserver.model.actor.status.DoorStatus: DoorStatus(com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance)
com.l2jfrozen.gameserver.model.actor.status.DoorStatus: com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.status.DoorStatus: com.l2jfrozen.gameserver.model.L2Character getActiveChar()
com.l2jfrozen.gameserver.model.actor.status.NpcStatus
com.l2jfrozen.gameserver.model.actor.status.NpcStatus: NpcStatus(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.model.actor.status.NpcStatus: void reduceHp(double,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.status.NpcStatus: void reduceHp(double,com.l2jfrozen.gameserver.model.L2Character,boolean)
com.l2jfrozen.gameserver.model.actor.status.NpcStatus: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.status.NpcStatus: com.l2jfrozen.gameserver.model.L2Character getActiveChar()
com.l2jfrozen.gameserver.model.actor.status.PcStatus
com.l2jfrozen.gameserver.model.actor.status.PcStatus: PcStatus(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.actor.status.PcStatus: void reduceHp(double,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.status.PcStatus: void reduceHp(double,com.l2jfrozen.gameserver.model.L2Character,boolean)
com.l2jfrozen.gameserver.model.actor.status.PcStatus: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.status.PcStatus: com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.status.PcStatus: com.l2jfrozen.gameserver.model.L2Character getActiveChar()
com.l2jfrozen.gameserver.model.actor.status.PetStatus
com.l2jfrozen.gameserver.model.actor.status.PetStatus: int _currentFed
com.l2jfrozen.gameserver.model.actor.status.PetStatus: PetStatus(com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance)
com.l2jfrozen.gameserver.model.actor.status.PetStatus: void reduceHp(double,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.status.PetStatus: void reduceHp(double,com.l2jfrozen.gameserver.model.L2Character,boolean)
com.l2jfrozen.gameserver.model.actor.status.PetStatus: com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.status.PetStatus: int getCurrentFed()
com.l2jfrozen.gameserver.model.actor.status.PetStatus: void setCurrentFed(int)
com.l2jfrozen.gameserver.model.actor.status.PetStatus: com.l2jfrozen.gameserver.model.L2Summon getActiveChar()
com.l2jfrozen.gameserver.model.actor.status.PetStatus: com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.status.PetStatus: com.l2jfrozen.gameserver.model.L2Character getActiveChar()
com.l2jfrozen.gameserver.model.actor.status.PlayableStatus
com.l2jfrozen.gameserver.model.actor.status.PlayableStatus: PlayableStatus(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance)
com.l2jfrozen.gameserver.model.actor.status.PlayableStatus: void reduceHp(double,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.actor.status.PlayableStatus: void reduceHp(double,com.l2jfrozen.gameserver.model.L2Character,boolean)
com.l2jfrozen.gameserver.model.actor.status.PlayableStatus: com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.status.PlayableStatus: com.l2jfrozen.gameserver.model.L2Character getActiveChar()
com.l2jfrozen.gameserver.model.actor.status.SummonStatus
com.l2jfrozen.gameserver.model.actor.status.SummonStatus: SummonStatus(com.l2jfrozen.gameserver.model.L2Summon)
com.l2jfrozen.gameserver.model.actor.status.SummonStatus: com.l2jfrozen.gameserver.model.L2Summon getActiveChar()
com.l2jfrozen.gameserver.model.actor.status.SummonStatus: com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance getActiveChar()
com.l2jfrozen.gameserver.model.actor.status.SummonStatus: com.l2jfrozen.gameserver.model.L2Character getActiveChar()
com.l2jfrozen.gameserver.model.base.ClassId
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId fighter
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId warrior
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId gladiator
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId warlord
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId knight
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId paladin
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId darkAvenger
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId rogue
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId treasureHunter
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId hawkeye
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId mage
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId wizard
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId sorceror
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId necromancer
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId warlock
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId cleric
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId bishop
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId prophet
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId elvenFighter
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId elvenKnight
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId templeKnight
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId swordSinger
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId elvenScout
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId plainsWalker
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId silverRanger
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId elvenMage
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId elvenWizard
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId spellsinger
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId elementalSummoner
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId oracle
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId elder
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId darkFighter
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId palusKnight
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId shillienKnight
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId bladedancer
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId assassin
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId abyssWalker
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId phantomRanger
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId darkMage
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId darkWizard
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId spellhowler
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId phantomSummoner
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId shillienOracle
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId shillenElder
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId orcFighter
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId orcRaider
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId destroyer
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId orcMonk
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId tyrant
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId orcMage
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId orcShaman
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId overlord
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId warcryer
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId dwarvenFighter
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId scavenger
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId bountyHunter
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId artisan
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId warsmith
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId dummyEntry1
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId dummyEntry2
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId dummyEntry3
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId dummyEntry4
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId dummyEntry5
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId dummyEntry6
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId dummyEntry7
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId dummyEntry8
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId dummyEntry9
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId dummyEntry10
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId dummyEntry11
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId dummyEntry12
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId dummyEntry13
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId dummyEntry14
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId dummyEntry15
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId dummyEntry16
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId dummyEntry17
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId dummyEntry18
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId dummyEntry19
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId dummyEntry20
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId dummyEntry21
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId dummyEntry22
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId dummyEntry23
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId dummyEntry24
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId dummyEntry25
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId dummyEntry26
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId dummyEntry27
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId dummyEntry28
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId dummyEntry29
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId dummyEntry30
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId duelist
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId dreadnought
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId phoenixKnight
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId hellKnight
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId sagittarius
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId adventurer
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId archmage
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId soultaker
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId arcanaLord
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId cardinal
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId hierophant
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId evaTemplar
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId swordMuse
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId windRider
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId moonlightSentinel
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId mysticMuse
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId elementalMaster
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId evaSaint
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId shillienTemplar
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId spectralDancer
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId ghostHunter
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId ghostSentinel
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId stormScreamer
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId spectralMaster
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId shillienSaint
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId titan
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId grandKhauatari
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId dominator
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId doomcryer
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId fortuneSeeker
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId maestro
com.l2jfrozen.gameserver.model.base.ClassId: int _id
com.l2jfrozen.gameserver.model.base.ClassId: boolean _isMage
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.Race _race
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId _parent
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId[] $VALUES
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId[] values()
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId valueOf(java.lang.String)
com.l2jfrozen.gameserver.model.base.ClassId: ClassId(java.lang.String,int,int,boolean,com.l2jfrozen.gameserver.model.base.Race,com.l2jfrozen.gameserver.model.base.ClassId)
com.l2jfrozen.gameserver.model.base.ClassId: int getId()
com.l2jfrozen.gameserver.model.base.ClassId: boolean isMage()
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.Race getRace()
com.l2jfrozen.gameserver.model.base.ClassId: boolean childOf(com.l2jfrozen.gameserver.model.base.ClassId)
com.l2jfrozen.gameserver.model.base.ClassId: boolean equalsOrChildOf(com.l2jfrozen.gameserver.model.base.ClassId)
com.l2jfrozen.gameserver.model.base.ClassId: int level()
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId getParent()
com.l2jfrozen.gameserver.model.base.ClassId: com.l2jfrozen.gameserver.model.base.ClassId getClassIdByOrdinal(int)
com.l2jfrozen.gameserver.model.base.ClassId: void <clinit>()
com.l2jfrozen.gameserver.model.base.ClassLevel
com.l2jfrozen.gameserver.model.base.ClassLevel: com.l2jfrozen.gameserver.model.base.ClassLevel First
com.l2jfrozen.gameserver.model.base.ClassLevel: com.l2jfrozen.gameserver.model.base.ClassLevel Second
com.l2jfrozen.gameserver.model.base.ClassLevel: com.l2jfrozen.gameserver.model.base.ClassLevel Third
com.l2jfrozen.gameserver.model.base.ClassLevel: com.l2jfrozen.gameserver.model.base.ClassLevel Fourth
com.l2jfrozen.gameserver.model.base.ClassLevel: com.l2jfrozen.gameserver.model.base.ClassLevel[] $VALUES
com.l2jfrozen.gameserver.model.base.ClassLevel: com.l2jfrozen.gameserver.model.base.ClassLevel[] values()
com.l2jfrozen.gameserver.model.base.ClassLevel: com.l2jfrozen.gameserver.model.base.ClassLevel valueOf(java.lang.String)
com.l2jfrozen.gameserver.model.base.ClassLevel: ClassLevel(java.lang.String,int)
com.l2jfrozen.gameserver.model.base.ClassLevel: void <clinit>()
com.l2jfrozen.gameserver.model.base.ClassType
com.l2jfrozen.gameserver.model.base.ClassType: com.l2jfrozen.gameserver.model.base.ClassType Fighter
com.l2jfrozen.gameserver.model.base.ClassType: com.l2jfrozen.gameserver.model.base.ClassType Mystic
com.l2jfrozen.gameserver.model.base.ClassType: com.l2jfrozen.gameserver.model.base.ClassType Priest
com.l2jfrozen.gameserver.model.base.ClassType: com.l2jfrozen.gameserver.model.base.ClassType[] $VALUES
com.l2jfrozen.gameserver.model.base.ClassType: com.l2jfrozen.gameserver.model.base.ClassType[] values()
com.l2jfrozen.gameserver.model.base.ClassType: com.l2jfrozen.gameserver.model.base.ClassType valueOf(java.lang.String)
com.l2jfrozen.gameserver.model.base.ClassType: ClassType(java.lang.String,int)
com.l2jfrozen.gameserver.model.base.ClassType: void <clinit>()
com.l2jfrozen.gameserver.model.base.PlayerClass
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass HumanFighter
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass Warrior
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass Gladiator
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass Warlord
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass HumanKnight
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass Paladin
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass DarkAvenger
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass Rogue
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass TreasureHunter
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass Hawkeye
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass HumanMystic
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass HumanWizard
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass Sorceror
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass Necromancer
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass Warlock
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass Cleric
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass Bishop
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass Prophet
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass ElvenFighter
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass ElvenKnight
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass TempleKnight
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass Swordsinger
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass ElvenScout
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass Plainswalker
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass SilverRanger
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass ElvenMystic
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass ElvenWizard
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass Spellsinger
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass ElementalSummoner
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass ElvenOracle
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass ElvenElder
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass DarkElvenFighter
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass PalusKnight
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass ShillienKnight
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass Bladedancer
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass Assassin
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass AbyssWalker
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass PhantomRanger
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass DarkElvenMystic
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass DarkElvenWizard
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass Spellhowler
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass PhantomSummoner
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass ShillienOracle
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass ShillienElder
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass OrcFighter
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass OrcRaider
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass Destroyer
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass OrcMonk
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass Tyrant
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass OrcMystic
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass OrcShaman
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass Overlord
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass Warcryer
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass DwarvenFighter
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass DwarvenScavenger
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass BountyHunter
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass DwarvenArtisan
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass Warsmith
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass dummyEntry1
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass dummyEntry2
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass dummyEntry3
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass dummyEntry4
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass dummyEntry5
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass dummyEntry6
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass dummyEntry7
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass dummyEntry8
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass dummyEntry9
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass dummyEntry10
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass dummyEntry11
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass dummyEntry12
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass dummyEntry13
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass dummyEntry14
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass dummyEntry15
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass dummyEntry16
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass dummyEntry17
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass dummyEntry18
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass dummyEntry19
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass dummyEntry20
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass dummyEntry21
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass dummyEntry22
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass dummyEntry23
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass dummyEntry24
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass dummyEntry25
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass dummyEntry26
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass dummyEntry27
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass dummyEntry28
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass dummyEntry29
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass dummyEntry30
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass duelist
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass dreadnought
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass phoenixKnight
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass hellKnight
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass sagittarius
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass adventurer
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass archmage
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass soultaker
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass arcanaLord
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass cardinal
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass hierophant
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass evaTemplar
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass swordMuse
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass windRider
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass moonlightSentinel
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass mysticMuse
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass elementalMaster
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass evaSaint
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass shillienTemplar
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass spectralDancer
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass ghostHunter
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass ghostSentinel
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass stormScreamer
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass spectralMaster
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass shillienSaint
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass titan
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass grandKhauatari
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass dominator
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass doomcryer
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass fortuneSeeker
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass maestro
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerRace _race
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.ClassLevel _level
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.ClassType _type
com.l2jfrozen.gameserver.model.base.PlayerClass: java.util.Set mainSubclassSet
com.l2jfrozen.gameserver.model.base.PlayerClass: java.util.Set neverSubclassed
com.l2jfrozen.gameserver.model.base.PlayerClass: java.util.Set subclasseSet1
com.l2jfrozen.gameserver.model.base.PlayerClass: java.util.Set subclasseSet2
com.l2jfrozen.gameserver.model.base.PlayerClass: java.util.Set subclasseSet3
com.l2jfrozen.gameserver.model.base.PlayerClass: java.util.Set subclasseSet4
com.l2jfrozen.gameserver.model.base.PlayerClass: java.util.Set subclasseSet5
com.l2jfrozen.gameserver.model.base.PlayerClass: java.util.EnumMap subclassSetMap
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass[] $VALUES
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass[] values()
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.PlayerClass valueOf(java.lang.String)
com.l2jfrozen.gameserver.model.base.PlayerClass: PlayerClass(java.lang.String,int,com.l2jfrozen.gameserver.model.base.PlayerRace,com.l2jfrozen.gameserver.model.base.ClassType,com.l2jfrozen.gameserver.model.base.ClassLevel)
com.l2jfrozen.gameserver.model.base.PlayerClass: java.util.Set getAvailableSubclasses(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.base.PlayerClass: java.util.EnumSet getSet(com.l2jfrozen.gameserver.model.base.PlayerRace,com.l2jfrozen.gameserver.model.base.ClassLevel)
com.l2jfrozen.gameserver.model.base.PlayerClass: boolean isOfRace(com.l2jfrozen.gameserver.model.base.PlayerRace)
com.l2jfrozen.gameserver.model.base.PlayerClass: boolean isOfType(com.l2jfrozen.gameserver.model.base.ClassType)
com.l2jfrozen.gameserver.model.base.PlayerClass: boolean isOfLevel(com.l2jfrozen.gameserver.model.base.ClassLevel)
com.l2jfrozen.gameserver.model.base.PlayerClass: com.l2jfrozen.gameserver.model.base.ClassLevel getLevel()
com.l2jfrozen.gameserver.model.base.PlayerClass: void <clinit>()
com.l2jfrozen.gameserver.model.base.PlayerClass$1
com.l2jfrozen.gameserver.model.base.PlayerClass$1: int[] $SwitchMap$com$l2jfrozen$gameserver$model$base$Race
com.l2jfrozen.gameserver.model.base.PlayerClass$1: void <clinit>()
com.l2jfrozen.gameserver.model.base.PlayerRace
com.l2jfrozen.gameserver.model.base.PlayerRace: com.l2jfrozen.gameserver.model.base.PlayerRace Human
com.l2jfrozen.gameserver.model.base.PlayerRace: com.l2jfrozen.gameserver.model.base.PlayerRace LightElf
com.l2jfrozen.gameserver.model.base.PlayerRace: com.l2jfrozen.gameserver.model.base.PlayerRace DarkElf
com.l2jfrozen.gameserver.model.base.PlayerRace: com.l2jfrozen.gameserver.model.base.PlayerRace Orc
com.l2jfrozen.gameserver.model.base.PlayerRace: com.l2jfrozen.gameserver.model.base.PlayerRace Dwarf
com.l2jfrozen.gameserver.model.base.PlayerRace: com.l2jfrozen.gameserver.model.base.PlayerRace[] $VALUES
com.l2jfrozen.gameserver.model.base.PlayerRace: com.l2jfrozen.gameserver.model.base.PlayerRace[] values()
com.l2jfrozen.gameserver.model.base.PlayerRace: com.l2jfrozen.gameserver.model.base.PlayerRace valueOf(java.lang.String)
com.l2jfrozen.gameserver.model.base.PlayerRace: PlayerRace(java.lang.String,int)
com.l2jfrozen.gameserver.model.base.PlayerRace: void <clinit>()
com.l2jfrozen.gameserver.model.base.Race
com.l2jfrozen.gameserver.model.base.Race: com.l2jfrozen.gameserver.model.base.Race human
com.l2jfrozen.gameserver.model.base.Race: com.l2jfrozen.gameserver.model.base.Race elf
com.l2jfrozen.gameserver.model.base.Race: com.l2jfrozen.gameserver.model.base.Race darkelf
com.l2jfrozen.gameserver.model.base.Race: com.l2jfrozen.gameserver.model.base.Race orc
com.l2jfrozen.gameserver.model.base.Race: com.l2jfrozen.gameserver.model.base.Race dwarf
com.l2jfrozen.gameserver.model.base.Race: com.l2jfrozen.gameserver.model.base.Race[] $VALUES
com.l2jfrozen.gameserver.model.base.Race: com.l2jfrozen.gameserver.model.base.Race[] values()
com.l2jfrozen.gameserver.model.base.Race: com.l2jfrozen.gameserver.model.base.Race valueOf(java.lang.String)
com.l2jfrozen.gameserver.model.base.Race: Race(java.lang.String,int)
com.l2jfrozen.gameserver.model.base.Race: void <clinit>()
com.l2jfrozen.gameserver.model.base.Sex
com.l2jfrozen.gameserver.model.base.Sex: int MALE
com.l2jfrozen.gameserver.model.base.Sex: int FEMALE
com.l2jfrozen.gameserver.model.base.Sex: Sex()
com.l2jfrozen.gameserver.model.base.SoulCrystal
com.l2jfrozen.gameserver.model.base.SoulCrystal: int[][] HighSoulConvert
com.l2jfrozen.gameserver.model.base.SoulCrystal: int[] SoulCrystalTable
com.l2jfrozen.gameserver.model.base.SoulCrystal: int MAX_CRYSTALS_LEVEL
com.l2jfrozen.gameserver.model.base.SoulCrystal: int BREAK_CHANCE
com.l2jfrozen.gameserver.model.base.SoulCrystal: int LEVEL_CHANCE
com.l2jfrozen.gameserver.model.base.SoulCrystal: int RED_BROKEN_CRYSTAL
com.l2jfrozen.gameserver.model.base.SoulCrystal: int GRN_BROKEN_CYRSTAL
com.l2jfrozen.gameserver.model.base.SoulCrystal: int BLU_BROKEN_CRYSTAL
com.l2jfrozen.gameserver.model.base.SoulCrystal: int RED_NEW_CRYSTAL
com.l2jfrozen.gameserver.model.base.SoulCrystal: int GRN_NEW_CYRSTAL
com.l2jfrozen.gameserver.model.base.SoulCrystal: int BLU_NEW_CRYSTAL
com.l2jfrozen.gameserver.model.base.SoulCrystal: SoulCrystal()
com.l2jfrozen.gameserver.model.base.SoulCrystal: void <clinit>()
com.l2jfrozen.gameserver.model.base.SubClass
com.l2jfrozen.gameserver.model.base.SubClass: com.l2jfrozen.gameserver.model.base.PlayerClass _class
com.l2jfrozen.gameserver.model.base.SubClass: long _exp
com.l2jfrozen.gameserver.model.base.SubClass: int _sp
com.l2jfrozen.gameserver.model.base.SubClass: int _level
com.l2jfrozen.gameserver.model.base.SubClass: int _classIndex
com.l2jfrozen.gameserver.model.base.SubClass: SubClass(int,long,int,byte,int)
com.l2jfrozen.gameserver.model.base.SubClass: SubClass(int,int)
com.l2jfrozen.gameserver.model.base.SubClass: SubClass()
com.l2jfrozen.gameserver.model.base.SubClass: com.l2jfrozen.gameserver.model.base.PlayerClass getClassDefinition()
com.l2jfrozen.gameserver.model.base.SubClass: int getClassId()
com.l2jfrozen.gameserver.model.base.SubClass: long getExp()
com.l2jfrozen.gameserver.model.base.SubClass: int getSp()
com.l2jfrozen.gameserver.model.base.SubClass: int getLevel()
com.l2jfrozen.gameserver.model.base.SubClass: int getClassIndex()
com.l2jfrozen.gameserver.model.base.SubClass: void setClassId(int)
com.l2jfrozen.gameserver.model.base.SubClass: void setExp(long)
com.l2jfrozen.gameserver.model.base.SubClass: void setSp(int)
com.l2jfrozen.gameserver.model.base.SubClass: void setClassIndex(int)
com.l2jfrozen.gameserver.model.base.SubClass: void setLevel(int)
com.l2jfrozen.gameserver.model.base.SubClass: void incLevel()
com.l2jfrozen.gameserver.model.base.SubClass: void decLevel()
com.l2jfrozen.gameserver.model.entity.Announcements
com.l2jfrozen.gameserver.model.entity.Announcements: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.entity.Announcements: com.l2jfrozen.gameserver.model.entity.Announcements _instance
com.l2jfrozen.gameserver.model.entity.Announcements: java.util.List _announcements
com.l2jfrozen.gameserver.model.entity.Announcements: java.util.List _eventAnnouncements
com.l2jfrozen.gameserver.model.entity.Announcements: Announcements()
com.l2jfrozen.gameserver.model.entity.Announcements: com.l2jfrozen.gameserver.model.entity.Announcements getInstance()
com.l2jfrozen.gameserver.model.entity.Announcements: void loadAnnouncements()
com.l2jfrozen.gameserver.model.entity.Announcements: void showAnnouncements(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.Announcements: void addEventAnnouncement(com.l2jfrozen.gameserver.script.DateRange,java.lang.String[])
com.l2jfrozen.gameserver.model.entity.Announcements: void listAnnouncements(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.Announcements: void addAnnouncement(java.lang.String)
com.l2jfrozen.gameserver.model.entity.Announcements: void delAnnouncement(int)
com.l2jfrozen.gameserver.model.entity.Announcements: void readFromDisk(java.io.File)
com.l2jfrozen.gameserver.model.entity.Announcements: void saveToDisk()
com.l2jfrozen.gameserver.model.entity.Announcements: void announceToAll(java.lang.String)
com.l2jfrozen.gameserver.model.entity.Announcements: void gameAnnounceToAll(java.lang.String)
com.l2jfrozen.gameserver.model.entity.Announcements: void announceToAll(com.l2jfrozen.gameserver.network.serverpackets.SystemMessage)
com.l2jfrozen.gameserver.model.entity.Announcements: void handleAnnounce(java.lang.String,int)
com.l2jfrozen.gameserver.model.entity.Announcements: void <clinit>()
com.l2jfrozen.gameserver.model.entity.Auction
com.l2jfrozen.gameserver.model.entity.Auction: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.entity.Auction: int _id
com.l2jfrozen.gameserver.model.entity.Auction: int _adenaId
com.l2jfrozen.gameserver.model.entity.Auction: long _endDate
com.l2jfrozen.gameserver.model.entity.Auction: int _highestBidderId
com.l2jfrozen.gameserver.model.entity.Auction: java.lang.String _highestBidderName
com.l2jfrozen.gameserver.model.entity.Auction: int _highestBidderMaxBid
com.l2jfrozen.gameserver.model.entity.Auction: int _itemId
com.l2jfrozen.gameserver.model.entity.Auction: java.lang.String _itemName
com.l2jfrozen.gameserver.model.entity.Auction: int _itemObjectId
com.l2jfrozen.gameserver.model.entity.Auction: int _itemQuantity
com.l2jfrozen.gameserver.model.entity.Auction: java.lang.String _itemType
com.l2jfrozen.gameserver.model.entity.Auction: int _sellerId
com.l2jfrozen.gameserver.model.entity.Auction: java.lang.String _sellerClanName
com.l2jfrozen.gameserver.model.entity.Auction: java.lang.String _sellerName
com.l2jfrozen.gameserver.model.entity.Auction: int _currentBid
com.l2jfrozen.gameserver.model.entity.Auction: int _startingBid
com.l2jfrozen.gameserver.model.entity.Auction: long MAX_ADENA
com.l2jfrozen.gameserver.model.entity.Auction: java.util.Map _bidders
com.l2jfrozen.gameserver.model.entity.Auction: java.lang.String[] ItemTypeName
com.l2jfrozen.gameserver.model.entity.Auction: Auction(int)
com.l2jfrozen.gameserver.model.entity.Auction: Auction(int,com.l2jfrozen.gameserver.model.L2Clan,long,int,java.lang.String)
com.l2jfrozen.gameserver.model.entity.Auction: void load()
com.l2jfrozen.gameserver.model.entity.Auction: void loadBid()
com.l2jfrozen.gameserver.model.entity.Auction: void startAutoTask()
com.l2jfrozen.gameserver.model.entity.Auction: java.lang.String getItemTypeName(com.l2jfrozen.gameserver.model.entity.ItemTypeEnum)
com.l2jfrozen.gameserver.model.entity.Auction: void saveAuctionDate()
com.l2jfrozen.gameserver.model.entity.Auction: void setBid(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.entity.Auction: void returnItem(java.lang.String,int,boolean)
com.l2jfrozen.gameserver.model.entity.Auction: boolean takeItem(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.entity.Auction: void updateInDB(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.entity.Auction: void removeBids()
com.l2jfrozen.gameserver.model.entity.Auction: void deleteAuctionFromDB()
com.l2jfrozen.gameserver.model.entity.Auction: void endAuction()
com.l2jfrozen.gameserver.model.entity.Auction: void cancelBid(int)
com.l2jfrozen.gameserver.model.entity.Auction: void cancelAuction()
com.l2jfrozen.gameserver.model.entity.Auction: void confirmAuction()
com.l2jfrozen.gameserver.model.entity.Auction: int getId()
com.l2jfrozen.gameserver.model.entity.Auction: int getCurrentBid()
com.l2jfrozen.gameserver.model.entity.Auction: long getEndDate()
com.l2jfrozen.gameserver.model.entity.Auction: int getHighestBidderId()
com.l2jfrozen.gameserver.model.entity.Auction: java.lang.String getHighestBidderName()
com.l2jfrozen.gameserver.model.entity.Auction: int getHighestBidderMaxBid()
com.l2jfrozen.gameserver.model.entity.Auction: int getItemId()
com.l2jfrozen.gameserver.model.entity.Auction: java.lang.String getItemName()
com.l2jfrozen.gameserver.model.entity.Auction: int getItemObjectId()
com.l2jfrozen.gameserver.model.entity.Auction: int getItemQuantity()
com.l2jfrozen.gameserver.model.entity.Auction: java.lang.String getItemType()
com.l2jfrozen.gameserver.model.entity.Auction: int getSellerId()
com.l2jfrozen.gameserver.model.entity.Auction: java.lang.String getSellerName()
com.l2jfrozen.gameserver.model.entity.Auction: java.lang.String getSellerClanName()
com.l2jfrozen.gameserver.model.entity.Auction: int getStartingBid()
com.l2jfrozen.gameserver.model.entity.Auction: java.util.Map getBidders()
com.l2jfrozen.gameserver.model.entity.Auction: void <clinit>()
com.l2jfrozen.gameserver.model.entity.Auction$AutoEndTask
com.l2jfrozen.gameserver.model.entity.Auction$AutoEndTask: com.l2jfrozen.gameserver.model.entity.Auction this$0
com.l2jfrozen.gameserver.model.entity.Auction$AutoEndTask: Auction$AutoEndTask(com.l2jfrozen.gameserver.model.entity.Auction)
com.l2jfrozen.gameserver.model.entity.Auction$AutoEndTask: void run()
com.l2jfrozen.gameserver.model.entity.Auction$Bidder
com.l2jfrozen.gameserver.model.entity.Auction$Bidder: java.lang.String _name
com.l2jfrozen.gameserver.model.entity.Auction$Bidder: java.lang.String _clanName
com.l2jfrozen.gameserver.model.entity.Auction$Bidder: int _bid
com.l2jfrozen.gameserver.model.entity.Auction$Bidder: java.util.Calendar _timeBid
com.l2jfrozen.gameserver.model.entity.Auction$Bidder: com.l2jfrozen.gameserver.model.entity.Auction this$0
com.l2jfrozen.gameserver.model.entity.Auction$Bidder: Auction$Bidder(com.l2jfrozen.gameserver.model.entity.Auction,java.lang.String,java.lang.String,int,long)
com.l2jfrozen.gameserver.model.entity.Auction$Bidder: java.lang.String getName()
com.l2jfrozen.gameserver.model.entity.Auction$Bidder: java.lang.String getClanName()
com.l2jfrozen.gameserver.model.entity.Auction$Bidder: int getBid()
com.l2jfrozen.gameserver.model.entity.Auction$Bidder: java.util.Calendar getTimeBid()
com.l2jfrozen.gameserver.model.entity.Auction$Bidder: void setTimeBid(long)
com.l2jfrozen.gameserver.model.entity.Auction$Bidder: void setBid(int)
com.l2jfrozen.gameserver.model.entity.ClanHall
com.l2jfrozen.gameserver.model.entity.ClanHall: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.entity.ClanHall: int _clanHallId
com.l2jfrozen.gameserver.model.entity.ClanHall: java.util.List _doors
com.l2jfrozen.gameserver.model.entity.ClanHall: java.util.List _doorDefault
com.l2jfrozen.gameserver.model.entity.ClanHall: java.lang.String _name
com.l2jfrozen.gameserver.model.entity.ClanHall: int _ownerId
com.l2jfrozen.gameserver.model.entity.ClanHall: com.l2jfrozen.gameserver.model.L2Clan _ownerClan
com.l2jfrozen.gameserver.model.entity.ClanHall: int _lease
com.l2jfrozen.gameserver.model.entity.ClanHall: java.lang.String _desc
com.l2jfrozen.gameserver.model.entity.ClanHall: java.lang.String _location
com.l2jfrozen.gameserver.model.entity.ClanHall: long _paidUntil
com.l2jfrozen.gameserver.model.entity.ClanHall: com.l2jfrozen.gameserver.model.zone.type.L2ClanHallZone _zone
com.l2jfrozen.gameserver.model.entity.ClanHall: int _grade
com.l2jfrozen.gameserver.model.entity.ClanHall: int _chRate
com.l2jfrozen.gameserver.model.entity.ClanHall: boolean _isFree
com.l2jfrozen.gameserver.model.entity.ClanHall: java.util.Map _functions
com.l2jfrozen.gameserver.model.entity.ClanHall: boolean _paid
com.l2jfrozen.gameserver.model.entity.ClanHall: int FUNC_TELEPORT
com.l2jfrozen.gameserver.model.entity.ClanHall: int FUNC_ITEM_CREATE
com.l2jfrozen.gameserver.model.entity.ClanHall: int FUNC_RESTORE_HP
com.l2jfrozen.gameserver.model.entity.ClanHall: int FUNC_RESTORE_MP
com.l2jfrozen.gameserver.model.entity.ClanHall: int FUNC_RESTORE_EXP
com.l2jfrozen.gameserver.model.entity.ClanHall: int FUNC_SUPPORT
com.l2jfrozen.gameserver.model.entity.ClanHall: int FUNC_DECO_FRONTPLATEFORM
com.l2jfrozen.gameserver.model.entity.ClanHall: int FUNC_DECO_CURTAINS
com.l2jfrozen.gameserver.model.entity.ClanHall: ClanHall(int,java.lang.String,int,int,java.lang.String,java.lang.String,long,int,boolean)
com.l2jfrozen.gameserver.model.entity.ClanHall: boolean getPaid()
com.l2jfrozen.gameserver.model.entity.ClanHall: int getId()
com.l2jfrozen.gameserver.model.entity.ClanHall: java.lang.String getName()
com.l2jfrozen.gameserver.model.entity.ClanHall: int getOwnerId()
com.l2jfrozen.gameserver.model.entity.ClanHall: int getLease()
com.l2jfrozen.gameserver.model.entity.ClanHall: java.lang.String getDesc()
com.l2jfrozen.gameserver.model.entity.ClanHall: java.lang.String getLocation()
com.l2jfrozen.gameserver.model.entity.ClanHall: long getPaidUntil()
com.l2jfrozen.gameserver.model.entity.ClanHall: int getGrade()
com.l2jfrozen.gameserver.model.entity.ClanHall: java.util.List getDoors()
com.l2jfrozen.gameserver.model.entity.ClanHall: com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance getDoor(int)
com.l2jfrozen.gameserver.model.entity.ClanHall: com.l2jfrozen.gameserver.model.entity.ClanHall$ClanHallFunction getFunction(int)
com.l2jfrozen.gameserver.model.entity.ClanHall: void setZone(com.l2jfrozen.gameserver.model.zone.type.L2ClanHallZone)
com.l2jfrozen.gameserver.model.entity.ClanHall: com.l2jfrozen.gameserver.model.zone.type.L2ClanHallZone getZone()
com.l2jfrozen.gameserver.model.entity.ClanHall: void free()
com.l2jfrozen.gameserver.model.entity.ClanHall: void setOwner(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.ClanHall: com.l2jfrozen.gameserver.model.L2Clan getOwnerClan()
com.l2jfrozen.gameserver.model.entity.ClanHall: void spawnDoor()
com.l2jfrozen.gameserver.model.entity.ClanHall: void openCloseDoor(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,boolean)
com.l2jfrozen.gameserver.model.entity.ClanHall: void openCloseDoor(int,boolean)
com.l2jfrozen.gameserver.model.entity.ClanHall: void openCloseDoor(com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance,boolean)
com.l2jfrozen.gameserver.model.entity.ClanHall: void openCloseDoors(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.model.entity.ClanHall: void openCloseDoors(boolean)
com.l2jfrozen.gameserver.model.entity.ClanHall: void banishForeigners()
com.l2jfrozen.gameserver.model.entity.ClanHall: void loadFunctions()
com.l2jfrozen.gameserver.model.entity.ClanHall: void removeFunction(int)
com.l2jfrozen.gameserver.model.entity.ClanHall: boolean updateFunctions(int,int,int,long,boolean)
com.l2jfrozen.gameserver.model.entity.ClanHall: void updateDb()
com.l2jfrozen.gameserver.model.entity.ClanHall: void initialyzeTask(boolean)
com.l2jfrozen.gameserver.model.entity.ClanHall: void loadDoor()
com.l2jfrozen.gameserver.model.entity.ClanHall: void <clinit>()
com.l2jfrozen.gameserver.model.entity.ClanHall$ClanHallFunction
com.l2jfrozen.gameserver.model.entity.ClanHall$ClanHallFunction: int _type
com.l2jfrozen.gameserver.model.entity.ClanHall$ClanHallFunction: int _lvl
com.l2jfrozen.gameserver.model.entity.ClanHall$ClanHallFunction: int _fee
com.l2jfrozen.gameserver.model.entity.ClanHall$ClanHallFunction: int _tempFee
com.l2jfrozen.gameserver.model.entity.ClanHall$ClanHallFunction: long _rate
com.l2jfrozen.gameserver.model.entity.ClanHall$ClanHallFunction: long _endDate
com.l2jfrozen.gameserver.model.entity.ClanHall$ClanHallFunction: boolean _inDebt
com.l2jfrozen.gameserver.model.entity.ClanHall$ClanHallFunction: com.l2jfrozen.gameserver.model.entity.ClanHall this$0
com.l2jfrozen.gameserver.model.entity.ClanHall$ClanHallFunction: ClanHall$ClanHallFunction(com.l2jfrozen.gameserver.model.entity.ClanHall,int,int,int,int,long,long)
com.l2jfrozen.gameserver.model.entity.ClanHall$ClanHallFunction: int getType()
com.l2jfrozen.gameserver.model.entity.ClanHall$ClanHallFunction: int getLvl()
com.l2jfrozen.gameserver.model.entity.ClanHall$ClanHallFunction: int getLease()
com.l2jfrozen.gameserver.model.entity.ClanHall$ClanHallFunction: long getRate()
com.l2jfrozen.gameserver.model.entity.ClanHall$ClanHallFunction: long getEndTime()
com.l2jfrozen.gameserver.model.entity.ClanHall$ClanHallFunction: void setLvl(int)
com.l2jfrozen.gameserver.model.entity.ClanHall$ClanHallFunction: void setLease(int)
com.l2jfrozen.gameserver.model.entity.ClanHall$ClanHallFunction: void setEndTime(long)
com.l2jfrozen.gameserver.model.entity.ClanHall$ClanHallFunction: void initializeTask()
com.l2jfrozen.gameserver.model.entity.ClanHall$ClanHallFunction: void dbSave(boolean)
com.l2jfrozen.gameserver.model.entity.ClanHall$ClanHallFunction$FunctionTask
com.l2jfrozen.gameserver.model.entity.ClanHall$ClanHallFunction$FunctionTask: com.l2jfrozen.gameserver.model.entity.ClanHall$ClanHallFunction this$1
com.l2jfrozen.gameserver.model.entity.ClanHall$ClanHallFunction$FunctionTask: ClanHall$ClanHallFunction$FunctionTask(com.l2jfrozen.gameserver.model.entity.ClanHall$ClanHallFunction)
com.l2jfrozen.gameserver.model.entity.ClanHall$ClanHallFunction$FunctionTask: void run()
com.l2jfrozen.gameserver.model.entity.ClanHall$FeeTask
com.l2jfrozen.gameserver.model.entity.ClanHall$FeeTask: com.l2jfrozen.gameserver.model.entity.ClanHall this$0
com.l2jfrozen.gameserver.model.entity.ClanHall$FeeTask: ClanHall$FeeTask(com.l2jfrozen.gameserver.model.entity.ClanHall)
com.l2jfrozen.gameserver.model.entity.ClanHall$FeeTask: void run()
com.l2jfrozen.gameserver.model.entity.DimensionalRift
com.l2jfrozen.gameserver.model.entity.DimensionalRift: byte _type
com.l2jfrozen.gameserver.model.entity.DimensionalRift: com.l2jfrozen.gameserver.model.L2Party _party
com.l2jfrozen.gameserver.model.entity.DimensionalRift: javolution.util.FastList _completedRooms
com.l2jfrozen.gameserver.model.entity.DimensionalRift: long seconds_5
com.l2jfrozen.gameserver.model.entity.DimensionalRift: byte jumps_current
com.l2jfrozen.gameserver.model.entity.DimensionalRift: java.util.Timer teleporterTimer
com.l2jfrozen.gameserver.model.entity.DimensionalRift: java.util.TimerTask teleporterTimerTask
com.l2jfrozen.gameserver.model.entity.DimensionalRift: java.util.Timer spawnTimer
com.l2jfrozen.gameserver.model.entity.DimensionalRift: java.util.TimerTask spawnTimerTask
com.l2jfrozen.gameserver.model.entity.DimensionalRift: byte _choosenRoom
com.l2jfrozen.gameserver.model.entity.DimensionalRift: boolean _hasJumped
com.l2jfrozen.gameserver.model.entity.DimensionalRift: javolution.util.FastList deadPlayers
com.l2jfrozen.gameserver.model.entity.DimensionalRift: javolution.util.FastList revivedInWaitingRoom
com.l2jfrozen.gameserver.model.entity.DimensionalRift: boolean isBossRoom
com.l2jfrozen.gameserver.model.entity.DimensionalRift: DimensionalRift(com.l2jfrozen.gameserver.model.L2Party,byte,byte)
com.l2jfrozen.gameserver.model.entity.DimensionalRift: byte getType()
com.l2jfrozen.gameserver.model.entity.DimensionalRift: byte getCurrentRoom()
com.l2jfrozen.gameserver.model.entity.DimensionalRift: void createTeleporterTimer(boolean)
com.l2jfrozen.gameserver.model.entity.DimensionalRift: void createSpawnTimer(byte)
com.l2jfrozen.gameserver.model.entity.DimensionalRift: void partyMemberInvited()
com.l2jfrozen.gameserver.model.entity.DimensionalRift: void partyMemberExited(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.DimensionalRift: void manualTeleport(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.model.entity.DimensionalRift: void manualExitRift(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.model.entity.DimensionalRift: void teleportToNextRoom(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.DimensionalRift: void teleportToWaitingRoom(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.DimensionalRift: void killRift()
com.l2jfrozen.gameserver.model.entity.DimensionalRift: java.util.Timer getTeleportTimer()
com.l2jfrozen.gameserver.model.entity.DimensionalRift: java.util.TimerTask getTeleportTimerTask()
com.l2jfrozen.gameserver.model.entity.DimensionalRift: java.util.Timer getSpawnTimer()
com.l2jfrozen.gameserver.model.entity.DimensionalRift: java.util.TimerTask getSpawnTimerTask()
com.l2jfrozen.gameserver.model.entity.DimensionalRift: void setTeleportTimer(java.util.Timer)
com.l2jfrozen.gameserver.model.entity.DimensionalRift: void setTeleportTimerTask(java.util.TimerTask)
com.l2jfrozen.gameserver.model.entity.DimensionalRift: void setSpawnTimer(java.util.Timer)
com.l2jfrozen.gameserver.model.entity.DimensionalRift: void setSpawnTimerTask(java.util.TimerTask)
com.l2jfrozen.gameserver.model.entity.DimensionalRift: long calcTimeToNextJump()
com.l2jfrozen.gameserver.model.entity.DimensionalRift: void memberDead(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.DimensionalRift: void memberRessurected(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.DimensionalRift: void usedTeleport(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.DimensionalRift: javolution.util.FastList getDeadMemberList()
com.l2jfrozen.gameserver.model.entity.DimensionalRift: javolution.util.FastList getRevivedAtWaitingRoom()
com.l2jfrozen.gameserver.model.entity.DimensionalRift: void checkBossRoom(byte)
com.l2jfrozen.gameserver.model.entity.DimensionalRift: int[] getRoomCoord(byte)
com.l2jfrozen.gameserver.model.entity.DimensionalRift: byte getMaxJumps()
com.l2jfrozen.gameserver.model.entity.DimensionalRift$1
com.l2jfrozen.gameserver.model.entity.DimensionalRift$1: boolean val$reasonTP
com.l2jfrozen.gameserver.model.entity.DimensionalRift$1: com.l2jfrozen.gameserver.model.entity.DimensionalRift this$0
com.l2jfrozen.gameserver.model.entity.DimensionalRift$1: DimensionalRift$1(com.l2jfrozen.gameserver.model.entity.DimensionalRift,boolean)
com.l2jfrozen.gameserver.model.entity.DimensionalRift$1: void run()
com.l2jfrozen.gameserver.model.entity.DimensionalRift$2
com.l2jfrozen.gameserver.model.entity.DimensionalRift$2: com.l2jfrozen.gameserver.managers.DimensionalRiftManager$DimensionalRiftRoom val$riftRoom
com.l2jfrozen.gameserver.model.entity.DimensionalRift$2: com.l2jfrozen.gameserver.model.entity.DimensionalRift this$0
com.l2jfrozen.gameserver.model.entity.DimensionalRift$2: DimensionalRift$2(com.l2jfrozen.gameserver.model.entity.DimensionalRift,com.l2jfrozen.gameserver.managers.DimensionalRiftManager$DimensionalRiftRoom)
com.l2jfrozen.gameserver.model.entity.DimensionalRift$2: void run()
com.l2jfrozen.gameserver.model.entity.Duel
com.l2jfrozen.gameserver.model.entity.Duel: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.entity.Duel: int DUELSTATE_NODUEL
com.l2jfrozen.gameserver.model.entity.Duel: int DUELSTATE_DUELLING
com.l2jfrozen.gameserver.model.entity.Duel: int DUELSTATE_DEAD
com.l2jfrozen.gameserver.model.entity.Duel: int DUELSTATE_WINNER
com.l2jfrozen.gameserver.model.entity.Duel: int DUELSTATE_INTERRUPTED
com.l2jfrozen.gameserver.model.entity.Duel: int _duelId
com.l2jfrozen.gameserver.model.entity.Duel: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _playerA
com.l2jfrozen.gameserver.model.entity.Duel: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _playerB
com.l2jfrozen.gameserver.model.entity.Duel: boolean _partyDuel
com.l2jfrozen.gameserver.model.entity.Duel: java.util.Calendar _duelEndTime
com.l2jfrozen.gameserver.model.entity.Duel: int _surrenderRequest
com.l2jfrozen.gameserver.model.entity.Duel: int _countdown
com.l2jfrozen.gameserver.model.entity.Duel: boolean _finished
com.l2jfrozen.gameserver.model.entity.Duel: javolution.util.FastMap _playerConditions
com.l2jfrozen.gameserver.model.entity.Duel: Duel(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int)
com.l2jfrozen.gameserver.model.entity.Duel: void stopFighting()
com.l2jfrozen.gameserver.model.entity.Duel: boolean isDuelistInPvp(boolean)
com.l2jfrozen.gameserver.model.entity.Duel: void startDuel()
com.l2jfrozen.gameserver.model.entity.Duel: void savePlayerConditions()
com.l2jfrozen.gameserver.model.entity.Duel: void restorePlayerConditions(boolean)
com.l2jfrozen.gameserver.model.entity.Duel: int getId()
com.l2jfrozen.gameserver.model.entity.Duel: int getRemainingTime()
com.l2jfrozen.gameserver.model.entity.Duel: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getPlayerA()
com.l2jfrozen.gameserver.model.entity.Duel: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getPlayerB()
com.l2jfrozen.gameserver.model.entity.Duel: boolean isPartyDuel()
com.l2jfrozen.gameserver.model.entity.Duel: void setFinished(boolean)
com.l2jfrozen.gameserver.model.entity.Duel: boolean getFinished()
com.l2jfrozen.gameserver.model.entity.Duel: void teleportPlayers(int,int,int)
com.l2jfrozen.gameserver.model.entity.Duel: void broadcastToTeam1(com.l2jfrozen.gameserver.network.serverpackets.L2GameServerPacket)
com.l2jfrozen.gameserver.model.entity.Duel: void broadcastToTeam2(com.l2jfrozen.gameserver.network.serverpackets.L2GameServerPacket)
com.l2jfrozen.gameserver.model.entity.Duel: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getWinner()
com.l2jfrozen.gameserver.model.entity.Duel: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getLooser()
com.l2jfrozen.gameserver.model.entity.Duel: void playKneelAnimation()
com.l2jfrozen.gameserver.model.entity.Duel: int countdown()
com.l2jfrozen.gameserver.model.entity.Duel: void endDuel(com.l2jfrozen.gameserver.model.entity.DuelResultEnum)
com.l2jfrozen.gameserver.model.entity.Duel: com.l2jfrozen.gameserver.model.entity.DuelResultEnum checkEndDuelCondition()
com.l2jfrozen.gameserver.model.entity.Duel: void doSurrender(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.Duel: void onPlayerDefeat(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.Duel: void onRemoveFromParty(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.Duel: void onBuff(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Effect)
com.l2jfrozen.gameserver.model.entity.Duel: void onBuffStop(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Effect)
com.l2jfrozen.gameserver.model.entity.Duel: void <clinit>()
com.l2jfrozen.gameserver.model.entity.Duel$1
com.l2jfrozen.gameserver.model.entity.Duel$1: int[] $SwitchMap$com$l2jfrozen$gameserver$model$entity$DuelResultEnum
com.l2jfrozen.gameserver.model.entity.Duel$1: void <clinit>()
com.l2jfrozen.gameserver.model.entity.Duel$PlayerCondition
com.l2jfrozen.gameserver.model.entity.Duel$PlayerCondition: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _player
com.l2jfrozen.gameserver.model.entity.Duel$PlayerCondition: double _hp
com.l2jfrozen.gameserver.model.entity.Duel$PlayerCondition: double _mp
com.l2jfrozen.gameserver.model.entity.Duel$PlayerCondition: double _cp
com.l2jfrozen.gameserver.model.entity.Duel$PlayerCondition: boolean _paDuel
com.l2jfrozen.gameserver.model.entity.Duel$PlayerCondition: int _x
com.l2jfrozen.gameserver.model.entity.Duel$PlayerCondition: int _y
com.l2jfrozen.gameserver.model.entity.Duel$PlayerCondition: int _z
com.l2jfrozen.gameserver.model.entity.Duel$PlayerCondition: javolution.util.FastList _debuffs
com.l2jfrozen.gameserver.model.entity.Duel$PlayerCondition: com.l2jfrozen.gameserver.model.entity.Duel this$0
com.l2jfrozen.gameserver.model.entity.Duel$PlayerCondition: Duel$PlayerCondition(com.l2jfrozen.gameserver.model.entity.Duel,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.model.entity.Duel$PlayerCondition: void restoreCondition()
com.l2jfrozen.gameserver.model.entity.Duel$PlayerCondition: void registerDebuff(com.l2jfrozen.gameserver.model.L2Effect)
com.l2jfrozen.gameserver.model.entity.Duel$PlayerCondition: void removeDebuff(com.l2jfrozen.gameserver.model.L2Effect)
com.l2jfrozen.gameserver.model.entity.Duel$PlayerCondition: void teleportBack()
com.l2jfrozen.gameserver.model.entity.Duel$PlayerCondition: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getPlayer()
com.l2jfrozen.gameserver.model.entity.Duel$ScheduleDuelTask
com.l2jfrozen.gameserver.model.entity.Duel$ScheduleDuelTask: com.l2jfrozen.gameserver.model.entity.Duel _duel
com.l2jfrozen.gameserver.model.entity.Duel$ScheduleDuelTask: com.l2jfrozen.gameserver.model.entity.Duel this$0
com.l2jfrozen.gameserver.model.entity.Duel$ScheduleDuelTask: Duel$ScheduleDuelTask(com.l2jfrozen.gameserver.model.entity.Duel,com.l2jfrozen.gameserver.model.entity.Duel)
com.l2jfrozen.gameserver.model.entity.Duel$ScheduleDuelTask: void run()
com.l2jfrozen.gameserver.model.entity.Duel$ScheduleEndDuelTask
com.l2jfrozen.gameserver.model.entity.Duel$ScheduleEndDuelTask: com.l2jfrozen.gameserver.model.entity.Duel _duel
com.l2jfrozen.gameserver.model.entity.Duel$ScheduleEndDuelTask: com.l2jfrozen.gameserver.model.entity.DuelResultEnum _result
com.l2jfrozen.gameserver.model.entity.Duel$ScheduleEndDuelTask: Duel$ScheduleEndDuelTask(com.l2jfrozen.gameserver.model.entity.Duel,com.l2jfrozen.gameserver.model.entity.DuelResultEnum)
com.l2jfrozen.gameserver.model.entity.Duel$ScheduleEndDuelTask: void run()
com.l2jfrozen.gameserver.model.entity.Duel$ScheduleStartDuelTask
com.l2jfrozen.gameserver.model.entity.Duel$ScheduleStartDuelTask: com.l2jfrozen.gameserver.model.entity.Duel _duel
com.l2jfrozen.gameserver.model.entity.Duel$ScheduleStartDuelTask: com.l2jfrozen.gameserver.model.entity.Duel this$0
com.l2jfrozen.gameserver.model.entity.Duel$ScheduleStartDuelTask: Duel$ScheduleStartDuelTask(com.l2jfrozen.gameserver.model.entity.Duel,com.l2jfrozen.gameserver.model.entity.Duel)
com.l2jfrozen.gameserver.model.entity.Duel$ScheduleStartDuelTask: void run()
com.l2jfrozen.gameserver.model.entity.DuelResultEnum
com.l2jfrozen.gameserver.model.entity.DuelResultEnum: com.l2jfrozen.gameserver.model.entity.DuelResultEnum Continue
com.l2jfrozen.gameserver.model.entity.DuelResultEnum: com.l2jfrozen.gameserver.model.entity.DuelResultEnum Team1Win
com.l2jfrozen.gameserver.model.entity.DuelResultEnum: com.l2jfrozen.gameserver.model.entity.DuelResultEnum Team2Win
com.l2jfrozen.gameserver.model.entity.DuelResultEnum: com.l2jfrozen.gameserver.model.entity.DuelResultEnum Team1Surrender
com.l2jfrozen.gameserver.model.entity.DuelResultEnum: com.l2jfrozen.gameserver.model.entity.DuelResultEnum Team2Surrender
com.l2jfrozen.gameserver.model.entity.DuelResultEnum: com.l2jfrozen.gameserver.model.entity.DuelResultEnum Canceled
com.l2jfrozen.gameserver.model.entity.DuelResultEnum: com.l2jfrozen.gameserver.model.entity.DuelResultEnum Timeout
com.l2jfrozen.gameserver.model.entity.DuelResultEnum: com.l2jfrozen.gameserver.model.entity.DuelResultEnum[] $VALUES
com.l2jfrozen.gameserver.model.entity.DuelResultEnum: com.l2jfrozen.gameserver.model.entity.DuelResultEnum[] values()
com.l2jfrozen.gameserver.model.entity.DuelResultEnum: com.l2jfrozen.gameserver.model.entity.DuelResultEnum valueOf(java.lang.String)
com.l2jfrozen.gameserver.model.entity.DuelResultEnum: DuelResultEnum(java.lang.String,int)
com.l2jfrozen.gameserver.model.entity.DuelResultEnum: void <clinit>()
com.l2jfrozen.gameserver.model.entity.FakeOnline
com.l2jfrozen.gameserver.model.entity.FakeOnline: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.entity.FakeOnline: java.lang.String LOAD_OFFLINE_STATUS
com.l2jfrozen.gameserver.model.entity.FakeOnline: java.lang.String SET_OFFLINE_STATUS
com.l2jfrozen.gameserver.model.entity.FakeOnline: FakeOnline()
com.l2jfrozen.gameserver.model.entity.FakeOnline: void restoreFakePlayers()
com.l2jfrozen.gameserver.model.entity.FakeOnline: void setfakeplayers(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.FakeOnline: void <clinit>()
com.l2jfrozen.gameserver.model.entity.Hero
com.l2jfrozen.gameserver.model.entity.Hero: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.entity.Hero: com.l2jfrozen.gameserver.model.entity.Hero _instance
com.l2jfrozen.gameserver.model.entity.Hero: java.lang.String GET_HEROES
com.l2jfrozen.gameserver.model.entity.Hero: java.lang.String GET_ALL_HEROES
com.l2jfrozen.gameserver.model.entity.Hero: java.lang.String UPDATE_ALL
com.l2jfrozen.gameserver.model.entity.Hero: java.lang.String INSERT_HERO
com.l2jfrozen.gameserver.model.entity.Hero: java.lang.String UPDATE_HERO
com.l2jfrozen.gameserver.model.entity.Hero: java.lang.String GET_CLAN_ALLY
com.l2jfrozen.gameserver.model.entity.Hero: java.lang.String GET_CLAN_NAME
com.l2jfrozen.gameserver.model.entity.Hero: java.lang.String DELETE_ITEMS
com.l2jfrozen.gameserver.model.entity.Hero: java.util.List _heroItems
com.l2jfrozen.gameserver.model.entity.Hero: java.util.Map _heroes
com.l2jfrozen.gameserver.model.entity.Hero: java.util.Map _completeHeroes
com.l2jfrozen.gameserver.model.entity.Hero: java.lang.String COUNT
com.l2jfrozen.gameserver.model.entity.Hero: java.lang.String PLAYED
com.l2jfrozen.gameserver.model.entity.Hero: java.lang.String CLAN_NAME
com.l2jfrozen.gameserver.model.entity.Hero: java.lang.String CLAN_CREST
com.l2jfrozen.gameserver.model.entity.Hero: java.lang.String ALLY_NAME
com.l2jfrozen.gameserver.model.entity.Hero: java.lang.String ALLY_CREST
com.l2jfrozen.gameserver.model.entity.Hero: com.l2jfrozen.gameserver.model.entity.Hero getInstance()
com.l2jfrozen.gameserver.model.entity.Hero: Hero()
com.l2jfrozen.gameserver.model.entity.Hero: void init()
com.l2jfrozen.gameserver.model.entity.Hero: void putHero(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.model.entity.Hero: void deleteHero(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.model.entity.Hero: java.util.Map getHeroes()
com.l2jfrozen.gameserver.model.entity.Hero: void computeNewHeroes(java.util.List)
com.l2jfrozen.gameserver.model.entity.Hero: void updateHeroes(boolean)
com.l2jfrozen.gameserver.model.entity.Hero: java.util.List getHeroItems()
com.l2jfrozen.gameserver.model.entity.Hero: void deleteItemsInDb()
com.l2jfrozen.gameserver.model.entity.Hero: void <clinit>()
com.l2jfrozen.gameserver.model.entity.ItemTypeEnum
com.l2jfrozen.gameserver.model.entity.ItemTypeEnum: com.l2jfrozen.gameserver.model.entity.ItemTypeEnum ClanHall
com.l2jfrozen.gameserver.model.entity.ItemTypeEnum: com.l2jfrozen.gameserver.model.entity.ItemTypeEnum[] $VALUES
com.l2jfrozen.gameserver.model.entity.ItemTypeEnum: com.l2jfrozen.gameserver.model.entity.ItemTypeEnum[] values()
com.l2jfrozen.gameserver.model.entity.ItemTypeEnum: com.l2jfrozen.gameserver.model.entity.ItemTypeEnum valueOf(java.lang.String)
com.l2jfrozen.gameserver.model.entity.ItemTypeEnum: ItemTypeEnum(java.lang.String,int)
com.l2jfrozen.gameserver.model.entity.ItemTypeEnum: void <clinit>()
com.l2jfrozen.gameserver.model.entity.L2Rebirth
com.l2jfrozen.gameserver.model.entity.L2Rebirth: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.entity.L2Rebirth: com.l2jfrozen.gameserver.model.entity.L2Rebirth _instance
com.l2jfrozen.gameserver.model.entity.L2Rebirth: java.util.HashMap _playersRebirthInfo
com.l2jfrozen.gameserver.model.entity.L2Rebirth: L2Rebirth()
com.l2jfrozen.gameserver.model.entity.L2Rebirth: com.l2jfrozen.gameserver.model.entity.L2Rebirth getInstance()
com.l2jfrozen.gameserver.model.entity.L2Rebirth: void handleCommand(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.entity.L2Rebirth: void displayRebirthWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.L2Rebirth: void requestRebirth(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.L2Rebirth: void grantRebirth(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,boolean)
com.l2jfrozen.gameserver.model.entity.L2Rebirth: void displayCongrats(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.L2Rebirth: boolean playerIsEligible(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int)
com.l2jfrozen.gameserver.model.entity.L2Rebirth: void grantRebirthSkills(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.L2Rebirth: int getRebirthLevel(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.L2Rebirth: com.l2jfrozen.gameserver.model.L2Skill getRebirthSkill(int,boolean)
com.l2jfrozen.gameserver.model.entity.L2Rebirth: void loadRebirthInfo(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.L2Rebirth: void storePlayerBirth(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.L2Rebirth: void updatePlayerBirth(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.entity.L2Rebirth: void <clinit>()
com.l2jfrozen.gameserver.model.entity.MonsterRace
com.l2jfrozen.gameserver.model.entity.MonsterRace: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance[] _monsters
com.l2jfrozen.gameserver.model.entity.MonsterRace: com.l2jfrozen.gameserver.model.entity.MonsterRace _instance
com.l2jfrozen.gameserver.model.entity.MonsterRace: java.lang.reflect.Constructor _constructor
com.l2jfrozen.gameserver.model.entity.MonsterRace: int[][] _speeds
com.l2jfrozen.gameserver.model.entity.MonsterRace: int[] _first
com.l2jfrozen.gameserver.model.entity.MonsterRace: int[] _second
com.l2jfrozen.gameserver.model.entity.MonsterRace: MonsterRace()
com.l2jfrozen.gameserver.model.entity.MonsterRace: com.l2jfrozen.gameserver.model.entity.MonsterRace getInstance()
com.l2jfrozen.gameserver.model.entity.MonsterRace: void newRace()
com.l2jfrozen.gameserver.model.entity.MonsterRace: void newSpeeds()
com.l2jfrozen.gameserver.model.entity.MonsterRace: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance[] getMonsters()
com.l2jfrozen.gameserver.model.entity.MonsterRace: int[][] getSpeeds()
com.l2jfrozen.gameserver.model.entity.MonsterRace: int getFirstPlace()
com.l2jfrozen.gameserver.model.entity.MonsterRace: int getSecondPlace()
com.l2jfrozen.gameserver.model.entity.Wedding
com.l2jfrozen.gameserver.model.entity.Wedding: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.entity.Wedding: int _Id
com.l2jfrozen.gameserver.model.entity.Wedding: int _player1Id
com.l2jfrozen.gameserver.model.entity.Wedding: int _player2Id
com.l2jfrozen.gameserver.model.entity.Wedding: boolean _maried
com.l2jfrozen.gameserver.model.entity.Wedding: java.util.Calendar _affiancedDate
com.l2jfrozen.gameserver.model.entity.Wedding: java.util.Calendar _weddingDate
com.l2jfrozen.gameserver.model.entity.Wedding: int _type
com.l2jfrozen.gameserver.model.entity.Wedding: Wedding(int)
com.l2jfrozen.gameserver.model.entity.Wedding: Wedding(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.Wedding: void marry(int)
com.l2jfrozen.gameserver.model.entity.Wedding: void divorce()
com.l2jfrozen.gameserver.model.entity.Wedding: int getId()
com.l2jfrozen.gameserver.model.entity.Wedding: int getPlayer1Id()
com.l2jfrozen.gameserver.model.entity.Wedding: int getPlayer2Id()
com.l2jfrozen.gameserver.model.entity.Wedding: boolean getMaried()
com.l2jfrozen.gameserver.model.entity.Wedding: java.util.Calendar getAffiancedDate()
com.l2jfrozen.gameserver.model.entity.Wedding: java.util.Calendar getWeddingDate()
com.l2jfrozen.gameserver.model.entity.Wedding: int getType()
com.l2jfrozen.gameserver.model.entity.Wedding: void <clinit>()
com.l2jfrozen.gameserver.model.entity.event.CTF
com.l2jfrozen.gameserver.model.entity.event.CTF: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.entity.event.CTF: java.lang.String _eventName
com.l2jfrozen.gameserver.model.entity.event.CTF: java.lang.String _eventDesc
com.l2jfrozen.gameserver.model.entity.event.CTF: java.lang.String _joiningLocationName
com.l2jfrozen.gameserver.model.entity.event.CTF: com.l2jfrozen.gameserver.model.spawn.L2Spawn _npcSpawn
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean _joining
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean _teleport
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean _started
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean _aborted
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean _sitForced
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean _inProgress
com.l2jfrozen.gameserver.model.entity.event.CTF: int _npcId
com.l2jfrozen.gameserver.model.entity.event.CTF: int _npcX
com.l2jfrozen.gameserver.model.entity.event.CTF: int _npcY
com.l2jfrozen.gameserver.model.entity.event.CTF: int _npcZ
com.l2jfrozen.gameserver.model.entity.event.CTF: int _npcHeading
com.l2jfrozen.gameserver.model.entity.event.CTF: int _rewardId
com.l2jfrozen.gameserver.model.entity.event.CTF: int _rewardAmount
com.l2jfrozen.gameserver.model.entity.event.CTF: int _minlvl
com.l2jfrozen.gameserver.model.entity.event.CTF: int _maxlvl
com.l2jfrozen.gameserver.model.entity.event.CTF: int _joinTime
com.l2jfrozen.gameserver.model.entity.event.CTF: int _eventTime
com.l2jfrozen.gameserver.model.entity.event.CTF: int _minPlayers
com.l2jfrozen.gameserver.model.entity.event.CTF: int _maxPlayers
com.l2jfrozen.gameserver.model.entity.event.CTF: long _intervalBetweenMatches
com.l2jfrozen.gameserver.model.entity.event.CTF: java.lang.String startEventTime
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean _teamEvent
com.l2jfrozen.gameserver.model.entity.event.CTF: java.util.Vector _players
com.l2jfrozen.gameserver.model.entity.event.CTF: java.lang.String _topTeam
com.l2jfrozen.gameserver.model.entity.event.CTF: java.util.Vector _playersShuffle
com.l2jfrozen.gameserver.model.entity.event.CTF: java.util.Vector _teams
com.l2jfrozen.gameserver.model.entity.event.CTF: java.util.Vector _savePlayers
com.l2jfrozen.gameserver.model.entity.event.CTF: java.util.Vector _savePlayerTeams
com.l2jfrozen.gameserver.model.entity.event.CTF: java.util.Vector _teamPlayersCount
com.l2jfrozen.gameserver.model.entity.event.CTF: java.util.Vector _teamColors
com.l2jfrozen.gameserver.model.entity.event.CTF: java.util.Vector _teamsX
com.l2jfrozen.gameserver.model.entity.event.CTF: java.util.Vector _teamsY
com.l2jfrozen.gameserver.model.entity.event.CTF: java.util.Vector _teamsZ
com.l2jfrozen.gameserver.model.entity.event.CTF: java.util.Vector _teamPointsCount
com.l2jfrozen.gameserver.model.entity.event.CTF: int _topScore
com.l2jfrozen.gameserver.model.entity.event.CTF: int _eventCenterX
com.l2jfrozen.gameserver.model.entity.event.CTF: int _eventCenterY
com.l2jfrozen.gameserver.model.entity.event.CTF: int _eventCenterZ
com.l2jfrozen.gameserver.model.entity.event.CTF: int _eventOffset
com.l2jfrozen.gameserver.model.entity.event.CTF: int _FlagNPC
com.l2jfrozen.gameserver.model.entity.event.CTF: int _FLAG_IN_HAND_ITEM_ID
com.l2jfrozen.gameserver.model.entity.event.CTF: java.util.Vector _flagIds
com.l2jfrozen.gameserver.model.entity.event.CTF: java.util.Vector _flagsX
com.l2jfrozen.gameserver.model.entity.event.CTF: java.util.Vector _flagsY
com.l2jfrozen.gameserver.model.entity.event.CTF: java.util.Vector _flagsZ
com.l2jfrozen.gameserver.model.entity.event.CTF: java.util.Vector _flagSpawns
com.l2jfrozen.gameserver.model.entity.event.CTF: java.util.Vector _throneSpawns
com.l2jfrozen.gameserver.model.entity.event.CTF: java.util.Vector _flagsTaken
com.l2jfrozen.gameserver.model.entity.event.CTF: CTF()
com.l2jfrozen.gameserver.model.entity.event.CTF: com.l2jfrozen.gameserver.model.entity.event.CTF getNewInstance()
com.l2jfrozen.gameserver.model.entity.event.CTF: java.lang.String get_eventName()
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean set_eventName(java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.CTF: java.lang.String get_eventDesc()
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean set_eventDesc(java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.CTF: java.lang.String get_joiningLocationName()
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean set_joiningLocationName(java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.CTF: int get_npcId()
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean set_npcId(int)
com.l2jfrozen.gameserver.model.entity.event.CTF: com.l2jfrozen.gameserver.model.Location get_npcLocation()
com.l2jfrozen.gameserver.model.entity.event.CTF: int get_rewardId()
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean set_rewardId(int)
com.l2jfrozen.gameserver.model.entity.event.CTF: int get_rewardAmount()
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean set_rewardAmount(int)
com.l2jfrozen.gameserver.model.entity.event.CTF: int get_minlvl()
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean set_minlvl(int)
com.l2jfrozen.gameserver.model.entity.event.CTF: int get_maxlvl()
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean set_maxlvl(int)
com.l2jfrozen.gameserver.model.entity.event.CTF: int get_joinTime()
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean set_joinTime(int)
com.l2jfrozen.gameserver.model.entity.event.CTF: int get_eventTime()
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean set_eventTime(int)
com.l2jfrozen.gameserver.model.entity.event.CTF: int get_minPlayers()
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean set_minPlayers(int)
com.l2jfrozen.gameserver.model.entity.event.CTF: int get_maxPlayers()
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean set_maxPlayers(int)
com.l2jfrozen.gameserver.model.entity.event.CTF: long get_intervalBetweenMatches()
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean set_intervalBetweenMatches(long)
com.l2jfrozen.gameserver.model.entity.event.CTF: java.lang.String getStartEventTime()
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean setStartEventTime(java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean is_joining()
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean is_teleport()
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean is_started()
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean is_aborted()
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean is_sitForced()
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean is_inProgress()
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean checkMaxLevel(int)
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean checkMinLevel(int)
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean checkMinPlayers(int)
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean checkMaxPlayers(int)
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean checkStartJoinOk()
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean checkStartJoinTeamInfo()
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean checkStartJoinPlayerInfo()
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean checkAutoEventStartJoinOk()
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean checkOptionalEventStartJoinOk()
com.l2jfrozen.gameserver.model.entity.event.CTF: void setNpcPos(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.CTF: void spawnEventNpc()
com.l2jfrozen.gameserver.model.entity.event.CTF: void unspawnEventNpc()
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean startJoin()
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean startTeleport()
com.l2jfrozen.gameserver.model.entity.event.CTF: void afterTeleportOperations()
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean startEvent()
com.l2jfrozen.gameserver.model.entity.event.CTF: void afterStartOperations()
com.l2jfrozen.gameserver.model.entity.event.CTF: void restartEvent()
com.l2jfrozen.gameserver.model.entity.event.CTF: void finishEvent()
com.l2jfrozen.gameserver.model.entity.event.CTF: void afterFinishOperations()
com.l2jfrozen.gameserver.model.entity.event.CTF: void abortEvent()
com.l2jfrozen.gameserver.model.entity.event.CTF: void afterFinish()
com.l2jfrozen.gameserver.model.entity.event.CTF: void teleportFinish()
com.l2jfrozen.gameserver.model.entity.event.CTF: void autoEvent()
com.l2jfrozen.gameserver.model.entity.event.CTF: void eventOnceStart()
com.l2jfrozen.gameserver.model.entity.event.CTF: void waiter(long)
com.l2jfrozen.gameserver.model.entity.event.CTF: void sit()
com.l2jfrozen.gameserver.model.entity.event.CTF: void removeOfflinePlayers()
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean startEventOk()
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean finishEventOk()
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean addPlayerOk(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.CTF: void setUserData()
com.l2jfrozen.gameserver.model.entity.event.CTF: void dumpData()
com.l2jfrozen.gameserver.model.entity.event.CTF: void dumpLocalEventInfo()
com.l2jfrozen.gameserver.model.entity.event.CTF: void loadData()
com.l2jfrozen.gameserver.model.entity.event.CTF: void saveData()
com.l2jfrozen.gameserver.model.entity.event.CTF: void showEventHtml(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.CTF: void addPlayer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.CTF: void removePlayer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.CTF: void cleanCTF()
com.l2jfrozen.gameserver.model.entity.event.CTF: void cleanLocalEventInfo()
com.l2jfrozen.gameserver.model.entity.event.CTF: void cleanEventPlayer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.CTF: void addDisconnectedPlayer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.CTF: void afterAddDisconnectedPlayerOperations(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.CTF: void shuffleTeams()
com.l2jfrozen.gameserver.model.entity.event.CTF: void playKneelAnimation(java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.CTF: void rewardTeam(java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.CTF: void processTopPlayer()
com.l2jfrozen.gameserver.model.entity.event.CTF: void processTopTeam()
com.l2jfrozen.gameserver.model.entity.event.CTF: void addTeam(java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.CTF: void addTeamEventOperations(java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.CTF: void removeTeam(java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.CTF: void removeTeamEventItems(java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.CTF: void setTeamPos(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.CTF: void setTeamPos(java.lang.String,int,int,int)
com.l2jfrozen.gameserver.model.entity.event.CTF: void setTeamColor(java.lang.String,int)
com.l2jfrozen.gameserver.model.entity.event.CTF: int teamPlayersCount(java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.CTF: void setTeamPlayersCount(java.lang.String,int)
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean checkShufflePlayers(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.CTF: void sendFinalMessages()
com.l2jfrozen.gameserver.model.entity.event.CTF: int getIntervalBetweenMatchs()
com.l2jfrozen.gameserver.model.entity.event.CTF: void run()
com.l2jfrozen.gameserver.model.entity.event.CTF: java.lang.String getEventIdentifier()
com.l2jfrozen.gameserver.model.entity.event.CTF: java.lang.String getEventStartTime()
com.l2jfrozen.gameserver.model.entity.event.CTF: void setEventStartTime(java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.CTF: void onDisconnect(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.CTF: int teamPointsCount(java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.CTF: void setTeamPointsCount(java.lang.String,int)
com.l2jfrozen.gameserver.model.entity.event.CTF: int get_eventOffset()
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean set_eventOffset(int)
com.l2jfrozen.gameserver.model.entity.event.CTF: void showFlagHtml(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.CTF: void checkRestoreFlags()
com.l2jfrozen.gameserver.model.entity.event.CTF: void addFlagToPlayer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.CTF: void removeFlagFromPlayer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.CTF: void setTeamFlag(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.CTF: void spawnAllFlags()
com.l2jfrozen.gameserver.model.entity.event.CTF: void unspawnAllFlags()
com.l2jfrozen.gameserver.model.entity.event.CTF: void unspawnFlag(java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.CTF: void spawnFlag(java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean InRangeOfFlag(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int)
com.l2jfrozen.gameserver.model.entity.event.CTF: void processInFlagRange(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.CTF: void pointTeamTo(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.CTF: void addOrSet(int,com.l2jfrozen.gameserver.model.spawn.L2Spawn,boolean,int,int,int,int)
com.l2jfrozen.gameserver.model.entity.event.CTF: void calculateOutSideOfCTF()
com.l2jfrozen.gameserver.model.entity.event.CTF: boolean isOutsideCTFArea(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.CTF: void <clinit>()
com.l2jfrozen.gameserver.model.entity.event.CTF$1
com.l2jfrozen.gameserver.model.entity.event.CTF$1: CTF$1()
com.l2jfrozen.gameserver.model.entity.event.CTF$1: void run()
com.l2jfrozen.gameserver.model.entity.event.CTF$2
com.l2jfrozen.gameserver.model.entity.event.CTF$2: CTF$2()
com.l2jfrozen.gameserver.model.entity.event.CTF$2: void run()
com.l2jfrozen.gameserver.model.entity.event.CTF$AutoEventTask
com.l2jfrozen.gameserver.model.entity.event.CTF$AutoEventTask: CTF$AutoEventTask()
com.l2jfrozen.gameserver.model.entity.event.CTF$AutoEventTask: void run()
com.l2jfrozen.gameserver.model.entity.event.DM
com.l2jfrozen.gameserver.model.entity.event.DM: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.entity.event.DM: java.lang.String _eventName
com.l2jfrozen.gameserver.model.entity.event.DM: java.lang.String _eventDesc
com.l2jfrozen.gameserver.model.entity.event.DM: java.lang.String _joiningLocationName
com.l2jfrozen.gameserver.model.entity.event.DM: com.l2jfrozen.gameserver.model.spawn.L2Spawn _npcSpawn
com.l2jfrozen.gameserver.model.entity.event.DM: boolean _joining
com.l2jfrozen.gameserver.model.entity.event.DM: boolean _teleport
com.l2jfrozen.gameserver.model.entity.event.DM: boolean _started
com.l2jfrozen.gameserver.model.entity.event.DM: boolean _aborted
com.l2jfrozen.gameserver.model.entity.event.DM: boolean _sitForced
com.l2jfrozen.gameserver.model.entity.event.DM: boolean _inProgress
com.l2jfrozen.gameserver.model.entity.event.DM: int _npcId
com.l2jfrozen.gameserver.model.entity.event.DM: int _npcX
com.l2jfrozen.gameserver.model.entity.event.DM: int _npcY
com.l2jfrozen.gameserver.model.entity.event.DM: int _npcZ
com.l2jfrozen.gameserver.model.entity.event.DM: int _npcHeading
com.l2jfrozen.gameserver.model.entity.event.DM: int _rewardId
com.l2jfrozen.gameserver.model.entity.event.DM: int _rewardAmount
com.l2jfrozen.gameserver.model.entity.event.DM: int _minlvl
com.l2jfrozen.gameserver.model.entity.event.DM: int _maxlvl
com.l2jfrozen.gameserver.model.entity.event.DM: int _joinTime
com.l2jfrozen.gameserver.model.entity.event.DM: int _eventTime
com.l2jfrozen.gameserver.model.entity.event.DM: int _minPlayers
com.l2jfrozen.gameserver.model.entity.event.DM: int _maxPlayers
com.l2jfrozen.gameserver.model.entity.event.DM: int _topKills
com.l2jfrozen.gameserver.model.entity.event.DM: int _playerColors
com.l2jfrozen.gameserver.model.entity.event.DM: int _playerX
com.l2jfrozen.gameserver.model.entity.event.DM: int _playerY
com.l2jfrozen.gameserver.model.entity.event.DM: int _playerZ
com.l2jfrozen.gameserver.model.entity.event.DM: long _intervalBetweenMatchs
com.l2jfrozen.gameserver.model.entity.event.DM: java.lang.String startEventTime
com.l2jfrozen.gameserver.model.entity.event.DM: boolean _teamEvent
com.l2jfrozen.gameserver.model.entity.event.DM: java.util.Vector _players
com.l2jfrozen.gameserver.model.entity.event.DM: java.util.List _topPlayers
com.l2jfrozen.gameserver.model.entity.event.DM: java.util.Vector _savePlayers
com.l2jfrozen.gameserver.model.entity.event.DM: DM()
com.l2jfrozen.gameserver.model.entity.event.DM: com.l2jfrozen.gameserver.model.entity.event.DM getNewInstance()
com.l2jfrozen.gameserver.model.entity.event.DM: java.lang.String get_eventName()
com.l2jfrozen.gameserver.model.entity.event.DM: boolean set_eventName(java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.DM: java.lang.String get_eventDesc()
com.l2jfrozen.gameserver.model.entity.event.DM: boolean set_eventDesc(java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.DM: java.lang.String get_joiningLocationName()
com.l2jfrozen.gameserver.model.entity.event.DM: boolean set_joiningLocationName(java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.DM: int get_npcId()
com.l2jfrozen.gameserver.model.entity.event.DM: boolean set_npcId(int)
com.l2jfrozen.gameserver.model.entity.event.DM: com.l2jfrozen.gameserver.model.Location get_npcLocation()
com.l2jfrozen.gameserver.model.entity.event.DM: int get_rewardId()
com.l2jfrozen.gameserver.model.entity.event.DM: boolean set_rewardId(int)
com.l2jfrozen.gameserver.model.entity.event.DM: int get_rewardAmount()
com.l2jfrozen.gameserver.model.entity.event.DM: boolean set_rewardAmount(int)
com.l2jfrozen.gameserver.model.entity.event.DM: int get_minlvl()
com.l2jfrozen.gameserver.model.entity.event.DM: boolean set_minlvl(int)
com.l2jfrozen.gameserver.model.entity.event.DM: int get_maxlvl()
com.l2jfrozen.gameserver.model.entity.event.DM: boolean set_maxlvl(int)
com.l2jfrozen.gameserver.model.entity.event.DM: int get_joinTime()
com.l2jfrozen.gameserver.model.entity.event.DM: boolean set_joinTime(int)
com.l2jfrozen.gameserver.model.entity.event.DM: int get_eventTime()
com.l2jfrozen.gameserver.model.entity.event.DM: boolean set_eventTime(int)
com.l2jfrozen.gameserver.model.entity.event.DM: int get_minPlayers()
com.l2jfrozen.gameserver.model.entity.event.DM: boolean set_minPlayers(int)
com.l2jfrozen.gameserver.model.entity.event.DM: int get_maxPlayers()
com.l2jfrozen.gameserver.model.entity.event.DM: boolean set_maxPlayers(int)
com.l2jfrozen.gameserver.model.entity.event.DM: long get_intervalBetweenMatchs()
com.l2jfrozen.gameserver.model.entity.event.DM: boolean set_intervalBetweenMatchs(long)
com.l2jfrozen.gameserver.model.entity.event.DM: java.lang.String getStartEventTime()
com.l2jfrozen.gameserver.model.entity.event.DM: boolean setStartEventTime(java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.DM: boolean is_joining()
com.l2jfrozen.gameserver.model.entity.event.DM: boolean is_teleport()
com.l2jfrozen.gameserver.model.entity.event.DM: boolean is_started()
com.l2jfrozen.gameserver.model.entity.event.DM: boolean is_aborted()
com.l2jfrozen.gameserver.model.entity.event.DM: boolean is_sitForced()
com.l2jfrozen.gameserver.model.entity.event.DM: boolean is_inProgress()
com.l2jfrozen.gameserver.model.entity.event.DM: boolean checkMaxLevel(int)
com.l2jfrozen.gameserver.model.entity.event.DM: boolean checkMinLevel(int)
com.l2jfrozen.gameserver.model.entity.event.DM: boolean checkMinPlayers(int)
com.l2jfrozen.gameserver.model.entity.event.DM: boolean checkMaxPlayers(int)
com.l2jfrozen.gameserver.model.entity.event.DM: boolean checkStartJoinOk()
com.l2jfrozen.gameserver.model.entity.event.DM: boolean checkStartJoinTeamInfo()
com.l2jfrozen.gameserver.model.entity.event.DM: boolean checkStartJoinPlayerInfo()
com.l2jfrozen.gameserver.model.entity.event.DM: boolean checkAutoEventStartJoinOk()
com.l2jfrozen.gameserver.model.entity.event.DM: boolean checkOptionalEventStartJoinOk()
com.l2jfrozen.gameserver.model.entity.event.DM: void setNpcPos(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.DM: void spawnEventNpc()
com.l2jfrozen.gameserver.model.entity.event.DM: void unspawnEventNpc()
com.l2jfrozen.gameserver.model.entity.event.DM: boolean startJoin()
com.l2jfrozen.gameserver.model.entity.event.DM: boolean startTeleport()
com.l2jfrozen.gameserver.model.entity.event.DM: void afterTeleportOperations()
com.l2jfrozen.gameserver.model.entity.event.DM: boolean startEvent()
com.l2jfrozen.gameserver.model.entity.event.DM: void removeParties()
com.l2jfrozen.gameserver.model.entity.event.DM: void afterStartOperations()
com.l2jfrozen.gameserver.model.entity.event.DM: void restartEvent()
com.l2jfrozen.gameserver.model.entity.event.DM: void finishEvent()
com.l2jfrozen.gameserver.model.entity.event.DM: void afterFinishOperations()
com.l2jfrozen.gameserver.model.entity.event.DM: void abortEvent()
com.l2jfrozen.gameserver.model.entity.event.DM: void afterFinish()
com.l2jfrozen.gameserver.model.entity.event.DM: void teleportFinish()
com.l2jfrozen.gameserver.model.entity.event.DM: void autoEvent()
com.l2jfrozen.gameserver.model.entity.event.DM: void eventOnceStart()
com.l2jfrozen.gameserver.model.entity.event.DM: void waiter(long)
com.l2jfrozen.gameserver.model.entity.event.DM: void sit()
com.l2jfrozen.gameserver.model.entity.event.DM: void removeOfflinePlayers()
com.l2jfrozen.gameserver.model.entity.event.DM: boolean startEventOk()
com.l2jfrozen.gameserver.model.entity.event.DM: boolean finishEventOk()
com.l2jfrozen.gameserver.model.entity.event.DM: boolean addPlayerOk(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.DM: void setUserData()
com.l2jfrozen.gameserver.model.entity.event.DM: void dumpData()
com.l2jfrozen.gameserver.model.entity.event.DM: void dumpLocalEventInfo()
com.l2jfrozen.gameserver.model.entity.event.DM: void loadData()
com.l2jfrozen.gameserver.model.entity.event.DM: void saveData()
com.l2jfrozen.gameserver.model.entity.event.DM: void showEventHtml(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.DM: void addPlayer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.DM: void removePlayer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.DM: void cleanDM()
com.l2jfrozen.gameserver.model.entity.event.DM: void cleanLocalEventInfo()
com.l2jfrozen.gameserver.model.entity.event.DM: void cleanEventPlayer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.DM: void addDisconnectedPlayer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.DM: int get_playerColors()
com.l2jfrozen.gameserver.model.entity.event.DM: boolean set_playerColors(int)
com.l2jfrozen.gameserver.model.entity.event.DM: void rewardPlayer()
com.l2jfrozen.gameserver.model.entity.event.DM: void processTopPlayer()
com.l2jfrozen.gameserver.model.entity.event.DM: void processTopTeam()
com.l2jfrozen.gameserver.model.entity.event.DM: com.l2jfrozen.gameserver.model.Location get_playersSpawnLocation()
com.l2jfrozen.gameserver.model.entity.event.DM: void setPlayersPos(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.DM: void removeUserData()
com.l2jfrozen.gameserver.model.entity.event.DM: void sendFinalMessages()
com.l2jfrozen.gameserver.model.entity.event.DM: int getIntervalBetweenMatchs()
com.l2jfrozen.gameserver.model.entity.event.DM: void setEventStartTime(java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.DM: java.lang.String getEventIdentifier()
com.l2jfrozen.gameserver.model.entity.event.DM: void run()
com.l2jfrozen.gameserver.model.entity.event.DM: java.lang.String getEventStartTime()
com.l2jfrozen.gameserver.model.entity.event.DM: void onDisconnect(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.DM: void <clinit>()
com.l2jfrozen.gameserver.model.entity.event.DM$1
com.l2jfrozen.gameserver.model.entity.event.DM$1: DM$1()
com.l2jfrozen.gameserver.model.entity.event.DM$1: void run()
com.l2jfrozen.gameserver.model.entity.event.DM$2
com.l2jfrozen.gameserver.model.entity.event.DM$2: DM$2()
com.l2jfrozen.gameserver.model.entity.event.DM$2: void run()
com.l2jfrozen.gameserver.model.entity.event.EventInterface
com.l2jfrozen.gameserver.model.entity.event.EventPoint
com.l2jfrozen.gameserver.model.entity.event.EventPoint: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.model.entity.event.EventPoint: java.lang.Integer _points
com.l2jfrozen.gameserver.model.entity.event.EventPoint: EventPoint(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.EventPoint: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getActiveChar()
com.l2jfrozen.gameserver.model.entity.event.EventPoint: void savePoints()
com.l2jfrozen.gameserver.model.entity.event.EventPoint: void loadFromDB()
com.l2jfrozen.gameserver.model.entity.event.EventPoint: void saveToDb()
com.l2jfrozen.gameserver.model.entity.event.EventPoint: java.lang.Integer getPoints()
com.l2jfrozen.gameserver.model.entity.event.EventPoint: void setPoints(java.lang.Integer)
com.l2jfrozen.gameserver.model.entity.event.EventPoint: void addPoints(java.lang.Integer)
com.l2jfrozen.gameserver.model.entity.event.EventPoint: void removePoints(java.lang.Integer)
com.l2jfrozen.gameserver.model.entity.event.EventPoint: boolean canSpend(java.lang.Integer)
com.l2jfrozen.gameserver.model.entity.event.L2Event
com.l2jfrozen.gameserver.model.entity.event.L2Event: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.entity.event.L2Event: java.lang.String eventName
com.l2jfrozen.gameserver.model.entity.event.L2Event: int teamsNumber
com.l2jfrozen.gameserver.model.entity.event.L2Event: java.util.HashMap names
com.l2jfrozen.gameserver.model.entity.event.L2Event: java.util.LinkedList participatingPlayers
com.l2jfrozen.gameserver.model.entity.event.L2Event: java.util.HashMap players
com.l2jfrozen.gameserver.model.entity.event.L2Event: int id
com.l2jfrozen.gameserver.model.entity.event.L2Event: java.util.LinkedList npcs
com.l2jfrozen.gameserver.model.entity.event.L2Event: boolean active
com.l2jfrozen.gameserver.model.entity.event.L2Event: java.util.HashMap connectionLossData
com.l2jfrozen.gameserver.model.entity.event.L2Event: L2Event()
com.l2jfrozen.gameserver.model.entity.event.L2Event: int getTeamOfPlayer(java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.L2Event: java.lang.String[] getTopNKillers(int)
com.l2jfrozen.gameserver.model.entity.event.L2Event: void showEventHtml(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.L2Event: void spawn(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.entity.event.L2Event: void announceAllPlayers(java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.L2Event: boolean isOnEvent(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.L2Event: void inscribePlayer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.L2Event: void restoreChar(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.L2Event: void restoreAndTeleChar(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.L2Event: void <clinit>()
com.l2jfrozen.gameserver.model.entity.event.Lottery
com.l2jfrozen.gameserver.model.entity.event.Lottery: long SECOND
com.l2jfrozen.gameserver.model.entity.event.Lottery: long MINUTE
com.l2jfrozen.gameserver.model.entity.event.Lottery: com.l2jfrozen.gameserver.model.entity.event.Lottery _instance
com.l2jfrozen.gameserver.model.entity.event.Lottery: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.entity.event.Lottery: java.lang.String INSERT_LOTTERY
com.l2jfrozen.gameserver.model.entity.event.Lottery: java.lang.String UPDATE_PRICE
com.l2jfrozen.gameserver.model.entity.event.Lottery: java.lang.String UPDATE_LOTTERY
com.l2jfrozen.gameserver.model.entity.event.Lottery: java.lang.String SELECT_LAST_LOTTERY
com.l2jfrozen.gameserver.model.entity.event.Lottery: java.lang.String SELECT_LOTTERY_ITEM
com.l2jfrozen.gameserver.model.entity.event.Lottery: java.lang.String SELECT_LOTTERY_TICKET
com.l2jfrozen.gameserver.model.entity.event.Lottery: int _number
com.l2jfrozen.gameserver.model.entity.event.Lottery: int _prize
com.l2jfrozen.gameserver.model.entity.event.Lottery: boolean _isSellingTickets
com.l2jfrozen.gameserver.model.entity.event.Lottery: boolean _isStarted
com.l2jfrozen.gameserver.model.entity.event.Lottery: long _enddate
com.l2jfrozen.gameserver.model.entity.event.Lottery: Lottery()
com.l2jfrozen.gameserver.model.entity.event.Lottery: com.l2jfrozen.gameserver.model.entity.event.Lottery getInstance()
com.l2jfrozen.gameserver.model.entity.event.Lottery: int getId()
com.l2jfrozen.gameserver.model.entity.event.Lottery: int getPrize()
com.l2jfrozen.gameserver.model.entity.event.Lottery: long getEndDate()
com.l2jfrozen.gameserver.model.entity.event.Lottery: void increasePrize(int)
com.l2jfrozen.gameserver.model.entity.event.Lottery: boolean isSellableTickets()
com.l2jfrozen.gameserver.model.entity.event.Lottery: boolean isStarted()
com.l2jfrozen.gameserver.model.entity.event.Lottery: int[] decodeNumbers(int,int)
com.l2jfrozen.gameserver.model.entity.event.Lottery: int[] checkTicket(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.model.entity.event.Lottery: int[] checkTicket(int,int,int)
com.l2jfrozen.gameserver.model.entity.event.Lottery: void <clinit>()
com.l2jfrozen.gameserver.model.entity.event.Lottery$finishLottery
com.l2jfrozen.gameserver.model.entity.event.Lottery$finishLottery: com.l2jfrozen.gameserver.model.entity.event.Lottery this$0
com.l2jfrozen.gameserver.model.entity.event.Lottery$finishLottery: Lottery$finishLottery(com.l2jfrozen.gameserver.model.entity.event.Lottery)
com.l2jfrozen.gameserver.model.entity.event.Lottery$finishLottery: void run()
com.l2jfrozen.gameserver.model.entity.event.Lottery$startLottery
com.l2jfrozen.gameserver.model.entity.event.Lottery$startLottery: com.l2jfrozen.gameserver.model.entity.event.Lottery this$0
com.l2jfrozen.gameserver.model.entity.event.Lottery$startLottery: Lottery$startLottery(com.l2jfrozen.gameserver.model.entity.event.Lottery)
com.l2jfrozen.gameserver.model.entity.event.Lottery$startLottery: void run()
com.l2jfrozen.gameserver.model.entity.event.Lottery$stopSellingTickets
com.l2jfrozen.gameserver.model.entity.event.Lottery$stopSellingTickets: com.l2jfrozen.gameserver.model.entity.event.Lottery this$0
com.l2jfrozen.gameserver.model.entity.event.Lottery$stopSellingTickets: Lottery$stopSellingTickets(com.l2jfrozen.gameserver.model.entity.event.Lottery)
com.l2jfrozen.gameserver.model.entity.event.Lottery$stopSellingTickets: void run()
com.l2jfrozen.gameserver.model.entity.event.TvT
com.l2jfrozen.gameserver.model.entity.event.TvT: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.entity.event.TvT: java.lang.String _eventName
com.l2jfrozen.gameserver.model.entity.event.TvT: java.lang.String _eventDesc
com.l2jfrozen.gameserver.model.entity.event.TvT: java.lang.String _joiningLocationName
com.l2jfrozen.gameserver.model.entity.event.TvT: com.l2jfrozen.gameserver.model.spawn.L2Spawn _npcSpawn
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean _joining
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean _teleport
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean _started
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean _aborted
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean _sitForced
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean _inProgress
com.l2jfrozen.gameserver.model.entity.event.TvT: int _npcId
com.l2jfrozen.gameserver.model.entity.event.TvT: int _npcX
com.l2jfrozen.gameserver.model.entity.event.TvT: int _npcY
com.l2jfrozen.gameserver.model.entity.event.TvT: int _npcZ
com.l2jfrozen.gameserver.model.entity.event.TvT: int _npcHeading
com.l2jfrozen.gameserver.model.entity.event.TvT: int _rewardId
com.l2jfrozen.gameserver.model.entity.event.TvT: int _rewardAmount
com.l2jfrozen.gameserver.model.entity.event.TvT: int _minlvl
com.l2jfrozen.gameserver.model.entity.event.TvT: int _maxlvl
com.l2jfrozen.gameserver.model.entity.event.TvT: int _joinTime
com.l2jfrozen.gameserver.model.entity.event.TvT: int _eventTime
com.l2jfrozen.gameserver.model.entity.event.TvT: int _minPlayers
com.l2jfrozen.gameserver.model.entity.event.TvT: int _maxPlayers
com.l2jfrozen.gameserver.model.entity.event.TvT: long _intervalBetweenMatchs
com.l2jfrozen.gameserver.model.entity.event.TvT: java.lang.String startEventTime
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean _teamEvent
com.l2jfrozen.gameserver.model.entity.event.TvT: java.util.Vector _players
com.l2jfrozen.gameserver.model.entity.event.TvT: java.lang.String _topTeam
com.l2jfrozen.gameserver.model.entity.event.TvT: java.util.Vector _playersShuffle
com.l2jfrozen.gameserver.model.entity.event.TvT: java.util.Vector _teams
com.l2jfrozen.gameserver.model.entity.event.TvT: java.util.Vector _savePlayers
com.l2jfrozen.gameserver.model.entity.event.TvT: java.util.Vector _savePlayerTeams
com.l2jfrozen.gameserver.model.entity.event.TvT: java.util.Vector _teamPlayersCount
com.l2jfrozen.gameserver.model.entity.event.TvT: java.util.Vector _teamColors
com.l2jfrozen.gameserver.model.entity.event.TvT: java.util.Vector _teamsX
com.l2jfrozen.gameserver.model.entity.event.TvT: java.util.Vector _teamsY
com.l2jfrozen.gameserver.model.entity.event.TvT: java.util.Vector _teamsZ
com.l2jfrozen.gameserver.model.entity.event.TvT: java.util.Vector _teamPointsCount
com.l2jfrozen.gameserver.model.entity.event.TvT: int _topKills
com.l2jfrozen.gameserver.model.entity.event.TvT: TvT()
com.l2jfrozen.gameserver.model.entity.event.TvT: com.l2jfrozen.gameserver.model.entity.event.TvT getNewInstance()
com.l2jfrozen.gameserver.model.entity.event.TvT: java.lang.String get_eventName()
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean set_eventName(java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.TvT: java.lang.String get_eventDesc()
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean set_eventDesc(java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.TvT: java.lang.String get_joiningLocationName()
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean set_joiningLocationName(java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.TvT: int get_npcId()
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean set_npcId(int)
com.l2jfrozen.gameserver.model.entity.event.TvT: com.l2jfrozen.gameserver.model.Location get_npcLocation()
com.l2jfrozen.gameserver.model.entity.event.TvT: int get_rewardId()
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean set_rewardId(int)
com.l2jfrozen.gameserver.model.entity.event.TvT: int get_rewardAmount()
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean set_rewardAmount(int)
com.l2jfrozen.gameserver.model.entity.event.TvT: int get_minlvl()
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean set_minlvl(int)
com.l2jfrozen.gameserver.model.entity.event.TvT: int get_maxlvl()
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean set_maxlvl(int)
com.l2jfrozen.gameserver.model.entity.event.TvT: int get_joinTime()
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean set_joinTime(int)
com.l2jfrozen.gameserver.model.entity.event.TvT: int get_eventTime()
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean set_eventTime(int)
com.l2jfrozen.gameserver.model.entity.event.TvT: int get_minPlayers()
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean set_minPlayers(int)
com.l2jfrozen.gameserver.model.entity.event.TvT: int get_maxPlayers()
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean set_maxPlayers(int)
com.l2jfrozen.gameserver.model.entity.event.TvT: long get_intervalBetweenMatchs()
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean set_intervalBetweenMatchs(long)
com.l2jfrozen.gameserver.model.entity.event.TvT: java.lang.String getStartEventTime()
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean setStartEventTime(java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean is_joining()
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean is_teleport()
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean is_started()
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean is_aborted()
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean is_sitForced()
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean is_inProgress()
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean checkMaxLevel(int)
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean checkMinLevel(int)
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean checkMinPlayers(int)
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean checkMaxPlayers(int)
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean checkStartJoinOk()
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean checkStartJoinTeamInfo()
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean checkStartJoinPlayerInfo()
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean checkAutoEventStartJoinOk()
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean checkOptionalEventStartJoinOk()
com.l2jfrozen.gameserver.model.entity.event.TvT: void setNpcPos(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.TvT: void spawnEventNpc()
com.l2jfrozen.gameserver.model.entity.event.TvT: void unspawnEventNpc()
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean startJoin()
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean startTeleport()
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean startEvent()
com.l2jfrozen.gameserver.model.entity.event.TvT: void restartEvent()
com.l2jfrozen.gameserver.model.entity.event.TvT: void finishEvent()
com.l2jfrozen.gameserver.model.entity.event.TvT: void afterFinishOperations()
com.l2jfrozen.gameserver.model.entity.event.TvT: void abortEvent()
com.l2jfrozen.gameserver.model.entity.event.TvT: void teleportFinish()
com.l2jfrozen.gameserver.model.entity.event.TvT: void autoEvent()
com.l2jfrozen.gameserver.model.entity.event.TvT: void eventOnceStart()
com.l2jfrozen.gameserver.model.entity.event.TvT: void waiter(long)
com.l2jfrozen.gameserver.model.entity.event.TvT: void sit()
com.l2jfrozen.gameserver.model.entity.event.TvT: void removeOfflinePlayers()
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean startEventOk()
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean finishEventOk()
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean addPlayerOk(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.TvT: void setUserData()
com.l2jfrozen.gameserver.model.entity.event.TvT: void dumpData()
com.l2jfrozen.gameserver.model.entity.event.TvT: void dumpLocalEventInfo()
com.l2jfrozen.gameserver.model.entity.event.TvT: void loadData()
com.l2jfrozen.gameserver.model.entity.event.TvT: void saveData()
com.l2jfrozen.gameserver.model.entity.event.TvT: void showEventHtml(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.TvT: void addPlayer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.TvT: void removePlayer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.TvT: void cleanTvT()
com.l2jfrozen.gameserver.model.entity.event.TvT: void cleanLocalEventInfo()
com.l2jfrozen.gameserver.model.entity.event.TvT: void cleanEventPlayer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.TvT: void addDisconnectedPlayer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.TvT: void afterAddDisconnectedPlayerOperations(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.TvT: void shuffleTeams()
com.l2jfrozen.gameserver.model.entity.event.TvT: void playKneelAnimation(java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.TvT: void rewardTeam(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.TvT: void processTopPlayer()
com.l2jfrozen.gameserver.model.entity.event.TvT: void processTopTeam()
com.l2jfrozen.gameserver.model.entity.event.TvT: void addTeam(java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.TvT: void addTeamEventOperations(java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.TvT: void removeTeam(java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.TvT: void removeTeamEventItems(java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.TvT: void setTeamPos(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.TvT: void setTeamPos(java.lang.String,int,int,int)
com.l2jfrozen.gameserver.model.entity.event.TvT: void setTeamColor(java.lang.String,int)
com.l2jfrozen.gameserver.model.entity.event.TvT: int teamPlayersCount(java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.TvT: void setTeamPlayersCount(java.lang.String,int)
com.l2jfrozen.gameserver.model.entity.event.TvT: boolean checkShufflePlayers(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.TvT: void sendFinalMessages()
com.l2jfrozen.gameserver.model.entity.event.TvT: int getIntervalBetweenMatchs()
com.l2jfrozen.gameserver.model.entity.event.TvT: void run()
com.l2jfrozen.gameserver.model.entity.event.TvT: java.lang.String getEventIdentifier()
com.l2jfrozen.gameserver.model.entity.event.TvT: java.lang.String getEventStartTime()
com.l2jfrozen.gameserver.model.entity.event.TvT: void setEventStartTime(java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.TvT: void onDisconnect(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.TvT: int teamKillsCount(java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.TvT: void setTeamKillsCount(java.lang.String,int)
com.l2jfrozen.gameserver.model.entity.event.TvT: void kickPlayerFromTvt(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.event.TvT: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance findBestKiller(java.util.Vector)
com.l2jfrozen.gameserver.model.entity.event.TvT: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance findLooser(java.util.Vector)
com.l2jfrozen.gameserver.model.entity.event.TvT: void closeFortDoors()
com.l2jfrozen.gameserver.model.entity.event.TvT: void openFortDoors()
com.l2jfrozen.gameserver.model.entity.event.TvT: void closeAdenColosseumDoors()
com.l2jfrozen.gameserver.model.entity.event.TvT: void openAdenColosseumDoors()
com.l2jfrozen.gameserver.model.entity.event.TvT: void <clinit>()
com.l2jfrozen.gameserver.model.entity.event.TvT$1
com.l2jfrozen.gameserver.model.entity.event.TvT$1: TvT$1()
com.l2jfrozen.gameserver.model.entity.event.TvT$1: void run()
com.l2jfrozen.gameserver.model.entity.event.TvT$2
com.l2jfrozen.gameserver.model.entity.event.TvT$2: TvT$2()
com.l2jfrozen.gameserver.model.entity.event.TvT$2: void run()
com.l2jfrozen.gameserver.model.entity.event.TvT$AutoEventTask
com.l2jfrozen.gameserver.model.entity.event.TvT$AutoEventTask: TvT$AutoEventTask()
com.l2jfrozen.gameserver.model.entity.event.TvT$AutoEventTask: void run()
com.l2jfrozen.gameserver.model.entity.event.TvT$TvTTeam
com.l2jfrozen.gameserver.model.entity.event.TvT$TvTTeam: int killCount
com.l2jfrozen.gameserver.model.entity.event.TvT$TvTTeam: java.lang.String name
com.l2jfrozen.gameserver.model.entity.event.TvT$TvTTeam: TvT$TvTTeam(java.lang.String,int)
com.l2jfrozen.gameserver.model.entity.event.TvT$TvTTeam: int getKillCount()
com.l2jfrozen.gameserver.model.entity.event.TvT$TvTTeam: void setKillCount(int)
com.l2jfrozen.gameserver.model.entity.event.TvT$TvTTeam: java.lang.String getName()
com.l2jfrozen.gameserver.model.entity.event.TvT$TvTTeam: void setName(java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.manager.EventManager
com.l2jfrozen.gameserver.model.entity.event.manager.EventManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.entity.event.manager.EventManager: boolean TVT_EVENT_ENABLED
com.l2jfrozen.gameserver.model.entity.event.manager.EventManager: java.util.ArrayList TVT_TIMES_LIST
com.l2jfrozen.gameserver.model.entity.event.manager.EventManager: boolean CTF_EVENT_ENABLED
com.l2jfrozen.gameserver.model.entity.event.manager.EventManager: java.util.ArrayList CTF_TIMES_LIST
com.l2jfrozen.gameserver.model.entity.event.manager.EventManager: boolean DM_EVENT_ENABLED
com.l2jfrozen.gameserver.model.entity.event.manager.EventManager: java.util.ArrayList DM_TIMES_LIST
com.l2jfrozen.gameserver.model.entity.event.manager.EventManager: com.l2jfrozen.gameserver.model.entity.event.manager.EventManager instance
com.l2jfrozen.gameserver.model.entity.event.manager.EventManager: EventManager()
com.l2jfrozen.gameserver.model.entity.event.manager.EventManager: com.l2jfrozen.gameserver.model.entity.event.manager.EventManager getInstance()
com.l2jfrozen.gameserver.model.entity.event.manager.EventManager: void loadConfiguration()
com.l2jfrozen.gameserver.model.entity.event.manager.EventManager: void startEventRegistration()
com.l2jfrozen.gameserver.model.entity.event.manager.EventManager: void registerTvT()
com.l2jfrozen.gameserver.model.entity.event.manager.EventManager: void registerCTF()
com.l2jfrozen.gameserver.model.entity.event.manager.EventManager: void registerDM()
com.l2jfrozen.gameserver.model.entity.event.manager.EventManager: void <clinit>()
com.l2jfrozen.gameserver.model.entity.event.manager.EventTask
com.l2jfrozen.gameserver.model.entity.event.manager.EventTask: java.lang.String getEventIdentifier()
com.l2jfrozen.gameserver.model.entity.event.manager.EventTask: java.lang.String getEventStartTime()
com.l2jfrozen.gameserver.model.entity.event.manager.EventsGlobalTask
com.l2jfrozen.gameserver.model.entity.event.manager.EventsGlobalTask: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.entity.event.manager.EventsGlobalTask: com.l2jfrozen.gameserver.model.entity.event.manager.EventsGlobalTask instance
com.l2jfrozen.gameserver.model.entity.event.manager.EventsGlobalTask: boolean destroy
com.l2jfrozen.gameserver.model.entity.event.manager.EventsGlobalTask: java.util.Hashtable time_to_tasks
com.l2jfrozen.gameserver.model.entity.event.manager.EventsGlobalTask: java.util.Hashtable eventid_to_tasks
com.l2jfrozen.gameserver.model.entity.event.manager.EventsGlobalTask: EventsGlobalTask()
com.l2jfrozen.gameserver.model.entity.event.manager.EventsGlobalTask: com.l2jfrozen.gameserver.model.entity.event.manager.EventsGlobalTask getInstance()
com.l2jfrozen.gameserver.model.entity.event.manager.EventsGlobalTask: void registerNewEventTask(com.l2jfrozen.gameserver.model.entity.event.manager.EventTask)
com.l2jfrozen.gameserver.model.entity.event.manager.EventsGlobalTask: void clearEventTasksByEventName(java.lang.String)
com.l2jfrozen.gameserver.model.entity.event.manager.EventsGlobalTask: void deleteEventTask(com.l2jfrozen.gameserver.model.entity.event.manager.EventTask)
com.l2jfrozen.gameserver.model.entity.event.manager.EventsGlobalTask: void checkRegisteredEvents()
com.l2jfrozen.gameserver.model.entity.event.manager.EventsGlobalTask: void destroyLocalInstance()
com.l2jfrozen.gameserver.model.entity.event.manager.EventsGlobalTask: void run()
com.l2jfrozen.gameserver.model.entity.event.manager.EventsGlobalTask: void <clinit>()
com.l2jfrozen.gameserver.model.entity.olympiad.COMP_TYPE
com.l2jfrozen.gameserver.model.entity.olympiad.COMP_TYPE: com.l2jfrozen.gameserver.model.entity.olympiad.COMP_TYPE CLASSED
com.l2jfrozen.gameserver.model.entity.olympiad.COMP_TYPE: com.l2jfrozen.gameserver.model.entity.olympiad.COMP_TYPE NON_CLASSED
com.l2jfrozen.gameserver.model.entity.olympiad.COMP_TYPE: com.l2jfrozen.gameserver.model.entity.olympiad.COMP_TYPE[] $VALUES
com.l2jfrozen.gameserver.model.entity.olympiad.COMP_TYPE: com.l2jfrozen.gameserver.model.entity.olympiad.COMP_TYPE[] values()
com.l2jfrozen.gameserver.model.entity.olympiad.COMP_TYPE: com.l2jfrozen.gameserver.model.entity.olympiad.COMP_TYPE valueOf(java.lang.String)
com.l2jfrozen.gameserver.model.entity.olympiad.COMP_TYPE: COMP_TYPE(java.lang.String,int)
com.l2jfrozen.gameserver.model.entity.olympiad.COMP_TYPE: void <clinit>()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad _instance
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: java.util.Map _nobles
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: java.util.Map _oldnobles
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: com.l2jfrozen.common.util.L2FastList _heroesToBe
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: com.l2jfrozen.common.util.L2FastList _nonClassBasedRegisters
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: java.util.Map _classBasedRegisters
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: int OLY_MANAGER
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: javolution.util.FastList olymanagers
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: java.lang.String OLYMPIAD_HTML_PATH
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: java.lang.String OLYMPIAD_LOAD_NOBLES
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: java.lang.String OLYMPIAD_SAVE_NOBLES
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: java.lang.String OLYMPIAD_UPDATE_NOBLES
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: java.lang.String OLYMPIAD_UPDATE_OLD_NOBLES
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: java.lang.String OLYMPIAD_GET_HEROS
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: java.lang.String GET_EACH_CLASS_LEADER
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: java.lang.String GET_EACH_CLASS_LEADER_CURRENT
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: java.lang.String OLYMPIAD_DELETE_ALL
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: java.lang.String OLYMPIAD_MONTH_CLEAR
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: java.lang.String OLYMPIAD_MONTH_CREATE
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: java.lang.String OLYMPIAD_LOAD_OLD_NOBLES
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: int[] HERO_IDS
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: int COMP_START
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: int COMP_MIN
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: long COMP_PERIOD
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: long WEEKLY_PERIOD
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: long VALIDATION_PERIOD
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: int DEFAULT_POINTS
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: int WEEKLY_POINTS
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: java.lang.String CHAR_ID
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: java.lang.String CLASS_ID
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: java.lang.String CHAR_NAME
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: java.lang.String POINTS
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: java.lang.String COMP_DONE
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: java.lang.String COMP_WON
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: java.lang.String COMP_LOST
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: java.lang.String COMP_DRAWN
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: long _olympiadEnd
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: long _validationEnd
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: int _period
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: long _nextWeeklyChange
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: int _currentCycle
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: long _compEnd
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: java.util.Calendar _compStart
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: boolean _inCompPeriod
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: boolean _compStarted
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: java.util.concurrent.ScheduledFuture _scheduledCompStart
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: java.util.concurrent.ScheduledFuture _scheduledCompEnd
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: java.util.concurrent.ScheduledFuture _scheduledOlympiadEnd
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: java.util.concurrent.ScheduledFuture _scheduledWeeklyTask
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: java.util.concurrent.ScheduledFuture _scheduledValdationTask
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad getInstance()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: Olympiad()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: java.lang.Integer getStadiumCount()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: void load()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: void init()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: boolean registerNoble(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: int getNobleCount()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: com.l2jfrozen.gameserver.templates.StatsSet getNobleStats(int)
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: void updateNobleStats(int,com.l2jfrozen.gameserver.templates.StatsSet)
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: void updateOldNobleStats(int,com.l2jfrozen.gameserver.templates.StatsSet)
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: com.l2jfrozen.common.util.L2FastList getRegisteredNonClassBased()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: java.util.Map getRegisteredClassBased()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: com.l2jfrozen.common.util.L2FastList hasEnoughRegisteredClassed()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: boolean hasEnoughRegisteredNonClassed()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: void clearRegistered()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: boolean isRegistered(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: boolean unRegisterNoble(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: void removeDisconnectedCompetitor(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: void notifyCompetitorDamage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int)
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: void updateCompStatus()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: long getMillisToOlympiadEnd()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: void manualSelectHeroes()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: long getMillisToValidationEnd()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: boolean isOlympiadEnd()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: void setNewOlympiadEnd()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: boolean inCompPeriod()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: long getMillisToCompBegin()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: long setNewCompBegin()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: long getMillisToCompEnd()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: long getMillisToWeekChange()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: void scheduleWeeklyChange()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: void addWeeklyPoints()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: javolution.util.FastMap getMatchList()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance[] getPlayers(int)
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: int getCurrentCycle()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: void addSpectator(int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: int getSpectatorArena(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: void removeSpectator(int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: com.l2jfrozen.common.util.L2FastList getSpectators(int)
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: java.util.Map getOlympiadGames()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: boolean playerInStadia(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: int[] getWaitingList()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: void saveNobleData()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: void saveOldNobleData(int)
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: void saveOlympiadStatus()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: void updateMonthlyData()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: void sortHerosToBe()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: com.l2jfrozen.common.util.L2FastList getClassLeaderBoard(int)
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: void giveHeroBonus()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: int getNoblessePasses(int)
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: boolean isRegisteredInComp(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: int getNoblePoints(int)
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: int getCompetitionDone(int)
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: int getCompetitionWon(int)
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: int getCompetitionLost(int)
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: void deleteNobles()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: void logResult(java.lang.String,java.lang.String,java.lang.Double,java.lang.Double,int,int,java.lang.String,int,java.lang.String)
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: void sendMatchList(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: void bypassChangeArena(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: void setNewOlympiadEndCustom()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: void schedulePointsRestoreCustom()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad: void <clinit>()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad$1
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad$1: com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad this$0
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad$1: Olympiad$1(com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad)
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad$1: void run()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad$1$1
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad$1$1: com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad$1 this$1
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad$1$1: Olympiad$1$1(com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad$1)
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad$1$1: void run()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad$1$2
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad$1$2: com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad$1 this$1
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad$1$2: Olympiad$1$2(com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad$1)
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad$1$2: void run()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad$2
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad$2: com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad this$0
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad$2: Olympiad$2(com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad)
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad$2: void run()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad$3
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad$3: int[] $SwitchMap$com$l2jfrozen$gameserver$model$entity$olympiad$OlympiadPeriod
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad$3: void <clinit>()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad$OlympiadEndTask
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad$OlympiadEndTask: com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad this$0
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad$OlympiadEndTask: Olympiad$OlympiadEndTask(com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad)
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad$OlympiadEndTask: void run()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad$OlympiadPointsRestoreTask
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad$OlympiadPointsRestoreTask: long restoreTime
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad$OlympiadPointsRestoreTask: com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad this$0
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad$OlympiadPointsRestoreTask: Olympiad$OlympiadPointsRestoreTask(com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad,long)
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad$OlympiadPointsRestoreTask: void run()
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad$ValidationEndTask
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad$ValidationEndTask: com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad this$0
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad$ValidationEndTask: Olympiad$ValidationEndTask(com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad)
com.l2jfrozen.gameserver.model.entity.olympiad.Olympiad$ValidationEndTask: void run()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: com.l2jfrozen.gameserver.model.entity.olympiad.COMP_TYPE _type
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: boolean _aborted
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: boolean _gamestarted
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: boolean _playerOneDisconnected
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: boolean _playerTwoDisconnected
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: boolean _playerOneDefaulted
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: boolean _playerTwoDefaulted
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: java.lang.String _playerOneName
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: java.lang.String _playerTwoName
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: javolution.util.FastList _playerOneSkills
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: javolution.util.FastList _playerTwoSkills
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: java.lang.String POINTS
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: java.lang.String COMP_DONE
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: java.lang.String COMP_WON
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: java.lang.String COMP_LOST
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: java.lang.String COMP_DRAWN
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: boolean _battleStarted
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: int _damageP1
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: int _damageP2
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _playerOne
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _playerTwo
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: com.l2jfrozen.common.util.L2FastList _players
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: int[] _stadiumPort
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: int x1
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: int y1
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: int z1
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: int x2
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: int y2
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: int z2
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: int _stadiumID
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: com.l2jfrozen.gameserver.network.serverpackets.SystemMessage _sm
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: com.l2jfrozen.gameserver.network.serverpackets.SystemMessage _sm2
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: com.l2jfrozen.gameserver.network.serverpackets.SystemMessage _sm3
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: OlympiadGame(int,com.l2jfrozen.gameserver.model.entity.olympiad.COMP_TYPE,com.l2jfrozen.common.util.L2FastList)
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: boolean isAborted()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: void clearPlayers()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: void handleDisconnect(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: void removals()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: boolean portPlayersToArena()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: void additions()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: void sendMessageToPlayers(boolean,int)
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: void portPlayersBack()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: void PlayersStatusBack()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: boolean haveWinner()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: void validateWinner(boolean)
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: boolean makeCompetitionStart()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: void addDamage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: java.lang.String getTitle()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance[] getPlayers()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: void broadcastMessage(com.l2jfrozen.gameserver.network.serverpackets.SystemMessage,boolean)
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: void announceGame()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: void sendPlayersStatus(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame: void <clinit>()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame$1
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame$1: int[] $SwitchMap$com$l2jfrozen$gameserver$model$entity$olympiad$COMP_TYPE
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame$1: void <clinit>()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGameTask
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGameTask: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGameTask: com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame _game
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGameTask: long BATTLE_PERIOD
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGameTask: boolean _terminated
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGameTask: boolean _started
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGameTask: boolean OLYMPIAD_MODE_TIE
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGameTask: boolean isTerminated()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGameTask: boolean isStarted()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGameTask: OlympiadGameTask(com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame)
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGameTask: boolean checkObserverStatusBug(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGameTask: void removeObserverModeBug(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGameTask: boolean checkBattleStatus()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGameTask: boolean checkDefaulted()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGameTask: void run()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGameTask: boolean runGame()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGameTask: boolean teleportCountdown()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGameTask: void <clinit>()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadManager
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadManager: java.util.Map _olympiadInstances
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadManager: com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadStadium[] STADIUMS
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadManager: OlympiadManager()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadManager: com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadManager getInstance()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadManager: void run()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadManager: com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame getOlympiadGame(int)
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadManager: void removeGame(com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadGame)
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadManager: java.util.Map getOlympiadGames()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadManager: com.l2jfrozen.common.util.L2FastList getRandomClassList(java.util.Map,com.l2jfrozen.common.util.L2FastList)
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadManager: com.l2jfrozen.common.util.L2FastList nextOpponents(com.l2jfrozen.common.util.L2FastList)
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadManager: boolean existNextOpponents(com.l2jfrozen.common.util.L2FastList)
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadManager: javolution.util.FastMap getAllTitles()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadManager: OlympiadManager(com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadManager$1)
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadManager: void <clinit>()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadManager$1
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadManager$SingletonHolder
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadManager$SingletonHolder: com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadManager _instance
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadManager$SingletonHolder: OlympiadManager$SingletonHolder()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadManager$SingletonHolder: void <clinit>()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadPeriod
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadPeriod: com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadPeriod MONTH
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadPeriod: com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadPeriod WEEK
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadPeriod: com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadPeriod DAY
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadPeriod: com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadPeriod[] $VALUES
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadPeriod: com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadPeriod[] values()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadPeriod: com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadPeriod valueOf(java.lang.String)
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadPeriod: OlympiadPeriod(java.lang.String,int)
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadPeriod: void <clinit>()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadStadium
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadStadium: boolean _freeToUse
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadStadium: int[] _coords
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadStadium: com.l2jfrozen.common.util.L2FastList _spectators
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadStadium: boolean isFreeToUse()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadStadium: void setStadiaBusy()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadStadium: void setStadiaFree()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadStadium: int[] getCoordinates()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadStadium: OlympiadStadium(int,int,int)
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadStadium: void addSpectator(int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadStadium: com.l2jfrozen.common.util.L2FastList getSpectators()
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadStadium: void removeSpectator(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.olympiad.OlympiadStadium: void clearSpectators()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns _instance
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: java.lang.String SEVEN_SIGNS_HTML_PATH
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int CABAL_NULL
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int CABAL_DUSK
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int CABAL_DAWN
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int SEAL_NULL
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int SEAL_AVARICE
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int SEAL_GNOSIS
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int SEAL_STRIFE
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int PERIOD_COMP_RECRUITING
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int PERIOD_COMPETITION
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int PERIOD_COMP_RESULTS
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int PERIOD_SEAL_VALIDATION
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int PERIOD_START_HOUR
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int PERIOD_START_MINS
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int PERIOD_START_DAY
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int PERIOD_MINOR_LENGTH
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int PERIOD_MAJOR_LENGTH
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int ANCIENT_ADENA_ID
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int RECORD_SEVEN_SIGNS_ID
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int CERTIFICATE_OF_APPROVAL_ID
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int RECORD_SEVEN_SIGNS_COST
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int ADENA_JOIN_DAWN_COST
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int ORATOR_NPC_ID
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int PREACHER_NPC_ID
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int MAMMON_MERCHANT_ID
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int MAMMON_BLACKSMITH_ID
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int MAMMON_MARKETEER_ID
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int SPIRIT_IN_ID
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int SPIRIT_OUT_ID
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int LILITH_NPC_ID
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int ANAKIM_NPC_ID
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int CREST_OF_DAWN_ID
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int CREST_OF_DUSK_ID
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int SEAL_STONE_BLUE_ID
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int SEAL_STONE_GREEN_ID
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int SEAL_STONE_RED_ID
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int SEAL_STONE_BLUE_VALUE
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int SEAL_STONE_GREEN_VALUE
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int SEAL_STONE_RED_VALUE
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int BLUE_CONTRIB_POINTS
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int GREEN_CONTRIB_POINTS
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int RED_CONTRIB_POINTS
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: java.util.Calendar _calendar
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int _activePeriod
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int _currentCycle
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: double _dawnStoneScore
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: double _duskStoneScore
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int _dawnFestivalScore
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int _duskFestivalScore
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int _compWinner
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int _previousWinner
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: java.util.Map _signsPlayerData
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: java.util.Map _signsSealOwners
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: java.util.Map _signsDuskSealTotals
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: java.util.Map _signsDawnSealTotals
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance _merchantSpawn
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance _blacksmithSpawn
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance _spiritInSpawn
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance _spiritOutSpawn
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance _lilithSpawn
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance _anakimSpawn
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance _crestofdawnspawn
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance _crestofduskspawn
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: java.util.Map _oratorSpawns
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: java.util.Map _preacherSpawns
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: java.util.Map _marketeerSpawns
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: SevenSigns()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: void spawnSevenSignsNPC()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns getInstance()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int calcContributionScore(int,int,int)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int calcAncientAdenaReward(int,int,int)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: java.lang.String getCabalShortName(int)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: java.lang.String getCabalName(int)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: java.lang.String getSealName(int,boolean)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int getCurrentCycle()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int getCurrentPeriod()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int getDaysToPeriodChange()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: long getMilliToPeriodChange()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: void setCalendarForNextPeriodChange()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: java.lang.String getCurrentPeriodName()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: boolean isSealValidationPeriod()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: boolean isCompResultsPeriod()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int getCurrentScore(int)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: double getCurrentStoneScore(int)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int getCurrentFestivalScore(int)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int getCabalHighestScore()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int getSealOwner(int)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int getSealProportion(int,int)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int getTotalMembers(int)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: com.l2jfrozen.gameserver.templates.StatsSet getPlayerData(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int getPlayerStoneContrib(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int getPlayerContribScore(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int getPlayerAdenaCollect(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int getPlayerSeal(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int getPlayerCabal(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: void restoreSevenSignsData()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: void saveSevenSignsData(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: void resetPlayerData()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: boolean hasRegisteredBefore(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int setPlayerInfo(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int getAncientAdenaReward(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: int addPlayerStoneContrib(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int,int)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: void addFestivalScore(int,int)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: void sendCurrentPeriodMsg(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: void sendMessageToAll(com.l2jfrozen.gameserver.network.SystemMessageId)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: void initializeSeals()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: void resetSeals()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: void calcNewSealOwners()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: void teleLosingCabalFromDungeons(java.lang.String)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns: void <clinit>()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns$SevenSignsPeriodChange
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns$SevenSignsPeriodChange: com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns this$0
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns$SevenSignsPeriodChange: SevenSigns$SevenSignsPeriodChange(com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSigns$SevenSignsPeriodChange: void run()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival _instance
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: java.lang.String GET_CLAN_NAME
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: long FESTIVAL_SIGNUP_TIME
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: int FESTIVAL_MAX_OFFSET_X
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: int FESTIVAL_MAX_OFFSET_Y
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: int FESTIVAL_DEFAULT_RESPAWN
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: int FESTIVAL_COUNT
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: int FESTIVAL_LEVEL_MAX_FOR_31
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: int FESTIVAL_LEVEL_MAX_FOR_42
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: int FESTIVAL_LEVEL_MAX_FOR_53
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: int FESTIVAL_LEVEL_MAX_FOR_64
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: int FESTIVAL_LEVEL_MAX_FOR_NONE
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: int[] FESTIVAL_LEVEL_SCORES
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: int FESTIVAL_OFFERING_ID
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: int FESTIVAL_OFFERING_VALUE
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: int[][] FESTIVAL_DAWN_PLAYER_SPAWNS
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: int[][] FESTIVAL_DUSK_PLAYER_SPAWNS
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: int[][] FESTIVAL_DAWN_WITCH_SPAWNS
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: int[][] FESTIVAL_DUSK_WITCH_SPAWNS
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: int[][][] FESTIVAL_DAWN_PRIMARY_SPAWNS
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: int[][][] FESTIVAL_DUSK_PRIMARY_SPAWNS
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: int[][][] FESTIVAL_DAWN_SECONDARY_SPAWNS
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: int[][][] FESTIVAL_DUSK_SECONDARY_SPAWNS
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: int[][][] FESTIVAL_DAWN_CHEST_SPAWNS
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: int[][][] FESTIVAL_DUSK_CHEST_SPAWNS
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$FestivalManager _managerInstance
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: java.util.concurrent.ScheduledFuture _managerScheduledTask
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: int _signsCycle
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: int _festivalCycle
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: long _nextFestivalCycleStart
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: long _nextFestivalStart
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: boolean _festivalInitialized
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: boolean _festivalInProgress
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: java.util.List _accumulatedBonuses
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance _dawnChatGuide
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance _duskChatGuide
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: java.util.Map _dawnFestivalParticipants
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: java.util.Map _duskFestivalParticipants
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: java.util.Map _dawnPreviousParticipants
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: java.util.Map _duskPreviousParticipants
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: java.util.Map _dawnFestivalScores
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: java.util.Map _duskFestivalScores
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: java.util.Map _festivalData
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: SevenSignsFestival()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival getInstance()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: java.lang.String getFestivalName(int)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: int getMaxLevelForFestival(int)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: boolean isFestivalArcher(int)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: boolean isFestivalChest(int)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: java.util.concurrent.ScheduledFuture getFestivalManagerSchedule()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: void startFestivalManager()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: void restoreFestivalData()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: void saveFestivalData(boolean)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: void rewardHighRanked()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: void addReputationPointsForPartyMemberClan(java.lang.String)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: void resetFestivalData(boolean)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: int getCurrentFestivalCycle()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: boolean isFestivalInitialized()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: boolean isFestivalInProgress()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: void setNextCycleStart()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: void setNextFestivalStart(long)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: int getMinsToNextCycle()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: int getMinsToNextFestival()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: java.lang.String getTimeToNextFestivalStart()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: int[] getFestivalForPlayer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: boolean isPlayerParticipant(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: java.util.List getParticipants(int,int)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: java.util.List getPreviousParticipants(int,int)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: void setParticipants(int,int,com.l2jfrozen.gameserver.model.L2Party)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: void updateParticipants(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Party)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: int getFinalScore(int,int)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: int getHighestScore(int,int)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: com.l2jfrozen.gameserver.templates.StatsSet getHighestScoreData(int,int)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: com.l2jfrozen.gameserver.templates.StatsSet getOverallHighestScoreData(int)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: boolean setFinalScore(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int,int)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: int getAccumulatedBonus(int)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: int getTotalAccumulatedBonus()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: void addAccumulatedBonus(int,int,int)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: int distribAccumulatedBonus(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: void sendMessageToAll(java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: boolean increaseChallenge(int,int)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: void npcSpawned(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival: void <clinit>()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$FestivalManager
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$FestivalManager: java.util.Map _festivalInstances
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$FestivalManager: com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival this$0
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$FestivalManager: SevenSignsFestival$FestivalManager(com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$FestivalManager: void run()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$FestivalManager: com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$L2DarknessFestival getFestivalInstance(int,int)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$FestivalSpawn
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$FestivalSpawn: int _x
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$FestivalSpawn: int _y
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$FestivalSpawn: int _z
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$FestivalSpawn: int _heading
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$FestivalSpawn: int _npcId
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$FestivalSpawn: com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival this$0
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$FestivalSpawn: SevenSignsFestival$FestivalSpawn(com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival,int,int,int,int)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$FestivalSpawn: SevenSignsFestival$FestivalSpawn(com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival,int[])
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$L2DarknessFestival
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$L2DarknessFestival: int _cabal
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$L2DarknessFestival: int _levelRange
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$L2DarknessFestival: boolean _challengeIncreased
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$L2DarknessFestival: com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$FestivalSpawn _startLocation
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$L2DarknessFestival: com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$FestivalSpawn _witchSpawn
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$L2DarknessFestival: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance _witchInst
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$L2DarknessFestival: java.util.List _npcInsts
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$L2DarknessFestival: java.util.List _participants
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$L2DarknessFestival: java.util.Map _originalLocations
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$L2DarknessFestival: com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival this$0
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$L2DarknessFestival: SevenSignsFestival$L2DarknessFestival(com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival,int,int)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$L2DarknessFestival: void festivalInit()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$L2DarknessFestival: void festivalStart()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$L2DarknessFestival: void moveMonstersToCenter()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$L2DarknessFestival: void spawnFestivalMonsters(int,int)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$L2DarknessFestival: boolean increaseChallenge()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$L2DarknessFestival: void sendMessageToParticipants(java.lang.String)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$L2DarknessFestival: void festivalEnd()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$L2DarknessFestival: void unspawnMobs()
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$L2DarknessFestival: void relocatePlayer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$RestoreStatus
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$RestoreStatus: com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival this$0
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$RestoreStatus: SevenSignsFestival$RestoreStatus(com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival)
com.l2jfrozen.gameserver.model.entity.sevensigns.SevenSignsFestival$RestoreStatus: void run()
com.l2jfrozen.gameserver.model.entity.siege.Castle
com.l2jfrozen.gameserver.model.entity.siege.Castle: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.entity.siege.Castle: javolution.util.FastList _procure
com.l2jfrozen.gameserver.model.entity.siege.Castle: javolution.util.FastList _production
com.l2jfrozen.gameserver.model.entity.siege.Castle: javolution.util.FastList _procureNext
com.l2jfrozen.gameserver.model.entity.siege.Castle: javolution.util.FastList _productionNext
com.l2jfrozen.gameserver.model.entity.siege.Castle: boolean _isNextPeriodApproved
com.l2jfrozen.gameserver.model.entity.siege.Castle: java.lang.String CASTLE_MANOR_DELETE_PRODUCTION
com.l2jfrozen.gameserver.model.entity.siege.Castle: java.lang.String CASTLE_MANOR_DELETE_PRODUCTION_PERIOD
com.l2jfrozen.gameserver.model.entity.siege.Castle: java.lang.String CASTLE_MANOR_DELETE_PROCURE
com.l2jfrozen.gameserver.model.entity.siege.Castle: java.lang.String CASTLE_MANOR_DELETE_PROCURE_PERIOD
com.l2jfrozen.gameserver.model.entity.siege.Castle: java.lang.String CASTLE_UPDATE_CROP
com.l2jfrozen.gameserver.model.entity.siege.Castle: java.lang.String CASTLE_UPDATE_SEED
com.l2jfrozen.gameserver.model.entity.siege.Castle: int _castleId
com.l2jfrozen.gameserver.model.entity.siege.Castle: java.util.List _doors
com.l2jfrozen.gameserver.model.entity.siege.Castle: java.util.List _doorDefault
com.l2jfrozen.gameserver.model.entity.siege.Castle: java.lang.String _name
com.l2jfrozen.gameserver.model.entity.siege.Castle: int _ownerId
com.l2jfrozen.gameserver.model.entity.siege.Castle: com.l2jfrozen.gameserver.model.entity.siege.Siege _siege
com.l2jfrozen.gameserver.model.entity.siege.Castle: java.util.Calendar _siegeDate
com.l2jfrozen.gameserver.model.entity.siege.Castle: int _siegeDayOfWeek
com.l2jfrozen.gameserver.model.entity.siege.Castle: int _siegeHourOfDay
com.l2jfrozen.gameserver.model.entity.siege.Castle: int _taxPercent
com.l2jfrozen.gameserver.model.entity.siege.Castle: double _taxRate
com.l2jfrozen.gameserver.model.entity.siege.Castle: int _treasury
com.l2jfrozen.gameserver.model.entity.siege.Castle: com.l2jfrozen.gameserver.model.zone.type.L2CastleZone _zone
com.l2jfrozen.gameserver.model.entity.siege.Castle: com.l2jfrozen.gameserver.model.zone.type.L2CastleTeleportZone _teleZone
com.l2jfrozen.gameserver.model.entity.siege.Castle: com.l2jfrozen.gameserver.model.L2Clan _formerOwner
com.l2jfrozen.gameserver.model.entity.siege.Castle: int _nbArtifact
com.l2jfrozen.gameserver.model.entity.siege.Castle: int[] _gate
com.l2jfrozen.gameserver.model.entity.siege.Castle: java.util.Map _engrave
com.l2jfrozen.gameserver.model.entity.siege.Castle: Castle(int)
com.l2jfrozen.gameserver.model.entity.siege.Castle: void Engrave(com.l2jfrozen.gameserver.model.L2Clan,int)
com.l2jfrozen.gameserver.model.entity.siege.Castle: void addToTreasury(int)
com.l2jfrozen.gameserver.model.entity.siege.Castle: boolean addToTreasuryNoTax(int)
com.l2jfrozen.gameserver.model.entity.siege.Castle: void banishForeigners()
com.l2jfrozen.gameserver.model.entity.siege.Castle: boolean checkIfInZone(int,int,int)
com.l2jfrozen.gameserver.model.entity.siege.Castle: void setZone(com.l2jfrozen.gameserver.model.zone.type.L2CastleZone)
com.l2jfrozen.gameserver.model.entity.siege.Castle: com.l2jfrozen.gameserver.model.zone.type.L2CastleZone getZone()
com.l2jfrozen.gameserver.model.entity.siege.Castle: void setTeleZone(com.l2jfrozen.gameserver.model.zone.type.L2CastleTeleportZone)
com.l2jfrozen.gameserver.model.entity.siege.Castle: com.l2jfrozen.gameserver.model.zone.type.L2CastleTeleportZone getTeleZone()
com.l2jfrozen.gameserver.model.entity.siege.Castle: double getDistance(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.entity.siege.Castle: void closeDoor(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.entity.siege.Castle: void openDoor(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.entity.siege.Castle: void openCloseDoor(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,boolean)
com.l2jfrozen.gameserver.model.entity.siege.Castle: void removeUpgrade()
com.l2jfrozen.gameserver.model.entity.siege.Castle: void setOwner(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.Castle: void removeOwner(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.Castle: void setTaxPercent(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.entity.siege.Castle: void setTaxPercent(int)
com.l2jfrozen.gameserver.model.entity.siege.Castle: void spawnDoor()
com.l2jfrozen.gameserver.model.entity.siege.Castle: void spawnDoor(boolean)
com.l2jfrozen.gameserver.model.entity.siege.Castle: void upgradeDoor(int,int,int,int)
com.l2jfrozen.gameserver.model.entity.siege.Castle: void load()
com.l2jfrozen.gameserver.model.entity.siege.Castle: void loadDoor()
com.l2jfrozen.gameserver.model.entity.siege.Castle: void loadDoorUpgrade()
com.l2jfrozen.gameserver.model.entity.siege.Castle: void removeDoorUpgrade()
com.l2jfrozen.gameserver.model.entity.siege.Castle: void saveDoorUpgrade(int,int,int,int)
com.l2jfrozen.gameserver.model.entity.siege.Castle: void updateOwnerInDB(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.Castle: int getCastleId()
com.l2jfrozen.gameserver.model.entity.siege.Castle: com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance getDoor(int)
com.l2jfrozen.gameserver.model.entity.siege.Castle: java.util.List getDoors()
com.l2jfrozen.gameserver.model.entity.siege.Castle: java.lang.String getName()
com.l2jfrozen.gameserver.model.entity.siege.Castle: int getOwnerId()
com.l2jfrozen.gameserver.model.entity.siege.Castle: com.l2jfrozen.gameserver.model.entity.siege.Siege getSiege()
com.l2jfrozen.gameserver.model.entity.siege.Castle: java.util.Calendar getSiegeDate()
com.l2jfrozen.gameserver.model.entity.siege.Castle: int getSiegeDayOfWeek()
com.l2jfrozen.gameserver.model.entity.siege.Castle: int getSiegeHourOfDay()
com.l2jfrozen.gameserver.model.entity.siege.Castle: int getTaxPercent()
com.l2jfrozen.gameserver.model.entity.siege.Castle: double getTaxRate()
com.l2jfrozen.gameserver.model.entity.siege.Castle: int getTreasury()
com.l2jfrozen.gameserver.model.entity.siege.Castle: javolution.util.FastList getSeedProduction(int)
com.l2jfrozen.gameserver.model.entity.siege.Castle: javolution.util.FastList getCropProcure(int)
com.l2jfrozen.gameserver.model.entity.siege.Castle: void setSeedProduction(javolution.util.FastList,int)
com.l2jfrozen.gameserver.model.entity.siege.Castle: void setCropProcure(javolution.util.FastList,int)
com.l2jfrozen.gameserver.model.entity.siege.Castle: com.l2jfrozen.gameserver.managers.CastleManorManager$SeedProduction getSeed(int,int)
com.l2jfrozen.gameserver.model.entity.siege.Castle: com.l2jfrozen.gameserver.managers.CastleManorManager$CropProcure getCrop(int,int)
com.l2jfrozen.gameserver.model.entity.siege.Castle: int getManorCost(int)
com.l2jfrozen.gameserver.model.entity.siege.Castle: void saveSeedData()
com.l2jfrozen.gameserver.model.entity.siege.Castle: void saveSeedData(int)
com.l2jfrozen.gameserver.model.entity.siege.Castle: void saveCropData()
com.l2jfrozen.gameserver.model.entity.siege.Castle: void saveCropData(int)
com.l2jfrozen.gameserver.model.entity.siege.Castle: void updateCrop(int,int,int)
com.l2jfrozen.gameserver.model.entity.siege.Castle: void updateSeed(int,int,int)
com.l2jfrozen.gameserver.model.entity.siege.Castle: boolean isNextPeriodApproved()
com.l2jfrozen.gameserver.model.entity.siege.Castle: void setNextPeriodApproved(boolean)
com.l2jfrozen.gameserver.model.entity.siege.Castle: void updateClansReputation()
com.l2jfrozen.gameserver.model.entity.siege.Castle: void createClanGate(int,int,int)
com.l2jfrozen.gameserver.model.entity.siege.Castle: void destroyClanGate()
com.l2jfrozen.gameserver.model.entity.siege.Castle: boolean isGateOpen()
com.l2jfrozen.gameserver.model.entity.siege.Castle: int getGateX()
com.l2jfrozen.gameserver.model.entity.siege.Castle: int getGateY()
com.l2jfrozen.gameserver.model.entity.siege.Castle: int getGateZ()
com.l2jfrozen.gameserver.model.entity.siege.Castle: void oustAllPlayers()
com.l2jfrozen.gameserver.model.entity.siege.Castle: boolean isSiegeInProgress()
com.l2jfrozen.gameserver.model.entity.siege.Castle: void <clinit>()
com.l2jfrozen.gameserver.model.entity.siege.ClanHallSiege
com.l2jfrozen.gameserver.model.entity.siege.ClanHallSiege: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.entity.siege.ClanHallSiege: java.util.Calendar _siegeDate
com.l2jfrozen.gameserver.model.entity.siege.ClanHallSiege: java.util.Calendar _siegeEndDate
com.l2jfrozen.gameserver.model.entity.siege.ClanHallSiege: boolean _isInProgress
com.l2jfrozen.gameserver.model.entity.siege.ClanHallSiege: ClanHallSiege()
com.l2jfrozen.gameserver.model.entity.siege.ClanHallSiege: long restoreSiegeDate(int)
com.l2jfrozen.gameserver.model.entity.siege.ClanHallSiege: void setNewSiegeDate(long,int,int)
com.l2jfrozen.gameserver.model.entity.siege.ClanHallSiege: java.util.Calendar getSiegeDate()
com.l2jfrozen.gameserver.model.entity.siege.ClanHallSiege: void setSiegeDate(java.util.Calendar)
com.l2jfrozen.gameserver.model.entity.siege.ClanHallSiege: boolean getIsInProgress()
com.l2jfrozen.gameserver.model.entity.siege.ClanHallSiege: void setIsInProgress(boolean)
com.l2jfrozen.gameserver.model.entity.siege.ClanHallSiege: void <clinit>()
com.l2jfrozen.gameserver.model.entity.siege.Fort
com.l2jfrozen.gameserver.model.entity.siege.Fort: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.entity.siege.Fort: int _fortId
com.l2jfrozen.gameserver.model.entity.siege.Fort: java.util.List _doors
com.l2jfrozen.gameserver.model.entity.siege.Fort: java.util.List _doorDefault
com.l2jfrozen.gameserver.model.entity.siege.Fort: java.lang.String _name
com.l2jfrozen.gameserver.model.entity.siege.Fort: int _ownerId
com.l2jfrozen.gameserver.model.entity.siege.Fort: com.l2jfrozen.gameserver.model.L2Clan _fortOwner
com.l2jfrozen.gameserver.model.entity.siege.Fort: com.l2jfrozen.gameserver.model.entity.siege.FortSiege _siege
com.l2jfrozen.gameserver.model.entity.siege.Fort: java.util.Calendar _siegeDate
com.l2jfrozen.gameserver.model.entity.siege.Fort: int _siegeDayOfWeek
com.l2jfrozen.gameserver.model.entity.siege.Fort: int _siegeHourOfDay
com.l2jfrozen.gameserver.model.entity.siege.Fort: com.l2jfrozen.gameserver.model.zone.type.L2FortZone _zone
com.l2jfrozen.gameserver.model.entity.siege.Fort: com.l2jfrozen.gameserver.model.L2Clan _formerOwner
com.l2jfrozen.gameserver.model.entity.siege.Fort: Fort(int)
com.l2jfrozen.gameserver.model.entity.siege.Fort: void EndOfSiege(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.Fort: void Engrave(com.l2jfrozen.gameserver.model.L2Clan,int)
com.l2jfrozen.gameserver.model.entity.siege.Fort: void addToTreasury(int)
com.l2jfrozen.gameserver.model.entity.siege.Fort: boolean addToTreasuryNoTax(int)
com.l2jfrozen.gameserver.model.entity.siege.Fort: void banishForeigners()
com.l2jfrozen.gameserver.model.entity.siege.Fort: boolean checkIfInZone(int,int,int)
com.l2jfrozen.gameserver.model.entity.siege.Fort: void setZone(com.l2jfrozen.gameserver.model.zone.type.L2FortZone)
com.l2jfrozen.gameserver.model.entity.siege.Fort: com.l2jfrozen.gameserver.model.zone.type.L2FortZone getZone()
com.l2jfrozen.gameserver.model.entity.siege.Fort: double getDistance(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.entity.siege.Fort: void closeDoor(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.entity.siege.Fort: void openDoor(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.entity.siege.Fort: void openCloseDoor(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,boolean)
com.l2jfrozen.gameserver.model.entity.siege.Fort: void removeUpgrade()
com.l2jfrozen.gameserver.model.entity.siege.Fort: void setOwner(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.Fort: void removeOwner(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.Fort: void setTaxPercent(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.entity.siege.Fort: void spawnDoor()
com.l2jfrozen.gameserver.model.entity.siege.Fort: void spawnDoor(boolean)
com.l2jfrozen.gameserver.model.entity.siege.Fort: void upgradeDoor(int,int,int,int)
com.l2jfrozen.gameserver.model.entity.siege.Fort: void load()
com.l2jfrozen.gameserver.model.entity.siege.Fort: void loadDoor()
com.l2jfrozen.gameserver.model.entity.siege.Fort: void loadDoorUpgrade()
com.l2jfrozen.gameserver.model.entity.siege.Fort: void removeDoorUpgrade()
com.l2jfrozen.gameserver.model.entity.siege.Fort: void saveDoorUpgrade(int,int,int,int)
com.l2jfrozen.gameserver.model.entity.siege.Fort: void updateOwnerInDB(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.Fort: int getFortId()
com.l2jfrozen.gameserver.model.entity.siege.Fort: com.l2jfrozen.gameserver.model.L2Clan getOwnerClan()
com.l2jfrozen.gameserver.model.entity.siege.Fort: int getOwnerId()
com.l2jfrozen.gameserver.model.entity.siege.Fort: com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance getDoor(int)
com.l2jfrozen.gameserver.model.entity.siege.Fort: java.util.List getDoors()
com.l2jfrozen.gameserver.model.entity.siege.Fort: com.l2jfrozen.gameserver.model.entity.siege.FortSiege getSiege()
com.l2jfrozen.gameserver.model.entity.siege.Fort: java.util.Calendar getSiegeDate()
com.l2jfrozen.gameserver.model.entity.siege.Fort: void setSiegeDate(java.util.Calendar)
com.l2jfrozen.gameserver.model.entity.siege.Fort: int getSiegeDayOfWeek()
com.l2jfrozen.gameserver.model.entity.siege.Fort: int getSiegeHourOfDay()
com.l2jfrozen.gameserver.model.entity.siege.Fort: java.lang.String getName()
com.l2jfrozen.gameserver.model.entity.siege.Fort: void updateClansReputation()
com.l2jfrozen.gameserver.model.entity.siege.Fort: void <clinit>()
com.l2jfrozen.gameserver.model.entity.siege.Fort$endFortressSiege
com.l2jfrozen.gameserver.model.entity.siege.Fort$endFortressSiege: com.l2jfrozen.gameserver.model.entity.siege.Fort _f
com.l2jfrozen.gameserver.model.entity.siege.Fort$endFortressSiege: com.l2jfrozen.gameserver.model.L2Clan _clan
com.l2jfrozen.gameserver.model.entity.siege.Fort$endFortressSiege: com.l2jfrozen.gameserver.model.entity.siege.Fort this$0
com.l2jfrozen.gameserver.model.entity.siege.Fort$endFortressSiege: Fort$endFortressSiege(com.l2jfrozen.gameserver.model.entity.siege.Fort,com.l2jfrozen.gameserver.model.entity.siege.Fort,com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.Fort$endFortressSiege: void run()
com.l2jfrozen.gameserver.model.entity.siege.FortSiege
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: java.util.List _attackerClans
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: java.util.List _defenderClans
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: java.util.List _defenderWaitingClans
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: int _defenderRespawnDelayPenalty
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: java.util.List _commanders
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: java.util.List _combatflag
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: com.l2jfrozen.gameserver.model.entity.siege.Fort[] _fort
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: boolean _isInProgress
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: boolean _isScheduled
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: boolean _isNormalSide
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: boolean _isRegistrationOver
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: java.util.Calendar _siegeEndDate
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: com.l2jfrozen.gameserver.managers.FortSiegeGuardManager _siegeGuardManager
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: java.util.Calendar _siegeRegistrationEndDate
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: FortSiege(com.l2jfrozen.gameserver.model.entity.siege.Fort[])
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void endSiege()
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void removeDefender(com.l2jfrozen.gameserver.model.L2SiegeClan)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void removeAttacker(com.l2jfrozen.gameserver.model.L2SiegeClan)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void addDefender(com.l2jfrozen.gameserver.model.L2SiegeClan,com.l2jfrozen.gameserver.model.SiegeClanType)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void addAttacker(com.l2jfrozen.gameserver.model.L2SiegeClan)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void midVictory()
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void startSiege()
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void announceToPlayer(java.lang.String,boolean)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void updatePlayerSiegeStateFlags(boolean)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void approveSiegeDefenderClan(int)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: boolean checkIfInZone(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: boolean checkIfInZone(int,int,int)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: boolean checkIsAttacker(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: boolean checkIsDefender(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: boolean checkIsDefenderWaiting(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void clearSiegeClan()
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void clearSiegeDate()
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void clearSiegeWaitingClan()
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: java.util.List getAttackersInZone()
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: java.util.List getDefendersButNotOwnersInZone()
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: java.util.List getPlayersInZone()
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: java.util.List getOwnersInZone()
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: java.util.List getSpectatorsInZone()
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void killedCT(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void killedCommander(com.l2jfrozen.gameserver.model.actor.instance.L2CommanderInstance)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void killedFlag(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void listRegisterClan(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void registerAttacker(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void registerAttacker(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void registerDefender(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void registerDefender(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void removeSiegeClan(int)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void removeSiegeClan(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void removeSiegeClan(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void checkAutoTask()
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void startAutoTask(boolean)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void teleportPlayer(com.l2jfrozen.gameserver.model.entity.siege.TeleportWhoType,com.l2jfrozen.gameserver.datatables.csv.TeleportWhereType)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void addAttacker(int)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void addDefender(int)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void addDefender(int,com.l2jfrozen.gameserver.model.SiegeClanType)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void addDefenderWaiting(int)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: boolean checkIfCanRegister(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void setSiegeDateTime()
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void loadSiegeClan()
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void removeCommander()
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void removeFlags()
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void saveFortSiege()
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void saveSiegeDate()
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void saveSiegeClan(com.l2jfrozen.gameserver.model.L2Clan,int,boolean)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void spawnCommander(int)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void spawnFlag(int)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void unSpawnFlags()
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void spawnSiegeGuard()
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: com.l2jfrozen.gameserver.model.L2SiegeClan getAttackerClan(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: com.l2jfrozen.gameserver.model.L2SiegeClan getAttackerClan(int)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: java.util.List getAttackerClans()
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: int getAttackerRespawnDelay()
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: com.l2jfrozen.gameserver.model.entity.siege.Fort getFort()
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: com.l2jfrozen.gameserver.model.L2SiegeClan getDefenderClan(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: com.l2jfrozen.gameserver.model.L2SiegeClan getDefenderClan(int)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: java.util.List getDefenderClans()
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: com.l2jfrozen.gameserver.model.L2SiegeClan getDefenderWaitingClan(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: com.l2jfrozen.gameserver.model.L2SiegeClan getDefenderWaitingClan(int)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: java.util.List getDefenderWaitingClans()
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: int getDefenderRespawnDelay()
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: boolean getIsInProgress()
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: boolean getIsScheduled()
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void setIsScheduled(boolean)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: boolean getIsRegistrationOver()
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: java.util.Calendar getSiegeDate()
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: java.util.List getFlag(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: com.l2jfrozen.gameserver.managers.FortSiegeGuardManager getSiegeGuardManager()
com.l2jfrozen.gameserver.model.entity.siege.FortSiege: void <clinit>()
com.l2jfrozen.gameserver.model.entity.siege.FortSiege$1
com.l2jfrozen.gameserver.model.entity.siege.FortSiege$1: int[] $SwitchMap$com$l2jfrozen$gameserver$model$entity$siege$TeleportWhoType
com.l2jfrozen.gameserver.model.entity.siege.FortSiege$1: void <clinit>()
com.l2jfrozen.gameserver.model.entity.siege.FortSiege$ScheduleEndSiegeTask
com.l2jfrozen.gameserver.model.entity.siege.FortSiege$ScheduleEndSiegeTask: com.l2jfrozen.gameserver.model.entity.siege.Fort _fortInst
com.l2jfrozen.gameserver.model.entity.siege.FortSiege$ScheduleEndSiegeTask: com.l2jfrozen.gameserver.model.entity.siege.FortSiege this$0
com.l2jfrozen.gameserver.model.entity.siege.FortSiege$ScheduleEndSiegeTask: FortSiege$ScheduleEndSiegeTask(com.l2jfrozen.gameserver.model.entity.siege.FortSiege,com.l2jfrozen.gameserver.model.entity.siege.Fort)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege$ScheduleEndSiegeTask: void run()
com.l2jfrozen.gameserver.model.entity.siege.FortSiege$ScheduleStartSiegeTask
com.l2jfrozen.gameserver.model.entity.siege.FortSiege$ScheduleStartSiegeTask: com.l2jfrozen.gameserver.model.entity.siege.Fort _fortInst
com.l2jfrozen.gameserver.model.entity.siege.FortSiege$ScheduleStartSiegeTask: com.l2jfrozen.gameserver.model.entity.siege.FortSiege this$0
com.l2jfrozen.gameserver.model.entity.siege.FortSiege$ScheduleStartSiegeTask: FortSiege$ScheduleStartSiegeTask(com.l2jfrozen.gameserver.model.entity.siege.FortSiege,com.l2jfrozen.gameserver.model.entity.siege.Fort)
com.l2jfrozen.gameserver.model.entity.siege.FortSiege$ScheduleStartSiegeTask: void run()
com.l2jfrozen.gameserver.model.entity.siege.Siege
com.l2jfrozen.gameserver.model.entity.siege.Siege: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.entity.siege.Siege: java.text.SimpleDateFormat fmt
com.l2jfrozen.gameserver.model.entity.siege.Siege: int _controlTowerCount
com.l2jfrozen.gameserver.model.entity.siege.Siege: int _controlTowerMaxCount
com.l2jfrozen.gameserver.model.entity.siege.Siege: java.util.List _attackerClans
com.l2jfrozen.gameserver.model.entity.siege.Siege: java.util.List _defenderClans
com.l2jfrozen.gameserver.model.entity.siege.Siege: java.util.List _defenderWaitingClans
com.l2jfrozen.gameserver.model.entity.siege.Siege: int _defenderRespawnDelayPenalty
com.l2jfrozen.gameserver.model.entity.siege.Siege: java.util.List _artifacts
com.l2jfrozen.gameserver.model.entity.siege.Siege: java.util.List _controlTowers
com.l2jfrozen.gameserver.model.entity.siege.Siege: com.l2jfrozen.gameserver.model.entity.siege.Castle[] _castle
com.l2jfrozen.gameserver.model.entity.siege.Siege: boolean _isInProgress
com.l2jfrozen.gameserver.model.entity.siege.Siege: boolean _isNormalSide
com.l2jfrozen.gameserver.model.entity.siege.Siege: boolean _isRegistrationOver
com.l2jfrozen.gameserver.model.entity.siege.Siege: java.util.Calendar _siegeEndDate
com.l2jfrozen.gameserver.model.entity.siege.Siege: com.l2jfrozen.gameserver.managers.SiegeGuardManager _siegeGuardManager
com.l2jfrozen.gameserver.model.entity.siege.Siege: java.util.Calendar _siegeRegistrationEndDate
com.l2jfrozen.gameserver.model.entity.siege.Siege: int getControlTowerCount()
com.l2jfrozen.gameserver.model.entity.siege.Siege: Siege(com.l2jfrozen.gameserver.model.entity.siege.Castle[])
com.l2jfrozen.gameserver.model.entity.siege.Siege: void endSiege()
com.l2jfrozen.gameserver.model.entity.siege.Siege: void removeDefender(com.l2jfrozen.gameserver.model.L2SiegeClan)
com.l2jfrozen.gameserver.model.entity.siege.Siege: void removeAttacker(com.l2jfrozen.gameserver.model.L2SiegeClan)
com.l2jfrozen.gameserver.model.entity.siege.Siege: void addDefender(com.l2jfrozen.gameserver.model.L2SiegeClan,com.l2jfrozen.gameserver.model.SiegeClanType)
com.l2jfrozen.gameserver.model.entity.siege.Siege: void addAttacker(com.l2jfrozen.gameserver.model.L2SiegeClan)
com.l2jfrozen.gameserver.model.entity.siege.Siege: void midVictory()
com.l2jfrozen.gameserver.model.entity.siege.Siege: void startSiege()
com.l2jfrozen.gameserver.model.entity.siege.Siege: void announceToPlayer(java.lang.String,boolean)
com.l2jfrozen.gameserver.model.entity.siege.Siege: void updatePlayerSiegeStateFlags(boolean)
com.l2jfrozen.gameserver.model.entity.siege.Siege: void approveSiegeDefenderClan(int)
com.l2jfrozen.gameserver.model.entity.siege.Siege: boolean checkIfInZone(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.entity.siege.Siege: boolean checkIfInZone(int,int,int)
com.l2jfrozen.gameserver.model.entity.siege.Siege: boolean checkIsAttacker(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.Siege: boolean checkIsDefender(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.Siege: boolean checkIsDefenderWaiting(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.Siege: void clearSiegeClan()
com.l2jfrozen.gameserver.model.entity.siege.Siege: void clearSiegeWaitingClan()
com.l2jfrozen.gameserver.model.entity.siege.Siege: java.util.List getAttackersInZone()
com.l2jfrozen.gameserver.model.entity.siege.Siege: java.util.List getDefendersButNotOwnersInZone()
com.l2jfrozen.gameserver.model.entity.siege.Siege: java.util.List getPlayersInZone()
com.l2jfrozen.gameserver.model.entity.siege.Siege: java.util.List getOwnersInZone()
com.l2jfrozen.gameserver.model.entity.siege.Siege: java.util.List getSpectatorsInZone()
com.l2jfrozen.gameserver.model.entity.siege.Siege: void killedCT(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.model.entity.siege.Siege: void killedFlag(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.model.entity.siege.Siege: void listRegisterClan(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.siege.Siege: void registerAttacker(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.siege.Siege: void registerAttacker(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.model.entity.siege.Siege: void registerDefender(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.siege.Siege: void registerDefender(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.model.entity.siege.Siege: void removeSiegeClan(int)
com.l2jfrozen.gameserver.model.entity.siege.Siege: void removeSiegeClan(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.Siege: void removeSiegeClan(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.siege.Siege: void startAutoTask()
com.l2jfrozen.gameserver.model.entity.siege.Siege: void teleportPlayer(com.l2jfrozen.gameserver.model.entity.siege.TeleportWhoType,com.l2jfrozen.gameserver.datatables.csv.TeleportWhereType)
com.l2jfrozen.gameserver.model.entity.siege.Siege: void addAttacker(int)
com.l2jfrozen.gameserver.model.entity.siege.Siege: void addDefender(int)
com.l2jfrozen.gameserver.model.entity.siege.Siege: void addDefender(int,com.l2jfrozen.gameserver.model.SiegeClanType)
com.l2jfrozen.gameserver.model.entity.siege.Siege: void addDefenderWaiting(int)
com.l2jfrozen.gameserver.model.entity.siege.Siege: boolean checkIfCanRegister(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.siege.Siege: boolean checkIfAlreadyRegisteredForAnotherSiege(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.Siege: void correctSiegeDateTime()
com.l2jfrozen.gameserver.model.entity.siege.Siege: void loadSiegeClan()
com.l2jfrozen.gameserver.model.entity.siege.Siege: void removeArtifact()
com.l2jfrozen.gameserver.model.entity.siege.Siege: void removeControlTower()
com.l2jfrozen.gameserver.model.entity.siege.Siege: void removeFlags()
com.l2jfrozen.gameserver.model.entity.siege.Siege: void removeDefenderFlags()
com.l2jfrozen.gameserver.model.entity.siege.Siege: void saveCastleSiege()
com.l2jfrozen.gameserver.model.entity.siege.Siege: void saveSiegeDate()
com.l2jfrozen.gameserver.model.entity.siege.Siege: void saveSiegeClan(com.l2jfrozen.gameserver.model.L2Clan,int,boolean)
com.l2jfrozen.gameserver.model.entity.siege.Siege: void setNextSiegeDate()
com.l2jfrozen.gameserver.model.entity.siege.Siege: void spawnArtifact(int)
com.l2jfrozen.gameserver.model.entity.siege.Siege: void spawnControlTower(int)
com.l2jfrozen.gameserver.model.entity.siege.Siege: void spawnSiegeGuard()
com.l2jfrozen.gameserver.model.entity.siege.Siege: com.l2jfrozen.gameserver.model.L2SiegeClan getAttackerClan(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.Siege: com.l2jfrozen.gameserver.model.L2SiegeClan getAttackerClan(int)
com.l2jfrozen.gameserver.model.entity.siege.Siege: java.util.List getAttackerClans()
com.l2jfrozen.gameserver.model.entity.siege.Siege: int getAttackerRespawnDelay()
com.l2jfrozen.gameserver.model.entity.siege.Siege: com.l2jfrozen.gameserver.model.entity.siege.Castle getCastle()
com.l2jfrozen.gameserver.model.entity.siege.Siege: com.l2jfrozen.gameserver.model.L2SiegeClan getDefenderClan(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.Siege: com.l2jfrozen.gameserver.model.L2SiegeClan getDefenderClan(int)
com.l2jfrozen.gameserver.model.entity.siege.Siege: java.util.List getDefenderClans()
com.l2jfrozen.gameserver.model.entity.siege.Siege: com.l2jfrozen.gameserver.model.L2SiegeClan getDefenderWaitingClan(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.Siege: com.l2jfrozen.gameserver.model.L2SiegeClan getDefenderWaitingClan(int)
com.l2jfrozen.gameserver.model.entity.siege.Siege: java.util.List getDefenderWaitingClans()
com.l2jfrozen.gameserver.model.entity.siege.Siege: int getDefenderRespawnDelay()
com.l2jfrozen.gameserver.model.entity.siege.Siege: boolean getIsInProgress()
com.l2jfrozen.gameserver.model.entity.siege.Siege: boolean getIsRegistrationOver()
com.l2jfrozen.gameserver.model.entity.siege.Siege: java.util.Calendar getSiegeDate()
com.l2jfrozen.gameserver.model.entity.siege.Siege: java.util.List getFlag(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.Siege: com.l2jfrozen.gameserver.managers.SiegeGuardManager getSiegeGuardManager()
com.l2jfrozen.gameserver.model.entity.siege.Siege: void <clinit>()
com.l2jfrozen.gameserver.model.entity.siege.Siege$1
com.l2jfrozen.gameserver.model.entity.siege.Siege$1: int[] $SwitchMap$com$l2jfrozen$gameserver$model$entity$siege$TeleportWhoType
com.l2jfrozen.gameserver.model.entity.siege.Siege$1: void <clinit>()
com.l2jfrozen.gameserver.model.entity.siege.Siege$ScheduleEndSiegeTask
com.l2jfrozen.gameserver.model.entity.siege.Siege$ScheduleEndSiegeTask: com.l2jfrozen.gameserver.model.entity.siege.Castle _castleInst
com.l2jfrozen.gameserver.model.entity.siege.Siege$ScheduleEndSiegeTask: com.l2jfrozen.gameserver.model.entity.siege.Siege this$0
com.l2jfrozen.gameserver.model.entity.siege.Siege$ScheduleEndSiegeTask: Siege$ScheduleEndSiegeTask(com.l2jfrozen.gameserver.model.entity.siege.Siege,com.l2jfrozen.gameserver.model.entity.siege.Castle)
com.l2jfrozen.gameserver.model.entity.siege.Siege$ScheduleEndSiegeTask: void run()
com.l2jfrozen.gameserver.model.entity.siege.Siege$ScheduleStartSiegeTask
com.l2jfrozen.gameserver.model.entity.siege.Siege$ScheduleStartSiegeTask: com.l2jfrozen.gameserver.model.entity.siege.Castle _castleInst
com.l2jfrozen.gameserver.model.entity.siege.Siege$ScheduleStartSiegeTask: com.l2jfrozen.gameserver.model.entity.siege.Siege this$0
com.l2jfrozen.gameserver.model.entity.siege.Siege$ScheduleStartSiegeTask: Siege$ScheduleStartSiegeTask(com.l2jfrozen.gameserver.model.entity.siege.Siege,com.l2jfrozen.gameserver.model.entity.siege.Castle)
com.l2jfrozen.gameserver.model.entity.siege.Siege$ScheduleStartSiegeTask: void run()
com.l2jfrozen.gameserver.model.entity.siege.TeleportWhoType
com.l2jfrozen.gameserver.model.entity.siege.TeleportWhoType: com.l2jfrozen.gameserver.model.entity.siege.TeleportWhoType All
com.l2jfrozen.gameserver.model.entity.siege.TeleportWhoType: com.l2jfrozen.gameserver.model.entity.siege.TeleportWhoType Attacker
com.l2jfrozen.gameserver.model.entity.siege.TeleportWhoType: com.l2jfrozen.gameserver.model.entity.siege.TeleportWhoType DefenderNotOwner
com.l2jfrozen.gameserver.model.entity.siege.TeleportWhoType: com.l2jfrozen.gameserver.model.entity.siege.TeleportWhoType Owner
com.l2jfrozen.gameserver.model.entity.siege.TeleportWhoType: com.l2jfrozen.gameserver.model.entity.siege.TeleportWhoType Spectator
com.l2jfrozen.gameserver.model.entity.siege.TeleportWhoType: com.l2jfrozen.gameserver.model.entity.siege.TeleportWhoType[] $VALUES
com.l2jfrozen.gameserver.model.entity.siege.TeleportWhoType: com.l2jfrozen.gameserver.model.entity.siege.TeleportWhoType[] values()
com.l2jfrozen.gameserver.model.entity.siege.TeleportWhoType: com.l2jfrozen.gameserver.model.entity.siege.TeleportWhoType valueOf(java.lang.String)
com.l2jfrozen.gameserver.model.entity.siege.TeleportWhoType: TeleportWhoType(java.lang.String,int)
com.l2jfrozen.gameserver.model.entity.siege.TeleportWhoType: void <clinit>()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege _instance
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: boolean _registrationPeriod
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: int _clanCounter
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: java.util.Map _clansInfo
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: com.l2jfrozen.gameserver.model.zone.type.L2ClanHallZone zone
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: com.l2jfrozen.gameserver.model.entity.ClanHall clanhall
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege$clanPlayersInfo _ownerClanInfo
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: boolean _finalStage
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: java.util.concurrent.ScheduledFuture _midTimer
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: com.l2jfrozen.common.util.taskmanager.ExclusiveTask _startSiegeTask
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: com.l2jfrozen.common.util.taskmanager.ExclusiveTask _endSiegeTask
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: com.l2jfrozen.common.util.taskmanager.ExclusiveTask _mobControlTask
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege getInstance()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: BanditStrongholdSiege()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: void startSiege()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: void startSecondStep(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: void endSiege(boolean)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: void unSpawnAll()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: void gateControl(int)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: void teleportPlayers()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: com.l2jfrozen.gameserver.model.L2Clan checkHaveWinner()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: void spawnFlags()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: void setRegistrationPeriod(boolean)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: boolean isRegistrationPeriod()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: boolean isPlayerRegister(com.l2jfrozen.gameserver.model.L2Clan,java.lang.String)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: boolean isClanOnSiege(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: int registerClanOnSiege(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: boolean unRegisterClan(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: javolution.util.FastList getRegisteredClans()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: javolution.util.FastList getRegisteredPlayers(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: com.l2jfrozen.gameserver.model.actor.instance.L2DecoInstance getSiegeFlag(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance getQuestMob(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: int getPlayersCount(java.lang.String)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: void addPlayer(com.l2jfrozen.gameserver.model.L2Clan,java.lang.String)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: void removePlayer(com.l2jfrozen.gameserver.model.L2Clan,java.lang.String)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: void anonce(java.lang.String,int)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege: void <clinit>()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege$1
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege$1: com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege this$0
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege$1: BanditStrongholdSiege$1(com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege$1: void onElapsed()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege$2
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege$2: com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege this$0
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege$2: BanditStrongholdSiege$2(com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege$2: void onElapsed()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege$3
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege$3: com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege this$0
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege$3: BanditStrongholdSiege$3(com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege$3: void onElapsed()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege$clanPlayersInfo
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege$clanPlayersInfo: java.lang.String _clanName
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege$clanPlayersInfo: com.l2jfrozen.gameserver.model.actor.instance.L2DecoInstance _flag
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege$clanPlayersInfo: com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance _mob
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege$clanPlayersInfo: javolution.util.FastList _players
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege$clanPlayersInfo: com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege this$0
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege$clanPlayersInfo: BanditStrongholdSiege$clanPlayersInfo(com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege$midSiegeStep
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege$midSiegeStep: com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege this$0
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege$midSiegeStep: BanditStrongholdSiege$midSiegeStep(com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege$midSiegeStep: void run()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege$startFirstStep
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege$startFirstStep: com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege this$0
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege$startFirstStep: BanditStrongholdSiege$startFirstStep(com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.BanditStrongholdSiege$startFirstStep: void run()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle _instance
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: javolution.util.FastMap _clansDamageInfo
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: int START_DAY
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: int HOUR
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: int MINUTES
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: int BOSS_ID
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: int BOSS1_ID
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: int BOSS2_ID
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: int MESSENGER_ID
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: java.util.concurrent.ScheduledFuture _gustav
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: java.util.concurrent.ScheduledFuture _dietrich
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: java.util.concurrent.ScheduledFuture _mikhail
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: java.util.concurrent.ScheduledFuture _monsterdespawn
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance _minion1
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance _minion2
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: java.util.ArrayList _monsters
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: java.util.ArrayList _spawns
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: java.util.Calendar _siegetime
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: boolean _progress
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle getInstance()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: DevastatedCastle()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: void setCalendarForNextSiege()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: int getDaysToSiege()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: long getMilliToSiege()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: void MessengerSpawn()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: void Announce(java.lang.String)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: void Siege()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: void addMonster(int,int,int,int,int)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: void fillMonsters()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: void spawnMonsters()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: void DeSpawn()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: boolean Conditions(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: boolean getIsInProgress()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: void setIsInProgress(boolean)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: void SiegeFinish()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: void addSiegeDamage(com.l2jfrozen.gameserver.model.L2Clan,long)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: void update()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle: void <clinit>()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$AnnounceInfo
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$AnnounceInfo: java.lang.String _message
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$AnnounceInfo: com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle this$0
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$AnnounceInfo: DevastatedCastle$AnnounceInfo(com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle,java.lang.String)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$AnnounceInfo: void run()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$DamageInfo
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$DamageInfo: com.l2jfrozen.gameserver.model.L2Clan _clan
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$DamageInfo: long _damage
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$DamageInfo: com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle this$0
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$DamageInfo: DevastatedCastle$DamageInfo(com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$DeSpawnMonsters
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$DeSpawnMonsters: com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle this$0
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$DeSpawnMonsters: DevastatedCastle$DeSpawnMonsters(com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$DeSpawnMonsters: void run()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$DeSpawnTimer
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$DeSpawnTimer: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance _npc
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$DeSpawnTimer: com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle this$0
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$DeSpawnTimer: DevastatedCastle$DeSpawnTimer(com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$DeSpawnTimer: void run()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$MonsterLocation
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$MonsterLocation: int _id
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$MonsterLocation: int _x
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$MonsterLocation: int _y
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$MonsterLocation: int _z
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$MonsterLocation: int _heading
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$MonsterLocation: DevastatedCastle$MonsterLocation(int,int,int,int,int)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$MonsterLocation: int getId()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$MonsterLocation: int getX()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$MonsterLocation: int getY()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$MonsterLocation: int getZ()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$MonsterLocation: int getHeading()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$RunMessengerSpawn
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$RunMessengerSpawn: com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle this$0
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$RunMessengerSpawn: DevastatedCastle$RunMessengerSpawn(com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$RunMessengerSpawn: void run()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$RunSiege
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$RunSiege: com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle this$0
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$RunSiege: DevastatedCastle$RunSiege(com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.DevastatedCastle$RunSiege: void run()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance: com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance _instance
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance: javolution.util.FastMap _clansDamageInfo
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance: int START_DAY
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance: int HOUR
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance: int MINUTES
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance: int BOSS_ID
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance: int MESSENGER_ID
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance: java.util.concurrent.ScheduledFuture _nurka
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance: java.util.concurrent.ScheduledFuture _announce
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance: java.util.Calendar _capturetime
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance: com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance getInstance()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance: FortressOfResistance()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance: void setCalendarForNextCaprture()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance: int getDaysToCapture()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance: long getMilliToCapture()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance: void MessengerSpawn()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance: void BossSpawn()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance: boolean Conditions(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance: void Announce(java.lang.String)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance: void CaptureFinish()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance: void addSiegeDamage(com.l2jfrozen.gameserver.model.L2Clan,long)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance: void update()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance: void <clinit>()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance$AnnounceInfo
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance$AnnounceInfo: java.lang.String _message
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance$AnnounceInfo: com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance this$0
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance$AnnounceInfo: FortressOfResistance$AnnounceInfo(com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance,java.lang.String)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance$AnnounceInfo: void run()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance$DamageInfo
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance$DamageInfo: com.l2jfrozen.gameserver.model.L2Clan _clan
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance$DamageInfo: long _damage
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance$DamageInfo: com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance this$0
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance$DamageInfo: FortressOfResistance$DamageInfo(com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance$DeSpawnTimer
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance$DeSpawnTimer: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance _npc
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance$DeSpawnTimer: com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance this$0
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance$DeSpawnTimer: FortressOfResistance$DeSpawnTimer(com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance$DeSpawnTimer: void run()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance$RunBossSpawn
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance$RunBossSpawn: com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance this$0
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance$RunBossSpawn: FortressOfResistance$RunBossSpawn(com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance$RunBossSpawn: void run()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance$RunMessengerSpawn
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance$RunMessengerSpawn: com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance this$0
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance$RunMessengerSpawn: FortressOfResistance$RunMessengerSpawn(com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.FortressOfResistance$RunMessengerSpawn: void run()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege _instance
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: boolean _registrationPeriod
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: int _clanCounter
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: java.util.Map _clansInfo
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: com.l2jfrozen.gameserver.model.entity.ClanHall clanhall
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege$clanPlayersInfo _ownerClanInfo
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: boolean _finalStage
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: java.util.concurrent.ScheduledFuture _midTimer
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: com.l2jfrozen.gameserver.model.zone.type.L2ClanHallZone zone
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: com.l2jfrozen.common.util.taskmanager.ExclusiveTask _startSiegeTask
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: com.l2jfrozen.common.util.taskmanager.ExclusiveTask _endSiegeTask
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: com.l2jfrozen.common.util.taskmanager.ExclusiveTask _mobControlTask
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege getInstance()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: WildBeastFarmSiege()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: void startSiege()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: void startSecondStep(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: void endSiege(boolean)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: void unSpawnAll()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: void gateControl(int)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: void teleportPlayers()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: com.l2jfrozen.gameserver.model.L2Clan checkHaveWinner()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: void spawnFlags()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: void setRegistrationPeriod(boolean)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: boolean isRegistrationPeriod()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: boolean isPlayerRegister(com.l2jfrozen.gameserver.model.L2Clan,java.lang.String)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: boolean isClanOnSiege(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: int registerClanOnSiege(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: boolean unRegisterClan(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: javolution.util.FastList getRegisteredClans()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: javolution.util.FastList getRegisteredPlayers(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: com.l2jfrozen.gameserver.model.actor.instance.L2DecoInstance getSiegeFlag(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance getQuestMob(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: int getPlayersCount(java.lang.String)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: void addPlayer(com.l2jfrozen.gameserver.model.L2Clan,java.lang.String)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: void removePlayer(com.l2jfrozen.gameserver.model.L2Clan,java.lang.String)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: void anonce(java.lang.String,int)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege: void <clinit>()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege$1
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege$1: com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege this$0
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege$1: WildBeastFarmSiege$1(com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege$1: void onElapsed()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege$2
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege$2: com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege this$0
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege$2: WildBeastFarmSiege$2(com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege$2: void onElapsed()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege$3
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege$3: com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege this$0
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege$3: WildBeastFarmSiege$3(com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege$3: void onElapsed()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege$clanPlayersInfo
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege$clanPlayersInfo: java.lang.String _clanName
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege$clanPlayersInfo: com.l2jfrozen.gameserver.model.actor.instance.L2DecoInstance _flag
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege$clanPlayersInfo: com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance _mob
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege$clanPlayersInfo: javolution.util.FastList _players
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege$clanPlayersInfo: com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege this$0
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege$clanPlayersInfo: WildBeastFarmSiege$clanPlayersInfo(com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege$midSiegeStep
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege$midSiegeStep: com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege this$0
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege$midSiegeStep: WildBeastFarmSiege$midSiegeStep(com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege$midSiegeStep: void run()
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege$startFirstStep
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege$startFirstStep: com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege this$0
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege$startFirstStep: WildBeastFarmSiege$startFirstStep(com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege)
com.l2jfrozen.gameserver.model.entity.siege.clanhalls.WildBeastFarmSiege$startFirstStep: void run()
com.l2jfrozen.gameserver.model.multisell.L2Multisell
com.l2jfrozen.gameserver.model.multisell.L2Multisell: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.multisell.L2Multisell: java.util.List _entries
com.l2jfrozen.gameserver.model.multisell.L2Multisell: com.l2jfrozen.gameserver.model.multisell.L2Multisell _instance
com.l2jfrozen.gameserver.model.multisell.L2Multisell: com.l2jfrozen.gameserver.model.multisell.MultiSellListContainer getList(int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.multisell.L2Multisell: L2Multisell()
com.l2jfrozen.gameserver.model.multisell.L2Multisell: void reload()
com.l2jfrozen.gameserver.model.multisell.L2Multisell: com.l2jfrozen.gameserver.model.multisell.L2Multisell getInstance()
com.l2jfrozen.gameserver.model.multisell.L2Multisell: void parseData()
com.l2jfrozen.gameserver.model.multisell.L2Multisell: com.l2jfrozen.gameserver.model.multisell.MultiSellListContainer generateMultiSell(int,boolean,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,double)
com.l2jfrozen.gameserver.model.multisell.L2Multisell: com.l2jfrozen.gameserver.model.multisell.MultiSellEntry prepareEntry(com.l2jfrozen.gameserver.model.multisell.MultiSellEntry,boolean,boolean,int,double)
com.l2jfrozen.gameserver.model.multisell.L2Multisell: void SeparateAndSend(int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean,double)
com.l2jfrozen.gameserver.model.multisell.L2Multisell: void hashFiles(java.lang.String,java.util.List)
com.l2jfrozen.gameserver.model.multisell.L2Multisell: void parse()
com.l2jfrozen.gameserver.model.multisell.L2Multisell: com.l2jfrozen.gameserver.model.multisell.MultiSellListContainer parseDocument(org.w3c.dom.Document)
com.l2jfrozen.gameserver.model.multisell.L2Multisell: com.l2jfrozen.gameserver.model.multisell.MultiSellEntry parseEntry(org.w3c.dom.Node)
com.l2jfrozen.gameserver.model.multisell.L2Multisell: void updateReferencePrice(com.l2jfrozen.gameserver.model.multisell.MultiSellListContainer)
com.l2jfrozen.gameserver.model.multisell.L2Multisell: void <clinit>()
com.l2jfrozen.gameserver.model.multisell.MultiSellEntry
com.l2jfrozen.gameserver.model.multisell.MultiSellEntry: int _entryId
com.l2jfrozen.gameserver.model.multisell.MultiSellEntry: java.util.List _products
com.l2jfrozen.gameserver.model.multisell.MultiSellEntry: java.util.List _ingredients
com.l2jfrozen.gameserver.model.multisell.MultiSellEntry: MultiSellEntry()
com.l2jfrozen.gameserver.model.multisell.MultiSellEntry: void setEntryId(int)
com.l2jfrozen.gameserver.model.multisell.MultiSellEntry: int getEntryId()
com.l2jfrozen.gameserver.model.multisell.MultiSellEntry: void addProduct(com.l2jfrozen.gameserver.model.multisell.MultiSellIngredient)
com.l2jfrozen.gameserver.model.multisell.MultiSellEntry: java.util.List getProducts()
com.l2jfrozen.gameserver.model.multisell.MultiSellEntry: void addIngredient(com.l2jfrozen.gameserver.model.multisell.MultiSellIngredient)
com.l2jfrozen.gameserver.model.multisell.MultiSellEntry: java.util.List getIngredients()
com.l2jfrozen.gameserver.model.multisell.MultiSellIngredient
com.l2jfrozen.gameserver.model.multisell.MultiSellIngredient: int _itemId
com.l2jfrozen.gameserver.model.multisell.MultiSellIngredient: int _itemCount
com.l2jfrozen.gameserver.model.multisell.MultiSellIngredient: int _enchantmentLevel
com.l2jfrozen.gameserver.model.multisell.MultiSellIngredient: boolean _isTaxIngredient
com.l2jfrozen.gameserver.model.multisell.MultiSellIngredient: boolean _mantainIngredient
com.l2jfrozen.gameserver.model.multisell.MultiSellIngredient: MultiSellIngredient(int,int,boolean,boolean)
com.l2jfrozen.gameserver.model.multisell.MultiSellIngredient: MultiSellIngredient(int,int,int,boolean,boolean)
com.l2jfrozen.gameserver.model.multisell.MultiSellIngredient: MultiSellIngredient(com.l2jfrozen.gameserver.model.multisell.MultiSellIngredient)
com.l2jfrozen.gameserver.model.multisell.MultiSellIngredient: void setItemId(int)
com.l2jfrozen.gameserver.model.multisell.MultiSellIngredient: int getItemId()
com.l2jfrozen.gameserver.model.multisell.MultiSellIngredient: void setItemCount(int)
com.l2jfrozen.gameserver.model.multisell.MultiSellIngredient: int getItemCount()
com.l2jfrozen.gameserver.model.multisell.MultiSellIngredient: void setEnchantmentLevel(int)
com.l2jfrozen.gameserver.model.multisell.MultiSellIngredient: int getEnchantmentLevel()
com.l2jfrozen.gameserver.model.multisell.MultiSellIngredient: void setIsTaxIngredient(boolean)
com.l2jfrozen.gameserver.model.multisell.MultiSellIngredient: boolean isTaxIngredient()
com.l2jfrozen.gameserver.model.multisell.MultiSellIngredient: void setMantainIngredient(boolean)
com.l2jfrozen.gameserver.model.multisell.MultiSellIngredient: boolean getMantainIngredient()
com.l2jfrozen.gameserver.model.multisell.MultiSellListContainer
com.l2jfrozen.gameserver.model.multisell.MultiSellListContainer: int _listId
com.l2jfrozen.gameserver.model.multisell.MultiSellListContainer: boolean _applyTaxes
com.l2jfrozen.gameserver.model.multisell.MultiSellListContainer: boolean _maintainEnchantment
com.l2jfrozen.gameserver.model.multisell.MultiSellListContainer: java.util.List _entriesC
com.l2jfrozen.gameserver.model.multisell.MultiSellListContainer: MultiSellListContainer()
com.l2jfrozen.gameserver.model.multisell.MultiSellListContainer: void setListId(int)
com.l2jfrozen.gameserver.model.multisell.MultiSellListContainer: void setApplyTaxes(boolean)
com.l2jfrozen.gameserver.model.multisell.MultiSellListContainer: void setMaintainEnchantment(boolean)
com.l2jfrozen.gameserver.model.multisell.MultiSellListContainer: int getListId()
com.l2jfrozen.gameserver.model.multisell.MultiSellListContainer: boolean getApplyTaxes()
com.l2jfrozen.gameserver.model.multisell.MultiSellListContainer: boolean getMaintainEnchantment()
com.l2jfrozen.gameserver.model.multisell.MultiSellListContainer: void addEntry(com.l2jfrozen.gameserver.model.multisell.MultiSellEntry)
com.l2jfrozen.gameserver.model.multisell.MultiSellListContainer: java.util.List getEntries()
com.l2jfrozen.gameserver.model.quest.Quest
com.l2jfrozen.gameserver.model.quest.Quest: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.quest.Quest: java.util.Map _allEventsS
com.l2jfrozen.gameserver.model.quest.Quest: java.util.Map _allEventTimers
com.l2jfrozen.gameserver.model.quest.Quest: int _questId
com.l2jfrozen.gameserver.model.quest.Quest: java.lang.String _name
com.l2jfrozen.gameserver.model.quest.Quest: java.lang.String _prefixPath
com.l2jfrozen.gameserver.model.quest.Quest: java.lang.String _descr
com.l2jfrozen.gameserver.model.quest.Quest: com.l2jfrozen.gameserver.model.quest.State _initialState
com.l2jfrozen.gameserver.model.quest.Quest: java.util.Map _states
com.l2jfrozen.gameserver.model.quest.Quest: javolution.util.FastList _questItemIds
com.l2jfrozen.gameserver.model.quest.Quest: java.util.Collection findAllEvents()
com.l2jfrozen.gameserver.model.quest.Quest: Quest(int,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.model.quest.Quest: void init_LoadGlobalData()
com.l2jfrozen.gameserver.model.quest.Quest: void saveGlobalData()
com.l2jfrozen.gameserver.model.quest.Quest: int getQuestIntId()
com.l2jfrozen.gameserver.model.quest.Quest: void setInitialState(com.l2jfrozen.gameserver.model.quest.State)
com.l2jfrozen.gameserver.model.quest.Quest: com.l2jfrozen.gameserver.model.quest.QuestState newQuestState(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.quest.Quest: com.l2jfrozen.gameserver.model.quest.State getInitialState()
com.l2jfrozen.gameserver.model.quest.Quest: java.lang.String getName()
com.l2jfrozen.gameserver.model.quest.Quest: java.lang.String getPrefixPath()
com.l2jfrozen.gameserver.model.quest.Quest: java.lang.String getDescr()
com.l2jfrozen.gameserver.model.quest.Quest: com.l2jfrozen.gameserver.model.quest.State addState(com.l2jfrozen.gameserver.model.quest.State)
com.l2jfrozen.gameserver.model.quest.Quest: void startQuestTimer(java.lang.String,long,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.quest.Quest: void startQuestTimer(java.lang.String,long,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.model.quest.Quest: com.l2jfrozen.gameserver.model.quest.QuestTimer getQuestTimer(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.quest.Quest: void cancelQuestTimer(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.quest.Quest: void cancelQuestTimers(java.lang.String)
com.l2jfrozen.gameserver.model.quest.Quest: void removeQuestTimer(com.l2jfrozen.gameserver.model.quest.QuestTimer)
com.l2jfrozen.gameserver.model.quest.Quest: boolean notifyAttack(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,boolean)
com.l2jfrozen.gameserver.model.quest.Quest: boolean notifyDeath(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.quest.QuestState)
com.l2jfrozen.gameserver.model.quest.Quest: boolean notifyEvent(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.quest.Quest: boolean notifyKill(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.model.quest.Quest: boolean notifyTalk(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.quest.QuestState)
com.l2jfrozen.gameserver.model.quest.Quest: boolean notifyFirstTalk(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.quest.Quest: boolean notifySkillUse(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.quest.Quest: boolean notifySpellFinished(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.quest.Quest: boolean notifyFactionCall(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.model.quest.Quest: boolean notifyAggroRangeEnter(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.model.quest.Quest: boolean notifySpawn(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.model.quest.Quest: java.lang.String onAttack(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,boolean)
com.l2jfrozen.gameserver.model.quest.Quest: java.lang.String onDeath(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.quest.QuestState)
com.l2jfrozen.gameserver.model.quest.Quest: java.lang.String onAdvEvent(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.quest.Quest: void sendDlgMessage(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.quest.Quest: void onDlgAnswer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.quest.Quest: java.lang.String onEvent(java.lang.String,com.l2jfrozen.gameserver.model.quest.QuestState)
com.l2jfrozen.gameserver.model.quest.Quest: java.lang.String onKill(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.model.quest.Quest: java.lang.String onTalk(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.quest.Quest: java.lang.String onFirstTalk(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.quest.Quest: java.lang.String onSkillUse(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.quest.Quest: java.lang.String onSpellFinished(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.quest.Quest: java.lang.String onFactionCall(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.model.quest.Quest: java.lang.String onAggroRangeEnter(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.model.quest.Quest: java.lang.String onSpawn(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.model.quest.Quest: boolean showError(com.l2jfrozen.gameserver.model.L2Character,java.lang.Throwable)
com.l2jfrozen.gameserver.model.quest.Quest: boolean showResult(com.l2jfrozen.gameserver.model.L2Character,java.lang.String)
com.l2jfrozen.gameserver.model.quest.Quest: com.l2jfrozen.gameserver.templates.L2NpcTemplate addStartNpc(int)
com.l2jfrozen.gameserver.model.quest.Quest: com.l2jfrozen.gameserver.templates.L2NpcTemplate addFirstTalkId(int)
com.l2jfrozen.gameserver.model.quest.Quest: com.l2jfrozen.gameserver.templates.L2NpcTemplate addAttackId(int)
com.l2jfrozen.gameserver.model.quest.Quest: com.l2jfrozen.gameserver.templates.L2NpcTemplate addKillId(int)
com.l2jfrozen.gameserver.model.quest.Quest: com.l2jfrozen.gameserver.templates.L2NpcTemplate addTalkId(int)
com.l2jfrozen.gameserver.model.quest.Quest: com.l2jfrozen.gameserver.templates.L2NpcTemplate addFactionCallId(int)
com.l2jfrozen.gameserver.model.quest.Quest: com.l2jfrozen.gameserver.templates.L2NpcTemplate addSkillUseId(int)
com.l2jfrozen.gameserver.model.quest.Quest: com.l2jfrozen.gameserver.templates.L2NpcTemplate addSpellFinishedId(int)
com.l2jfrozen.gameserver.model.quest.Quest: com.l2jfrozen.gameserver.templates.L2NpcTemplate addAggroRangeEnterId(int)
com.l2jfrozen.gameserver.model.quest.Quest: com.l2jfrozen.gameserver.templates.L2NpcTemplate addSpawnId(int)
com.l2jfrozen.gameserver.model.quest.Quest: com.l2jfrozen.gameserver.templates.L2NpcTemplate addEventId(int,com.l2jfrozen.gameserver.model.quest.QuestEventType)
com.l2jfrozen.gameserver.model.quest.Quest: void playerEnter(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.quest.Quest: void saveGlobalQuestVar(java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.model.quest.Quest: java.lang.String loadGlobalQuestVar(java.lang.String)
com.l2jfrozen.gameserver.model.quest.Quest: void deleteGlobalQuestVar(java.lang.String)
com.l2jfrozen.gameserver.model.quest.Quest: void deleteAllGlobalQuestVars()
com.l2jfrozen.gameserver.model.quest.Quest: void createQuestVarInDb(com.l2jfrozen.gameserver.model.quest.QuestState,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.model.quest.Quest: void updateQuestVarInDb(com.l2jfrozen.gameserver.model.quest.QuestState,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.model.quest.Quest: void deleteQuestVarInDb(com.l2jfrozen.gameserver.model.quest.QuestState,java.lang.String)
com.l2jfrozen.gameserver.model.quest.Quest: void deleteQuestInDb(com.l2jfrozen.gameserver.model.quest.QuestState)
com.l2jfrozen.gameserver.model.quest.Quest: void createQuestInDb(com.l2jfrozen.gameserver.model.quest.QuestState)
com.l2jfrozen.gameserver.model.quest.Quest: void updateQuestInDb(com.l2jfrozen.gameserver.model.quest.QuestState)
com.l2jfrozen.gameserver.model.quest.Quest: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getRandomPartyMember(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.quest.Quest: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getRandomPartyMember(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.quest.Quest: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getRandomPartyMember(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.model.quest.Quest: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getRandomPartyMemberState(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.quest.State)
com.l2jfrozen.gameserver.model.quest.Quest: java.lang.String showHtmlFile(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.model.quest.Quest: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance addSpawn(int,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.quest.Quest: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance addSpawn(int,int,int,int,int,boolean,int)
com.l2jfrozen.gameserver.model.quest.Quest: void registerItem(int)
com.l2jfrozen.gameserver.model.quest.Quest: javolution.util.FastList getRegisteredItemIds()
com.l2jfrozen.gameserver.model.quest.Quest: com.l2jfrozen.gameserver.scripting.ScriptManager getScriptManager()
com.l2jfrozen.gameserver.model.quest.Quest: boolean unload()
com.l2jfrozen.gameserver.model.quest.Quest: boolean reload()
com.l2jfrozen.gameserver.model.quest.Quest: java.lang.String getScriptName()
com.l2jfrozen.gameserver.model.quest.Quest: void registerMobs(int[])
com.l2jfrozen.gameserver.model.quest.Quest: void registerMobs(int[],com.l2jfrozen.gameserver.model.quest.QuestEventType[])
com.l2jfrozen.gameserver.model.quest.Quest: void <clinit>()
com.l2jfrozen.gameserver.model.quest.QuestEventType
com.l2jfrozen.gameserver.model.quest.QuestEventType: com.l2jfrozen.gameserver.model.quest.QuestEventType NPC_FIRST_TALK
com.l2jfrozen.gameserver.model.quest.QuestEventType: com.l2jfrozen.gameserver.model.quest.QuestEventType QUEST_START
com.l2jfrozen.gameserver.model.quest.QuestEventType: com.l2jfrozen.gameserver.model.quest.QuestEventType QUEST_TALK
com.l2jfrozen.gameserver.model.quest.QuestEventType: com.l2jfrozen.gameserver.model.quest.QuestEventType MOBGOTATTACKED
com.l2jfrozen.gameserver.model.quest.QuestEventType: com.l2jfrozen.gameserver.model.quest.QuestEventType MOBKILLED
com.l2jfrozen.gameserver.model.quest.QuestEventType: com.l2jfrozen.gameserver.model.quest.QuestEventType ON_FACTION_CALL
com.l2jfrozen.gameserver.model.quest.QuestEventType: com.l2jfrozen.gameserver.model.quest.QuestEventType MOB_TARGETED_BY_SKILL
com.l2jfrozen.gameserver.model.quest.QuestEventType: com.l2jfrozen.gameserver.model.quest.QuestEventType ON_SPELL_FINISHED
com.l2jfrozen.gameserver.model.quest.QuestEventType: com.l2jfrozen.gameserver.model.quest.QuestEventType ON_AGGRO_RANGE_ENTER
com.l2jfrozen.gameserver.model.quest.QuestEventType: com.l2jfrozen.gameserver.model.quest.QuestEventType ON_SPAWN
com.l2jfrozen.gameserver.model.quest.QuestEventType: com.l2jfrozen.gameserver.model.quest.QuestEventType ON_SKILL_USE
com.l2jfrozen.gameserver.model.quest.QuestEventType: com.l2jfrozen.gameserver.model.quest.QuestEventType ON_KILL
com.l2jfrozen.gameserver.model.quest.QuestEventType: com.l2jfrozen.gameserver.model.quest.QuestEventType ON_ATTACK
com.l2jfrozen.gameserver.model.quest.QuestEventType: boolean _allowMultipleRegistration
com.l2jfrozen.gameserver.model.quest.QuestEventType: com.l2jfrozen.gameserver.model.quest.QuestEventType[] $VALUES
com.l2jfrozen.gameserver.model.quest.QuestEventType: com.l2jfrozen.gameserver.model.quest.QuestEventType[] values()
com.l2jfrozen.gameserver.model.quest.QuestEventType: com.l2jfrozen.gameserver.model.quest.QuestEventType valueOf(java.lang.String)
com.l2jfrozen.gameserver.model.quest.QuestEventType: QuestEventType(java.lang.String,int,boolean)
com.l2jfrozen.gameserver.model.quest.QuestEventType: boolean isMultipleRegistrationAllowed()
com.l2jfrozen.gameserver.model.quest.QuestEventType: void <clinit>()
com.l2jfrozen.gameserver.model.quest.QuestSpawn
com.l2jfrozen.gameserver.model.quest.QuestSpawn: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.quest.QuestSpawn: com.l2jfrozen.gameserver.model.quest.QuestSpawn instance
com.l2jfrozen.gameserver.model.quest.QuestSpawn: QuestSpawn()
com.l2jfrozen.gameserver.model.quest.QuestSpawn: com.l2jfrozen.gameserver.model.quest.QuestSpawn getInstance()
com.l2jfrozen.gameserver.model.quest.QuestSpawn: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance addSpawn(int,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.quest.QuestSpawn: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance addSpawn(int,int,int,int,int,boolean,int)
com.l2jfrozen.gameserver.model.quest.QuestSpawn$DeSpawnScheduleTimerTask
com.l2jfrozen.gameserver.model.quest.QuestSpawn$DeSpawnScheduleTimerTask: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance _npc
com.l2jfrozen.gameserver.model.quest.QuestSpawn$DeSpawnScheduleTimerTask: com.l2jfrozen.gameserver.model.quest.QuestSpawn this$0
com.l2jfrozen.gameserver.model.quest.QuestSpawn$DeSpawnScheduleTimerTask: QuestSpawn$DeSpawnScheduleTimerTask(com.l2jfrozen.gameserver.model.quest.QuestSpawn,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.model.quest.QuestSpawn$DeSpawnScheduleTimerTask: void run()
com.l2jfrozen.gameserver.model.quest.QuestState
com.l2jfrozen.gameserver.model.quest.QuestState: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.quest.QuestState: java.lang.String _questName
com.l2jfrozen.gameserver.model.quest.QuestState: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _player
com.l2jfrozen.gameserver.model.quest.QuestState: com.l2jfrozen.gameserver.model.quest.State _state
com.l2jfrozen.gameserver.model.quest.QuestState: boolean _isCompleted
com.l2jfrozen.gameserver.model.quest.QuestState: java.util.Map _vars
com.l2jfrozen.gameserver.model.quest.QuestState: boolean _isExitQuestOnCleanUp
com.l2jfrozen.gameserver.model.quest.QuestState: QuestState(com.l2jfrozen.gameserver.model.quest.Quest,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.quest.State,boolean)
com.l2jfrozen.gameserver.model.quest.QuestState: java.lang.String getQuestName()
com.l2jfrozen.gameserver.model.quest.QuestState: com.l2jfrozen.gameserver.model.quest.Quest getQuest()
com.l2jfrozen.gameserver.model.quest.QuestState: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getPlayer()
com.l2jfrozen.gameserver.model.quest.QuestState: com.l2jfrozen.gameserver.model.quest.State getState()
com.l2jfrozen.gameserver.model.quest.QuestState: boolean isCompleted()
com.l2jfrozen.gameserver.model.quest.QuestState: boolean isStarted()
com.l2jfrozen.gameserver.model.quest.QuestState: java.lang.Object setState(com.l2jfrozen.gameserver.model.quest.State)
com.l2jfrozen.gameserver.model.quest.QuestState: java.lang.String getStateId()
com.l2jfrozen.gameserver.model.quest.QuestState: java.lang.String setInternal(java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.model.quest.QuestState: java.lang.String set(java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.model.quest.QuestState: void setCond(int,int)
com.l2jfrozen.gameserver.model.quest.QuestState: java.lang.String unset(java.lang.String)
com.l2jfrozen.gameserver.model.quest.QuestState: java.lang.Object get(java.lang.String)
com.l2jfrozen.gameserver.model.quest.QuestState: int getInt(java.lang.String)
com.l2jfrozen.gameserver.model.quest.QuestState: void addNotifyOfDeath(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.quest.QuestState: int getQuestItemsCount(int)
com.l2jfrozen.gameserver.model.quest.QuestState: int getEnchantLevel(int)
com.l2jfrozen.gameserver.model.quest.QuestState: void giveItems(int,int)
com.l2jfrozen.gameserver.model.quest.QuestState: void giveItems(int,int,int)
com.l2jfrozen.gameserver.model.quest.QuestState: boolean dropQuestItems(int,int,int,int,boolean)
com.l2jfrozen.gameserver.model.quest.QuestState: boolean dropQuestItems(int,int,int,int,int,boolean)
com.l2jfrozen.gameserver.model.quest.QuestState: void addRadar(int,int,int)
com.l2jfrozen.gameserver.model.quest.QuestState: void removeRadar(int,int,int)
com.l2jfrozen.gameserver.model.quest.QuestState: void clearRadar()
com.l2jfrozen.gameserver.model.quest.QuestState: void takeItems(int,int)
com.l2jfrozen.gameserver.model.quest.QuestState: void playSound(java.lang.String)
com.l2jfrozen.gameserver.model.quest.QuestState: void addExpAndSp(int,int)
com.l2jfrozen.gameserver.model.quest.QuestState: int getRandom(int)
com.l2jfrozen.gameserver.model.quest.QuestState: int getItemEquipped(int)
com.l2jfrozen.gameserver.model.quest.QuestState: int getGameTicks()
com.l2jfrozen.gameserver.model.quest.QuestState: boolean isExitQuestOnCleanUp()
com.l2jfrozen.gameserver.model.quest.QuestState: void setIsExitQuestOnCleanUp(boolean)
com.l2jfrozen.gameserver.model.quest.QuestState: void startQuestTimer(java.lang.String,long)
com.l2jfrozen.gameserver.model.quest.QuestState: void startQuestTimer(java.lang.String,long,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.model.quest.QuestState: com.l2jfrozen.gameserver.model.quest.QuestTimer getQuestTimer(java.lang.String)
com.l2jfrozen.gameserver.model.quest.QuestState: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance addSpawn(int)
com.l2jfrozen.gameserver.model.quest.QuestState: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance addSpawn(int,int)
com.l2jfrozen.gameserver.model.quest.QuestState: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance addSpawn(int,int,int,int)
com.l2jfrozen.gameserver.model.quest.QuestState: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance addSpawn(int,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.quest.QuestState: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance addSpawn(int,com.l2jfrozen.gameserver.model.L2Character,int)
com.l2jfrozen.gameserver.model.quest.QuestState: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance addSpawn(int,int,int,int,int)
com.l2jfrozen.gameserver.model.quest.QuestState: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance addSpawn(int,com.l2jfrozen.gameserver.model.L2Character,boolean,int)
com.l2jfrozen.gameserver.model.quest.QuestState: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance addSpawn(int,int,int,int,int,boolean,int)
com.l2jfrozen.gameserver.model.quest.QuestState: java.lang.String showHtmlFile(java.lang.String)
com.l2jfrozen.gameserver.model.quest.QuestState: com.l2jfrozen.gameserver.model.quest.QuestState exitQuest(boolean)
com.l2jfrozen.gameserver.model.quest.QuestState: void showQuestionMark(int)
com.l2jfrozen.gameserver.model.quest.QuestState: void playTutorialVoice(java.lang.String)
com.l2jfrozen.gameserver.model.quest.QuestState: void showTutorialHTML(java.lang.String)
com.l2jfrozen.gameserver.model.quest.QuestState: void closeTutorialHtml()
com.l2jfrozen.gameserver.model.quest.QuestState: void onTutorialClientEvent(int)
com.l2jfrozen.gameserver.model.quest.QuestState: void dropItem(com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int)
com.l2jfrozen.gameserver.model.quest.QuestState: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance getNpc()
com.l2jfrozen.gameserver.model.quest.QuestState: void checkNewbieQuests()
com.l2jfrozen.gameserver.model.quest.QuestState: void <clinit>()
com.l2jfrozen.gameserver.model.quest.QuestStateManager
com.l2jfrozen.gameserver.model.quest.QuestStateManager: com.l2jfrozen.gameserver.model.quest.QuestStateManager _instance
com.l2jfrozen.gameserver.model.quest.QuestStateManager: java.util.List _questStates
com.l2jfrozen.gameserver.model.quest.QuestStateManager: QuestStateManager()
com.l2jfrozen.gameserver.model.quest.QuestStateManager: com.l2jfrozen.gameserver.model.quest.QuestStateManager getInstance()
com.l2jfrozen.gameserver.model.quest.QuestStateManager: void addQuestState(com.l2jfrozen.gameserver.model.quest.Quest,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.quest.State,boolean)
com.l2jfrozen.gameserver.model.quest.QuestStateManager: void cleanUp()
com.l2jfrozen.gameserver.model.quest.QuestStateManager: com.l2jfrozen.gameserver.model.quest.QuestState getQuestState(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.quest.QuestStateManager: java.util.List getQuestStates()
com.l2jfrozen.gameserver.model.quest.QuestStateManager$ScheduleTimerTask
com.l2jfrozen.gameserver.model.quest.QuestStateManager$ScheduleTimerTask: com.l2jfrozen.gameserver.model.quest.QuestStateManager this$0
com.l2jfrozen.gameserver.model.quest.QuestStateManager$ScheduleTimerTask: QuestStateManager$ScheduleTimerTask(com.l2jfrozen.gameserver.model.quest.QuestStateManager)
com.l2jfrozen.gameserver.model.quest.QuestStateManager$ScheduleTimerTask: void run()
com.l2jfrozen.gameserver.model.quest.QuestTimer
com.l2jfrozen.gameserver.model.quest.QuestTimer: boolean _isActive
com.l2jfrozen.gameserver.model.quest.QuestTimer: java.lang.String _name
com.l2jfrozen.gameserver.model.quest.QuestTimer: com.l2jfrozen.gameserver.model.quest.Quest _quest
com.l2jfrozen.gameserver.model.quest.QuestTimer: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance _npc
com.l2jfrozen.gameserver.model.quest.QuestTimer: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _player
com.l2jfrozen.gameserver.model.quest.QuestTimer: boolean _isRepeating
com.l2jfrozen.gameserver.model.quest.QuestTimer: java.util.concurrent.ScheduledFuture _schedular
com.l2jfrozen.gameserver.model.quest.QuestTimer: QuestTimer(com.l2jfrozen.gameserver.model.quest.Quest,java.lang.String,long,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.model.quest.QuestTimer: QuestTimer(com.l2jfrozen.gameserver.model.quest.Quest,java.lang.String,long,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.quest.QuestTimer: QuestTimer(com.l2jfrozen.gameserver.model.quest.QuestState,java.lang.String,long)
com.l2jfrozen.gameserver.model.quest.QuestTimer: void cancel()
com.l2jfrozen.gameserver.model.quest.QuestTimer: void cancel(boolean)
com.l2jfrozen.gameserver.model.quest.QuestTimer: boolean isMatch(com.l2jfrozen.gameserver.model.quest.Quest,java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.quest.QuestTimer: boolean getIsActive()
com.l2jfrozen.gameserver.model.quest.QuestTimer: boolean getIsRepeating()
com.l2jfrozen.gameserver.model.quest.QuestTimer: com.l2jfrozen.gameserver.model.quest.Quest getQuest()
com.l2jfrozen.gameserver.model.quest.QuestTimer: java.lang.String getName()
com.l2jfrozen.gameserver.model.quest.QuestTimer: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance getNpc()
com.l2jfrozen.gameserver.model.quest.QuestTimer: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getPlayer()
com.l2jfrozen.gameserver.model.quest.QuestTimer: java.lang.String toString()
com.l2jfrozen.gameserver.model.quest.QuestTimer$ScheduleTimerTask
com.l2jfrozen.gameserver.model.quest.QuestTimer$ScheduleTimerTask: com.l2jfrozen.gameserver.model.quest.QuestTimer this$0
com.l2jfrozen.gameserver.model.quest.QuestTimer$ScheduleTimerTask: QuestTimer$ScheduleTimerTask(com.l2jfrozen.gameserver.model.quest.QuestTimer)
com.l2jfrozen.gameserver.model.quest.QuestTimer$ScheduleTimerTask: void run()
com.l2jfrozen.gameserver.model.quest.State
com.l2jfrozen.gameserver.model.quest.State: java.lang.String _questName
com.l2jfrozen.gameserver.model.quest.State: java.lang.String _name
com.l2jfrozen.gameserver.model.quest.State: State(java.lang.String,com.l2jfrozen.gameserver.model.quest.Quest)
com.l2jfrozen.gameserver.model.quest.State: void addQuestDrop(int,int,int)
com.l2jfrozen.gameserver.model.quest.State: java.lang.String getName()
com.l2jfrozen.gameserver.model.quest.State: java.lang.String toString()
com.l2jfrozen.gameserver.model.quest.jython.QuestJython
com.l2jfrozen.gameserver.model.quest.jython.QuestJython: QuestJython(int,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.model.scripts.L2RBManager
com.l2jfrozen.gameserver.model.scripts.L2RBManager: L2RBManager()
com.l2jfrozen.gameserver.model.scripts.L2RBManager: void RaidbossLevel40(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.scripts.L2RBManager: void RaidbossLevel45(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.scripts.L2RBManager: void RaidbossLevel50(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.scripts.L2RBManager: void RaidbossLevel55(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.scripts.L2RBManager: void RaidbossLevel60(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.scripts.L2RBManager: void RaidbossLevel65(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.scripts.L2RBManager: void RaidbossLevel70(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.scripts.L2RBManager$RaidbossLevel40
com.l2jfrozen.gameserver.model.scripts.L2RBManager$RaidbossLevel40: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _player
com.l2jfrozen.gameserver.model.scripts.L2RBManager$RaidbossLevel40: L2RBManager$RaidbossLevel40(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.scripts.L2RBManager$RaidbossLevel40: void run()
com.l2jfrozen.gameserver.model.scripts.L2RBManager$RaidbossLevel45
com.l2jfrozen.gameserver.model.scripts.L2RBManager$RaidbossLevel45: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _player
com.l2jfrozen.gameserver.model.scripts.L2RBManager$RaidbossLevel45: L2RBManager$RaidbossLevel45(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.scripts.L2RBManager$RaidbossLevel45: void run()
com.l2jfrozen.gameserver.model.scripts.L2RBManager$RaidbossLevel50
com.l2jfrozen.gameserver.model.scripts.L2RBManager$RaidbossLevel50: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _player
com.l2jfrozen.gameserver.model.scripts.L2RBManager$RaidbossLevel50: L2RBManager$RaidbossLevel50(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.scripts.L2RBManager$RaidbossLevel50: void run()
com.l2jfrozen.gameserver.model.scripts.L2RBManager$RaidbossLevel55
com.l2jfrozen.gameserver.model.scripts.L2RBManager$RaidbossLevel55: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _player
com.l2jfrozen.gameserver.model.scripts.L2RBManager$RaidbossLevel55: L2RBManager$RaidbossLevel55(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.scripts.L2RBManager$RaidbossLevel55: void run()
com.l2jfrozen.gameserver.model.scripts.L2RBManager$RaidbossLevel60
com.l2jfrozen.gameserver.model.scripts.L2RBManager$RaidbossLevel60: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _player
com.l2jfrozen.gameserver.model.scripts.L2RBManager$RaidbossLevel60: L2RBManager$RaidbossLevel60(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.scripts.L2RBManager$RaidbossLevel60: void run()
com.l2jfrozen.gameserver.model.scripts.L2RBManager$RaidbossLevel65
com.l2jfrozen.gameserver.model.scripts.L2RBManager$RaidbossLevel65: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _player
com.l2jfrozen.gameserver.model.scripts.L2RBManager$RaidbossLevel65: L2RBManager$RaidbossLevel65(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.scripts.L2RBManager$RaidbossLevel65: void run()
com.l2jfrozen.gameserver.model.scripts.L2RBManager$RaidbossLevel70
com.l2jfrozen.gameserver.model.scripts.L2RBManager$RaidbossLevel70: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _player
com.l2jfrozen.gameserver.model.scripts.L2RBManager$RaidbossLevel70: L2RBManager$RaidbossLevel70(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.scripts.L2RBManager$RaidbossLevel70: void run()
com.l2jfrozen.gameserver.model.spawn.AutoSpawn
com.l2jfrozen.gameserver.model.spawn.AutoSpawn: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.spawn.AutoSpawn: com.l2jfrozen.gameserver.model.spawn.AutoSpawn _instance
com.l2jfrozen.gameserver.model.spawn.AutoSpawn: int DEFAULT_INITIAL_SPAWN
com.l2jfrozen.gameserver.model.spawn.AutoSpawn: int DEFAULT_RESPAWN
com.l2jfrozen.gameserver.model.spawn.AutoSpawn: int DEFAULT_DESPAWN
com.l2jfrozen.gameserver.model.spawn.AutoSpawn: java.util.Map _registeredSpawns
com.l2jfrozen.gameserver.model.spawn.AutoSpawn: java.util.Map _runningSpawns
com.l2jfrozen.gameserver.model.spawn.AutoSpawn: boolean _activeState
com.l2jfrozen.gameserver.model.spawn.AutoSpawn: AutoSpawn()
com.l2jfrozen.gameserver.model.spawn.AutoSpawn: com.l2jfrozen.gameserver.model.spawn.AutoSpawn getInstance()
com.l2jfrozen.gameserver.model.spawn.AutoSpawn: int size()
com.l2jfrozen.gameserver.model.spawn.AutoSpawn: void restoreSpawnData()
com.l2jfrozen.gameserver.model.spawn.AutoSpawn: com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance registerSpawn(int,int[][],int,int,int)
com.l2jfrozen.gameserver.model.spawn.AutoSpawn: com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance registerSpawn(int,int,int,int)
com.l2jfrozen.gameserver.model.spawn.AutoSpawn: boolean removeSpawn(com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance)
com.l2jfrozen.gameserver.model.spawn.AutoSpawn: void removeSpawn(int)
com.l2jfrozen.gameserver.model.spawn.AutoSpawn: void setSpawnActive(com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance,boolean)
com.l2jfrozen.gameserver.model.spawn.AutoSpawn: void setAllActive(boolean)
com.l2jfrozen.gameserver.model.spawn.AutoSpawn: long getTimeToNextSpawn(com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance)
com.l2jfrozen.gameserver.model.spawn.AutoSpawn: com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance getAutoSpawnInstance(int,boolean)
com.l2jfrozen.gameserver.model.spawn.AutoSpawn: java.util.Map getAutoSpawnInstances(int)
com.l2jfrozen.gameserver.model.spawn.AutoSpawn: boolean isSpawnRegistered(int)
com.l2jfrozen.gameserver.model.spawn.AutoSpawn: boolean isSpawnRegistered(com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance)
com.l2jfrozen.gameserver.model.spawn.AutoSpawn: void <clinit>()
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoDespawner
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoDespawner: int _objectId
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoDespawner: com.l2jfrozen.gameserver.model.spawn.AutoSpawn this$0
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoDespawner: AutoSpawn$AutoDespawner(com.l2jfrozen.gameserver.model.spawn.AutoSpawn,int)
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoDespawner: void run()
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance: int _objectId
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance: int _spawnIndex
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance: int _npcId
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance: int _initDelay
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance: int _resDelay
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance: int _desDelay
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance: int _spawnCount
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance: int _lastLocIndex
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance: java.util.List _npcList
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance: java.util.List _locList
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance: boolean _spawnActive
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance: boolean _randomSpawn
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance: boolean _broadcastAnnouncement
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance: com.l2jfrozen.gameserver.model.spawn.AutoSpawn this$0
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance: AutoSpawn$AutoSpawnInstance(com.l2jfrozen.gameserver.model.spawn.AutoSpawn,int,int,int,int)
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance: void setSpawnActive(boolean)
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance: boolean addNpcInstance(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance: boolean removeNpcInstance(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance: int getObjectId()
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance: int getInitialDelay()
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance: int getRespawnDelay()
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance: int getDespawnDelay()
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance: int getNpcId()
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance: int getSpawnCount()
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance: com.l2jfrozen.gameserver.model.Location[] getLocationList()
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance[] getNPCInstanceList()
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance: com.l2jfrozen.gameserver.model.spawn.L2Spawn[] getSpawns()
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance: void setSpawnCount(int)
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance: void setRandomSpawn(boolean)
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance: void setBroadcast(boolean)
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance: boolean isSpawnActive()
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance: boolean isRandomSpawn()
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance: boolean isBroadcasting()
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance: boolean addSpawnLocation(int,int,int,int)
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance: boolean addSpawnLocation(int[])
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawnInstance: com.l2jfrozen.gameserver.model.Location removeSpawnLocation(int)
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawner
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawner: int _objectId
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawner: com.l2jfrozen.gameserver.model.spawn.AutoSpawn this$0
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawner: AutoSpawn$AutoSpawner(com.l2jfrozen.gameserver.model.spawn.AutoSpawn,int)
com.l2jfrozen.gameserver.model.spawn.AutoSpawn$AutoSpawner: void run()
com.l2jfrozen.gameserver.model.spawn.L2GroupSpawn
com.l2jfrozen.gameserver.model.spawn.L2GroupSpawn: java.lang.reflect.Constructor _constructor
com.l2jfrozen.gameserver.model.spawn.L2GroupSpawn: com.l2jfrozen.gameserver.templates.L2NpcTemplate _template
com.l2jfrozen.gameserver.model.spawn.L2GroupSpawn: L2GroupSpawn(com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.spawn.L2GroupSpawn: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance doGroupSpawn()
com.l2jfrozen.gameserver.model.spawn.L2Spawn
com.l2jfrozen.gameserver.model.spawn.L2Spawn: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.spawn.L2Spawn: com.l2jfrozen.gameserver.templates.L2NpcTemplate _template
com.l2jfrozen.gameserver.model.spawn.L2Spawn: int _id
com.l2jfrozen.gameserver.model.spawn.L2Spawn: int _location
com.l2jfrozen.gameserver.model.spawn.L2Spawn: int _maximumCount
com.l2jfrozen.gameserver.model.spawn.L2Spawn: int _currentCount
com.l2jfrozen.gameserver.model.spawn.L2Spawn: int _scheduledCount
com.l2jfrozen.gameserver.model.spawn.L2Spawn: int _locX
com.l2jfrozen.gameserver.model.spawn.L2Spawn: int _locY
com.l2jfrozen.gameserver.model.spawn.L2Spawn: int _locZ
com.l2jfrozen.gameserver.model.spawn.L2Spawn: int _heading
com.l2jfrozen.gameserver.model.spawn.L2Spawn: int _respawnDelay
com.l2jfrozen.gameserver.model.spawn.L2Spawn: int _respawnMinDelay
com.l2jfrozen.gameserver.model.spawn.L2Spawn: int _respawnMaxDelay
com.l2jfrozen.gameserver.model.spawn.L2Spawn: java.lang.reflect.Constructor _constructor
com.l2jfrozen.gameserver.model.spawn.L2Spawn: boolean _doRespawn
com.l2jfrozen.gameserver.model.spawn.L2Spawn: int _instanceId
com.l2jfrozen.gameserver.model.spawn.L2Spawn: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance _lastSpawn
com.l2jfrozen.gameserver.model.spawn.L2Spawn: java.util.List _spawnListeners
com.l2jfrozen.gameserver.model.spawn.L2Spawn: boolean _customSpawn
com.l2jfrozen.gameserver.model.spawn.L2Spawn: boolean _customBossInstance
com.l2jfrozen.gameserver.model.spawn.L2Spawn: L2Spawn(com.l2jfrozen.gameserver.templates.L2NpcTemplate)
com.l2jfrozen.gameserver.model.spawn.L2Spawn: int getAmount()
com.l2jfrozen.gameserver.model.spawn.L2Spawn: int getId()
com.l2jfrozen.gameserver.model.spawn.L2Spawn: int getLocation()
com.l2jfrozen.gameserver.model.spawn.L2Spawn: int getLocx()
com.l2jfrozen.gameserver.model.spawn.L2Spawn: int getLocy()
com.l2jfrozen.gameserver.model.spawn.L2Spawn: int getLocz()
com.l2jfrozen.gameserver.model.spawn.L2Spawn: int getNpcid()
com.l2jfrozen.gameserver.model.spawn.L2Spawn: int getHeading()
com.l2jfrozen.gameserver.model.spawn.L2Spawn: int getRespawnDelay()
com.l2jfrozen.gameserver.model.spawn.L2Spawn: int getRespawnMinDelay()
com.l2jfrozen.gameserver.model.spawn.L2Spawn: int getRespawnMaxDelay()
com.l2jfrozen.gameserver.model.spawn.L2Spawn: void setAmount(int)
com.l2jfrozen.gameserver.model.spawn.L2Spawn: void setId(int)
com.l2jfrozen.gameserver.model.spawn.L2Spawn: void setLocation(int)
com.l2jfrozen.gameserver.model.spawn.L2Spawn: void setRespawnMinDelay(int)
com.l2jfrozen.gameserver.model.spawn.L2Spawn: void setRespawnMaxDelay(int)
com.l2jfrozen.gameserver.model.spawn.L2Spawn: void setLocx(int)
com.l2jfrozen.gameserver.model.spawn.L2Spawn: void setLocy(int)
com.l2jfrozen.gameserver.model.spawn.L2Spawn: void setLocz(int)
com.l2jfrozen.gameserver.model.spawn.L2Spawn: void setHeading(int)
com.l2jfrozen.gameserver.model.spawn.L2Spawn: void setCustom(boolean)
com.l2jfrozen.gameserver.model.spawn.L2Spawn: boolean isCustom()
com.l2jfrozen.gameserver.model.spawn.L2Spawn: boolean is_customBossInstance()
com.l2jfrozen.gameserver.model.spawn.L2Spawn: void set_customBossInstance(boolean)
com.l2jfrozen.gameserver.model.spawn.L2Spawn: void decreaseCount(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.model.spawn.L2Spawn: int init()
com.l2jfrozen.gameserver.model.spawn.L2Spawn: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance spawnOne()
com.l2jfrozen.gameserver.model.spawn.L2Spawn: void stopRespawn()
com.l2jfrozen.gameserver.model.spawn.L2Spawn: void startRespawn()
com.l2jfrozen.gameserver.model.spawn.L2Spawn: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance doSpawn()
com.l2jfrozen.gameserver.model.spawn.L2Spawn: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance intializeNpcInstance(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.model.spawn.L2Spawn: void addSpawnListener(com.l2jfrozen.gameserver.model.spawn.SpawnListener)
com.l2jfrozen.gameserver.model.spawn.L2Spawn: void removeSpawnListener(com.l2jfrozen.gameserver.model.spawn.SpawnListener)
com.l2jfrozen.gameserver.model.spawn.L2Spawn: void notifyNpcSpawned(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.model.spawn.L2Spawn: void setRespawnDelay(int)
com.l2jfrozen.gameserver.model.spawn.L2Spawn: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance getLastSpawn()
com.l2jfrozen.gameserver.model.spawn.L2Spawn: void respawnNpc(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.model.spawn.L2Spawn: com.l2jfrozen.gameserver.templates.L2NpcTemplate getTemplate()
com.l2jfrozen.gameserver.model.spawn.L2Spawn: int getInstanceId()
com.l2jfrozen.gameserver.model.spawn.L2Spawn: void setInstanceId(int)
com.l2jfrozen.gameserver.model.spawn.L2Spawn: void <clinit>()
com.l2jfrozen.gameserver.model.spawn.L2Spawn$1
com.l2jfrozen.gameserver.model.spawn.L2Spawn$1: int[] $SwitchMap$com$l2jfrozen$gameserver$config$CorrectSpawnsZ
com.l2jfrozen.gameserver.model.spawn.L2Spawn$1: void <clinit>()
com.l2jfrozen.gameserver.model.spawn.L2Spawn$SpawnTask
com.l2jfrozen.gameserver.model.spawn.L2Spawn$SpawnTask: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance _oldNpc
com.l2jfrozen.gameserver.model.spawn.L2Spawn$SpawnTask: com.l2jfrozen.gameserver.model.spawn.L2Spawn this$0
com.l2jfrozen.gameserver.model.spawn.L2Spawn$SpawnTask: L2Spawn$SpawnTask(com.l2jfrozen.gameserver.model.spawn.L2Spawn,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.model.spawn.L2Spawn$SpawnTask: void run()
com.l2jfrozen.gameserver.model.spawn.SpawnListener
com.l2jfrozen.gameserver.model.spawn.SpawnListener: void npcSpawned(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.model.waypoint.WayPointNode
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: int _id
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: java.lang.String _title
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: java.lang.String _type
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: java.lang.String NORMAL
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: java.lang.String SELECTED
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: java.lang.String LINKED
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: int _lineId
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: java.lang.String LINE_TYPE
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: java.util.Map _linkLists
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: WayPointNode(int)
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: boolean isAutoAttackable(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: com.l2jfrozen.gameserver.model.waypoint.WayPointNode spawn(java.lang.String,int,int,int,int)
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: com.l2jfrozen.gameserver.model.waypoint.WayPointNode spawn(boolean,int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: com.l2jfrozen.gameserver.model.waypoint.WayPointNode spawn(boolean,int,com.l2jfrozen.common.util.Point3D)
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: com.l2jfrozen.gameserver.model.waypoint.WayPointNode spawn(com.l2jfrozen.common.util.Point3D)
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: com.l2jfrozen.gameserver.model.waypoint.WayPointNode spawn(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: void onAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: void setNormalInfo(java.lang.String,int,java.lang.String)
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: void setNormalInfo(java.lang.String,int)
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: void changeID(int)
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: void changeID(int,java.lang.String)
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: void setLinked()
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: void setNormal()
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: void setSelected()
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: boolean isMarker()
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: java.lang.String getTitle()
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: void setTitle(java.lang.String)
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: int getId()
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: java.lang.String getType()
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: void setType(java.lang.String)
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: void drawLine(com.l2jfrozen.gameserver.model.waypoint.WayPointNode,com.l2jfrozen.gameserver.model.waypoint.WayPointNode)
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: void addLineInfo(com.l2jfrozen.gameserver.model.waypoint.WayPointNode,java.util.List)
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: void eraseLine(com.l2jfrozen.gameserver.model.waypoint.WayPointNode,com.l2jfrozen.gameserver.model.waypoint.WayPointNode)
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: void eraseLine(com.l2jfrozen.gameserver.model.waypoint.WayPointNode)
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: java.util.List getLineInfo(com.l2jfrozen.gameserver.model.waypoint.WayPointNode)
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: void setLineId(int)
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: java.util.List getLineNodes()
com.l2jfrozen.gameserver.model.waypoint.WayPointNode: void <clinit>()
com.l2jfrozen.gameserver.model.zone.L2ZoneForm
com.l2jfrozen.gameserver.model.zone.L2ZoneForm: L2ZoneForm()
com.l2jfrozen.gameserver.model.zone.L2ZoneForm: boolean isInsideZone(int,int,int)
com.l2jfrozen.gameserver.model.zone.L2ZoneForm: boolean intersectsRectangle(int,int,int,int)
com.l2jfrozen.gameserver.model.zone.L2ZoneForm: double getDistanceToZone(int,int)
com.l2jfrozen.gameserver.model.zone.L2ZoneForm: int getLowZ()
com.l2jfrozen.gameserver.model.zone.L2ZoneForm: int getHighZ()
com.l2jfrozen.gameserver.model.zone.L2ZoneForm: boolean lineSegmentsIntersect(int,int,int,int,int,int,int,int)
com.l2jfrozen.gameserver.model.zone.L2ZoneForm: boolean lineIntersectsLine(int,int,int,int,int,int,int,int)
com.l2jfrozen.gameserver.model.zone.L2ZoneForm: int sameSide(double,double,double,double,double,double,double,double)
com.l2jfrozen.gameserver.model.zone.L2ZoneForm: boolean isBetween(double,double,double)
com.l2jfrozen.gameserver.model.zone.L2ZoneManager
com.l2jfrozen.gameserver.model.zone.L2ZoneManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.zone.L2ZoneManager: javolution.util.FastList _zones
com.l2jfrozen.gameserver.model.zone.L2ZoneManager: L2ZoneManager()
com.l2jfrozen.gameserver.model.zone.L2ZoneManager: void registerNewZone(com.l2jfrozen.gameserver.model.zone.L2ZoneType)
com.l2jfrozen.gameserver.model.zone.L2ZoneManager: void unregisterZone(com.l2jfrozen.gameserver.model.zone.L2ZoneType)
com.l2jfrozen.gameserver.model.zone.L2ZoneManager: void revalidateZones(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.L2ZoneManager: void removeCharacter(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.L2ZoneManager: void onDeath(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.L2ZoneManager: void onRevive(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.L2ZoneManager: javolution.util.FastList getZones()
com.l2jfrozen.gameserver.model.zone.L2ZoneType
com.l2jfrozen.gameserver.model.zone.L2ZoneType: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.zone.L2ZoneType: int _id
com.l2jfrozen.gameserver.model.zone.L2ZoneType: com.l2jfrozen.gameserver.model.zone.L2ZoneForm _zone
com.l2jfrozen.gameserver.model.zone.L2ZoneType: javolution.util.FastMap _characterList
com.l2jfrozen.gameserver.model.zone.L2ZoneType: boolean _checkAffected
com.l2jfrozen.gameserver.model.zone.L2ZoneType: int _minLvl
com.l2jfrozen.gameserver.model.zone.L2ZoneType: int _maxLvl
com.l2jfrozen.gameserver.model.zone.L2ZoneType: int[] _race
com.l2jfrozen.gameserver.model.zone.L2ZoneType: int[] _class
com.l2jfrozen.gameserver.model.zone.L2ZoneType: char _classType
com.l2jfrozen.gameserver.model.zone.L2ZoneType: L2ZoneType(int)
com.l2jfrozen.gameserver.model.zone.L2ZoneType: int getId()
com.l2jfrozen.gameserver.model.zone.L2ZoneType: void setParameter(java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.model.zone.L2ZoneType: void setSpawnLocs(org.w3c.dom.Node)
com.l2jfrozen.gameserver.model.zone.L2ZoneType: boolean isAffected(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.L2ZoneType: void setZone(com.l2jfrozen.gameserver.model.zone.L2ZoneForm)
com.l2jfrozen.gameserver.model.zone.L2ZoneType: com.l2jfrozen.gameserver.model.zone.L2ZoneForm getZone()
com.l2jfrozen.gameserver.model.zone.L2ZoneType: boolean isInsideZone(int,int,int)
com.l2jfrozen.gameserver.model.zone.L2ZoneType: boolean isInsideZone(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.zone.L2ZoneType: double getDistanceToZone(int,int)
com.l2jfrozen.gameserver.model.zone.L2ZoneType: double getDistanceToZone(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.model.zone.L2ZoneType: void revalidateInZone(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.L2ZoneType: void removeCharacter(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.L2ZoneType: boolean isCharacterInZone(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.L2ZoneType: void onEnter(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.L2ZoneType: void onExit(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.L2ZoneType: void onDieInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.L2ZoneType: void onReviveInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.L2ZoneType: void broadcastPacket(com.l2jfrozen.gameserver.network.serverpackets.L2GameServerPacket)
com.l2jfrozen.gameserver.model.zone.L2ZoneType: javolution.util.FastMap getCharactersInside()
com.l2jfrozen.gameserver.model.zone.form.ZoneCuboid
com.l2jfrozen.gameserver.model.zone.form.ZoneCuboid: int _x1
com.l2jfrozen.gameserver.model.zone.form.ZoneCuboid: int _x2
com.l2jfrozen.gameserver.model.zone.form.ZoneCuboid: int _y1
com.l2jfrozen.gameserver.model.zone.form.ZoneCuboid: int _y2
com.l2jfrozen.gameserver.model.zone.form.ZoneCuboid: int _z1
com.l2jfrozen.gameserver.model.zone.form.ZoneCuboid: int _z2
com.l2jfrozen.gameserver.model.zone.form.ZoneCuboid: ZoneCuboid(int,int,int,int,int,int)
com.l2jfrozen.gameserver.model.zone.form.ZoneCuboid: boolean isInsideZone(int,int,int)
com.l2jfrozen.gameserver.model.zone.form.ZoneCuboid: boolean intersectsRectangle(int,int,int,int)
com.l2jfrozen.gameserver.model.zone.form.ZoneCuboid: double getDistanceToZone(int,int)
com.l2jfrozen.gameserver.model.zone.form.ZoneCuboid: int getLowZ()
com.l2jfrozen.gameserver.model.zone.form.ZoneCuboid: int getHighZ()
com.l2jfrozen.gameserver.model.zone.form.ZoneCylinder
com.l2jfrozen.gameserver.model.zone.form.ZoneCylinder: int _x
com.l2jfrozen.gameserver.model.zone.form.ZoneCylinder: int _y
com.l2jfrozen.gameserver.model.zone.form.ZoneCylinder: int _z1
com.l2jfrozen.gameserver.model.zone.form.ZoneCylinder: int _z2
com.l2jfrozen.gameserver.model.zone.form.ZoneCylinder: int _rad
com.l2jfrozen.gameserver.model.zone.form.ZoneCylinder: int _radS
com.l2jfrozen.gameserver.model.zone.form.ZoneCylinder: ZoneCylinder(int,int,int,int,int)
com.l2jfrozen.gameserver.model.zone.form.ZoneCylinder: boolean isInsideZone(int,int,int)
com.l2jfrozen.gameserver.model.zone.form.ZoneCylinder: boolean intersectsRectangle(int,int,int,int)
com.l2jfrozen.gameserver.model.zone.form.ZoneCylinder: double getDistanceToZone(int,int)
com.l2jfrozen.gameserver.model.zone.form.ZoneCylinder: int getLowZ()
com.l2jfrozen.gameserver.model.zone.form.ZoneCylinder: int getHighZ()
com.l2jfrozen.gameserver.model.zone.form.ZoneNPoly
com.l2jfrozen.gameserver.model.zone.form.ZoneNPoly: int[] _x
com.l2jfrozen.gameserver.model.zone.form.ZoneNPoly: int[] _y
com.l2jfrozen.gameserver.model.zone.form.ZoneNPoly: int _z1
com.l2jfrozen.gameserver.model.zone.form.ZoneNPoly: int _z2
com.l2jfrozen.gameserver.model.zone.form.ZoneNPoly: ZoneNPoly(int[],int[],int,int)
com.l2jfrozen.gameserver.model.zone.form.ZoneNPoly: boolean isInsideZone(int,int,int)
com.l2jfrozen.gameserver.model.zone.form.ZoneNPoly: boolean intersectsRectangle(int,int,int,int)
com.l2jfrozen.gameserver.model.zone.form.ZoneNPoly: double getDistanceToZone(int,int)
com.l2jfrozen.gameserver.model.zone.form.ZoneNPoly: int getLowZ()
com.l2jfrozen.gameserver.model.zone.form.ZoneNPoly: int getHighZ()
com.l2jfrozen.gameserver.model.zone.type.L2ArenaZone
com.l2jfrozen.gameserver.model.zone.type.L2ArenaZone: int[] _spawnLoc
com.l2jfrozen.gameserver.model.zone.type.L2ArenaZone: L2ArenaZone(int)
com.l2jfrozen.gameserver.model.zone.type.L2ArenaZone: void setParameter(java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.model.zone.type.L2ArenaZone: void onEnter(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2ArenaZone: void onExit(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2ArenaZone: void onDieInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2ArenaZone: void onReviveInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2ArenaZone: void oustAllPlayers()
com.l2jfrozen.gameserver.model.zone.type.L2ArenaZone: int[] getSpawnLoc()
com.l2jfrozen.gameserver.model.zone.type.L2BigheadZone
com.l2jfrozen.gameserver.model.zone.type.L2BigheadZone: L2BigheadZone(int)
com.l2jfrozen.gameserver.model.zone.type.L2BigheadZone: void onEnter(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2BigheadZone: void onExit(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2BigheadZone: void onDieInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2BigheadZone: void onReviveInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2BossZone
com.l2jfrozen.gameserver.model.zone.type.L2BossZone: java.lang.String _zoneName
com.l2jfrozen.gameserver.model.zone.type.L2BossZone: int _timeInvade
com.l2jfrozen.gameserver.model.zone.type.L2BossZone: boolean _enabled
com.l2jfrozen.gameserver.model.zone.type.L2BossZone: boolean _IsFlyingEnable
com.l2jfrozen.gameserver.model.zone.type.L2BossZone: javolution.util.FastMap _playerAllowedReEntryTimes
com.l2jfrozen.gameserver.model.zone.type.L2BossZone: java.util.List _playersAllowed
com.l2jfrozen.gameserver.model.zone.type.L2BossZone: int _bossId
com.l2jfrozen.gameserver.model.zone.type.L2BossZone: L2BossZone(int,int)
com.l2jfrozen.gameserver.model.zone.type.L2BossZone: void setParameter(java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.model.zone.type.L2BossZone: void onEnter(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2BossZone: void movePlayersTo(int,int,int)
com.l2jfrozen.gameserver.model.zone.type.L2BossZone: void onExit(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2BossZone: void setZoneEnabled(boolean)
com.l2jfrozen.gameserver.model.zone.type.L2BossZone: java.lang.String getZoneName()
com.l2jfrozen.gameserver.model.zone.type.L2BossZone: int getTimeInvade()
com.l2jfrozen.gameserver.model.zone.type.L2BossZone: void setAllowedPlayers(java.util.List)
com.l2jfrozen.gameserver.model.zone.type.L2BossZone: java.util.List getAllowedPlayers()
com.l2jfrozen.gameserver.model.zone.type.L2BossZone: boolean isPlayerAllowed(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.model.zone.type.L2BossZone: void oustAllPlayers()
com.l2jfrozen.gameserver.model.zone.type.L2BossZone: void allowPlayerEntry(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.model.zone.type.L2BossZone: void onDieInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2BossZone: void onReviveInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2BossZone: void updateKnownList(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.model.zone.type.L2BossZone: int getBossId()
com.l2jfrozen.gameserver.model.zone.type.L2CastleTeleportZone
com.l2jfrozen.gameserver.model.zone.type.L2CastleTeleportZone: int[] _spawnLoc
com.l2jfrozen.gameserver.model.zone.type.L2CastleTeleportZone: int _castleId
com.l2jfrozen.gameserver.model.zone.type.L2CastleTeleportZone: com.l2jfrozen.gameserver.model.entity.siege.Castle _castle
com.l2jfrozen.gameserver.model.zone.type.L2CastleTeleportZone: L2CastleTeleportZone(int)
com.l2jfrozen.gameserver.model.zone.type.L2CastleTeleportZone: void setParameter(java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.model.zone.type.L2CastleTeleportZone: void onEnter(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2CastleTeleportZone: void onExit(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2CastleTeleportZone: void onDieInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2CastleTeleportZone: void onReviveInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2CastleTeleportZone: javolution.util.FastList getAllPlayers()
com.l2jfrozen.gameserver.model.zone.type.L2CastleTeleportZone: void oustAllPlayers()
com.l2jfrozen.gameserver.model.zone.type.L2CastleTeleportZone: int[] getSpawn()
com.l2jfrozen.gameserver.model.zone.type.L2CastleZone
com.l2jfrozen.gameserver.model.zone.type.L2CastleZone: int _castleId
com.l2jfrozen.gameserver.model.zone.type.L2CastleZone: com.l2jfrozen.gameserver.model.entity.siege.Castle _castle
com.l2jfrozen.gameserver.model.zone.type.L2CastleZone: int[] _spawnLoc
com.l2jfrozen.gameserver.model.zone.type.L2CastleZone: L2CastleZone(int)
com.l2jfrozen.gameserver.model.zone.type.L2CastleZone: void setParameter(java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.model.zone.type.L2CastleZone: void onEnter(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2CastleZone: void onExit(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2CastleZone: void onDieInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2CastleZone: void onReviveInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2CastleZone: void updateZoneStatusForCharactersInside()
com.l2jfrozen.gameserver.model.zone.type.L2CastleZone: void banishForeigners(int)
com.l2jfrozen.gameserver.model.zone.type.L2CastleZone: void announceToPlayers(java.lang.String)
com.l2jfrozen.gameserver.model.zone.type.L2CastleZone: javolution.util.FastList getAllPlayers()
com.l2jfrozen.gameserver.model.zone.type.L2CastleZone: int[] getSpawn()
com.l2jfrozen.gameserver.model.zone.type.L2CastleZone: boolean isSiegeActive()
com.l2jfrozen.gameserver.model.zone.type.L2ClanHallZone
com.l2jfrozen.gameserver.model.zone.type.L2ClanHallZone: int _clanHallId
com.l2jfrozen.gameserver.model.zone.type.L2ClanHallZone: int[] _spawnLoc
com.l2jfrozen.gameserver.model.zone.type.L2ClanHallZone: L2ClanHallZone(int)
com.l2jfrozen.gameserver.model.zone.type.L2ClanHallZone: void setParameter(java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.model.zone.type.L2ClanHallZone: void onEnter(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2ClanHallZone: void onExit(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2ClanHallZone: void onDieInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2ClanHallZone: void onReviveInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2ClanHallZone: void banishForeigners(int)
com.l2jfrozen.gameserver.model.zone.type.L2ClanHallZone: javolution.util.FastMap getCharactersInside()
com.l2jfrozen.gameserver.model.zone.type.L2ClanHallZone: com.l2jfrozen.gameserver.model.Location getSpawn()
com.l2jfrozen.gameserver.model.zone.type.L2CustomZone
com.l2jfrozen.gameserver.model.zone.type.L2CustomZone: java.lang.String _zoneName
com.l2jfrozen.gameserver.model.zone.type.L2CustomZone: boolean _IsFlyingEnable
com.l2jfrozen.gameserver.model.zone.type.L2CustomZone: L2CustomZone(int)
com.l2jfrozen.gameserver.model.zone.type.L2CustomZone: void onDieInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2CustomZone: void onReviveInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2CustomZone: void setParameter(java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.model.zone.type.L2CustomZone: void onEnter(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2CustomZone: void onExit(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2CustomZone: java.lang.String getZoneName()
com.l2jfrozen.gameserver.model.zone.type.L2CustomZone: boolean isFlyingEnable()
com.l2jfrozen.gameserver.model.zone.type.L2DamageZone
com.l2jfrozen.gameserver.model.zone.type.L2DamageZone: int _damagePerSec
com.l2jfrozen.gameserver.model.zone.type.L2DamageZone: java.util.concurrent.Future _task
com.l2jfrozen.gameserver.model.zone.type.L2DamageZone: L2DamageZone(int)
com.l2jfrozen.gameserver.model.zone.type.L2DamageZone: void setParameter(java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.model.zone.type.L2DamageZone: void onEnter(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2DamageZone: void onExit(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2DamageZone: java.util.Collection getCharacterList()
com.l2jfrozen.gameserver.model.zone.type.L2DamageZone: int getDamagePerSecond()
com.l2jfrozen.gameserver.model.zone.type.L2DamageZone: void onDieInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2DamageZone: void onReviveInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2DamageZone$ApplyDamage
com.l2jfrozen.gameserver.model.zone.type.L2DamageZone$ApplyDamage: com.l2jfrozen.gameserver.model.zone.type.L2DamageZone _dmgZone
com.l2jfrozen.gameserver.model.zone.type.L2DamageZone$ApplyDamage: com.l2jfrozen.gameserver.model.zone.type.L2DamageZone this$0
com.l2jfrozen.gameserver.model.zone.type.L2DamageZone$ApplyDamage: L2DamageZone$ApplyDamage(com.l2jfrozen.gameserver.model.zone.type.L2DamageZone,com.l2jfrozen.gameserver.model.zone.type.L2DamageZone)
com.l2jfrozen.gameserver.model.zone.type.L2DamageZone$ApplyDamage: void run()
com.l2jfrozen.gameserver.model.zone.type.L2DerbyTrackZone
com.l2jfrozen.gameserver.model.zone.type.L2DerbyTrackZone: L2DerbyTrackZone(int)
com.l2jfrozen.gameserver.model.zone.type.L2DerbyTrackZone: void onEnter(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2DerbyTrackZone: void onExit(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2DerbyTrackZone: void onDieInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2DerbyTrackZone: void onReviveInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2DynamicZone
com.l2jfrozen.gameserver.model.zone.type.L2DynamicZone: com.l2jfrozen.gameserver.model.L2WorldRegion _region
com.l2jfrozen.gameserver.model.zone.type.L2DynamicZone: com.l2jfrozen.gameserver.model.L2Character _owner
com.l2jfrozen.gameserver.model.zone.type.L2DynamicZone: java.util.concurrent.Future _task
com.l2jfrozen.gameserver.model.zone.type.L2DynamicZone: com.l2jfrozen.gameserver.model.L2Skill _skill
com.l2jfrozen.gameserver.model.zone.type.L2DynamicZone: void setTask(java.util.concurrent.Future)
com.l2jfrozen.gameserver.model.zone.type.L2DynamicZone: L2DynamicZone(com.l2jfrozen.gameserver.model.L2WorldRegion,com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.model.zone.type.L2DynamicZone: void onEnter(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2DynamicZone: void onExit(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2DynamicZone: void remove()
com.l2jfrozen.gameserver.model.zone.type.L2DynamicZone: void onDieInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2DynamicZone: void onReviveInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2DynamicZone$1
com.l2jfrozen.gameserver.model.zone.type.L2DynamicZone$1: com.l2jfrozen.gameserver.model.zone.type.L2DynamicZone this$0
com.l2jfrozen.gameserver.model.zone.type.L2DynamicZone$1: L2DynamicZone$1(com.l2jfrozen.gameserver.model.zone.type.L2DynamicZone)
com.l2jfrozen.gameserver.model.zone.type.L2DynamicZone$1: void run()
com.l2jfrozen.gameserver.model.zone.type.L2EffectZone
com.l2jfrozen.gameserver.model.zone.type.L2EffectZone: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.zone.type.L2EffectZone: int _chance
com.l2jfrozen.gameserver.model.zone.type.L2EffectZone: int _initialDelay
com.l2jfrozen.gameserver.model.zone.type.L2EffectZone: int _reuse
com.l2jfrozen.gameserver.model.zone.type.L2EffectZone: boolean _enabled
com.l2jfrozen.gameserver.model.zone.type.L2EffectZone: boolean _isShowDangerIcon
com.l2jfrozen.gameserver.model.zone.type.L2EffectZone: java.util.concurrent.Future _task
com.l2jfrozen.gameserver.model.zone.type.L2EffectZone: javolution.util.FastMap _skills
com.l2jfrozen.gameserver.model.zone.type.L2EffectZone: L2EffectZone(int)
com.l2jfrozen.gameserver.model.zone.type.L2EffectZone: void setParameter(java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.model.zone.type.L2EffectZone: void onEnter(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2EffectZone: void onExit(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2EffectZone: com.l2jfrozen.gameserver.model.L2Skill getSkill(int,int)
com.l2jfrozen.gameserver.model.zone.type.L2EffectZone: int getChance()
com.l2jfrozen.gameserver.model.zone.type.L2EffectZone: boolean isEnabled()
com.l2jfrozen.gameserver.model.zone.type.L2EffectZone: void addSkill(int,int)
com.l2jfrozen.gameserver.model.zone.type.L2EffectZone: void removeSkill(int)
com.l2jfrozen.gameserver.model.zone.type.L2EffectZone: void clearSkills()
com.l2jfrozen.gameserver.model.zone.type.L2EffectZone: int getSkillLevel(int)
com.l2jfrozen.gameserver.model.zone.type.L2EffectZone: void setZoneEnabled(boolean)
com.l2jfrozen.gameserver.model.zone.type.L2EffectZone: java.util.Collection getCharacterList()
com.l2jfrozen.gameserver.model.zone.type.L2EffectZone: void onDieInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2EffectZone: void onReviveInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2EffectZone: void <clinit>()
com.l2jfrozen.gameserver.model.zone.type.L2EffectZone$ApplySkill
com.l2jfrozen.gameserver.model.zone.type.L2EffectZone$ApplySkill: com.l2jfrozen.gameserver.model.zone.type.L2EffectZone this$0
com.l2jfrozen.gameserver.model.zone.type.L2EffectZone$ApplySkill: L2EffectZone$ApplySkill(com.l2jfrozen.gameserver.model.zone.type.L2EffectZone)
com.l2jfrozen.gameserver.model.zone.type.L2EffectZone$ApplySkill: void run()
com.l2jfrozen.gameserver.model.zone.type.L2FishingZone
com.l2jfrozen.gameserver.model.zone.type.L2FishingZone: L2FishingZone(int)
com.l2jfrozen.gameserver.model.zone.type.L2FishingZone: void onEnter(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2FishingZone: void onExit(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2FishingZone: void onDieInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2FishingZone: void onReviveInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2FishingZone: int getWaterZ()
com.l2jfrozen.gameserver.model.zone.type.L2FortZone
com.l2jfrozen.gameserver.model.zone.type.L2FortZone: int _fortId
com.l2jfrozen.gameserver.model.zone.type.L2FortZone: com.l2jfrozen.gameserver.model.entity.siege.Fort _fort
com.l2jfrozen.gameserver.model.zone.type.L2FortZone: int[] _spawnLoc
com.l2jfrozen.gameserver.model.zone.type.L2FortZone: L2FortZone(int)
com.l2jfrozen.gameserver.model.zone.type.L2FortZone: void setParameter(java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.model.zone.type.L2FortZone: void onEnter(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2FortZone: void onExit(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2FortZone: void onDieInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2FortZone: void onReviveInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2FortZone: void updateZoneStatusForCharactersInside()
com.l2jfrozen.gameserver.model.zone.type.L2FortZone: void banishForeigners(int)
com.l2jfrozen.gameserver.model.zone.type.L2FortZone: void announceToPlayers(java.lang.String)
com.l2jfrozen.gameserver.model.zone.type.L2FortZone: javolution.util.FastList getAllPlayers()
com.l2jfrozen.gameserver.model.zone.type.L2FortZone: int[] getSpawn()
com.l2jfrozen.gameserver.model.zone.type.L2JailZone
com.l2jfrozen.gameserver.model.zone.type.L2JailZone: L2JailZone(int)
com.l2jfrozen.gameserver.model.zone.type.L2JailZone: void onEnter(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2JailZone: void onExit(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2JailZone: void onDieInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2JailZone: void onReviveInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2JailZone$BackToJail
com.l2jfrozen.gameserver.model.zone.type.L2JailZone$BackToJail: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.model.zone.type.L2JailZone$BackToJail: L2JailZone$BackToJail(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2JailZone$BackToJail: void run()
com.l2jfrozen.gameserver.model.zone.type.L2MotherTreeZone
com.l2jfrozen.gameserver.model.zone.type.L2MotherTreeZone: L2MotherTreeZone(int)
com.l2jfrozen.gameserver.model.zone.type.L2MotherTreeZone: void onEnter(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2MotherTreeZone: void onExit(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2MotherTreeZone: void onDieInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2MotherTreeZone: void onReviveInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2NoHqZone
com.l2jfrozen.gameserver.model.zone.type.L2NoHqZone: L2NoHqZone(int)
com.l2jfrozen.gameserver.model.zone.type.L2NoHqZone: void onEnter(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2NoHqZone: void onExit(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2NoHqZone: void onDieInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2NoHqZone: void onReviveInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2NoLandingZone
com.l2jfrozen.gameserver.model.zone.type.L2NoLandingZone: L2NoLandingZone(int)
com.l2jfrozen.gameserver.model.zone.type.L2NoLandingZone: void onEnter(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2NoLandingZone: void onExit(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2NoLandingZone: void onDieInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2NoLandingZone: void onReviveInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2NoStoreZone
com.l2jfrozen.gameserver.model.zone.type.L2NoStoreZone: L2NoStoreZone(int)
com.l2jfrozen.gameserver.model.zone.type.L2NoStoreZone: void onEnter(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2NoStoreZone: void onExit(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2NoStoreZone: void onDieInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2NoStoreZone: void onReviveInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2OlympiadStadiumZone
com.l2jfrozen.gameserver.model.zone.type.L2OlympiadStadiumZone: int _stadiumId
com.l2jfrozen.gameserver.model.zone.type.L2OlympiadStadiumZone: L2OlympiadStadiumZone(int)
com.l2jfrozen.gameserver.model.zone.type.L2OlympiadStadiumZone: void setParameter(java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.model.zone.type.L2OlympiadStadiumZone: void onEnter(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2OlympiadStadiumZone: void onExit(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2OlympiadStadiumZone: void onDieInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2OlympiadStadiumZone: void onReviveInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2OlympiadStadiumZone: int getStadiumId()
com.l2jfrozen.gameserver.model.zone.type.L2PeaceZone
com.l2jfrozen.gameserver.model.zone.type.L2PeaceZone: L2PeaceZone(int)
com.l2jfrozen.gameserver.model.zone.type.L2PeaceZone: void onEnter(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2PeaceZone: void onExit(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2PeaceZone: void onDieInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2PeaceZone: void onReviveInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2PoisonZone
com.l2jfrozen.gameserver.model.zone.type.L2PoisonZone: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.model.zone.type.L2PoisonZone: int _skillId
com.l2jfrozen.gameserver.model.zone.type.L2PoisonZone: int _chance
com.l2jfrozen.gameserver.model.zone.type.L2PoisonZone: int _initialDelay
com.l2jfrozen.gameserver.model.zone.type.L2PoisonZone: int _skillLvl
com.l2jfrozen.gameserver.model.zone.type.L2PoisonZone: int _reuse
com.l2jfrozen.gameserver.model.zone.type.L2PoisonZone: boolean _enabled
com.l2jfrozen.gameserver.model.zone.type.L2PoisonZone: java.lang.String _target
com.l2jfrozen.gameserver.model.zone.type.L2PoisonZone: java.util.concurrent.Future _task
com.l2jfrozen.gameserver.model.zone.type.L2PoisonZone: L2PoisonZone(int)
com.l2jfrozen.gameserver.model.zone.type.L2PoisonZone: void setParameter(java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.model.zone.type.L2PoisonZone: void onEnter(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2PoisonZone: void onExit(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2PoisonZone: com.l2jfrozen.gameserver.model.L2Skill getSkill()
com.l2jfrozen.gameserver.model.zone.type.L2PoisonZone: java.lang.String getTargetType()
com.l2jfrozen.gameserver.model.zone.type.L2PoisonZone: boolean isEnabled()
com.l2jfrozen.gameserver.model.zone.type.L2PoisonZone: int getChance()
com.l2jfrozen.gameserver.model.zone.type.L2PoisonZone: void setZoneEnabled(boolean)
com.l2jfrozen.gameserver.model.zone.type.L2PoisonZone: void onDieInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2PoisonZone: void onReviveInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2PoisonZone$ApplySkill
com.l2jfrozen.gameserver.model.zone.type.L2PoisonZone$ApplySkill: com.l2jfrozen.gameserver.model.zone.type.L2PoisonZone this$0
com.l2jfrozen.gameserver.model.zone.type.L2PoisonZone$ApplySkill: L2PoisonZone$ApplySkill(com.l2jfrozen.gameserver.model.zone.type.L2PoisonZone)
com.l2jfrozen.gameserver.model.zone.type.L2PoisonZone$ApplySkill: void run()
com.l2jfrozen.gameserver.model.zone.type.L2ScriptZone
com.l2jfrozen.gameserver.model.zone.type.L2ScriptZone: L2ScriptZone(int)
com.l2jfrozen.gameserver.model.zone.type.L2ScriptZone: void onEnter(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2ScriptZone: void onExit(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2ScriptZone: void onDieInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2ScriptZone: void onReviveInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2SwampZone
com.l2jfrozen.gameserver.model.zone.type.L2SwampZone: int _move_bonus
com.l2jfrozen.gameserver.model.zone.type.L2SwampZone: L2SwampZone(int)
com.l2jfrozen.gameserver.model.zone.type.L2SwampZone: void setParameter(java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.model.zone.type.L2SwampZone: void onEnter(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2SwampZone: void onExit(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2SwampZone: int getMoveBonus()
com.l2jfrozen.gameserver.model.zone.type.L2SwampZone: void onDieInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2SwampZone: void onReviveInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2TownZone
com.l2jfrozen.gameserver.model.zone.type.L2TownZone: java.lang.String _townName
com.l2jfrozen.gameserver.model.zone.type.L2TownZone: int _townId
com.l2jfrozen.gameserver.model.zone.type.L2TownZone: int _redirectTownId
com.l2jfrozen.gameserver.model.zone.type.L2TownZone: int _taxById
com.l2jfrozen.gameserver.model.zone.type.L2TownZone: boolean _noPeace
com.l2jfrozen.gameserver.model.zone.type.L2TownZone: javolution.util.FastList _spawnLoc
com.l2jfrozen.gameserver.model.zone.type.L2TownZone: L2TownZone(int)
com.l2jfrozen.gameserver.model.zone.type.L2TownZone: void setParameter(java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.model.zone.type.L2TownZone: void setSpawnLocs(org.w3c.dom.Node)
com.l2jfrozen.gameserver.model.zone.type.L2TownZone: void onEnter(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2TownZone: void onExit(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2TownZone: void onDieInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2TownZone: void onReviveInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2TownZone: java.lang.String getName()
com.l2jfrozen.gameserver.model.zone.type.L2TownZone: int getTownId()
com.l2jfrozen.gameserver.model.zone.type.L2TownZone: int getRedirectTownId()
com.l2jfrozen.gameserver.model.zone.type.L2TownZone: int[] getSpawnLoc()
com.l2jfrozen.gameserver.model.zone.type.L2TownZone: int getTaxById()
com.l2jfrozen.gameserver.model.zone.type.L2WaterZone
com.l2jfrozen.gameserver.model.zone.type.L2WaterZone: L2WaterZone(int)
com.l2jfrozen.gameserver.model.zone.type.L2WaterZone: void onEnter(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2WaterZone: void onExit(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2WaterZone: void onDieInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2WaterZone: void onReviveInside(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.model.zone.type.L2WaterZone: int getWaterZ()
com.l2jfrozen.gameserver.network.BlowFishKeygen
com.l2jfrozen.gameserver.network.BlowFishKeygen: int CRYPT_KEYS_SIZE
com.l2jfrozen.gameserver.network.BlowFishKeygen: byte[][] CRYPT_KEYS
com.l2jfrozen.gameserver.network.BlowFishKeygen: BlowFishKeygen()
com.l2jfrozen.gameserver.network.BlowFishKeygen: byte[] getRandomKey()
com.l2jfrozen.gameserver.network.BlowFishKeygen: void <clinit>()
com.l2jfrozen.gameserver.network.ClientStats
com.l2jfrozen.gameserver.network.ClientStats: int processedPackets
com.l2jfrozen.gameserver.network.ClientStats: int droppedPackets
com.l2jfrozen.gameserver.network.ClientStats: int unknownPackets
com.l2jfrozen.gameserver.network.ClientStats: int totalQueueSize
com.l2jfrozen.gameserver.network.ClientStats: int maxQueueSize
com.l2jfrozen.gameserver.network.ClientStats: int totalBursts
com.l2jfrozen.gameserver.network.ClientStats: int maxBurstSize
com.l2jfrozen.gameserver.network.ClientStats: int shortFloods
com.l2jfrozen.gameserver.network.ClientStats: int longFloods
com.l2jfrozen.gameserver.network.ClientStats: int totalQueueOverflows
com.l2jfrozen.gameserver.network.ClientStats: int totalUnderflowExceptions
com.l2jfrozen.gameserver.network.ClientStats: int[] _packetsInSecond
com.l2jfrozen.gameserver.network.ClientStats: long _packetCountStartTick
com.l2jfrozen.gameserver.network.ClientStats: int _head
com.l2jfrozen.gameserver.network.ClientStats: int _totalCount
com.l2jfrozen.gameserver.network.ClientStats: int _floodsInMin
com.l2jfrozen.gameserver.network.ClientStats: long _floodStartTick
com.l2jfrozen.gameserver.network.ClientStats: int _unknownPacketsInMin
com.l2jfrozen.gameserver.network.ClientStats: long _unknownPacketStartTick
com.l2jfrozen.gameserver.network.ClientStats: int _overflowsInMin
com.l2jfrozen.gameserver.network.ClientStats: long _overflowStartTick
com.l2jfrozen.gameserver.network.ClientStats: int _underflowReadsInMin
com.l2jfrozen.gameserver.network.ClientStats: long _underflowReadStartTick
com.l2jfrozen.gameserver.network.ClientStats: boolean _floodDetected
com.l2jfrozen.gameserver.network.ClientStats: boolean _queueOverflowDetected
com.l2jfrozen.gameserver.network.ClientStats: int BUFFER_SIZE
com.l2jfrozen.gameserver.network.ClientStats: ClientStats()
com.l2jfrozen.gameserver.network.ClientStats: boolean dropPacket()
com.l2jfrozen.gameserver.network.ClientStats: boolean countPacket(int)
com.l2jfrozen.gameserver.network.ClientStats: boolean countUnknownPacket()
com.l2jfrozen.gameserver.network.ClientStats: boolean countBurst(int)
com.l2jfrozen.gameserver.network.ClientStats: boolean countQueueOverflow()
com.l2jfrozen.gameserver.network.ClientStats: boolean countUnderflowException()
com.l2jfrozen.gameserver.network.ClientStats: boolean countFloods()
com.l2jfrozen.gameserver.network.ClientStats: boolean longFloodDetected()
com.l2jfrozen.gameserver.network.ClientStats: boolean countPacket()
com.l2jfrozen.gameserver.network.CustomPacketHandlerInterface
com.l2jfrozen.gameserver.network.CustomPacketHandlerInterface: com.l2jfrozen.gameserver.network.clientpackets.L2GameClientPacket handlePacket(java.nio.ByteBuffer,com.l2jfrozen.gameserver.network.L2GameClient)
com.l2jfrozen.gameserver.network.Disconnection
com.l2jfrozen.gameserver.network.Disconnection: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.Disconnection: Disconnection(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.Disconnection: void run()
com.l2jfrozen.gameserver.network.GameClientState
com.l2jfrozen.gameserver.network.GameClientState: com.l2jfrozen.gameserver.network.GameClientState CONNECTED
com.l2jfrozen.gameserver.network.GameClientState: com.l2jfrozen.gameserver.network.GameClientState AUTHED
com.l2jfrozen.gameserver.network.GameClientState: com.l2jfrozen.gameserver.network.GameClientState IN_GAME
com.l2jfrozen.gameserver.network.GameClientState: com.l2jfrozen.gameserver.network.GameClientState[] $VALUES
com.l2jfrozen.gameserver.network.GameClientState: com.l2jfrozen.gameserver.network.GameClientState[] values()
com.l2jfrozen.gameserver.network.GameClientState: com.l2jfrozen.gameserver.network.GameClientState valueOf(java.lang.String)
com.l2jfrozen.gameserver.network.GameClientState: GameClientState(java.lang.String,int)
com.l2jfrozen.gameserver.network.GameClientState: void <clinit>()
com.l2jfrozen.gameserver.network.GameCrypt
com.l2jfrozen.gameserver.network.GameCrypt: byte[] _inKey
com.l2jfrozen.gameserver.network.GameCrypt: byte[] _outKey
com.l2jfrozen.gameserver.network.GameCrypt: boolean _isEnabled
com.l2jfrozen.gameserver.network.GameCrypt: GameCrypt()
com.l2jfrozen.gameserver.network.GameCrypt: void setKey(byte[])
com.l2jfrozen.gameserver.network.GameCrypt: void decrypt(byte[],int,int)
com.l2jfrozen.gameserver.network.GameCrypt: void encrypt(byte[],int,int)
com.l2jfrozen.gameserver.network.L2GameClient
com.l2jfrozen.gameserver.network.L2GameClient: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.L2GameClient: com.l2jfrozen.gameserver.util.FloodProtectors _floodProtectors
com.l2jfrozen.gameserver.network.L2GameClient: com.l2jfrozen.gameserver.network.GameClientState state
com.l2jfrozen.gameserver.network.L2GameClient: java.lang.String accountName
com.l2jfrozen.gameserver.network.L2GameClient: com.l2jfrozen.netcore.SessionKey sessionId
com.l2jfrozen.gameserver.network.L2GameClient: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance activeChar
com.l2jfrozen.gameserver.network.L2GameClient: java.util.concurrent.locks.ReentrantLock _activeCharLock
com.l2jfrozen.gameserver.network.L2GameClient: boolean _isAuthedGG
com.l2jfrozen.gameserver.network.L2GameClient: long _connectionStartTime
com.l2jfrozen.gameserver.network.L2GameClient: java.util.List _charSlotMapping
com.l2jfrozen.gameserver.network.L2GameClient: java.util.concurrent.ScheduledFuture _cleanupTask
com.l2jfrozen.gameserver.network.L2GameClient: com.l2jfrozen.gameserver.network.ClientStats _stats
com.l2jfrozen.gameserver.network.L2GameClient: com.l2jfrozen.gameserver.network.GameCrypt crypt
com.l2jfrozen.gameserver.network.L2GameClient: long packetsNextSendTick
com.l2jfrozen.gameserver.network.L2GameClient: int unknownPacketCount
com.l2jfrozen.gameserver.network.L2GameClient: boolean _closenow
com.l2jfrozen.gameserver.network.L2GameClient: boolean _isDetached
com.l2jfrozen.gameserver.network.L2GameClient: boolean _forcedToClose
com.l2jfrozen.gameserver.network.L2GameClient: java.util.concurrent.ArrayBlockingQueue _packetQueue
com.l2jfrozen.gameserver.network.L2GameClient: java.util.concurrent.locks.ReentrantLock _queueLock
com.l2jfrozen.gameserver.network.L2GameClient: long _last_received_packet_action_time
com.l2jfrozen.gameserver.network.L2GameClient: L2GameClient(com.l2jfrozen.netcore.MMOConnection)
com.l2jfrozen.gameserver.network.L2GameClient: byte[] enableCrypt()
com.l2jfrozen.gameserver.network.L2GameClient: com.l2jfrozen.gameserver.network.GameClientState getState()
com.l2jfrozen.gameserver.network.L2GameClient: void setState(com.l2jfrozen.gameserver.network.GameClientState)
com.l2jfrozen.gameserver.network.L2GameClient: com.l2jfrozen.gameserver.network.ClientStats getStats()
com.l2jfrozen.gameserver.network.L2GameClient: long getConnectionStartTime()
com.l2jfrozen.gameserver.network.L2GameClient: boolean decrypt(java.nio.ByteBuffer,int)
com.l2jfrozen.gameserver.network.L2GameClient: boolean encrypt(java.nio.ByteBuffer,int)
com.l2jfrozen.gameserver.network.L2GameClient: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getActiveChar()
com.l2jfrozen.gameserver.network.L2GameClient: void setActiveChar(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.L2GameClient: java.util.concurrent.locks.ReentrantLock getActiveCharLock()
com.l2jfrozen.gameserver.network.L2GameClient: boolean isAuthedGG()
com.l2jfrozen.gameserver.network.L2GameClient: void setGameGuardOk(boolean)
com.l2jfrozen.gameserver.network.L2GameClient: void setAccountName(java.lang.String)
com.l2jfrozen.gameserver.network.L2GameClient: java.lang.String getAccountName()
com.l2jfrozen.gameserver.network.L2GameClient: void setSessionId(com.l2jfrozen.netcore.SessionKey)
com.l2jfrozen.gameserver.network.L2GameClient: com.l2jfrozen.netcore.SessionKey getSessionId()
com.l2jfrozen.gameserver.network.L2GameClient: void sendPacket(com.l2jfrozen.gameserver.network.serverpackets.L2GameServerPacket)
com.l2jfrozen.gameserver.network.L2GameClient: boolean isDetached()
com.l2jfrozen.gameserver.network.L2GameClient: void setDetached(boolean)
com.l2jfrozen.gameserver.network.L2GameClient: byte markToDeleteChar(int)
com.l2jfrozen.gameserver.network.L2GameClient: void markRestoredChar(int)
com.l2jfrozen.gameserver.network.L2GameClient: void deleteCharByObjId(int)
com.l2jfrozen.gameserver.network.L2GameClient: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance loadCharFromDisk(int)
com.l2jfrozen.gameserver.network.L2GameClient: void setCharSelection(com.l2jfrozen.gameserver.model.CharSelectInfoPackage[])
com.l2jfrozen.gameserver.network.L2GameClient: void close(com.l2jfrozen.gameserver.network.serverpackets.L2GameServerPacket)
com.l2jfrozen.gameserver.network.L2GameClient: int getObjectIdForSlot(int)
com.l2jfrozen.gameserver.network.L2GameClient: void onForcedDisconnection(boolean)
com.l2jfrozen.gameserver.network.L2GameClient: void onDisconnection()
com.l2jfrozen.gameserver.network.L2GameClient: void closeNow()
com.l2jfrozen.gameserver.network.L2GameClient: void close(int)
com.l2jfrozen.gameserver.network.L2GameClient: java.lang.String toString()
com.l2jfrozen.gameserver.network.L2GameClient: com.l2jfrozen.gameserver.util.FloodProtectors getFloodProtectors()
com.l2jfrozen.gameserver.network.L2GameClient: boolean checkUnknownPackets()
com.l2jfrozen.gameserver.network.L2GameClient: boolean cancelCleanup()
com.l2jfrozen.gameserver.network.L2GameClient: boolean dropPacket()
com.l2jfrozen.gameserver.network.L2GameClient: void onBufferUnderflow()
com.l2jfrozen.gameserver.network.L2GameClient: void execute(com.l2jfrozen.netcore.ReceivablePacket)
com.l2jfrozen.gameserver.network.L2GameClient: void run()
com.l2jfrozen.gameserver.network.L2GameClient: boolean is_forcedToClose()
com.l2jfrozen.gameserver.network.L2GameClient: boolean isConnectionAlive()
com.l2jfrozen.gameserver.network.L2GameClient: void <clinit>()
com.l2jfrozen.gameserver.network.L2GameClient$1
com.l2jfrozen.gameserver.network.L2GameClient$1: com.l2jfrozen.gameserver.network.L2GameClient this$0
com.l2jfrozen.gameserver.network.L2GameClient$1: L2GameClient$1(com.l2jfrozen.gameserver.network.L2GameClient)
com.l2jfrozen.gameserver.network.L2GameClient$1: void run()
com.l2jfrozen.gameserver.network.L2GameClient$2
com.l2jfrozen.gameserver.network.L2GameClient$2: int[] $SwitchMap$com$l2jfrozen$gameserver$network$GameClientState
com.l2jfrozen.gameserver.network.L2GameClient$2: void <clinit>()
com.l2jfrozen.gameserver.network.L2GameClient$CleanupTask
com.l2jfrozen.gameserver.network.L2GameClient$CleanupTask: com.l2jfrozen.gameserver.network.L2GameClient this$0
com.l2jfrozen.gameserver.network.L2GameClient$CleanupTask: L2GameClient$CleanupTask(com.l2jfrozen.gameserver.network.L2GameClient)
com.l2jfrozen.gameserver.network.L2GameClient$CleanupTask: void run()
com.l2jfrozen.gameserver.network.L2GameClient$DisconnectTask
com.l2jfrozen.gameserver.network.L2GameClient$DisconnectTask: com.l2jfrozen.gameserver.network.L2GameClient this$0
com.l2jfrozen.gameserver.network.L2GameClient$DisconnectTask: L2GameClient$DisconnectTask(com.l2jfrozen.gameserver.network.L2GameClient)
com.l2jfrozen.gameserver.network.L2GameClient$DisconnectTask: void run()
com.l2jfrozen.gameserver.network.L2GamePacketHandler
com.l2jfrozen.gameserver.network.L2GamePacketHandler: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.L2GamePacketHandler: L2GamePacketHandler()
com.l2jfrozen.gameserver.network.L2GamePacketHandler: com.l2jfrozen.netcore.ReceivablePacket handlePacket(java.nio.ByteBuffer,com.l2jfrozen.gameserver.network.L2GameClient)
com.l2jfrozen.gameserver.network.L2GamePacketHandler: void printDebug(int,java.nio.ByteBuffer,com.l2jfrozen.gameserver.network.GameClientState,com.l2jfrozen.gameserver.network.L2GameClient)
com.l2jfrozen.gameserver.network.L2GamePacketHandler: void printDebugDoubleOpcode(int,int,java.nio.ByteBuffer,com.l2jfrozen.gameserver.network.GameClientState,com.l2jfrozen.gameserver.network.L2GameClient)
com.l2jfrozen.gameserver.network.L2GamePacketHandler: com.l2jfrozen.gameserver.network.L2GameClient create(com.l2jfrozen.netcore.MMOConnection)
com.l2jfrozen.gameserver.network.L2GamePacketHandler: void execute(com.l2jfrozen.netcore.ReceivablePacket)
com.l2jfrozen.gameserver.network.L2GamePacketHandler: com.l2jfrozen.netcore.ReceivablePacket handlePacket(java.nio.ByteBuffer,com.l2jfrozen.netcore.MMOClient)
com.l2jfrozen.gameserver.network.L2GamePacketHandler: com.l2jfrozen.netcore.MMOClient create(com.l2jfrozen.netcore.MMOConnection)
com.l2jfrozen.gameserver.network.L2GamePacketHandler: void <clinit>()
com.l2jfrozen.gameserver.network.L2GamePacketHandler$1
com.l2jfrozen.gameserver.network.L2GamePacketHandler$1: int[] $SwitchMap$com$l2jfrozen$gameserver$network$GameClientState
com.l2jfrozen.gameserver.network.L2GamePacketHandler$1: void <clinit>()
com.l2jfrozen.gameserver.network.PacketHistory
com.l2jfrozen.gameserver.network.PacketHistory: java.util.Map _info
com.l2jfrozen.gameserver.network.PacketHistory: long _timeStamp
com.l2jfrozen.gameserver.network.PacketHistory: javolution.xml.XMLFormat PACKET_HISTORY_XML
com.l2jfrozen.gameserver.network.PacketHistory: PacketHistory()
com.l2jfrozen.gameserver.network.PacketHistory: void <clinit>()
com.l2jfrozen.gameserver.network.PacketHistory$1
com.l2jfrozen.gameserver.network.PacketHistory$1: PacketHistory$1(java.lang.Class)
com.l2jfrozen.gameserver.network.PacketHistory$1: void read(javolution.xml.XMLFormat$InputElement,com.l2jfrozen.gameserver.network.PacketHistory)
com.l2jfrozen.gameserver.network.PacketHistory$1: void write(com.l2jfrozen.gameserver.network.PacketHistory,javolution.xml.XMLFormat$OutputElement)
com.l2jfrozen.gameserver.network.PacketHistory$1: void read(javolution.xml.XMLFormat$InputElement,java.lang.Object)
com.l2jfrozen.gameserver.network.PacketHistory$1: void write(java.lang.Object,javolution.xml.XMLFormat$OutputElement)
com.l2jfrozen.gameserver.network.SystemChatChannelId
com.l2jfrozen.gameserver.network.SystemChatChannelId: com.l2jfrozen.gameserver.network.SystemChatChannelId CHAT_NORMAL
com.l2jfrozen.gameserver.network.SystemChatChannelId: com.l2jfrozen.gameserver.network.SystemChatChannelId CHAT_SHOUT
com.l2jfrozen.gameserver.network.SystemChatChannelId: com.l2jfrozen.gameserver.network.SystemChatChannelId CHAT_TELL
com.l2jfrozen.gameserver.network.SystemChatChannelId: com.l2jfrozen.gameserver.network.SystemChatChannelId CHAT_PARTY
com.l2jfrozen.gameserver.network.SystemChatChannelId: com.l2jfrozen.gameserver.network.SystemChatChannelId CHAT_CLAN
com.l2jfrozen.gameserver.network.SystemChatChannelId: com.l2jfrozen.gameserver.network.SystemChatChannelId CHAT_SYSTEM
com.l2jfrozen.gameserver.network.SystemChatChannelId: com.l2jfrozen.gameserver.network.SystemChatChannelId CHAT_USER_PET
com.l2jfrozen.gameserver.network.SystemChatChannelId: com.l2jfrozen.gameserver.network.SystemChatChannelId CHAT_GM_PET
com.l2jfrozen.gameserver.network.SystemChatChannelId: com.l2jfrozen.gameserver.network.SystemChatChannelId CHAT_MARKET
com.l2jfrozen.gameserver.network.SystemChatChannelId: com.l2jfrozen.gameserver.network.SystemChatChannelId CHAT_ALLIANCE
com.l2jfrozen.gameserver.network.SystemChatChannelId: com.l2jfrozen.gameserver.network.SystemChatChannelId CHAT_ANNOUNCE
com.l2jfrozen.gameserver.network.SystemChatChannelId: com.l2jfrozen.gameserver.network.SystemChatChannelId CHAT_CUSTOM
com.l2jfrozen.gameserver.network.SystemChatChannelId: com.l2jfrozen.gameserver.network.SystemChatChannelId CHAT_L2FRIEND
com.l2jfrozen.gameserver.network.SystemChatChannelId: com.l2jfrozen.gameserver.network.SystemChatChannelId CHAT_MSN
com.l2jfrozen.gameserver.network.SystemChatChannelId: com.l2jfrozen.gameserver.network.SystemChatChannelId CHAT_PARTY_ROOM
com.l2jfrozen.gameserver.network.SystemChatChannelId: com.l2jfrozen.gameserver.network.SystemChatChannelId CHAT_COMMANDER
com.l2jfrozen.gameserver.network.SystemChatChannelId: com.l2jfrozen.gameserver.network.SystemChatChannelId CHAT_INNER_PARTYMASTER
com.l2jfrozen.gameserver.network.SystemChatChannelId: com.l2jfrozen.gameserver.network.SystemChatChannelId CHAT_HERO
com.l2jfrozen.gameserver.network.SystemChatChannelId: com.l2jfrozen.gameserver.network.SystemChatChannelId CHAT_CRITICAL_ANNOUNCE
com.l2jfrozen.gameserver.network.SystemChatChannelId: com.l2jfrozen.gameserver.network.SystemChatChannelId CHAT_UNKNOWN
com.l2jfrozen.gameserver.network.SystemChatChannelId: com.l2jfrozen.gameserver.network.SystemChatChannelId CHAT_BATTLEFIELD
com.l2jfrozen.gameserver.network.SystemChatChannelId: com.l2jfrozen.gameserver.network.SystemChatChannelId CHAT_NONE
com.l2jfrozen.gameserver.network.SystemChatChannelId: java.lang.String _channelName
com.l2jfrozen.gameserver.network.SystemChatChannelId: com.l2jfrozen.gameserver.network.SystemChatChannelId[] $VALUES
com.l2jfrozen.gameserver.network.SystemChatChannelId: com.l2jfrozen.gameserver.network.SystemChatChannelId[] values()
com.l2jfrozen.gameserver.network.SystemChatChannelId: com.l2jfrozen.gameserver.network.SystemChatChannelId valueOf(java.lang.String)
com.l2jfrozen.gameserver.network.SystemChatChannelId: SystemChatChannelId(java.lang.String,int,java.lang.String)
com.l2jfrozen.gameserver.network.SystemChatChannelId: int getId()
com.l2jfrozen.gameserver.network.SystemChatChannelId: java.lang.String getName()
com.l2jfrozen.gameserver.network.SystemChatChannelId: com.l2jfrozen.gameserver.network.SystemChatChannelId getChatType(int)
com.l2jfrozen.gameserver.network.SystemChatChannelId: void <clinit>()
com.l2jfrozen.gameserver.network.SystemMessageId
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_SERVER_WILL_BE_COMING_DOWN_IN_S1_SECONDS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PAYMENT_FOR_YOUR_CLAN_HALL_HAS_NOT_BEEN_MADE_PLEASE_MAKE_PAYMENT_TO_YOUR_CLAN_WAREHOUSE_BY_S1_TOMORROW
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_CLAN_HALL_FEE_IS_ONE_WEEK_OVERDUE_THEREFORE_THE_CLAN_HALL_OWNERSHIP_HAS_BEEN_REVOKED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId TARGET_IN_PEACEZONE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANT_ATK_PEACEZONE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NOT_ENOUGH_HP
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NOT_ENOUGH_MP
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NOT_ENOUGH_ITEMS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId USE_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_PREPARED_FOR_REUSE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_FEEL_S1_EFFECT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId REJUVENATING_HP
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId REJUVENATING_MP
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_USE_ITEM_WHILE_USING_MAGIC
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CASTING_INTERRUPTED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_WAS_UNAFFECTED_BY_S2
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId DRAIN_HALF_SUCCESFUL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId RESISTED_S1_DRAIN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ATTACK_FAILED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId RESISTED_S1_MAGIC
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_HP_RESTORED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S2_HP_RESTORED_BY_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_MP_RESTORED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S2_MP_RESTORED_BY_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S2_MP_HAS_BEEN_DRAINED_BY_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOUR_OPPONENTS_MP_WAS_REDUCED_BY_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId TARGET_CANT_FOUND
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_USE_ON_YOURSELF
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId EARNED_ADENA
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId EARNED_S2_S1_S
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId EARNED_ITEM
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId DISSAPEARED_ITEM
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId DISSAPEARED_ADENA
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SOUL_CRYSTAL_ABSORBING_SUCCEEDED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SOUL_CRYSTAL_ABSORBING_FAILED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SOUL_CRYSTAL_BROKE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SOUL_CRYSTAL_ABSORBING_FAILED_RESONATION
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SOUL_CRYSTAL_ABSORBING_REFUSED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_DID_S1_DMG
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_GAVE_YOU_S2_DMG
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId EFFECT_S1_DISAPPEARED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_EARNED_S1_EXP_AND_S2_SP
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_INCREASED_YOUR_LEVEL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NOTHING_HAPPENED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ITEM_MISSING_TO_LEARN_SKILL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId LEARNED_SKILL_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NOT_ENOUGH_SP_TO_LEARN_SKILL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId DO_NOT_HAVE_FURTHER_SKILLS_TO_LEARN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NO_MORE_SKILLS_TO_LEARN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId FALL_DAMAGE_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId DROWN_DAMAGE_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_DROPPED_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId TARGET_IS_NOT_FOUND_IN_THE_GAME
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId TARGET_MUST_BE_IN_CLAN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_MUST_SELECT_A_TARGET
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_BE_RESURRECTED_DURING_SIEGE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SOULSHOTS_GRADE_MISMATCH
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NOT_ENOUGH_SOULSHOTS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ENABLED_SOULSHOT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_USE_SOULSHOTS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SPIRITSHOTS_GRADE_MISMATCH
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NOT_ENOUGH_SPIRITSHOTS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_USE_SPIRITSHOTS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ENABLED_SPIRITSHOT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_CP_WILL_BE_RESTORED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId USE_OF_S1_WILL_BE_AUTO
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId AUTO_USE_OF_S1_CANCELLED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_CREATED_WHILE_ENGAGED_IN_TRADING
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SKILL_REMOVED_DUE_LACK_MP
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SKILL_REMOVED_DUE_LACK_HP
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_IS_NOT_ONLINE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId GETTING_READY_TO_SHOOT_AN_ARROW
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId AVOIDED_S1S_ATTACK
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId MISSED_TARGET
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CRITICAL_HIT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CRITICAL_HIT_BY_PET
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CRITICAL_HIT_BY_SUMMONED_MOB
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CRITICAL_HIT_MAGIC
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SHIELD_DEFENCE_SUCCESSFULL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOUR_EXCELLENT_SHIELD_DEFENSE_WAS_A_SUCCESS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOUR_KARMA_HAS_BEEN_CHANGED_TO
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId OVER_HIT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ACQUIRED_BONUS_EXPERIENCE_THROUGH_OVER_HIT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANT_MOVE_SITTING
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SYMBOL_ADDED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANT_DRAW_SYMBOL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SKILL_NOT_AVAILABLE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANT_SEE_TARGET
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SWEEPER_FAILED_TARGET_NOT_SPOILED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ALREDAY_SPOILED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_SWEEPED_UP_S2_S3
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_SWEEPED_UP_S2
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SPOIL_SUCCESS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SPOIL_CANNOT_USE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SWEEP_NOT_ALLOWED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId WAITING_FOR_REPLY
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_INVITED_YOU_TO_PARTY_FINDER_KEEPER
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_INVITED_YOU_TO_PARTY_RANDOM
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_INVITED_YOU_TO_PARTY
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_INVITED_S1_TO_PARTY
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId OTHER_PARTY_IS_DROZEN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_JOINED_S1_PARTY
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_JOINED_PARTY
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_LEFT_PARTY
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_LEFT_PARTY
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ONLY_LEADER_CAN_INVITE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_DID_NOT_REPLY
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_DID_NOT_REPLY
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PLAYER_DECLINED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PARTY_FULL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_IS_ALREADY_IN_PARTY
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId INVITED_USER_NOT_ONLINE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PARTY_DISPERSED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_HAS_BECOME_A_PARTY_LEADER
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ONLY_A_PARTY_LEADER_CAN_TRANSFER_ONES_RIGHTS_TO_ANOTHER_PLAYER
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PLEASE_SELECT_THE_PERSON_TO_WHOM_YOU_WOULD_LIKE_TO_TRANSFER_THE_RIGHTS_OF_A_PARTY_LEADER
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_CANNOT_TRANSFER_RIGHTS_TO_YOURSELF
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_CAN_TRANSFER_RIGHTS_ONLY_TO_ANOTHER_PARTY_MEMBER
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_HAVE_FAILED_TO_TRANSFER_THE_PARTY_LEADER_RIGHTS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PARTY_INFORMATION
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId LOOTING_FINDERS_KEEPERS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId LOOTING_BY_TURN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId LOOTING_BY_TURN_INCLUDE_SPOIL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId LOOTING_RANDOM
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId LOOTING_RANDOM_INCLUDE_SPOIL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PARTY_LEADER_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId JOINED_COMMAND_CHANNEL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId COMMAND_CHANNEL_DISBANDED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId COMMAND_CHANNEL_LEADER_NOW_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId WEIGHT_LIMIT_EXCEEDED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NOT_ENOUGH_ARROWS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SLOTS_FULL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_DISCARD_EXCHANGE_ITEM
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_DISCARD_DISTANCE_TOO_FAR
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_DISCARD_THIS_ITEM
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NO_ITEM_DEPOSITED_IN_WH
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId TARGET_IS_INCORRECT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_HAVE_INVITED_THE_WRONG_TARGET
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_IS_BUSY_TRY_LATER
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId WAITING_FOR_ANOTHER_REPLY
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_DID_NOT_RESPOND_TO_CLAN_INVITATION
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_DID_NOT_RESPOND_TO_S1_CLAN_INVITATION
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NO_RESPONSE_TO_ALLY_INVITATION
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_DID_NOT_RESPOND_TO_ALLY_INVITATION
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ALREADY_TRADING
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId REQUEST_S1_FOR_TRADE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_DENIED_TRADE_REQUEST
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId BEGIN_TRADE_WITH_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_CONFIRMED_TRADE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId TRADE_SUCCESSFUL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_CANCELED_TRADE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_USE_QUEST_ITEMS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_USE_ITEM_WHILE_TRADING
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_PURCHASED_S2
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_PURCHASED_S2_S3
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_PURCHASED_S3_S2_S
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PURCHASED_S2_FROM_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PURCHASED_S2_S3_FROM_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PURCHASED_S3_S2_S_FROM_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_PURCHASE_IS_COMPLETE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_PURCHASE_PRICE_IS_HIGHER_THAN_MONEY
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_NOT_ENOUGH_ADENA
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_TRADE_DISCARD_DROP_ITEM_WHILE_IN_SHOPMODE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_HAVE_EXCEEDED_QUANTITY_THAT_CAN_BE_INPUTTED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NO_CB_IN_MY_CLAN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CB_OFFLINE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_ARE_WORKING_WITH_ANOTHER_CLAN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_IS_NOT_A_CLAN_LEADER
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_DO_NOT_MEET_CRITERIA_IN_ORDER_TO_CREATE_A_CLAN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ONLY_THE_CLAN_LEADER_IS_ENABLED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId FAILED_TO_CREATE_CLAN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_MUST_WAIT_XX_DAYS_BEFORE_CREATING_A_NEW_CLAN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_NAME_INCORRECT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_NAME_TOO_LONG
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_ALREADY_EXISTS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_DOES_NOT_EXIST
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_CLAN_REPUTATION_SCORE_IS_TOO_LOW
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_CREATED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_LVL_3_NEEDED_TO_ENDOWE_TITLE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_CREST_HAS_BEEN_DELETED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_LVL_3_NEEDED_TO_SET_CREST
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_SET_CREST_WHILE_DISSOLUTION_IN_PROGRESS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_S1S_CLAN_ACADEMY_HAS_BEEN_CREATED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_KNIGHTS_OF_S1_HAVE_BEEN_CREATED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_ROYAL_GUARD_OF_S1_HAVE_BEEN_CREATED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_DO_NOT_MEET_CRITERIA_IN_ORDER_TO_CREATE_A_CLAN_ACADEMY
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_DO_NOT_MEET_CRITERIA_IN_ORDER_TO_CREATE_A_MILITARY_UNIT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_HAS_ALREADY_ESTABLISHED_A_CLAN_ACADEMY
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ANOTHER_MILITARY_UNIT_IS_ALREADY_USING_THAT_NAME
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_HAS_BEEN_SELECTED_AS_CAPTAIN_OF_S2
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CAPTAIN_OF_ORDER_OF_KNIGHTS_CANNOT_BE_APPOINTED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CAPTAIN_OF_ROYAL_GUARD_CANNOT_BE_APPOINTED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_INVITE_YOURSELF
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_WORKING_WITH_ANOTHER_CLAN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_HAS_INVITED_YOU_TO_JOIN_THE_CLAN_S2
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_DOESNOT_MEET_REQUIREMENTS_TO_JOIN_ACADEMY
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ACADEMY_REQUIREMENTS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_MUST_WAIT_BEFORE_ACCEPTING_A_NEW_MEMBER
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_MUST_WAIT_BEFORE_JOINING_ANOTHER_CLAN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_MUST_WAIT_BEFORE_JOINING_ANOTHER_CLAN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ENTERED_THE_CLAN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_REFUSED_TO_JOIN_CLAN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_HAS_JOINED_CLAN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_MEMBER_S1_LOGGED_IN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_ARE_NOT_AUTHORIZED_TO_DO_THAT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_CLAN_IS_FULL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SUBCLAN_IS_FULL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_LEVEL_INCREASED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_MEMBER_GRADUATED_FROM_ACADEMY
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ACADEMY_MEMBERSHIP_TERMINATED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_CAN_ACCUMULATE_CLAN_REPUTATION_POINTS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_WAS_DEFEATED_IN_SIEGE_AND_LOST_S1_REPUTATION_POINTS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_VICTORIOUS_IN_SIEGE_AND_GAINED_S1_REPUTATION_POINTS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_ACQUIRED_CONTESTED_CLAN_HALL_AND_S1_REPUTATION_POINTS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_MEMBER_S1_WAS_IN_HIGHEST_RANKED_PARTY_IN_FESTIVAL_OF_DARKNESS_AND_GAINED_S2_REPUTATION
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_MEMBER_S1_BECAME_HERO_AND_GAINED_S2_REPUTATION_POINTS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_QUEST_COMPLETED_AND_S1_POINTS_GAINED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId OPPOSING_CLAN_CAPTURED_CLAN_HALL_AND_YOUR_CLAN_LOSES_S1_POINTS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_LOST_CONTESTED_CLAN_HALL_AND_300_POINTS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_CAPTURED_CONTESTED_CLAN_HALL_AND_S1_POINTS_DEDUCTED_FROM_OPPONENT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_ADDED_S1S_POINTS_TO_REPUTATION_SCORE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_MEMBER_S1_WAS_KILLED_AND_S2_POINTS_DEDUCTED_FROM_REPUTATION
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId FOR_KILLING_OPPOSING_MEMBER_S1_POINTS_WERE_DEDUCTED_FROM_OPPONENTS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOUR_CLAN_FAILED_TO_DEFEND_CASTLE_AND_S1_POINTS_LOST_AND_ADDED_TO_OPPONENT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOUR_CLAN_HAS_BEEN_INITIALIZED_AND_S1_POINTS_LOST
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOUR_CLAN_FAILED_TO_DEFEND_CASTLE_AND_S1_POINTS_LOST
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_DEDUCTED_FROM_CLAN_REP
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_SKILL_S1_ADDED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId REPUTATION_POINTS_0_OR_LOWER_CLAN_SKILLS_DEACTIVATED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_REPUTATION_SCORE_IS_TOO_LOW
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_SKILLS_WILL_BE_ACTIVATED_SINCE_REPUTATION_IS_0_OR_HIGHER
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId FAILED_TO_INCREASE_CLAN_LEVEL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_LEADERS_MAY_NOT_BE_DELETED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_MEMBER_MAY_NOT_BE_DELETED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_MEMBER_S1_EXPELLED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_HAVE_SUCCEEDED_IN_EXPELLING_CLAN_MEMBER
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_HAVE_WITHDRAWN_FROM_CLAN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_MEMBERSHIP_TERMINATED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_HAS_WITHDRAWN_FROM_THE_CLAN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_LEADER_CANNOT_WITHDRAW
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_CANNOT_DISMISS_YOURSELF
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_MEMBER_CANNOT_BE_DISMISSED_DURING_COMBAT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_CANNOT_LEAVE_DURING_COMBAT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_DISSOLVE_WHILE_IN_WAR
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_DISSOLVE_WHILE_IN_SIEGE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_DISSOLVE_WHILE_OWNING_CLAN_HALL_OR_CASTLE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_HAS_BEEN_ABORTED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_DISSOLVE_CAUSE_CLAN_WILL_PARTICIPATE_IN_CASTLE_SIEGE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_RISE_LEVEL_WHILE_DISSOLUTION_IN_PROGRESS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_DISPERSE_THE_CLANS_IN_ALLY
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId DISSOLUTION_IN_PROGRESS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANT_PARTICIPATE_IN_SIEGE_WHILE_DISSOLUTION_IN_PROGRESS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_HAS_DISPERSED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_LEADER_PRIVILEGES_HAVE_BEEN_TRANSFERRED_TO_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_EMBLEM_WAS_SUCCESSFULLY_REGISTERED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_DO_NOT_HAVE_THE_RIGHT_TO_USE_CLAN_WAREHOUSE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ONLY_LEVEL_1_CLAN_OR_HIGHER_CAN_USE_WAREHOUSE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ONLY_CLAN_LEADER_CAN_RETRIEVE_ITEMS_FROM_CLAN_WAREHOUSE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId TITLE_CHANGED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_INFO_HEAD
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_INFO_NAME
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_INFO_LEADER
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_INFO_LEVEL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_INFO_SEPARATOR
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_INFO_FOOT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ACQUIRE_SKILL_FAILED_BAD_CLAN_REP_SCORE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_WAR_DECLARED_IF_CLAN_LVL3_OR_15_MEMBER
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_WAR_CANNOT_DECLARED_CLAN_NOT_EXIST
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_WAR_AGAINST_A_ALLIED_CLAN_NOT_WORK
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ALREADY_AT_WAR_WITH_S1_WAIT_5_DAYS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_WAR_DECLARED_AGAINST_S1_IF_KILLED_LOSE_LOW_EXP
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_S1_DECLARED_WAR
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId WAR_AGAINST_S1_HAS_STOPPED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_S1_HAS_DECIDED_TO_STOP
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLANS_YOU_DECLARED_WAR_ON
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLANS_THAT_HAVE_DECLARED_WAR_ON_YOU
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId WAR_LIST
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_PICKED_UP_S1_ADENA
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_PICKED_UP_S1_S2
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_PICKED_UP_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_PICKED_UP_A_S1_S2
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_PICKED_UP_S2_S3
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_PICKED_UP_S2
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId FAILED_TO_PICKUP_S1_ADENA
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId FAILED_TO_PICKUP_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId FAILED_TO_PICKUP_S2_S1_S
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ATTENTION_S1_PICKED_UP_S2
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ATTENTION_S1_PICKED_UP_S2_S3
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId GM_LIST
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId GM_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_PERSON_IS_IN_MESSAGE_REFUSAL_MODE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId MESSAGE_REFUSAL_MODE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId MESSAGE_ACCEPTANCE_MODE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId LOC_TI_S1_S2_S3
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId LOC_GLUDIN_S1_S2_S3
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId LOC_GLUDIO_S1_S2_S3
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId LOC_NETRAL_ZONE_S1_S2_S3
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId LOC_ELVEN_S1_S2_S3
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId LOC_DARK_ELVEN_S1_S2_S3
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId LOC_DION_S1_S2_S3
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId LOC_FLORAN_S1_S2_S3
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId LOC_GIRAN_S1_S2_S3
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId LOC_GIRAN_HARBOR_S1_S2_S3
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId LOC_ORC_S1_S2_S3
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId LOC_DWARVEN_S1_S2_S3
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId LOC_OREN_S1_S2_S3
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId LOC_HUNTER_S1_S2_S3
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId LOC_ADEN_S1_S2_S3
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId LOC_COLISEUM_S1_S2_S3
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId LOC_HEINE_S1_S2_S3
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId LOC_RUNE_S1_S2_S3
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId LOC_GODDARD_S1_S2_S3
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId LOC_SCHUTTGART_S1_S2_S3
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId LOC_PRIMEVAL_ISLE_S1_S2_S3
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CRYSTALLIZE_LEVEL_TOO_LOW
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_CANNOT_BE_USED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ACQUIRED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId MONSRACE_NO_PAYOUT_INFO
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId MONSRACE_TICKETS_NOT_AVAILABLE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId MONSRACE_TICKETS_AVAILABLE_FOR_S1_RACE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId MONSRACE_TICKETS_NOW_AVAILABLE_FOR_S1_RACE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId MONSRACE_TICKETS_STOP_IN_S1_MINUTES
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId MONSRACE_TICKET_SALES_CLOSED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId MONSRACE_BEGINS_IN_S1_MINUTES
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId MONSRACE_BEGINS_IN_30_SECONDS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId MONSRACE_COUNTDOWN_IN_FIVE_SECONDS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId MONSRACE_BEGINS_IN_S1_SECONDS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId MONSRACE_RACE_START
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId MONSRACE_RACE_END
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId MONSRACE_FIRST_PLACE_S1_SECOND_S2
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NAMING_THERE_IS_A_SPACE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NAMING_INAPPROPRIATE_CHARACTER_NAME
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NAMING_INCLUDES_FORBIDDEN_WORDS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NAMING_ALREADY_IN_USE_BY_ANOTHER_PET
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NAMING_PETNAME_UP_TO_8CHARS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NAMING_NAME_PET
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NAMING_YOU_CANNOT_SET_NAME_OF_THE_PET
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NAMING_NAME_ALREADY_EXISTS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NAMING_CHARNAME_UP_TO_16CHARS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NAMING_PETNAME_CONTAINS_INVALID_CHARS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PET_HIT_FOR_S1_DAMAGE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PET_RECEIVED_S2_DAMAGE_BY_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ITEM_NOT_FOR_PETS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId DEAD_PET_CANNOT_BE_RETURNED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_GIVE_ITEMS_TO_DEAD_PET
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_EQUIP_PET_ITEM
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PET_EARNED_S1_EXP
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_GAME_PET_S2_DMG
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PET_CANNOT_USE_ITEM
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PET_TOOK_S1_BECAUSE_HE_WAS_HUNGRY
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_CANNOT_RESTORE_HUNGRY_PETS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PET_CANNOT_SENT_BACK_DURING_BATTLE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_ALREADY_HAVE_A_PET
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_CANNOT_SUMMON_IN_COMBAT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PETS_ARE_NOT_AVAILABLE_AT_THIS_TIME
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SOULSHOTS_AND_SPIRITSHOTS_ARE_NOT_AVAILABLE_FOR_A_DEAD_PET
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NOT_ENOUGH_SOULSHOTS_FOR_PET
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId MASTER_CANNOT_RES
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId RES_HAS_ALREADY_BEEN_PROPOSED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PET_USE_THE_POWER_OF_SPIRIT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NOT_ENOUGH_SPIRITHOTS_FOR_PET
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PET_CANNOT_RES
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId RAID_WAS_SUCCESSFUL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SUBCLASS_NO_CHANGE_OR_CREATE_WHILE_SKILL_IN_USE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId STRIDER_CANT_BE_RIDDEN_WHILE_DEAD
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId DEAD_STRIDER_CANT_BE_RIDDEN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId STRIDER_IN_BATLLE_CANT_BE_RIDDEN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId STRIDER_CANT_BE_RIDDEN_WHILE_IN_BATTLE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId STRIDER_CAN_BE_RIDDEN_ONLY_WHILE_STANDING
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SUMMON_GAVE_DAMAGE_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SUMMON_RECEIVED_DAMAGE_S2_BY_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SUMMON_A_PET
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CUBIC_SUMMONING_FAILED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SUMMONING_SERVITOR_COSTS_S2_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_CANNOT_SUMMON_PLAYERS_WHO_ARE_IN_OLYMPIAD
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_CURRENTLY_TRADING_OR_OPERATING_PRIVATE_STORE_AND_CANNOT_BE_SUMMONED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_IS_DEAD_AT_THE_MOMENT_AND_CANNOT_BE_SUMMONED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_MAY_NOT_SUMMON_FROM_YOUR_CURRENT_LOCATION
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_WISHES_TO_SUMMON_YOU_FROM_S2_DO_YOU_ACCEPT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_IS_ENGAGED_IN_COMBAT_AND_CANNOT_BE_SUMMONED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOUR_TARGET_IS_IN_AN_AREA_WHICH_BLOCKS_SUMMONING
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_SUCCESSFULLY_ENCHANTED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_S2_SUCCESSFULLY_ENCHANTED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ENCHANTMENT_FAILED_S1_EVAPORATED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ENCHANTMENT_FAILED_S1_S2_EVAPORATED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SELECT_ITEM_TO_ENCHANT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId INAPPROPRIATE_ENCHANT_CONDITION
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId BLESSED_ENCHANT_FAILED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ENCHANT_SCROLL_CANCELLED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId EQUIPMENT_S1_S2_REMOVED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_DISARMED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_S2_EQUIPPED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_EQUIPPED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId QUEST_EVENT_PERIOD
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId VALIDATION_PERIOD
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId INITIAL_PERIOD
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId RESULTS_PERIOD
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId QUEST_EVENT_PERIOD_BEGUN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId QUEST_EVENT_PERIOD_ENDED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId DAWN_OBTAINED_AVARICE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId DAWN_OBTAINED_GNOSIS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId DAWN_OBTAINED_STRIFE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId DUSK_OBTAINED_AVARICE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId DUSK_OBTAINED_GNOSIS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId DUSK_OBTAINED_STRIFE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SEAL_VALIDATION_PERIOD_BEGUN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SEAL_VALIDATION_PERIOD_ENDED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId DAWN_WON
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId DUSK_WON
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PREPARATIONS_PERIOD_BEGUN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId COMPETITION_PERIOD_BEGUN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId RESULTS_PERIOD_BEGUN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId VALIDATION_PERIOD_BEGUN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CONTRIB_SCORE_INCREASED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SEVENSIGNS_PARTECIPATION_DAWN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SEVENSIGNS_PARTECIPATION_DUSK
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId FIGHT_FOR_AVARICE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId FIGHT_FOR_GNOSIS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId FIGHT_FOR_STRIFE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CONTRIB_SCORE_EXCEEDED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId UNTIL_MONDAY_6PM
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId UNTIL_TODAY_6PM
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SEAL_OWNED_10_MORE_VOTED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SEAL_NOT_OWNED_35_MORE_VOTED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SEAL_OWNED_10_LESS_VOTED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SEAL_NOT_OWNED_35_LESS_VOTED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId COMPETITION_TIE_SEAL_NOT_AWARDED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CAN_BE_USED_BY_DAWN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CAN_BE_USED_BY_DUSK
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_THAT_OWNS_CASTLE_IS_AUTOMATICALLY_REGISTERED_DEFENDING
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SIEGE_OF_S1_HAS_BEEN_CANCELED_DUE_TO_LACK_OF_INTEREST
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_SIEGE_WAS_CANCELED_BECAUSE_NO_CLANS_PARTICIPATED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ONLY_VIEW_SIEGE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NO_PORT_THAT_IS_IN_SIGE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S2_HAS_BEEN_DESIGNATED_AS_APPRENTICE_OF_CLAN_MEMBER_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOUR_APPRENTICE_S1_HAS_LOGGED_IN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOUR_APPRENTICE_S1_HAS_LOGGED_OUT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOUR_SPONSOR_S1_HAS_LOGGED_IN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOUR_SPONSOR_S1_HAS_LOGGED_OUT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_DO_NOT_HAVE_THE_RIGHT_TO_DISMISS_AN_APPRENTICE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S2_CLAN_MEMBER_S1_S_APPRENTICE_HAS_BEEN_REMOVED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId WAR_WITH_THE_S1_CLAN_HAS_BEGUN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId WAR_WITH_THE_S1_CLAN_HAS_ENDED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_HAVE_WON_THE_WAR_OVER_THE_S1_CLAN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_HAVE_SURRENDERED_TO_THE_S1_CLAN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId REQUEST_TO_END_WAR_HAS_BEEN_DENIED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_HAVE_PERSONALLY_SURRENDERED_TO_THE_S1_CLAN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId WAR_PROCLAMATION_HAS_BEEN_REFUSED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_ARE_NOT_A_CLAN_MEMBER
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId FEATURE_ONLY_FOR_ALLIANCE_LEADER
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NO_CURRENT_ALLIANCES
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_HAVE_EXCEEDED_THE_LIMIT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANT_INVITE_CLAN_WITHIN_1_DAY
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANT_ENTER_ALLIANCE_WITHIN_1_DAY
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId MAY_NOT_ALLY_CLAN_BATTLE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ONLY_CLAN_LEADER_WITHDRAW_ALLY
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ALLIANCE_LEADER_CANT_WITHDRAW
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId DIFFERANT_ALLIANCE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_DOESNT_EXISTS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ALREADY_JOINED_ALLIANCE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ONLY_CLAN_LEADER_CREATE_ALLIANCE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANT_CREATE_ALLIANCE_10_DAYS_DISOLUTION
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId INCORRECT_ALLIANCE_NAME
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId INCORRECT_ALLIANCE_NAME_LENGTH
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ALLIANCE_ALREADY_EXISTS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANT_ACCEPT_ALLY_ENEMY_FOR_SIEGE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_INVITED_FOR_ALLIANCE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SELECT_USER_TO_INVITE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId DO_YOU_WISH_TO_WITHDRW
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ENTER_NAME_CLAN_TO_EXPEL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId DO_YOU_WISH_TO_DISOLVE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_ACCEPTED_ALLIANCE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId FAILED_TO_INVITE_CLAN_IN_ALLIANCE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_HAVE_WITHDRAWN_FROM_ALLIANCE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_HAVE_FAILED_TO_WITHDRAWN_FROM_ALLIANCE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_HAVE_EXPELED_A_CLAN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId FAILED_TO_EXPELED_A_CLAN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ALLIANCE_DISOLVED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId FAILED_TO_DISOLVE_ALLIANCE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S2_ALLIANCE_LEADER_OF_S1_REQUESTED_ALLIANCE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId TO_CREATE_AN_ALLY_YOU_CLAN_MUST_BE_LEVEL_5_OR_HIGHER
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_MAY_NOT_CREATE_ALLY_WHILE_DISSOLVING
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_CLAN_ALREADY_MEMBER_OF_S2_ALLIANCE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_DISSOLVE_ALLY_WHILE_IN_SIEGE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId OPPOSING_CLAN_IS_PARTICIPATING_IN_SIEGE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_CANT_ENTER_ALLIANCE_WITHIN_1_DAY
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_S2_ALLIANCE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_NO_ALLI_EXISTS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ALLIANCE_INFO_HEAD
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ALLIANCE_NAME_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CONNECTION_S1_TOTAL_S2
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ALLIANCE_LEADER_S2_OF_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ALLIANCE_CLAN_TOTAL_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SI_INVITED_YOU_AS_FRIEND
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId FAILED_TO_INVITE_A_FRIEND
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_ADDED_TO_FRIENDS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_JOINED_AS_FRIEND
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId FRIEND_S1_HAS_LOGGED_IN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NIGHT_EFFECT_APPLIES
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId DAY_EFFECT_DISAPPEARS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId FAILED_TO_REGISTER_TO_IGNORE_LIST
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_WAS_ADDED_TO_YOUR_IGNORE_LIST
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_WAS_REMOVED_FROM_YOUR_IGNORE_LIST
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_HAS_ADDED_YOU_TO_IGNORE_LIST
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId FRIEND_LIST_HEAD
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_ONLINE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_OFFLINE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId FRIEND_LIST_FOOT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_REMOVED_FROM_YOUR_FRIENDS_LIST
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PLEACE_CHECK_YOUR_FRIEND_LIST_AGAIN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_CANNOT_ADD_YOURSELF_TO_OWN_FRIEND_LIST
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId FRIEND_LIST_NOT_READY_YET_REGISTER_LATER
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_ALRADY_ON_LIST
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_REQUESTED_TO_BECOME_FRIENDS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_USER_YOU_REQUESTED_IS_NOT_IN_GAME
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_NOT_ON_YOUR_FRIENDS_LIST
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_HAS_BEEN_DELETED_FROM_YOUR_FRIENDS_LIST
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_CANNOT_ADD_YOURSELF_TO_YOUR_OWN_FRIENDS_LIST
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_ALREADY_IN_FRIENDS_LIST
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NO_NEW_INVITATIONS_ACCEPTED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_USER_NOT_IN_FRIENDS_LIST
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_HAVE_SUCCEEDED_INVITING_FRIEND
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_PLAYER_IS_REJECTING_FRIEND_INVITATIONS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId DO_YOU_WISH_TO_DELETE_FRIENDLIST
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_S2
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANT_LOGOUT_WHILE_FIGHTING
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANT_RESTART_WHILE_FIGHTING
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ENTER_FILE_NAME_CREST
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_REQUIRED_FOR_SUMMONING
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_ALREADY_SUMMONED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId USE_S1_
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId FILE_NOT_FOUND
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_ROLLED_S2
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_MAY_NOT_THROW_THE_DICE_AT_THIS_TIME_TRY_AGAIN_LATER
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NO_GM_PROVIDING_SERVICE_NOW
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId TARGET_TOO_FAR
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_DISAPPEARED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId INCORRECT_TARGET
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId INCOMPATIBLE_ITEM_GRADE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SP_DECREASED_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId EXP_DECREASED_BY_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_HAS_WORN_OFF
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId LETHAL_STRIKE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId LETHAL_STRIKE_SUCCESSFUL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId AMOUNT_FOR_WINNER_S1_IS_S2_ADENA_WE_HAVE_S3_PRIZE_WINNER
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId AMOUNT_FOR_LOTTERY_S1_IS_S2_ADENA_NO_WINNER
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId INVENTORY_LESS_THAN_80_PERCENT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NO_LOTTERY_TICKETS_CURRENT_SOLD
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NO_LOTTERY_TICKETS_AVAILABLE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ENTERED_COMBAT_ZONE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId LEFT_COMBAT_ZONE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PLAYING_FOR_LONG_TIME
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CHARACTER_DOES_NOT_EXIST
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId WELCOME_TO_LINEAGE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_DIED_DROPPED_S3_S2
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CREATE_LVL_TOO_LOW_TO_REGISTER
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId UP_TO_S1_RECIPES_CAN_REGISTER
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLAN_HAS_NO_CLAN_HALL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId INVALID_MACRO
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_MAY_CREATE_UP_TO_24_MACROS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ENTER_THE_MACRO_NAME
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId MACRO_DESCRIPTION_MAX_32_CHARS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId LOTTERY_TICKET_SALES_TEMP_SUSPENDED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_MAY_NOT_IMPOSE_A_BLOCK_AN_A_GM
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId GAME_CLIENT_UNABLE_TO_CONNECT_TO_PETITION_SERVER
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ONLY_ONE_ACTIVE_PETITION_AT_TIME
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PETITION_SYSTEM_CURRENT_UNAVAILABLE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId WE_HAVE_RECEIVED_S1_PETITIONS_TODAY
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PETITION_MAX_CHARS_255
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NOT_UNDER_PETITION_CONSULTATION
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PETITION_ACCEPTED_RECENT_NO_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SUBMITTED_YOU_S1_TH_PETITION_S2_LEFT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_PETITION_ON_WAITING_LIST
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PETITION_UNDER_PROCESS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PETITION_CANCELED_SUBMIT_S1_MORE_TODAY
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId FAILED_CANCEL_PETITION_TRY_LATER
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PETITION_NOT_SUBMITTED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PETITION_ENDED_WITH_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId RECENT_NO_S1_CANCELED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THIS_END_THE_PETITION_PLEASE_PROVIDE_FEEDBACK
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PETITION_APP_ACCEPTED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PETITION_WITH_S1_UNDER_WAY
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_ARE_NOT_IN_PETITION_CHAT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_CANNOT_RECOMMEND_YOURSELF
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_HAVE_BEEN_RECOMMENDED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_HAVE_RECOMMENDED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THAT_CHARACTER_IS_RECOMMENDED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NO_MORE_RECOMMENDATIONS_TO_HAVE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ONLY_LEVEL_SUP_10_CAN_RECOMMEND
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PET_USES_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_NO_LONGER_RECIVE_A_RECOMMENDATION
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NPC_SERVER_NOT_OPERATING
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId INVENTORY_VOLUME
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId RECIPE_ALREADY_REGISTERED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NO_FUTHER_RECIPES_CAN_BE_ADDED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NOT_AUTHORIZED_TO_REGISTER_RECIPE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_ADDED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANT_ALTER_RECIPEBOOK_WHILE_CRAFTING
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANT_REGISTER_NO_ABILITY_TO_CRAFT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId WOULD_YOU_LIKE_TO_OPEN_THE_GATE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId WOULD_YOU_LIKE_TO_CLOSE_THE_GATE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANT_CRAFT_DURING_COMBAT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ENTER_SHADOW_MOTHER_TREE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId EXIT_SHADOW_MOTHER_TREE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_USE_ITEMS_SKILLS_WITH_FORMALWEAR
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_WILL_ENTER_THE_OLYMPIAD_STADIUM_IN_S1_SECOND_S
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_GAME_HAS_BEEN_CANCELLED_BECAUSE_THE_OTHER_PARTY_ENDS_THE_GAME
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_GAME_HAS_BEEN_CANCELLED_BECAUSE_THE_OTHER_PARTY_DOES_NOT_MEET_THE_REQUIREMENTS_FOR_JOINING_THE_GAME
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_GAME_WILL_START_IN_S1_SECOND_S
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId STARTS_THE_GAME
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_HAS_WON_THE_GAME
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_GAME_ENDED_IN_A_TIE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_WILL_GO_BACK_TO_THE_VILLAGE_IN_S1_SECOND_S
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_CANT_JOIN_THE_OLYMPIAD_WITH_A_SUB_JOB_CHARACTER
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ONLY_NOBLESS_CAN_PARTICIPATE_IN_THE_OLYMPIAD
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_HAVE_ALREADY_BEEN_REGISTERED_IN_A_WAITING_LIST_OF_AN_EVENT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_HAVE_BEEN_REGISTERED_IN_A_WAITING_LIST_OF_CLASSIFIED_GAMES
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_HAVE_BEEN_REGISTERED_IN_A_WAITING_LIST_OF_NO_CLASS_GAMES
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_HAVE_BEEN_DELETED_FROM_THE_WAITING_LIST_OF_A_GAME
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_HAVE_NOT_BEEN_REGISTERED_IN_A_WAITING_LIST_OF_A_GAME
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THIS_ITEM_CANT_BE_EQUIPPED_FOR_THE_OLYMPIAD_EVENT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THIS_ITEM_IS_NOT_AVAILABLE_FOR_THE_OLYMPIAD_EVENT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THIS_SKILL_IS_NOT_AVAILABLE_FOR_THE_OLYMPIAD_EVENT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_EQUIP_ITEM_DUE_TO_BAD_CONDITION
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId OLYMPIAD_PERIOD_S1_HAS_STARTED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId OLYMPIAD_PERIOD_S1_HAS_ENDED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_OLYMPIAD_GAME_HAS_STARTED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_OLYMPIAD_GAME_HAS_ENDED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_OLYMPIAD_GAME_IS_NOT_CURRENTLY_IN_PROGRESS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_HAS_GAINED_S2_OLYMPIAD_POINTS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_HAS_LOST_S2_OLYMPIAD_POINTS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_PRESENT_RECORD_DURING_THE_CURRENT_OLYMPIAD_SESSION_IS_S1_WINS_S2_DEFEATS_YOU_HAVE_EARNED_S3_OLYMPIAD_POINTS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_ARE_ALREADY_ON_THE_WAITING_LIST_TO_PARTICIPATE_IN_THE_GAME_FOR_YOUR_CLASS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_ARE_ALREADY_ON_THE_WAITING_LIST_FOR_ALL_CLASSES_WAITING_TO_PARTICIPATE_IN_THE_GAME
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SINCE_80_PERCENT_OR_MORE_OF_YOUR_INVENTORY_SLOTS_ARE_FULL_YOU_CANNOT_PARTICIPATE_IN_THE_OLYMPIAD
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SINCE_YOU_HAVE_CHANGED_YOUR_CLASS_INTO_A_SUB_JOB_YOU_CANNOT_PARTICIPATE_IN_THE_OLYMPIAD
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId WHILE_YOU_ARE_ON_THE_WAITING_LIST_YOU_ARE_NOT_ALLOWED_TO_WATCH_THE_GAME
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THERE_IS_NO_OPPONENT_TO_RECEIVE_YOUR_CHALLENGE_FOR_A_DUEL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_HAS_BEEN_CHALLENGED_TO_A_DUEL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1S_PARTY_HAS_BEEN_CHALLENGED_TO_A_DUEL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_HAS_ACCEPTED_YOUR_CHALLENGE_TO_A_DUEL_THE_DUEL_WILL_BEGIN_IN_A_FEW_MOMENTS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_HAVE_ACCEPTED_S1S_CHALLENGE_TO_A_DUEL_THE_DUEL_WILL_BEGIN_IN_A_FEW_MOMENTS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_HAS_DECLINED_YOUR_CHALLENGE_TO_A_DUEL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_HAVE_ACCEPTED_S1S_CHALLENGE_TO_A_PARTY_DUEL_THE_DUEL_WILL_BEGIN_IN_A_FEW_MOMENTS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_HAS_ACCEPTED_YOUR_CHALLENGE_TO_DUEL_AGAINST_THEIR_PARTY_THE_DUEL_WILL_BEGIN_IN_A_FEW_MOMENTS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_OPPOSING_PARTY_HAS_DECLINED_YOUR_CHALLENGE_TO_A_DUEL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SINCE_THE_PERSON_YOU_CHALLENGED_IS_NOT_CURRENTLY_IN_A_PARTY_THEY_CANNOT_DUEL_AGAINST_YOUR_PARTY
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_HAS_CHALLENGED_YOU_TO_A_DUEL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1S_PARTY_HAS_CHALLENGED_YOUR_PARTY_TO_A_DUEL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_ARE_UNABLE_TO_REQUEST_A_DUEL_AT_THIS_TIME
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_OPPOSING_PARTY_IS_CURRENTLY_UNABLE_TO_ACCEPT_A_CHALLENGE_TO_A_DUEL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId IN_A_MOMENT_YOU_WILL_BE_TRANSPORTED_TO_THE_SITE_WHERE_THE_DUEL_WILL_TAKE_PLACE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_DUEL_WILL_BEGIN_IN_S1_SECONDS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId LET_THE_DUEL_BEGIN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_HAS_WON_THE_DUEL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1S_PARTY_HAS_WON_THE_DUEL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_DUEL_HAS_ENDED_IN_A_TIE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SINCE_S1_WITHDREW_FROM_THE_DUEL_S2_HAS_WON
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SINCE_S1S_PARTY_WITHDREW_FROM_THE_DUEL_S1S_PARTY_HAS_WON
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_CANNOT_DUEL_BECAUSE_S1_IS_CURRENTLY_ENGAGED_IN_A_PRIVATE_STORE_OR_MANUFACTURE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_CANNOT_DUEL_BECAUSE_S1_IS_CURRENTLY_FISHING
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_CANNOT_DUEL_BECAUSE_S1S_HP_OR_MP_IS_BELOW_50_PERCENT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_CANNOT_MAKE_A_CHALLANGE_TO_A_DUEL_BECAUSE_S1_IS_CURRENTLY_IN_A_DUEL_PROHIBITED_AREA
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_CANNOT_DUEL_BECAUSE_S1_IS_CURRENTLY_ENGAGED_IN_BATTLE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_CANNOT_DUEL_BECAUSE_S1_IS_ALREADY_ENGAGED_IN_A_DUEL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_CANNOT_DUEL_BECAUSE_S1_IS_IN_A_CHAOTIC_STATE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_CANNOT_DUEL_BECAUSE_S1_IS_PARTICIPATING_IN_THE_OLYMPIAD
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_CANNOT_DUEL_BECAUSE_S1_IS_PARTICIPATING_IN_A_CLAN_HALL_WAR
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_CANNOT_DUEL_BECAUSE_S1_IS_PARTICIPATING_IN_A_SIEGE_WAR
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_CANNOT_DUEL_BECAUSE_S1_IS_CURRENTLY_RIDING_A_BOAT_WYVERN_OR_STRIDER
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_CANNOT_RECEIVE_A_DUEL_CHALLENGE_BECAUSE_S1_IS_TOO_FAR_AWAY
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_INVITED_YOU_TO_PARTY_ROOM_CONFIRM
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PARTY_MATCHING_REQUEST_NO_RESPONSE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_DISMISS_PARTY_MEMBER
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId COURT_MAGICIAN_CREATED_PORTAL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PARTY_ROOM_CREATED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PARTY_ROOM_REVISED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PARTY_ROOM_FORBIDDEN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PARTY_ROOM_EXITED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_LEFT_PARTY_ROOM
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId OUSTED_FROM_PARTY_ROOM
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_KICKED_FROM_PARTY_ROOM
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PARTY_ROOM_DISBANDED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANT_VIEW_PARTY_ROOMS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PARTY_ROOM_LEADER_CHANGED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANT_ENTER_PARTY_ROOM
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_ENTERED_PARTY_ROOM
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_INVITED_YOU_TO_PARTY_ROOM
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SELECT_THE_ITEM_TO_BE_AUGMENTED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SELECT_THE_CATALYST_FOR_AUGMENTATION
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId REQUIRES_S1_S2
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THIS_IS_NOT_A_SUITABLE_ITEM
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId GEMSTONE_QUANTITY_IS_INCORRECT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_ITEM_WAS_SUCCESSFULLY_AUGMENTED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SELECT_THE_ITEM_FROM_WHICH_YOU_WISH_TO_REMOVE_AUGMENTATION
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId AUGMENTATION_REMOVAL_CAN_ONLY_BE_DONE_ON_AN_AUGMENTED_ITEM
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId AUGMENTATION_HAS_BEEN_SUCCESSFULLY_REMOVED_FROM_YOUR_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ONCE_AN_ITEM_IS_AUGMENTED_IT_CANNOT_BE_AUGMENTED_AGAIN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_CANNOT_AUGMENT_ITEMS_WHILE_A_PRIVATE_STORE_OR_PRIVATE_WORKSHOP_IS_IN_OPERATION
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_CANNOT_AUGMENT_ITEMS_WHILE_DEAD
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_CANNOT_AUGMENT_ITEMS_WHILE_PARALYZED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_CANNOT_AUGMENT_ITEMS_WHILE_FISHING
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_CANNOT_AUGMENT_ITEMS_WHILE_SITTING_DOWN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PRESS_THE_AUGMENT_BUTTON_TO_BEGIN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId AUGMENTATION_FAILED_DUE_TO_INAPPROPRIATE_CONDITIONS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId AUGMENTED_ITEM_CANNOT_BE_DISCARDED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1S_REMAINING_MANA_IS_NOW_10
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1S_REMAINING_MANA_IS_NOW_5
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1S_REMAINING_MANA_IS_NOW_1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1S_REMAINING_MANA_IS_NOW_0
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId UNABLE_TO_UNLOCK_DOOR
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId FAILED_TO_UNLOCK_DOOR
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THERE_IS_S1_HOUR_AND_S2_MINUTE_LEFT_OF_THE_FIXED_USAGE_TIME
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S2_MINUTE_OF_USAGE_TIME_ARE_LEFT_FOR_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S2_WAS_DROPPED_IN_THE_S1_REGION
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_OWNER_OF_S2_HAS_APPEARED_IN_THE_S1_REGION
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S2_OWNER_HAS_LOGGED_INTO_THE_S1_REGION
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_HAS_DISAPPEARED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId RESSURECTION_REQUEST
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId FORCE_INCREASED_TO_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId FORCE_MAXLEVEL_REACHED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId FORCE_MAXIMUM
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_DO_WHILE_FISHING_1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ONLY_FISHING_SKILLS_NOW
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId GOT_A_BITE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId FISH_SPIT_THE_HOOK
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId BAIT_STOLEN_BY_FISH
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId BAIT_LOST_FISH_GOT_AWAY
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId FISHING_POLE_NOT_EQUIPPED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId BAIT_ON_HOOK_BEFORE_FISHING
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_FISH_UNDER_WATER
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_FISH_ON_BOAT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_FISH_HERE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId FISHING_ATTEMPT_CANCELLED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NOT_ENOUGH_BAIT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId REEL_LINE_AND_STOP_FISHING
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CAST_LINE_AND_START_FISHING
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CAN_USE_PUMPING_ONLY_WHILE_FISHING
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CAN_USE_REELING_ONLY_WHILE_FISHING
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId FISH_RESISTED_ATTEMPT_TO_BRING_IT_IN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PUMPING_SUCCESFUL_S1_DAMAGE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId FISH_RESISTED_PUMPING_S1_HP_REGAINED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId REELING_SUCCESFUL_S1_DAMAGE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId FISH_RESISTED_REELING_S1_HP_REGAINED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_CAUGHT_SOMETHING
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_DO_WHILE_FISHING_2
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_DO_WHILE_FISHING_3
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_ATTACK_WITH_FISHING_POLE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId WRONG_FISHINGSHOT_GRADE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_FISH_WHILE_USING_RECIPE_BOOK
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_CAUGHT_SOMETHING_SMELLY_THROW_IT_BACK
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId FISH_NO_MORE_BITING_TRY_OTHER_LOCATION
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId FISH_RESISTING_LOOK_BOBBLER
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_WORN_FISH_OUT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NOTHING_INSIDE_THAT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId REELING_PUMPING_3_LEVELS_HIGHER_THAN_FISHING_PENALTY
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId REELING_SUCCESSFUL_PENALTY_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId PUMPING_SUCCESSFUL_PENALTY_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId AUTO_USE_CANCELLED_LACK_OF_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_AUTO_USE_LACK_OF_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THERE_IS_NO_SKILL_THAT_ENABLES_ENCHANT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_DONT_HAVE_ALL_OF_THE_ITEMS_NEEDED_TO_ENCHANT_THAT_SKILL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_HAVE_SUCCEEDED_IN_ENCHANTING_THE_SKILL_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_HAVE_FAILED_TO_ENCHANT_THE_SKILL_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_DONT_HAVE_ENOUGH_SP_TO_ENCHANT_THAT_SKILL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_DONT_HAVE_ENOUGH_EXP_TO_ENCHANT_THAT_SKILL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId TIME_S1_S2_IN_THE_DAY
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId TIME_S1_S2_IN_THE_NIGHT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THIRD_CLASS_TRANSFER
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CLASS_TRANSFER
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SUBCLASS_TRANSFER_COMPLETED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ADD_NEW_SUBCLASS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_SEED_HAS_BEEN_SOWN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THIS_SEED_MAY_NOT_BE_SOWN_HERE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_MANOR_SYSTEM_IS_CURRENTLY_UNDER_MAINTENANCE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_TRANSACTION_IS_COMPLETE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THERE_IS_A_DISCREPANCY_ON_THE_INVOICE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_SEED_QUANTITY_IS_INCORRECT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_SEED_INFORMATION_IS_INCORRECT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_MANOR_INFORMATION_HAS_BEEN_UPDATED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_NUMBER_OF_CROPS_IS_INCORRECT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_CROPS_ARE_PRICED_INCORRECTLY
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_TYPE_IS_INCORRECT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NO_CROPS_CAN_BE_PURCHASED_AT_THIS_TIME
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_SEED_WAS_SUCCESSFULLY_SOWN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_SEED_WAS_NOT_SOWN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_ARE_NOT_AUTHORIZED_TO_HARVEST
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_HARVEST_HAS_FAILED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_HARVEST_FAILED_BECAUSE_THE_SEED_WAS_NOT_SOWN
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_SEED_PRICING_GREATLY_DIFFERS_FROM_STANDARD_SEED_PRICES
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_AMOUNT_IS_NOT_SUFFICIENT_AND_SO_THE_MANOR_IS_NOT_IN_OPERATION
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_NEXT_SEED_PURCHASE_PRICE_IS_S1_ADENA
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_SALES_PRICE_FOR_SEEDS_IS_S1_ADENA
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_REMAINDER_AFTER_SELLING_THE_SEEDS_IS_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_HARVESTED_S3_S2S
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_HARVESTED_S2S
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId TRADED_S2_OF_CROP_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId FAILED_IN_TRADING_S2_OF_CROP_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_TARGET_IS_UNAVAILABLE_FOR_SEEDING
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId SEED_PRICE_SHOULD_BE_MORE_THAN_S1_AND_LESS_THAN_S2
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_QUANTITY_OF_SEED_SHOULD_BE_MORE_THAN_S1_AND_LESS_THAN_S2
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CROP_PRICE_SHOULD_BE_MORE_THAN_S1_AND_LESS_THAN_S2
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_QUANTITY_OF_CROP_SHOULD_BE_MORE_THAN_S1_AND_LESS_THAN_S2
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId HERE_YOU_CAN_BUY_ONLY_SEEDS_OF_S1_MANOR
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId A_MANOR_CANNOT_BE_SET_UP_BETWEEN_6_AM_AND_8_PM
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId NO_SERVITOR_CANNOT_AUTOMATE_USE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOUR_SEED_OR_REMAINING_PURCHASE_AMOUNT_IS_INADEQUATE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId DEATH_PENALTY_LEVEL_S1_ADDED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId DEATH_PENALTY_LIFTED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_ADENA_HAS_BEEN_WITHDRAWN_TO_PAY_FOR_PURCHASING_FEES
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId HACKING_TOOL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ATTACK_WAS_BLOCKED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId OBSERVERS_CANNOT_PARTICIPATE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId DOUBLE_POINTS_YOU_GOT_$51_GLASSES_PC
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_RECEVIED_$51_GLASSES_PC
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_PORTAL_HAS_BEEN_CREATED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId ONLY_NOBLESSE_LEADER_CAN_VIEW_SIEGE_STATUS_WINDOW
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId FRIEND_LIST_FOOTER
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId LEFT_COMMAND_CHANNEL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_PARTY_LEFT_COMMAND_CHANNEL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId COMMAND_CHANNEL_ONLY_BY_LEVEL_5_CLAN_LEADER_PARTY_LEADER
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId COMMAND_CHANNEL_CONFIRM
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId COMMAND_CHANNEL_FORMED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_DECLINED_CHANNEL_INVITATION
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId S1_ALREADY_MEMBER_OF_COMMAND_CHANNEL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_INVITE_TO_COMMAND_CHANNEL
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId USING_S1_PCPOINT
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId YOU_WILL_BE_MOVED_TO_TOWN_IN_S1_SECONDS
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_JOIN_OLYMPIAD_POSSESSING_S1
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId GAME_REQUEST_CANNOT_BE_MADE
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId CANNOT_PARTICIPATE_OLYMPIAD_WHILE_DEAD
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId OLYMPIAD_REGISTRATION_PERIOD_ENDED
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId THE_CURRENT_RECORD_FOR_THIS_OLYMPIAD_SESSION_IS_S1_MATCHES_S2_WINS_S3_DEFEATS_YOU_HAVE_EARNED_S4_OLYMPIAD_POINTS
com.l2jfrozen.gameserver.network.SystemMessageId: int _id
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId[] $VALUES
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId[] values()
com.l2jfrozen.gameserver.network.SystemMessageId: com.l2jfrozen.gameserver.network.SystemMessageId valueOf(java.lang.String)
com.l2jfrozen.gameserver.network.SystemMessageId: SystemMessageId(java.lang.String,int,int)
com.l2jfrozen.gameserver.network.SystemMessageId: int getId()
com.l2jfrozen.gameserver.network.SystemMessageId: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.Action
com.l2jfrozen.gameserver.network.clientpackets.Action: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.Action: int _objectId
com.l2jfrozen.gameserver.network.clientpackets.Action: int _originX
com.l2jfrozen.gameserver.network.clientpackets.Action: int _originY
com.l2jfrozen.gameserver.network.clientpackets.Action: int _originZ
com.l2jfrozen.gameserver.network.clientpackets.Action: int _actionId
com.l2jfrozen.gameserver.network.clientpackets.Action: Action()
com.l2jfrozen.gameserver.network.clientpackets.Action: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.Action: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.Action: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.Action: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.AddTradeItem
com.l2jfrozen.gameserver.network.clientpackets.AddTradeItem: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.AddTradeItem: int _tradeId
com.l2jfrozen.gameserver.network.clientpackets.AddTradeItem: int _objectId
com.l2jfrozen.gameserver.network.clientpackets.AddTradeItem: int _count
com.l2jfrozen.gameserver.network.clientpackets.AddTradeItem: AddTradeItem()
com.l2jfrozen.gameserver.network.clientpackets.AddTradeItem: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.AddTradeItem: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.AddTradeItem: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.AddTradeItem: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.AllyDismiss
com.l2jfrozen.gameserver.network.clientpackets.AllyDismiss: java.lang.String _clanName
com.l2jfrozen.gameserver.network.clientpackets.AllyDismiss: AllyDismiss()
com.l2jfrozen.gameserver.network.clientpackets.AllyDismiss: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.AllyDismiss: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.AllyDismiss: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.AllyLeave
com.l2jfrozen.gameserver.network.clientpackets.AllyLeave: AllyLeave()
com.l2jfrozen.gameserver.network.clientpackets.AllyLeave: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.AllyLeave: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.AllyLeave: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.AnswerJoinPartyRoom
com.l2jfrozen.gameserver.network.clientpackets.AnswerJoinPartyRoom: int _answer
com.l2jfrozen.gameserver.network.clientpackets.AnswerJoinPartyRoom: AnswerJoinPartyRoom()
com.l2jfrozen.gameserver.network.clientpackets.AnswerJoinPartyRoom: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.AnswerJoinPartyRoom: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.AnswerJoinPartyRoom: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.AnswerTradeRequest
com.l2jfrozen.gameserver.network.clientpackets.AnswerTradeRequest: int _response
com.l2jfrozen.gameserver.network.clientpackets.AnswerTradeRequest: AnswerTradeRequest()
com.l2jfrozen.gameserver.network.clientpackets.AnswerTradeRequest: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.AnswerTradeRequest: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.AnswerTradeRequest: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.Appearing
com.l2jfrozen.gameserver.network.clientpackets.Appearing: Appearing()
com.l2jfrozen.gameserver.network.clientpackets.Appearing: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.Appearing: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.Appearing: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.AttackRequest
com.l2jfrozen.gameserver.network.clientpackets.AttackRequest: int _objectId
com.l2jfrozen.gameserver.network.clientpackets.AttackRequest: int _originX
com.l2jfrozen.gameserver.network.clientpackets.AttackRequest: int _originY
com.l2jfrozen.gameserver.network.clientpackets.AttackRequest: int _originZ
com.l2jfrozen.gameserver.network.clientpackets.AttackRequest: int _attackId
com.l2jfrozen.gameserver.network.clientpackets.AttackRequest: AttackRequest()
com.l2jfrozen.gameserver.network.clientpackets.AttackRequest: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.AttackRequest: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.AttackRequest: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.AuthLogin
com.l2jfrozen.gameserver.network.clientpackets.AuthLogin: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.AuthLogin: java.lang.String _loginName
com.l2jfrozen.gameserver.network.clientpackets.AuthLogin: int _playKey1
com.l2jfrozen.gameserver.network.clientpackets.AuthLogin: int _playKey2
com.l2jfrozen.gameserver.network.clientpackets.AuthLogin: int _loginKey1
com.l2jfrozen.gameserver.network.clientpackets.AuthLogin: int _loginKey2
com.l2jfrozen.gameserver.network.clientpackets.AuthLogin: AuthLogin()
com.l2jfrozen.gameserver.network.clientpackets.AuthLogin: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.AuthLogin: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.AuthLogin: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.AuthLogin: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.CannotMoveAnymore
com.l2jfrozen.gameserver.network.clientpackets.CannotMoveAnymore: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.CannotMoveAnymore: int _x
com.l2jfrozen.gameserver.network.clientpackets.CannotMoveAnymore: int _y
com.l2jfrozen.gameserver.network.clientpackets.CannotMoveAnymore: int _z
com.l2jfrozen.gameserver.network.clientpackets.CannotMoveAnymore: int _heading
com.l2jfrozen.gameserver.network.clientpackets.CannotMoveAnymore: CannotMoveAnymore()
com.l2jfrozen.gameserver.network.clientpackets.CannotMoveAnymore: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.CannotMoveAnymore: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.CannotMoveAnymore: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.CannotMoveAnymore: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.CannotMoveAnymoreInVehicle
com.l2jfrozen.gameserver.network.clientpackets.CannotMoveAnymoreInVehicle: int _x
com.l2jfrozen.gameserver.network.clientpackets.CannotMoveAnymoreInVehicle: int _y
com.l2jfrozen.gameserver.network.clientpackets.CannotMoveAnymoreInVehicle: int _z
com.l2jfrozen.gameserver.network.clientpackets.CannotMoveAnymoreInVehicle: int _heading
com.l2jfrozen.gameserver.network.clientpackets.CannotMoveAnymoreInVehicle: int _boatId
com.l2jfrozen.gameserver.network.clientpackets.CannotMoveAnymoreInVehicle: CannotMoveAnymoreInVehicle()
com.l2jfrozen.gameserver.network.clientpackets.CannotMoveAnymoreInVehicle: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.CannotMoveAnymoreInVehicle: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.CannotMoveAnymoreInVehicle: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.ChangeMoveType2
com.l2jfrozen.gameserver.network.clientpackets.ChangeMoveType2: boolean _typeRun
com.l2jfrozen.gameserver.network.clientpackets.ChangeMoveType2: ChangeMoveType2()
com.l2jfrozen.gameserver.network.clientpackets.ChangeMoveType2: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.ChangeMoveType2: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.ChangeMoveType2: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.ChangeWaitType2
com.l2jfrozen.gameserver.network.clientpackets.ChangeWaitType2: boolean _typeStand
com.l2jfrozen.gameserver.network.clientpackets.ChangeWaitType2: ChangeWaitType2()
com.l2jfrozen.gameserver.network.clientpackets.ChangeWaitType2: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.ChangeWaitType2: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.ChangeWaitType2: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.CharacterCreate
com.l2jfrozen.gameserver.network.clientpackets.CharacterCreate: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.CharacterCreate: java.lang.Object CREATION_LOCK
com.l2jfrozen.gameserver.network.clientpackets.CharacterCreate: java.lang.String _name
com.l2jfrozen.gameserver.network.clientpackets.CharacterCreate: byte _sex
com.l2jfrozen.gameserver.network.clientpackets.CharacterCreate: byte _hairStyle
com.l2jfrozen.gameserver.network.clientpackets.CharacterCreate: byte _hairColor
com.l2jfrozen.gameserver.network.clientpackets.CharacterCreate: byte _face
com.l2jfrozen.gameserver.network.clientpackets.CharacterCreate: int _race
com.l2jfrozen.gameserver.network.clientpackets.CharacterCreate: int _classId
com.l2jfrozen.gameserver.network.clientpackets.CharacterCreate: int _int
com.l2jfrozen.gameserver.network.clientpackets.CharacterCreate: int _str
com.l2jfrozen.gameserver.network.clientpackets.CharacterCreate: int _con
com.l2jfrozen.gameserver.network.clientpackets.CharacterCreate: int _men
com.l2jfrozen.gameserver.network.clientpackets.CharacterCreate: int _dex
com.l2jfrozen.gameserver.network.clientpackets.CharacterCreate: int _wit
com.l2jfrozen.gameserver.network.clientpackets.CharacterCreate: CharacterCreate()
com.l2jfrozen.gameserver.network.clientpackets.CharacterCreate: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.CharacterCreate: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.CharacterCreate: boolean isValidName(java.lang.String)
com.l2jfrozen.gameserver.network.clientpackets.CharacterCreate: void initNewChar(com.l2jfrozen.gameserver.network.L2GameClient,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.clientpackets.CharacterCreate: void startTutorialQuest(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.clientpackets.CharacterCreate: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.CharacterCreate: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.CharacterDelete
com.l2jfrozen.gameserver.network.clientpackets.CharacterDelete: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.CharacterDelete: int _charSlot
com.l2jfrozen.gameserver.network.clientpackets.CharacterDelete: CharacterDelete()
com.l2jfrozen.gameserver.network.clientpackets.CharacterDelete: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.CharacterDelete: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.CharacterDelete: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.CharacterDelete: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.CharacterRestore
com.l2jfrozen.gameserver.network.clientpackets.CharacterRestore: int _charSlot
com.l2jfrozen.gameserver.network.clientpackets.CharacterRestore: CharacterRestore()
com.l2jfrozen.gameserver.network.clientpackets.CharacterRestore: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.CharacterRestore: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.CharacterRestore: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.CharacterSelected
com.l2jfrozen.gameserver.network.clientpackets.CharacterSelected: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.CharacterSelected: int _charSlot
com.l2jfrozen.gameserver.network.clientpackets.CharacterSelected: int _unk1
com.l2jfrozen.gameserver.network.clientpackets.CharacterSelected: int _unk2
com.l2jfrozen.gameserver.network.clientpackets.CharacterSelected: int _unk3
com.l2jfrozen.gameserver.network.clientpackets.CharacterSelected: int _unk4
com.l2jfrozen.gameserver.network.clientpackets.CharacterSelected: CharacterSelected()
com.l2jfrozen.gameserver.network.clientpackets.CharacterSelected: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.CharacterSelected: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.CharacterSelected: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.CharacterSelected: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.DlgAnswer
com.l2jfrozen.gameserver.network.clientpackets.DlgAnswer: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.DlgAnswer: int _messageId
com.l2jfrozen.gameserver.network.clientpackets.DlgAnswer: int _answer
com.l2jfrozen.gameserver.network.clientpackets.DlgAnswer: int _requestId
com.l2jfrozen.gameserver.network.clientpackets.DlgAnswer: DlgAnswer()
com.l2jfrozen.gameserver.network.clientpackets.DlgAnswer: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.DlgAnswer: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.DlgAnswer: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.DlgAnswer: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.DummyPacket
com.l2jfrozen.gameserver.network.clientpackets.DummyPacket: DummyPacket()
com.l2jfrozen.gameserver.network.clientpackets.DummyPacket: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.DummyPacket: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.DummyPacket: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.EnterWorld
com.l2jfrozen.gameserver.network.clientpackets.EnterWorld: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.EnterWorld: EnterWorld()
com.l2jfrozen.gameserver.network.clientpackets.EnterWorld: com.l2jfrozen.common.thread.TaskPriority getPriority()
com.l2jfrozen.gameserver.network.clientpackets.EnterWorld: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.EnterWorld: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.EnterWorld: boolean isValidName(java.lang.String)
com.l2jfrozen.gameserver.network.clientpackets.EnterWorld: void EnterGM(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.clientpackets.EnterWorld: void Hellows(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.clientpackets.EnterWorld: void ColorSystem(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.clientpackets.EnterWorld: void onEnterAio(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.clientpackets.EnterWorld: void engage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.clientpackets.EnterWorld: void notifyPartner(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.network.clientpackets.EnterWorld: void notifyClanMembers(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.clientpackets.EnterWorld: void notifySponsorOrApprentice(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.clientpackets.EnterWorld: void loadTutorial(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.clientpackets.EnterWorld: void setPledgeClass(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.clientpackets.EnterWorld: void notifyCastleOwner(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.clientpackets.EnterWorld: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.EnterWorld: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.FinishRotating
com.l2jfrozen.gameserver.network.clientpackets.FinishRotating: int _degree
com.l2jfrozen.gameserver.network.clientpackets.FinishRotating: int _unknown
com.l2jfrozen.gameserver.network.clientpackets.FinishRotating: FinishRotating()
com.l2jfrozen.gameserver.network.clientpackets.FinishRotating: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.FinishRotating: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.FinishRotating: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.GameGuardReply
com.l2jfrozen.gameserver.network.clientpackets.GameGuardReply: int[] _reply
com.l2jfrozen.gameserver.network.clientpackets.GameGuardReply: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.GameGuardReply: GameGuardReply()
com.l2jfrozen.gameserver.network.clientpackets.GameGuardReply: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.GameGuardReply: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.GameGuardReply: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.GameGuardReply: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.L2GameClientPacket
com.l2jfrozen.gameserver.network.clientpackets.L2GameClientPacket: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.L2GameClientPacket: L2GameClientPacket()
com.l2jfrozen.gameserver.network.clientpackets.L2GameClientPacket: boolean read()
com.l2jfrozen.gameserver.network.clientpackets.L2GameClientPacket: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.L2GameClientPacket: void run()
com.l2jfrozen.gameserver.network.clientpackets.L2GameClientPacket: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.L2GameClientPacket: void sendPacket(com.l2jfrozen.gameserver.network.serverpackets.L2GameServerPacket)
com.l2jfrozen.gameserver.network.clientpackets.L2GameClientPacket: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.L2GameClientPacket: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.Logout
com.l2jfrozen.gameserver.network.clientpackets.Logout: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.Logout: Logout()
com.l2jfrozen.gameserver.network.clientpackets.Logout: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.Logout: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.Logout: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.Logout: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.MoveBackwardToLocation
com.l2jfrozen.gameserver.network.clientpackets.MoveBackwardToLocation: int _targetX
com.l2jfrozen.gameserver.network.clientpackets.MoveBackwardToLocation: int _targetY
com.l2jfrozen.gameserver.network.clientpackets.MoveBackwardToLocation: int _targetZ
com.l2jfrozen.gameserver.network.clientpackets.MoveBackwardToLocation: int _originX
com.l2jfrozen.gameserver.network.clientpackets.MoveBackwardToLocation: int _originY
com.l2jfrozen.gameserver.network.clientpackets.MoveBackwardToLocation: int _originZ
com.l2jfrozen.gameserver.network.clientpackets.MoveBackwardToLocation: int _moveMovement
com.l2jfrozen.gameserver.network.clientpackets.MoveBackwardToLocation: int _curX
com.l2jfrozen.gameserver.network.clientpackets.MoveBackwardToLocation: int _curY
com.l2jfrozen.gameserver.network.clientpackets.MoveBackwardToLocation: int _curZ
com.l2jfrozen.gameserver.network.clientpackets.MoveBackwardToLocation: MoveBackwardToLocation()
com.l2jfrozen.gameserver.network.clientpackets.MoveBackwardToLocation: com.l2jfrozen.common.thread.TaskPriority getPriority()
com.l2jfrozen.gameserver.network.clientpackets.MoveBackwardToLocation: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.MoveBackwardToLocation: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.MoveBackwardToLocation: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.MoveWithDelta
com.l2jfrozen.gameserver.network.clientpackets.MoveWithDelta: int _dx
com.l2jfrozen.gameserver.network.clientpackets.MoveWithDelta: int _dy
com.l2jfrozen.gameserver.network.clientpackets.MoveWithDelta: int _dz
com.l2jfrozen.gameserver.network.clientpackets.MoveWithDelta: MoveWithDelta()
com.l2jfrozen.gameserver.network.clientpackets.MoveWithDelta: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.MoveWithDelta: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.MoveWithDelta: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.MultiSellChoose
com.l2jfrozen.gameserver.network.clientpackets.MultiSellChoose: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.MultiSellChoose: int _listId
com.l2jfrozen.gameserver.network.clientpackets.MultiSellChoose: int _entryId
com.l2jfrozen.gameserver.network.clientpackets.MultiSellChoose: int _amount
com.l2jfrozen.gameserver.network.clientpackets.MultiSellChoose: int _enchantment
com.l2jfrozen.gameserver.network.clientpackets.MultiSellChoose: int _transactionTax
com.l2jfrozen.gameserver.network.clientpackets.MultiSellChoose: MultiSellChoose()
com.l2jfrozen.gameserver.network.clientpackets.MultiSellChoose: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.MultiSellChoose: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.MultiSellChoose: void doExchange(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.multisell.MultiSellEntry,boolean,boolean,int)
com.l2jfrozen.gameserver.network.clientpackets.MultiSellChoose: com.l2jfrozen.gameserver.model.multisell.MultiSellEntry prepareEntry(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.multisell.MultiSellEntry,boolean,boolean,int)
com.l2jfrozen.gameserver.network.clientpackets.MultiSellChoose: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.MultiSellChoose: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.NewCharacter
com.l2jfrozen.gameserver.network.clientpackets.NewCharacter: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.NewCharacter: NewCharacter()
com.l2jfrozen.gameserver.network.clientpackets.NewCharacter: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.NewCharacter: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.NewCharacter: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.NewCharacter: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.ObserverReturn
com.l2jfrozen.gameserver.network.clientpackets.ObserverReturn: ObserverReturn()
com.l2jfrozen.gameserver.network.clientpackets.ObserverReturn: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.ObserverReturn: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.ObserverReturn: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.ProtocolVersion
com.l2jfrozen.gameserver.network.clientpackets.ProtocolVersion: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.ProtocolVersion: int _version
com.l2jfrozen.gameserver.network.clientpackets.ProtocolVersion: ProtocolVersion()
com.l2jfrozen.gameserver.network.clientpackets.ProtocolVersion: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.ProtocolVersion: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.ProtocolVersion: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.ProtocolVersion: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestActionUse
com.l2jfrozen.gameserver.network.clientpackets.RequestActionUse: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestActionUse: int _actionId
com.l2jfrozen.gameserver.network.clientpackets.RequestActionUse: boolean _ctrlPressed
com.l2jfrozen.gameserver.network.clientpackets.RequestActionUse: boolean _shiftPressed
com.l2jfrozen.gameserver.network.clientpackets.RequestActionUse: java.util.List _petActions
com.l2jfrozen.gameserver.network.clientpackets.RequestActionUse: RequestActionUse()
com.l2jfrozen.gameserver.network.clientpackets.RequestActionUse: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestActionUse: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestActionUse: void useSkill(int,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.network.clientpackets.RequestActionUse: void useSkill(int)
com.l2jfrozen.gameserver.network.clientpackets.RequestActionUse: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestActionUse: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestAllyCrest
com.l2jfrozen.gameserver.network.clientpackets.RequestAllyCrest: int _crestId
com.l2jfrozen.gameserver.network.clientpackets.RequestAllyCrest: RequestAllyCrest()
com.l2jfrozen.gameserver.network.clientpackets.RequestAllyCrest: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestAllyCrest: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestAllyCrest: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestAllyInfo
com.l2jfrozen.gameserver.network.clientpackets.RequestAllyInfo: RequestAllyInfo()
com.l2jfrozen.gameserver.network.clientpackets.RequestAllyInfo: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestAllyInfo: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestAllyInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestAnswerFriendInvite
com.l2jfrozen.gameserver.network.clientpackets.RequestAnswerFriendInvite: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestAnswerFriendInvite: int _response
com.l2jfrozen.gameserver.network.clientpackets.RequestAnswerFriendInvite: RequestAnswerFriendInvite()
com.l2jfrozen.gameserver.network.clientpackets.RequestAnswerFriendInvite: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestAnswerFriendInvite: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestAnswerFriendInvite: void notifyFriends(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.clientpackets.RequestAnswerFriendInvite: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestAnswerFriendInvite: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestAnswerJoinAlly
com.l2jfrozen.gameserver.network.clientpackets.RequestAnswerJoinAlly: int _response
com.l2jfrozen.gameserver.network.clientpackets.RequestAnswerJoinAlly: RequestAnswerJoinAlly()
com.l2jfrozen.gameserver.network.clientpackets.RequestAnswerJoinAlly: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestAnswerJoinAlly: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestAnswerJoinAlly: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestAnswerJoinParty
com.l2jfrozen.gameserver.network.clientpackets.RequestAnswerJoinParty: int _response
com.l2jfrozen.gameserver.network.clientpackets.RequestAnswerJoinParty: RequestAnswerJoinParty()
com.l2jfrozen.gameserver.network.clientpackets.RequestAnswerJoinParty: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestAnswerJoinParty: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestAnswerJoinParty: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestAnswerJoinPledge
com.l2jfrozen.gameserver.network.clientpackets.RequestAnswerJoinPledge: int _answer
com.l2jfrozen.gameserver.network.clientpackets.RequestAnswerJoinPledge: RequestAnswerJoinPledge()
com.l2jfrozen.gameserver.network.clientpackets.RequestAnswerJoinPledge: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestAnswerJoinPledge: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestAnswerJoinPledge: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestAquireSkill
com.l2jfrozen.gameserver.network.clientpackets.RequestAquireSkill: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestAquireSkill: int _id
com.l2jfrozen.gameserver.network.clientpackets.RequestAquireSkill: int _level
com.l2jfrozen.gameserver.network.clientpackets.RequestAquireSkill: int _skillType
com.l2jfrozen.gameserver.network.clientpackets.RequestAquireSkill: RequestAquireSkill()
com.l2jfrozen.gameserver.network.clientpackets.RequestAquireSkill: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestAquireSkill: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestAquireSkill: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestAquireSkill: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestAquireSkillInfo
com.l2jfrozen.gameserver.network.clientpackets.RequestAquireSkillInfo: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestAquireSkillInfo: int _id
com.l2jfrozen.gameserver.network.clientpackets.RequestAquireSkillInfo: int _level
com.l2jfrozen.gameserver.network.clientpackets.RequestAquireSkillInfo: int _skillType
com.l2jfrozen.gameserver.network.clientpackets.RequestAquireSkillInfo: RequestAquireSkillInfo()
com.l2jfrozen.gameserver.network.clientpackets.RequestAquireSkillInfo: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestAquireSkillInfo: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestAquireSkillInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestAquireSkillInfo: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestAskJoinPartyRoom
com.l2jfrozen.gameserver.network.clientpackets.RequestAskJoinPartyRoom: java.lang.String _name
com.l2jfrozen.gameserver.network.clientpackets.RequestAskJoinPartyRoom: RequestAskJoinPartyRoom()
com.l2jfrozen.gameserver.network.clientpackets.RequestAskJoinPartyRoom: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestAskJoinPartyRoom: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestAskJoinPartyRoom: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestAutoSoulShot
com.l2jfrozen.gameserver.network.clientpackets.RequestAutoSoulShot: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestAutoSoulShot: int _itemId
com.l2jfrozen.gameserver.network.clientpackets.RequestAutoSoulShot: int _type
com.l2jfrozen.gameserver.network.clientpackets.RequestAutoSoulShot: RequestAutoSoulShot()
com.l2jfrozen.gameserver.network.clientpackets.RequestAutoSoulShot: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestAutoSoulShot: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestAutoSoulShot: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestAutoSoulShot: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestBBSwrite
com.l2jfrozen.gameserver.network.clientpackets.RequestBBSwrite: java.lang.String _url
com.l2jfrozen.gameserver.network.clientpackets.RequestBBSwrite: java.lang.String _arg1
com.l2jfrozen.gameserver.network.clientpackets.RequestBBSwrite: java.lang.String _arg2
com.l2jfrozen.gameserver.network.clientpackets.RequestBBSwrite: java.lang.String _arg3
com.l2jfrozen.gameserver.network.clientpackets.RequestBBSwrite: java.lang.String _arg4
com.l2jfrozen.gameserver.network.clientpackets.RequestBBSwrite: java.lang.String _arg5
com.l2jfrozen.gameserver.network.clientpackets.RequestBBSwrite: RequestBBSwrite()
com.l2jfrozen.gameserver.network.clientpackets.RequestBBSwrite: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestBBSwrite: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestBBSwrite: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestBlock
com.l2jfrozen.gameserver.network.clientpackets.RequestBlock: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestBlock: int BLOCK
com.l2jfrozen.gameserver.network.clientpackets.RequestBlock: int UNBLOCK
com.l2jfrozen.gameserver.network.clientpackets.RequestBlock: int BLOCKLIST
com.l2jfrozen.gameserver.network.clientpackets.RequestBlock: int ALLBLOCK
com.l2jfrozen.gameserver.network.clientpackets.RequestBlock: int ALLUNBLOCK
com.l2jfrozen.gameserver.network.clientpackets.RequestBlock: java.lang.String _name
com.l2jfrozen.gameserver.network.clientpackets.RequestBlock: java.lang.Integer _type
com.l2jfrozen.gameserver.network.clientpackets.RequestBlock: RequestBlock()
com.l2jfrozen.gameserver.network.clientpackets.RequestBlock: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestBlock: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestBlock: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestBlock: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestBuyItem
com.l2jfrozen.gameserver.network.clientpackets.RequestBuyItem: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestBuyItem: int _listId
com.l2jfrozen.gameserver.network.clientpackets.RequestBuyItem: int _count
com.l2jfrozen.gameserver.network.clientpackets.RequestBuyItem: int[] _items
com.l2jfrozen.gameserver.network.clientpackets.RequestBuyItem: RequestBuyItem()
com.l2jfrozen.gameserver.network.clientpackets.RequestBuyItem: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestBuyItem: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestBuyItem: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestBuyItem: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestBuyProcure
com.l2jfrozen.gameserver.network.clientpackets.RequestBuyProcure: int _listId
com.l2jfrozen.gameserver.network.clientpackets.RequestBuyProcure: int _count
com.l2jfrozen.gameserver.network.clientpackets.RequestBuyProcure: int[] _items
com.l2jfrozen.gameserver.network.clientpackets.RequestBuyProcure: java.util.List _procureList
com.l2jfrozen.gameserver.network.clientpackets.RequestBuyProcure: RequestBuyProcure()
com.l2jfrozen.gameserver.network.clientpackets.RequestBuyProcure: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestBuyProcure: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestBuyProcure: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestBuySeed
com.l2jfrozen.gameserver.network.clientpackets.RequestBuySeed: int _count
com.l2jfrozen.gameserver.network.clientpackets.RequestBuySeed: int _manorId
com.l2jfrozen.gameserver.network.clientpackets.RequestBuySeed: int[] _items
com.l2jfrozen.gameserver.network.clientpackets.RequestBuySeed: RequestBuySeed()
com.l2jfrozen.gameserver.network.clientpackets.RequestBuySeed: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestBuySeed: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestBuySeed: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestBypassToServer
com.l2jfrozen.gameserver.network.clientpackets.RequestBypassToServer: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestBypassToServer: java.lang.String _command
com.l2jfrozen.gameserver.network.clientpackets.RequestBypassToServer: RequestBypassToServer()
com.l2jfrozen.gameserver.network.clientpackets.RequestBypassToServer: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestBypassToServer: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestBypassToServer: void comeHere(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.clientpackets.RequestBypassToServer: void playerHelp(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.network.clientpackets.RequestBypassToServer: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestBypassToServer: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestChangePartyLeader
com.l2jfrozen.gameserver.network.clientpackets.RequestChangePartyLeader: java.lang.String _name
com.l2jfrozen.gameserver.network.clientpackets.RequestChangePartyLeader: RequestChangePartyLeader()
com.l2jfrozen.gameserver.network.clientpackets.RequestChangePartyLeader: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestChangePartyLeader: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestChangePartyLeader: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestChangePetName
com.l2jfrozen.gameserver.network.clientpackets.RequestChangePetName: java.lang.String _name
com.l2jfrozen.gameserver.network.clientpackets.RequestChangePetName: RequestChangePetName()
com.l2jfrozen.gameserver.network.clientpackets.RequestChangePetName: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestChangePetName: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestChangePetName: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmCancelItem
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmCancelItem: int _itemId
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmCancelItem: RequestConfirmCancelItem()
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmCancelItem: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmCancelItem: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmCancelItem: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmGemStone
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmGemStone: int _targetItemObjId
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmGemStone: int _refinerItemObjId
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmGemStone: int _gemstoneItemObjId
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmGemStone: int _gemstoneCount
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmGemStone: RequestConfirmGemStone()
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmGemStone: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmGemStone: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmGemStone: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmRefinerItem
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmRefinerItem: int GEMSTONE_D
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmRefinerItem: int GEMSTONE_C
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmRefinerItem: int _targetItemObjId
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmRefinerItem: int _refinerItemObjId
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmRefinerItem: RequestConfirmRefinerItem()
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmRefinerItem: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmRefinerItem: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmRefinerItem: int getLifeStoneGrade(int)
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmRefinerItem: int getLifeStoneLevel(int)
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmRefinerItem: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmSiegeWaitingList
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmSiegeWaitingList: int _approved
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmSiegeWaitingList: int _castleId
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmSiegeWaitingList: int _clanId
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmSiegeWaitingList: RequestConfirmSiegeWaitingList()
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmSiegeWaitingList: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmSiegeWaitingList: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmSiegeWaitingList: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmTargetItem
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmTargetItem: int _itemObjId
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmTargetItem: RequestConfirmTargetItem()
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmTargetItem: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmTargetItem: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestConfirmTargetItem: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestCrystallizeItem
com.l2jfrozen.gameserver.network.clientpackets.RequestCrystallizeItem: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestCrystallizeItem: int _objectId
com.l2jfrozen.gameserver.network.clientpackets.RequestCrystallizeItem: int _count
com.l2jfrozen.gameserver.network.clientpackets.RequestCrystallizeItem: RequestCrystallizeItem()
com.l2jfrozen.gameserver.network.clientpackets.RequestCrystallizeItem: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestCrystallizeItem: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestCrystallizeItem: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestCrystallizeItem: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestCursedWeaponList
com.l2jfrozen.gameserver.network.clientpackets.RequestCursedWeaponList: RequestCursedWeaponList()
com.l2jfrozen.gameserver.network.clientpackets.RequestCursedWeaponList: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestCursedWeaponList: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestCursedWeaponList: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestCursedWeaponLocation
com.l2jfrozen.gameserver.network.clientpackets.RequestCursedWeaponLocation: RequestCursedWeaponLocation()
com.l2jfrozen.gameserver.network.clientpackets.RequestCursedWeaponLocation: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestCursedWeaponLocation: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestCursedWeaponLocation: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestDeleteMacro
com.l2jfrozen.gameserver.network.clientpackets.RequestDeleteMacro: int _id
com.l2jfrozen.gameserver.network.clientpackets.RequestDeleteMacro: RequestDeleteMacro()
com.l2jfrozen.gameserver.network.clientpackets.RequestDeleteMacro: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestDeleteMacro: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestDeleteMacro: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestDestroyItem
com.l2jfrozen.gameserver.network.clientpackets.RequestDestroyItem: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestDestroyItem: int _objectId
com.l2jfrozen.gameserver.network.clientpackets.RequestDestroyItem: int _count
com.l2jfrozen.gameserver.network.clientpackets.RequestDestroyItem: RequestDestroyItem()
com.l2jfrozen.gameserver.network.clientpackets.RequestDestroyItem: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestDestroyItem: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestDestroyItem: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestDestroyItem: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestDismissAlly
com.l2jfrozen.gameserver.network.clientpackets.RequestDismissAlly: RequestDismissAlly()
com.l2jfrozen.gameserver.network.clientpackets.RequestDismissAlly: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestDismissAlly: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestDismissAlly: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestDismissPartyRoom
com.l2jfrozen.gameserver.network.clientpackets.RequestDismissPartyRoom: int _roomid
com.l2jfrozen.gameserver.network.clientpackets.RequestDismissPartyRoom: int _data2
com.l2jfrozen.gameserver.network.clientpackets.RequestDismissPartyRoom: RequestDismissPartyRoom()
com.l2jfrozen.gameserver.network.clientpackets.RequestDismissPartyRoom: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestDismissPartyRoom: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestDismissPartyRoom: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestDropItem
com.l2jfrozen.gameserver.network.clientpackets.RequestDropItem: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestDropItem: int _objectId
com.l2jfrozen.gameserver.network.clientpackets.RequestDropItem: int _count
com.l2jfrozen.gameserver.network.clientpackets.RequestDropItem: int _x
com.l2jfrozen.gameserver.network.clientpackets.RequestDropItem: int _y
com.l2jfrozen.gameserver.network.clientpackets.RequestDropItem: int _z
com.l2jfrozen.gameserver.network.clientpackets.RequestDropItem: RequestDropItem()
com.l2jfrozen.gameserver.network.clientpackets.RequestDropItem: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestDropItem: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestDropItem: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestDropItem: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestDuelAnswerStart
com.l2jfrozen.gameserver.network.clientpackets.RequestDuelAnswerStart: int _partyDuel
com.l2jfrozen.gameserver.network.clientpackets.RequestDuelAnswerStart: int _unk1
com.l2jfrozen.gameserver.network.clientpackets.RequestDuelAnswerStart: int _response
com.l2jfrozen.gameserver.network.clientpackets.RequestDuelAnswerStart: RequestDuelAnswerStart()
com.l2jfrozen.gameserver.network.clientpackets.RequestDuelAnswerStart: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestDuelAnswerStart: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestDuelAnswerStart: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestDuelStart
com.l2jfrozen.gameserver.network.clientpackets.RequestDuelStart: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestDuelStart: java.lang.String _player
com.l2jfrozen.gameserver.network.clientpackets.RequestDuelStart: int _partyDuel
com.l2jfrozen.gameserver.network.clientpackets.RequestDuelStart: RequestDuelStart()
com.l2jfrozen.gameserver.network.clientpackets.RequestDuelStart: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestDuelStart: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestDuelStart: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestDuelStart: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestDuelSurrender
com.l2jfrozen.gameserver.network.clientpackets.RequestDuelSurrender: RequestDuelSurrender()
com.l2jfrozen.gameserver.network.clientpackets.RequestDuelSurrender: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestDuelSurrender: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestDuelSurrender: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestEnchantItem
com.l2jfrozen.gameserver.network.clientpackets.RequestEnchantItem: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestEnchantItem: int[] CRYSTAL_SCROLLS
com.l2jfrozen.gameserver.network.clientpackets.RequestEnchantItem: int[] NORMAL_WEAPON_SCROLLS
com.l2jfrozen.gameserver.network.clientpackets.RequestEnchantItem: int[] BLESSED_WEAPON_SCROLLS
com.l2jfrozen.gameserver.network.clientpackets.RequestEnchantItem: int[] CRYSTAL_WEAPON_SCROLLS
com.l2jfrozen.gameserver.network.clientpackets.RequestEnchantItem: int[] NORMAL_ARMOR_SCROLLS
com.l2jfrozen.gameserver.network.clientpackets.RequestEnchantItem: int[] BLESSED_ARMOR_SCROLLS
com.l2jfrozen.gameserver.network.clientpackets.RequestEnchantItem: int[] CRYSTAL_ARMOR_SCROLLS
com.l2jfrozen.gameserver.network.clientpackets.RequestEnchantItem: int _objectId
com.l2jfrozen.gameserver.network.clientpackets.RequestEnchantItem: RequestEnchantItem()
com.l2jfrozen.gameserver.network.clientpackets.RequestEnchantItem: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestEnchantItem: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestEnchantItem: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestEnchantItem: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestEvaluate
com.l2jfrozen.gameserver.network.clientpackets.RequestEvaluate: int _targetId
com.l2jfrozen.gameserver.network.clientpackets.RequestEvaluate: RequestEvaluate()
com.l2jfrozen.gameserver.network.clientpackets.RequestEvaluate: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestEvaluate: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestEvaluate: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestExAcceptJoinMPCC
com.l2jfrozen.gameserver.network.clientpackets.RequestExAcceptJoinMPCC: int _response
com.l2jfrozen.gameserver.network.clientpackets.RequestExAcceptJoinMPCC: RequestExAcceptJoinMPCC()
com.l2jfrozen.gameserver.network.clientpackets.RequestExAcceptJoinMPCC: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestExAcceptJoinMPCC: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestExAcceptJoinMPCC: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestExAskJoinMPCC
com.l2jfrozen.gameserver.network.clientpackets.RequestExAskJoinMPCC: java.lang.String _name
com.l2jfrozen.gameserver.network.clientpackets.RequestExAskJoinMPCC: RequestExAskJoinMPCC()
com.l2jfrozen.gameserver.network.clientpackets.RequestExAskJoinMPCC: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestExAskJoinMPCC: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestExAskJoinMPCC: void askJoinMPCC(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.clientpackets.RequestExAskJoinMPCC: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestExEnchantSkill
com.l2jfrozen.gameserver.network.clientpackets.RequestExEnchantSkill: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestExEnchantSkill: int _skillId
com.l2jfrozen.gameserver.network.clientpackets.RequestExEnchantSkill: int _skillLvl
com.l2jfrozen.gameserver.network.clientpackets.RequestExEnchantSkill: RequestExEnchantSkill()
com.l2jfrozen.gameserver.network.clientpackets.RequestExEnchantSkill: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestExEnchantSkill: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestExEnchantSkill: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestExEnchantSkill: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestExEnchantSkillInfo
com.l2jfrozen.gameserver.network.clientpackets.RequestExEnchantSkillInfo: int _skillId
com.l2jfrozen.gameserver.network.clientpackets.RequestExEnchantSkillInfo: int _skillLvl
com.l2jfrozen.gameserver.network.clientpackets.RequestExEnchantSkillInfo: RequestExEnchantSkillInfo()
com.l2jfrozen.gameserver.network.clientpackets.RequestExEnchantSkillInfo: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestExEnchantSkillInfo: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestExEnchantSkillInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestExFishRanking
com.l2jfrozen.gameserver.network.clientpackets.RequestExFishRanking: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestExFishRanking: RequestExFishRanking()
com.l2jfrozen.gameserver.network.clientpackets.RequestExFishRanking: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestExFishRanking: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestExFishRanking: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestExMPCCShowPartyMembersInfo
com.l2jfrozen.gameserver.network.clientpackets.RequestExMPCCShowPartyMembersInfo: int _partyLeaderId
com.l2jfrozen.gameserver.network.clientpackets.RequestExMPCCShowPartyMembersInfo: RequestExMPCCShowPartyMembersInfo()
com.l2jfrozen.gameserver.network.clientpackets.RequestExMPCCShowPartyMembersInfo: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestExMPCCShowPartyMembersInfo: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestExMPCCShowPartyMembersInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestExMagicSkillUseGround
com.l2jfrozen.gameserver.network.clientpackets.RequestExMagicSkillUseGround: int _x
com.l2jfrozen.gameserver.network.clientpackets.RequestExMagicSkillUseGround: int _y
com.l2jfrozen.gameserver.network.clientpackets.RequestExMagicSkillUseGround: int _z
com.l2jfrozen.gameserver.network.clientpackets.RequestExMagicSkillUseGround: int _skillId
com.l2jfrozen.gameserver.network.clientpackets.RequestExMagicSkillUseGround: boolean _ctrlPressed
com.l2jfrozen.gameserver.network.clientpackets.RequestExMagicSkillUseGround: boolean _shiftPressed
com.l2jfrozen.gameserver.network.clientpackets.RequestExMagicSkillUseGround: RequestExMagicSkillUseGround()
com.l2jfrozen.gameserver.network.clientpackets.RequestExMagicSkillUseGround: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestExMagicSkillUseGround: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestExMagicSkillUseGround: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestExOustFromMPCC
com.l2jfrozen.gameserver.network.clientpackets.RequestExOustFromMPCC: java.lang.String _name
com.l2jfrozen.gameserver.network.clientpackets.RequestExOustFromMPCC: RequestExOustFromMPCC()
com.l2jfrozen.gameserver.network.clientpackets.RequestExOustFromMPCC: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestExOustFromMPCC: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestExOustFromMPCC: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestExPledgeCrestLarge
com.l2jfrozen.gameserver.network.clientpackets.RequestExPledgeCrestLarge: int _crestId
com.l2jfrozen.gameserver.network.clientpackets.RequestExPledgeCrestLarge: RequestExPledgeCrestLarge()
com.l2jfrozen.gameserver.network.clientpackets.RequestExPledgeCrestLarge: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestExPledgeCrestLarge: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestExPledgeCrestLarge: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestExSetPledgeCrestLarge
com.l2jfrozen.gameserver.network.clientpackets.RequestExSetPledgeCrestLarge: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestExSetPledgeCrestLarge: int _size
com.l2jfrozen.gameserver.network.clientpackets.RequestExSetPledgeCrestLarge: byte[] _data
com.l2jfrozen.gameserver.network.clientpackets.RequestExSetPledgeCrestLarge: RequestExSetPledgeCrestLarge()
com.l2jfrozen.gameserver.network.clientpackets.RequestExSetPledgeCrestLarge: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestExSetPledgeCrestLarge: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestExSetPledgeCrestLarge: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestExSetPledgeCrestLarge: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestExitPartyMatchingWaitingRoom
com.l2jfrozen.gameserver.network.clientpackets.RequestExitPartyMatchingWaitingRoom: RequestExitPartyMatchingWaitingRoom()
com.l2jfrozen.gameserver.network.clientpackets.RequestExitPartyMatchingWaitingRoom: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestExitPartyMatchingWaitingRoom: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestExitPartyMatchingWaitingRoom: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestFriendDel
com.l2jfrozen.gameserver.network.clientpackets.RequestFriendDel: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestFriendDel: java.lang.String _name
com.l2jfrozen.gameserver.network.clientpackets.RequestFriendDel: RequestFriendDel()
com.l2jfrozen.gameserver.network.clientpackets.RequestFriendDel: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestFriendDel: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestFriendDel: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestFriendDel: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestFriendInvite
com.l2jfrozen.gameserver.network.clientpackets.RequestFriendInvite: java.lang.String _name
com.l2jfrozen.gameserver.network.clientpackets.RequestFriendInvite: RequestFriendInvite()
com.l2jfrozen.gameserver.network.clientpackets.RequestFriendInvite: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestFriendInvite: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestFriendInvite: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestFriendList
com.l2jfrozen.gameserver.network.clientpackets.RequestFriendList: RequestFriendList()
com.l2jfrozen.gameserver.network.clientpackets.RequestFriendList: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestFriendList: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestFriendList: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestGMCommand
com.l2jfrozen.gameserver.network.clientpackets.RequestGMCommand: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestGMCommand: java.lang.String _targetName
com.l2jfrozen.gameserver.network.clientpackets.RequestGMCommand: int _command
com.l2jfrozen.gameserver.network.clientpackets.RequestGMCommand: RequestGMCommand()
com.l2jfrozen.gameserver.network.clientpackets.RequestGMCommand: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestGMCommand: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestGMCommand: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestGMCommand: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestGetBossRecord
com.l2jfrozen.gameserver.network.clientpackets.RequestGetBossRecord: int _bossId
com.l2jfrozen.gameserver.network.clientpackets.RequestGetBossRecord: RequestGetBossRecord()
com.l2jfrozen.gameserver.network.clientpackets.RequestGetBossRecord: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestGetBossRecord: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestGetBossRecord: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestGetItemFromPet
com.l2jfrozen.gameserver.network.clientpackets.RequestGetItemFromPet: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestGetItemFromPet: int _objectId
com.l2jfrozen.gameserver.network.clientpackets.RequestGetItemFromPet: int _amount
com.l2jfrozen.gameserver.network.clientpackets.RequestGetItemFromPet: int _unknown
com.l2jfrozen.gameserver.network.clientpackets.RequestGetItemFromPet: RequestGetItemFromPet()
com.l2jfrozen.gameserver.network.clientpackets.RequestGetItemFromPet: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestGetItemFromPet: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestGetItemFromPet: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestGetItemFromPet: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestGetOffVehicle
com.l2jfrozen.gameserver.network.clientpackets.RequestGetOffVehicle: int _id
com.l2jfrozen.gameserver.network.clientpackets.RequestGetOffVehicle: int _x
com.l2jfrozen.gameserver.network.clientpackets.RequestGetOffVehicle: int _y
com.l2jfrozen.gameserver.network.clientpackets.RequestGetOffVehicle: int _z
com.l2jfrozen.gameserver.network.clientpackets.RequestGetOffVehicle: RequestGetOffVehicle()
com.l2jfrozen.gameserver.network.clientpackets.RequestGetOffVehicle: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestGetOffVehicle: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestGetOffVehicle: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestGetOnVehicle
com.l2jfrozen.gameserver.network.clientpackets.RequestGetOnVehicle: int _id
com.l2jfrozen.gameserver.network.clientpackets.RequestGetOnVehicle: int _x
com.l2jfrozen.gameserver.network.clientpackets.RequestGetOnVehicle: int _y
com.l2jfrozen.gameserver.network.clientpackets.RequestGetOnVehicle: int _z
com.l2jfrozen.gameserver.network.clientpackets.RequestGetOnVehicle: RequestGetOnVehicle()
com.l2jfrozen.gameserver.network.clientpackets.RequestGetOnVehicle: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestGetOnVehicle: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestGetOnVehicle: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestGiveItemToPet
com.l2jfrozen.gameserver.network.clientpackets.RequestGiveItemToPet: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestGiveItemToPet: int _objectId
com.l2jfrozen.gameserver.network.clientpackets.RequestGiveItemToPet: int _amount
com.l2jfrozen.gameserver.network.clientpackets.RequestGiveItemToPet: RequestGiveItemToPet()
com.l2jfrozen.gameserver.network.clientpackets.RequestGiveItemToPet: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestGiveItemToPet: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestGiveItemToPet: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestGiveItemToPet: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestGiveNickName
com.l2jfrozen.gameserver.network.clientpackets.RequestGiveNickName: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestGiveNickName: java.lang.String _target
com.l2jfrozen.gameserver.network.clientpackets.RequestGiveNickName: java.lang.String _title
com.l2jfrozen.gameserver.network.clientpackets.RequestGiveNickName: RequestGiveNickName()
com.l2jfrozen.gameserver.network.clientpackets.RequestGiveNickName: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestGiveNickName: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestGiveNickName: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestGiveNickName: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestGmList
com.l2jfrozen.gameserver.network.clientpackets.RequestGmList: RequestGmList()
com.l2jfrozen.gameserver.network.clientpackets.RequestGmList: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestGmList: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestGmList: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestHennaEquip
com.l2jfrozen.gameserver.network.clientpackets.RequestHennaEquip: int _symbolId
com.l2jfrozen.gameserver.network.clientpackets.RequestHennaEquip: RequestHennaEquip()
com.l2jfrozen.gameserver.network.clientpackets.RequestHennaEquip: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestHennaEquip: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestHennaEquip: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestHennaItemInfo
com.l2jfrozen.gameserver.network.clientpackets.RequestHennaItemInfo: int _symbolId
com.l2jfrozen.gameserver.network.clientpackets.RequestHennaItemInfo: RequestHennaItemInfo()
com.l2jfrozen.gameserver.network.clientpackets.RequestHennaItemInfo: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestHennaItemInfo: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestHennaItemInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestHennaList
com.l2jfrozen.gameserver.network.clientpackets.RequestHennaList: int _unknown
com.l2jfrozen.gameserver.network.clientpackets.RequestHennaList: RequestHennaList()
com.l2jfrozen.gameserver.network.clientpackets.RequestHennaList: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestHennaList: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestHennaList: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestItemList
com.l2jfrozen.gameserver.network.clientpackets.RequestItemList: RequestItemList()
com.l2jfrozen.gameserver.network.clientpackets.RequestItemList: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestItemList: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestItemList: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestJoinAlly
com.l2jfrozen.gameserver.network.clientpackets.RequestJoinAlly: int _id
com.l2jfrozen.gameserver.network.clientpackets.RequestJoinAlly: RequestJoinAlly()
com.l2jfrozen.gameserver.network.clientpackets.RequestJoinAlly: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestJoinAlly: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestJoinAlly: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestJoinParty
com.l2jfrozen.gameserver.network.clientpackets.RequestJoinParty: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestJoinParty: java.lang.String _name
com.l2jfrozen.gameserver.network.clientpackets.RequestJoinParty: int _itemDistribution
com.l2jfrozen.gameserver.network.clientpackets.RequestJoinParty: RequestJoinParty()
com.l2jfrozen.gameserver.network.clientpackets.RequestJoinParty: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestJoinParty: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestJoinParty: void addTargetToParty(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.clientpackets.RequestJoinParty: void createNewParty(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.clientpackets.RequestJoinParty: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestJoinParty: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestJoinPledge
com.l2jfrozen.gameserver.network.clientpackets.RequestJoinPledge: int _target
com.l2jfrozen.gameserver.network.clientpackets.RequestJoinPledge: int _pledgeType
com.l2jfrozen.gameserver.network.clientpackets.RequestJoinPledge: RequestJoinPledge()
com.l2jfrozen.gameserver.network.clientpackets.RequestJoinPledge: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestJoinPledge: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestJoinPledge: int getPledgeType()
com.l2jfrozen.gameserver.network.clientpackets.RequestJoinPledge: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestJoinSiege
com.l2jfrozen.gameserver.network.clientpackets.RequestJoinSiege: int _castleId
com.l2jfrozen.gameserver.network.clientpackets.RequestJoinSiege: int _isAttacker
com.l2jfrozen.gameserver.network.clientpackets.RequestJoinSiege: int _isJoining
com.l2jfrozen.gameserver.network.clientpackets.RequestJoinSiege: RequestJoinSiege()
com.l2jfrozen.gameserver.network.clientpackets.RequestJoinSiege: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestJoinSiege: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestJoinSiege: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestLinkHtml
com.l2jfrozen.gameserver.network.clientpackets.RequestLinkHtml: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestLinkHtml: java.lang.String _link
com.l2jfrozen.gameserver.network.clientpackets.RequestLinkHtml: RequestLinkHtml()
com.l2jfrozen.gameserver.network.clientpackets.RequestLinkHtml: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestLinkHtml: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestLinkHtml: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestLinkHtml: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestListPartyMatchingWaitingRoom
com.l2jfrozen.gameserver.network.clientpackets.RequestListPartyMatchingWaitingRoom: int _page
com.l2jfrozen.gameserver.network.clientpackets.RequestListPartyMatchingWaitingRoom: int _minlvl
com.l2jfrozen.gameserver.network.clientpackets.RequestListPartyMatchingWaitingRoom: int _maxlvl
com.l2jfrozen.gameserver.network.clientpackets.RequestListPartyMatchingWaitingRoom: int _mode
com.l2jfrozen.gameserver.network.clientpackets.RequestListPartyMatchingWaitingRoom: RequestListPartyMatchingWaitingRoom()
com.l2jfrozen.gameserver.network.clientpackets.RequestListPartyMatchingWaitingRoom: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestListPartyMatchingWaitingRoom: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestListPartyMatchingWaitingRoom: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestMagicSkillUse
com.l2jfrozen.gameserver.network.clientpackets.RequestMagicSkillUse: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestMagicSkillUse: int _magicId
com.l2jfrozen.gameserver.network.clientpackets.RequestMagicSkillUse: boolean _ctrlPressed
com.l2jfrozen.gameserver.network.clientpackets.RequestMagicSkillUse: boolean _shiftPressed
com.l2jfrozen.gameserver.network.clientpackets.RequestMagicSkillUse: RequestMagicSkillUse()
com.l2jfrozen.gameserver.network.clientpackets.RequestMagicSkillUse: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestMagicSkillUse: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestMagicSkillUse: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestMagicSkillUse: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestMakeMacro
com.l2jfrozen.gameserver.network.clientpackets.RequestMakeMacro: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestMakeMacro: com.l2jfrozen.gameserver.model.L2Macro _macro
com.l2jfrozen.gameserver.network.clientpackets.RequestMakeMacro: int _commandsLenght
com.l2jfrozen.gameserver.network.clientpackets.RequestMakeMacro: int MAX_MACRO_LENGTH
com.l2jfrozen.gameserver.network.clientpackets.RequestMakeMacro: RequestMakeMacro()
com.l2jfrozen.gameserver.network.clientpackets.RequestMakeMacro: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestMakeMacro: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestMakeMacro: boolean checkSecurityOnCommand(com.l2jfrozen.gameserver.model.L2Macro$L2MacroCmd)
com.l2jfrozen.gameserver.network.clientpackets.RequestMakeMacro: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestManorList
com.l2jfrozen.gameserver.network.clientpackets.RequestManorList: RequestManorList()
com.l2jfrozen.gameserver.network.clientpackets.RequestManorList: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestManorList: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestManorList: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestMoveToLocationInVehicle
com.l2jfrozen.gameserver.network.clientpackets.RequestMoveToLocationInVehicle: com.l2jfrozen.common.util.Point3D _pos
com.l2jfrozen.gameserver.network.clientpackets.RequestMoveToLocationInVehicle: com.l2jfrozen.common.util.Point3D _origin_pos
com.l2jfrozen.gameserver.network.clientpackets.RequestMoveToLocationInVehicle: int _boatId
com.l2jfrozen.gameserver.network.clientpackets.RequestMoveToLocationInVehicle: RequestMoveToLocationInVehicle()
com.l2jfrozen.gameserver.network.clientpackets.RequestMoveToLocationInVehicle: com.l2jfrozen.common.thread.TaskPriority getPriority()
com.l2jfrozen.gameserver.network.clientpackets.RequestMoveToLocationInVehicle: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestMoveToLocationInVehicle: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestMoveToLocationInVehicle: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestOlympiadMatchList
com.l2jfrozen.gameserver.network.clientpackets.RequestOlympiadMatchList: java.lang.String _C__D0_13_REQUESTOLYMPIADMATCHLIST
com.l2jfrozen.gameserver.network.clientpackets.RequestOlympiadMatchList: RequestOlympiadMatchList()
com.l2jfrozen.gameserver.network.clientpackets.RequestOlympiadMatchList: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestOlympiadMatchList: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestOlympiadMatchList: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestOlympiadObserverEnd
com.l2jfrozen.gameserver.network.clientpackets.RequestOlympiadObserverEnd: RequestOlympiadObserverEnd()
com.l2jfrozen.gameserver.network.clientpackets.RequestOlympiadObserverEnd: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestOlympiadObserverEnd: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestOlympiadObserverEnd: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestOustFromPartyRoom
com.l2jfrozen.gameserver.network.clientpackets.RequestOustFromPartyRoom: int _charid
com.l2jfrozen.gameserver.network.clientpackets.RequestOustFromPartyRoom: RequestOustFromPartyRoom()
com.l2jfrozen.gameserver.network.clientpackets.RequestOustFromPartyRoom: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestOustFromPartyRoom: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestOustFromPartyRoom: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestOustPartyMember
com.l2jfrozen.gameserver.network.clientpackets.RequestOustPartyMember: java.lang.String _name
com.l2jfrozen.gameserver.network.clientpackets.RequestOustPartyMember: RequestOustPartyMember()
com.l2jfrozen.gameserver.network.clientpackets.RequestOustPartyMember: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestOustPartyMember: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestOustPartyMember: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestOustPledgeMember
com.l2jfrozen.gameserver.network.clientpackets.RequestOustPledgeMember: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestOustPledgeMember: java.lang.String _target
com.l2jfrozen.gameserver.network.clientpackets.RequestOustPledgeMember: RequestOustPledgeMember()
com.l2jfrozen.gameserver.network.clientpackets.RequestOustPledgeMember: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestOustPledgeMember: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestOustPledgeMember: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestOustPledgeMember: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestPCCafeCouponUse
com.l2jfrozen.gameserver.network.clientpackets.RequestPCCafeCouponUse: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestPCCafeCouponUse: java.lang.String _str
com.l2jfrozen.gameserver.network.clientpackets.RequestPCCafeCouponUse: RequestPCCafeCouponUse()
com.l2jfrozen.gameserver.network.clientpackets.RequestPCCafeCouponUse: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPCCafeCouponUse: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPCCafeCouponUse: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestPackageSend
com.l2jfrozen.gameserver.network.clientpackets.RequestPackageSend: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestPackageSend: java.util.List _items
com.l2jfrozen.gameserver.network.clientpackets.RequestPackageSend: int _objectID
com.l2jfrozen.gameserver.network.clientpackets.RequestPackageSend: int _count
com.l2jfrozen.gameserver.network.clientpackets.RequestPackageSend: RequestPackageSend()
com.l2jfrozen.gameserver.network.clientpackets.RequestPackageSend: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPackageSend: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPackageSend: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestPackageSend: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestPackageSend$Item
com.l2jfrozen.gameserver.network.clientpackets.RequestPackageSend$Item: int id
com.l2jfrozen.gameserver.network.clientpackets.RequestPackageSend$Item: int count
com.l2jfrozen.gameserver.network.clientpackets.RequestPackageSend$Item: com.l2jfrozen.gameserver.network.clientpackets.RequestPackageSend this$0
com.l2jfrozen.gameserver.network.clientpackets.RequestPackageSend$Item: RequestPackageSend$Item(com.l2jfrozen.gameserver.network.clientpackets.RequestPackageSend,int,int)
com.l2jfrozen.gameserver.network.clientpackets.RequestPackageSendableItemList
com.l2jfrozen.gameserver.network.clientpackets.RequestPackageSendableItemList: int _objectID
com.l2jfrozen.gameserver.network.clientpackets.RequestPackageSendableItemList: RequestPackageSendableItemList()
com.l2jfrozen.gameserver.network.clientpackets.RequestPackageSendableItemList: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPackageSendableItemList: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPackageSendableItemList: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestPartyMatchConfig
com.l2jfrozen.gameserver.network.clientpackets.RequestPartyMatchConfig: int _auto
com.l2jfrozen.gameserver.network.clientpackets.RequestPartyMatchConfig: int _loc
com.l2jfrozen.gameserver.network.clientpackets.RequestPartyMatchConfig: int _lvl
com.l2jfrozen.gameserver.network.clientpackets.RequestPartyMatchConfig: RequestPartyMatchConfig()
com.l2jfrozen.gameserver.network.clientpackets.RequestPartyMatchConfig: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPartyMatchConfig: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPartyMatchConfig: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestPartyMatchDetail
com.l2jfrozen.gameserver.network.clientpackets.RequestPartyMatchDetail: int _roomid
com.l2jfrozen.gameserver.network.clientpackets.RequestPartyMatchDetail: int _unk1
com.l2jfrozen.gameserver.network.clientpackets.RequestPartyMatchDetail: int _unk2
com.l2jfrozen.gameserver.network.clientpackets.RequestPartyMatchDetail: int _unk3
com.l2jfrozen.gameserver.network.clientpackets.RequestPartyMatchDetail: RequestPartyMatchDetail()
com.l2jfrozen.gameserver.network.clientpackets.RequestPartyMatchDetail: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPartyMatchDetail: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPartyMatchDetail: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestPartyMatchList
com.l2jfrozen.gameserver.network.clientpackets.RequestPartyMatchList: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestPartyMatchList: int _roomid
com.l2jfrozen.gameserver.network.clientpackets.RequestPartyMatchList: int _membersmax
com.l2jfrozen.gameserver.network.clientpackets.RequestPartyMatchList: int _lvlmin
com.l2jfrozen.gameserver.network.clientpackets.RequestPartyMatchList: int _lvlmax
com.l2jfrozen.gameserver.network.clientpackets.RequestPartyMatchList: int _loot
com.l2jfrozen.gameserver.network.clientpackets.RequestPartyMatchList: java.lang.String _roomtitle
com.l2jfrozen.gameserver.network.clientpackets.RequestPartyMatchList: RequestPartyMatchList()
com.l2jfrozen.gameserver.network.clientpackets.RequestPartyMatchList: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPartyMatchList: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPartyMatchList: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestPartyMatchList: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestPetGetItem
com.l2jfrozen.gameserver.network.clientpackets.RequestPetGetItem: int _objectId
com.l2jfrozen.gameserver.network.clientpackets.RequestPetGetItem: RequestPetGetItem()
com.l2jfrozen.gameserver.network.clientpackets.RequestPetGetItem: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPetGetItem: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPetGetItem: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestPetUseItem
com.l2jfrozen.gameserver.network.clientpackets.RequestPetUseItem: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestPetUseItem: int _objectId
com.l2jfrozen.gameserver.network.clientpackets.RequestPetUseItem: RequestPetUseItem()
com.l2jfrozen.gameserver.network.clientpackets.RequestPetUseItem: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPetUseItem: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPetUseItem: void useItem(com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.clientpackets.RequestPetUseItem: void feed(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.network.clientpackets.RequestPetUseItem: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestPetUseItem: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestPetition
com.l2jfrozen.gameserver.network.clientpackets.RequestPetition: java.lang.String _content
com.l2jfrozen.gameserver.network.clientpackets.RequestPetition: int _type
com.l2jfrozen.gameserver.network.clientpackets.RequestPetition: RequestPetition()
com.l2jfrozen.gameserver.network.clientpackets.RequestPetition: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPetition: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPetition: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestPetitionCancel
com.l2jfrozen.gameserver.network.clientpackets.RequestPetitionCancel: RequestPetitionCancel()
com.l2jfrozen.gameserver.network.clientpackets.RequestPetitionCancel: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPetitionCancel: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPetitionCancel: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeCrest
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeCrest: int _crestId
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeCrest: RequestPledgeCrest()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeCrest: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeCrest: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeCrest: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeExtendedInfo
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeExtendedInfo: java.lang.String _name
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeExtendedInfo: RequestPledgeExtendedInfo()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeExtendedInfo: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeExtendedInfo: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeExtendedInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeInfo
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeInfo: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeInfo: int clanId
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeInfo: RequestPledgeInfo()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeInfo: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeInfo: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeInfo: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeMemberInfo
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeMemberInfo: int _unk1
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeMemberInfo: java.lang.String _player
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeMemberInfo: RequestPledgeMemberInfo()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeMemberInfo: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeMemberInfo: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeMemberInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeMemberList
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeMemberList: RequestPledgeMemberList()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeMemberList: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeMemberList: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeMemberList: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeMemberPowerInfo
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeMemberPowerInfo: int _unk1
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeMemberPowerInfo: java.lang.String _player
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeMemberPowerInfo: RequestPledgeMemberPowerInfo()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeMemberPowerInfo: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeMemberPowerInfo: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeMemberPowerInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgePower
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgePower: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgePower: int _rank
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgePower: int _action
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgePower: int _privs
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgePower: RequestPledgePower()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgePower: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgePower: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgePower: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgePower: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgePowerGradeList
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgePowerGradeList: RequestPledgePowerGradeList()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgePowerGradeList: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgePowerGradeList: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgePowerGradeList: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeReorganizeMember
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeReorganizeMember: int _unk1
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeReorganizeMember: java.lang.String _memberName
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeReorganizeMember: int _newPledgeType
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeReorganizeMember: java.lang.String _unk2
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeReorganizeMember: RequestPledgeReorganizeMember()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeReorganizeMember: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeReorganizeMember: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeReorganizeMember: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeSetAcademyMaster
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeSetAcademyMaster: java.lang.String _currPlayerName
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeSetAcademyMaster: int _set
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeSetAcademyMaster: java.lang.String _targetPlayerName
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeSetAcademyMaster: RequestPledgeSetAcademyMaster()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeSetAcademyMaster: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeSetAcademyMaster: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeSetAcademyMaster: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeSetMemberPowerGrade
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeSetMemberPowerGrade: int _powerGrade
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeSetMemberPowerGrade: java.lang.String _member
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeSetMemberPowerGrade: RequestPledgeSetMemberPowerGrade()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeSetMemberPowerGrade: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeSetMemberPowerGrade: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeSetMemberPowerGrade: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeWarList
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeWarList: int _unk1
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeWarList: int _tab
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeWarList: RequestPledgeWarList()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeWarList: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeWarList: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPledgeWarList: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreBuy
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreBuy: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreBuy: int _storePlayerId
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreBuy: int _count
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreBuy: com.l2jfrozen.gameserver.model.ItemRequest[] _items
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreBuy: RequestPrivateStoreBuy()
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreBuy: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreBuy: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreBuy: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreBuy: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreManageBuy
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreManageBuy: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreManageBuy: RequestPrivateStoreManageBuy()
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreManageBuy: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreManageBuy: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreManageBuy: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreManageBuy: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreManageSell
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreManageSell: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreManageSell: RequestPrivateStoreManageSell()
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreManageSell: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreManageSell: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreManageSell: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreManageSell: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreQuitBuy
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreQuitBuy: RequestPrivateStoreQuitBuy()
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreQuitBuy: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreQuitBuy: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreQuitBuy: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreQuitSell
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreQuitSell: RequestPrivateStoreQuitSell()
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreQuitSell: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreQuitSell: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreQuitSell: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreSell
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreSell: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreSell: int _storePlayerId
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreSell: int _count
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreSell: int _price
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreSell: com.l2jfrozen.gameserver.model.ItemRequest[] _items
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreSell: RequestPrivateStoreSell()
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreSell: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreSell: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreSell: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestPrivateStoreSell: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestProcureCropList
com.l2jfrozen.gameserver.network.clientpackets.RequestProcureCropList: int _size
com.l2jfrozen.gameserver.network.clientpackets.RequestProcureCropList: int[] _items
com.l2jfrozen.gameserver.network.clientpackets.RequestProcureCropList: RequestProcureCropList()
com.l2jfrozen.gameserver.network.clientpackets.RequestProcureCropList: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestProcureCropList: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestProcureCropList: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestQuestAbort
com.l2jfrozen.gameserver.network.clientpackets.RequestQuestAbort: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestQuestAbort: int _questId
com.l2jfrozen.gameserver.network.clientpackets.RequestQuestAbort: RequestQuestAbort()
com.l2jfrozen.gameserver.network.clientpackets.RequestQuestAbort: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestQuestAbort: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestQuestAbort: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestQuestAbort: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestQuestList
com.l2jfrozen.gameserver.network.clientpackets.RequestQuestList: RequestQuestList()
com.l2jfrozen.gameserver.network.clientpackets.RequestQuestList: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestQuestList: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestQuestList: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeBookDestroy
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeBookDestroy: int _recipeID
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeBookDestroy: RequestRecipeBookDestroy()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeBookDestroy: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeBookDestroy: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeBookDestroy: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeBookOpen
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeBookOpen: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeBookOpen: boolean _isDwarvenCraft
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeBookOpen: RequestRecipeBookOpen()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeBookOpen: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeBookOpen: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeBookOpen: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeBookOpen: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeItemMakeInfo
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeItemMakeInfo: int _id
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeItemMakeInfo: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeItemMakeInfo: RequestRecipeItemMakeInfo()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeItemMakeInfo: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeItemMakeInfo: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeItemMakeInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeItemMakeSelf
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeItemMakeSelf: int _id
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeItemMakeSelf: RequestRecipeItemMakeSelf()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeItemMakeSelf: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeItemMakeSelf: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeItemMakeSelf: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopListSet
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopListSet: int _count
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopListSet: int[] _items
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopListSet: RequestRecipeShopListSet()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopListSet: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopListSet: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopListSet: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopMakeInfo
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopMakeInfo: int _playerObjectId
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopMakeInfo: int _recipeId
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopMakeInfo: RequestRecipeShopMakeInfo()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopMakeInfo: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopMakeInfo: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopMakeInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopMakeItem
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopMakeItem: int _id
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopMakeItem: int _recipeId
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopMakeItem: int _unknow
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopMakeItem: RequestRecipeShopMakeItem()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopMakeItem: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopMakeItem: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopMakeItem: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopManageList
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopManageList: RequestRecipeShopManageList()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopManageList: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopManageList: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopManageList: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopManagePrev
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopManagePrev: RequestRecipeShopManagePrev()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopManagePrev: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopManagePrev: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopManagePrev: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopManageQuit
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopManageQuit: RequestRecipeShopManageQuit()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopManageQuit: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopManageQuit: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopManageQuit: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopMessageSet
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopMessageSet: java.lang.String _name
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopMessageSet: RequestRecipeShopMessageSet()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopMessageSet: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopMessageSet: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecipeShopMessageSet: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecordInfo
com.l2jfrozen.gameserver.network.clientpackets.RequestRecordInfo: RequestRecordInfo()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecordInfo: com.l2jfrozen.common.thread.TaskPriority getPriority()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecordInfo: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecordInfo: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestRecordInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestRefine
com.l2jfrozen.gameserver.network.clientpackets.RequestRefine: int _targetItemObjId
com.l2jfrozen.gameserver.network.clientpackets.RequestRefine: int _refinerItemObjId
com.l2jfrozen.gameserver.network.clientpackets.RequestRefine: int _gemstoneItemObjId
com.l2jfrozen.gameserver.network.clientpackets.RequestRefine: int _gemstoneCount
com.l2jfrozen.gameserver.network.clientpackets.RequestRefine: RequestRefine()
com.l2jfrozen.gameserver.network.clientpackets.RequestRefine: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestRefine: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestRefine: boolean TryAugmentItem(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance,com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.network.clientpackets.RequestRefine: int getLifeStoneGrade(int)
com.l2jfrozen.gameserver.network.clientpackets.RequestRefine: int getLifeStoneLevel(int)
com.l2jfrozen.gameserver.network.clientpackets.RequestRefine: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestRefineCancel
com.l2jfrozen.gameserver.network.clientpackets.RequestRefineCancel: int _targetItemObjId
com.l2jfrozen.gameserver.network.clientpackets.RequestRefineCancel: RequestRefineCancel()
com.l2jfrozen.gameserver.network.clientpackets.RequestRefineCancel: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestRefineCancel: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestRefineCancel: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestReplyStartPledgeWar
com.l2jfrozen.gameserver.network.clientpackets.RequestReplyStartPledgeWar: int _answer
com.l2jfrozen.gameserver.network.clientpackets.RequestReplyStartPledgeWar: RequestReplyStartPledgeWar()
com.l2jfrozen.gameserver.network.clientpackets.RequestReplyStartPledgeWar: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestReplyStartPledgeWar: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestReplyStartPledgeWar: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestReplyStopPledgeWar
com.l2jfrozen.gameserver.network.clientpackets.RequestReplyStopPledgeWar: int _answer
com.l2jfrozen.gameserver.network.clientpackets.RequestReplyStopPledgeWar: RequestReplyStopPledgeWar()
com.l2jfrozen.gameserver.network.clientpackets.RequestReplyStopPledgeWar: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestReplyStopPledgeWar: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestReplyStopPledgeWar: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestReplySurrenderPledgeWar
com.l2jfrozen.gameserver.network.clientpackets.RequestReplySurrenderPledgeWar: int _answer
com.l2jfrozen.gameserver.network.clientpackets.RequestReplySurrenderPledgeWar: RequestReplySurrenderPledgeWar()
com.l2jfrozen.gameserver.network.clientpackets.RequestReplySurrenderPledgeWar: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestReplySurrenderPledgeWar: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestReplySurrenderPledgeWar: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestRestart
com.l2jfrozen.gameserver.network.clientpackets.RequestRestart: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestRestart: RequestRestart()
com.l2jfrozen.gameserver.network.clientpackets.RequestRestart: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestRestart: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestRestart: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestRestart: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestRestartPoint
com.l2jfrozen.gameserver.network.clientpackets.RequestRestartPoint: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestRestartPoint: int _requestedPointType
com.l2jfrozen.gameserver.network.clientpackets.RequestRestartPoint: boolean _continuation
com.l2jfrozen.gameserver.network.clientpackets.RequestRestartPoint: RequestRestartPoint()
com.l2jfrozen.gameserver.network.clientpackets.RequestRestartPoint: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestRestartPoint: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestRestartPoint: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestRestartPoint: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestRestartPoint$DeathTask
com.l2jfrozen.gameserver.network.clientpackets.RequestRestartPoint$DeathTask: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance activeChar
com.l2jfrozen.gameserver.network.clientpackets.RequestRestartPoint$DeathTask: com.l2jfrozen.gameserver.network.clientpackets.RequestRestartPoint this$0
com.l2jfrozen.gameserver.network.clientpackets.RequestRestartPoint$DeathTask: RequestRestartPoint$DeathTask(com.l2jfrozen.gameserver.network.clientpackets.RequestRestartPoint,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.clientpackets.RequestRestartPoint$DeathTask: void run()
com.l2jfrozen.gameserver.network.clientpackets.RequestSSQStatus
com.l2jfrozen.gameserver.network.clientpackets.RequestSSQStatus: int _page
com.l2jfrozen.gameserver.network.clientpackets.RequestSSQStatus: RequestSSQStatus()
com.l2jfrozen.gameserver.network.clientpackets.RequestSSQStatus: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestSSQStatus: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestSSQStatus: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestSellItem
com.l2jfrozen.gameserver.network.clientpackets.RequestSellItem: int _listId
com.l2jfrozen.gameserver.network.clientpackets.RequestSellItem: int _count
com.l2jfrozen.gameserver.network.clientpackets.RequestSellItem: int[] _items
com.l2jfrozen.gameserver.network.clientpackets.RequestSellItem: RequestSellItem()
com.l2jfrozen.gameserver.network.clientpackets.RequestSellItem: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestSellItem: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestSellItem: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestSendFriendMsg
com.l2jfrozen.gameserver.network.clientpackets.RequestSendFriendMsg: java.util.logging.Logger _logChat
com.l2jfrozen.gameserver.network.clientpackets.RequestSendFriendMsg: java.lang.String _message
com.l2jfrozen.gameserver.network.clientpackets.RequestSendFriendMsg: java.lang.String _reciever
com.l2jfrozen.gameserver.network.clientpackets.RequestSendFriendMsg: RequestSendFriendMsg()
com.l2jfrozen.gameserver.network.clientpackets.RequestSendFriendMsg: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestSendFriendMsg: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestSendFriendMsg: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestSendFriendMsg: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestSetAllyCrest
com.l2jfrozen.gameserver.network.clientpackets.RequestSetAllyCrest: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestSetAllyCrest: int _length
com.l2jfrozen.gameserver.network.clientpackets.RequestSetAllyCrest: byte[] _data
com.l2jfrozen.gameserver.network.clientpackets.RequestSetAllyCrest: RequestSetAllyCrest()
com.l2jfrozen.gameserver.network.clientpackets.RequestSetAllyCrest: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestSetAllyCrest: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestSetAllyCrest: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestSetAllyCrest: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestSetCrop
com.l2jfrozen.gameserver.network.clientpackets.RequestSetCrop: int _size
com.l2jfrozen.gameserver.network.clientpackets.RequestSetCrop: int _manorId
com.l2jfrozen.gameserver.network.clientpackets.RequestSetCrop: int[] _items
com.l2jfrozen.gameserver.network.clientpackets.RequestSetCrop: RequestSetCrop()
com.l2jfrozen.gameserver.network.clientpackets.RequestSetCrop: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestSetCrop: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestSetCrop: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestSetPledgeCrest
com.l2jfrozen.gameserver.network.clientpackets.RequestSetPledgeCrest: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestSetPledgeCrest: int _length
com.l2jfrozen.gameserver.network.clientpackets.RequestSetPledgeCrest: byte[] _data
com.l2jfrozen.gameserver.network.clientpackets.RequestSetPledgeCrest: RequestSetPledgeCrest()
com.l2jfrozen.gameserver.network.clientpackets.RequestSetPledgeCrest: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestSetPledgeCrest: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestSetPledgeCrest: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestSetPledgeCrest: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestSetSeed
com.l2jfrozen.gameserver.network.clientpackets.RequestSetSeed: int _size
com.l2jfrozen.gameserver.network.clientpackets.RequestSetSeed: int _manorId
com.l2jfrozen.gameserver.network.clientpackets.RequestSetSeed: int[] _items
com.l2jfrozen.gameserver.network.clientpackets.RequestSetSeed: RequestSetSeed()
com.l2jfrozen.gameserver.network.clientpackets.RequestSetSeed: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestSetSeed: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestSetSeed: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestShortCutDel
com.l2jfrozen.gameserver.network.clientpackets.RequestShortCutDel: int _slot
com.l2jfrozen.gameserver.network.clientpackets.RequestShortCutDel: int _page
com.l2jfrozen.gameserver.network.clientpackets.RequestShortCutDel: RequestShortCutDel()
com.l2jfrozen.gameserver.network.clientpackets.RequestShortCutDel: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestShortCutDel: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestShortCutDel: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestShortCutReg
com.l2jfrozen.gameserver.network.clientpackets.RequestShortCutReg: int _type
com.l2jfrozen.gameserver.network.clientpackets.RequestShortCutReg: int _id
com.l2jfrozen.gameserver.network.clientpackets.RequestShortCutReg: int _slot
com.l2jfrozen.gameserver.network.clientpackets.RequestShortCutReg: int _page
com.l2jfrozen.gameserver.network.clientpackets.RequestShortCutReg: int _unk
com.l2jfrozen.gameserver.network.clientpackets.RequestShortCutReg: RequestShortCutReg()
com.l2jfrozen.gameserver.network.clientpackets.RequestShortCutReg: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestShortCutReg: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestShortCutReg: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestShowBoard
com.l2jfrozen.gameserver.network.clientpackets.RequestShowBoard: int _unknown
com.l2jfrozen.gameserver.network.clientpackets.RequestShowBoard: RequestShowBoard()
com.l2jfrozen.gameserver.network.clientpackets.RequestShowBoard: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestShowBoard: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestShowBoard: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestShowMiniMap
com.l2jfrozen.gameserver.network.clientpackets.RequestShowMiniMap: RequestShowMiniMap()
com.l2jfrozen.gameserver.network.clientpackets.RequestShowMiniMap: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestShowMiniMap: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestShowMiniMap: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestSiegeAttackerList
com.l2jfrozen.gameserver.network.clientpackets.RequestSiegeAttackerList: int _castleId
com.l2jfrozen.gameserver.network.clientpackets.RequestSiegeAttackerList: RequestSiegeAttackerList()
com.l2jfrozen.gameserver.network.clientpackets.RequestSiegeAttackerList: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestSiegeAttackerList: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestSiegeAttackerList: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestSiegeDefenderList
com.l2jfrozen.gameserver.network.clientpackets.RequestSiegeDefenderList: int _castleId
com.l2jfrozen.gameserver.network.clientpackets.RequestSiegeDefenderList: RequestSiegeDefenderList()
com.l2jfrozen.gameserver.network.clientpackets.RequestSiegeDefenderList: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestSiegeDefenderList: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestSiegeDefenderList: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestSiegeInfo
com.l2jfrozen.gameserver.network.clientpackets.RequestSiegeInfo: RequestSiegeInfo()
com.l2jfrozen.gameserver.network.clientpackets.RequestSiegeInfo: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestSiegeInfo: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestSiegeInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestSkillCoolTime
com.l2jfrozen.gameserver.network.clientpackets.RequestSkillCoolTime: RequestSkillCoolTime()
com.l2jfrozen.gameserver.network.clientpackets.RequestSkillCoolTime: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestSkillCoolTime: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestSkillCoolTime: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestSkillList
com.l2jfrozen.gameserver.network.clientpackets.RequestSkillList: RequestSkillList()
com.l2jfrozen.gameserver.network.clientpackets.RequestSkillList: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestSkillList: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestSkillList: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestSocialAction
com.l2jfrozen.gameserver.network.clientpackets.RequestSocialAction: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestSocialAction: int _actionId
com.l2jfrozen.gameserver.network.clientpackets.RequestSocialAction: RequestSocialAction()
com.l2jfrozen.gameserver.network.clientpackets.RequestSocialAction: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestSocialAction: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestSocialAction: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestSocialAction: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestStartPledgeWar
com.l2jfrozen.gameserver.network.clientpackets.RequestStartPledgeWar: java.lang.String _pledgeName
com.l2jfrozen.gameserver.network.clientpackets.RequestStartPledgeWar: com.l2jfrozen.gameserver.model.L2Clan _clan
com.l2jfrozen.gameserver.network.clientpackets.RequestStartPledgeWar: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance player
com.l2jfrozen.gameserver.network.clientpackets.RequestStartPledgeWar: RequestStartPledgeWar()
com.l2jfrozen.gameserver.network.clientpackets.RequestStartPledgeWar: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestStartPledgeWar: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestStartPledgeWar: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestStopPledgeWar
com.l2jfrozen.gameserver.network.clientpackets.RequestStopPledgeWar: java.lang.String _pledgeName
com.l2jfrozen.gameserver.network.clientpackets.RequestStopPledgeWar: RequestStopPledgeWar()
com.l2jfrozen.gameserver.network.clientpackets.RequestStopPledgeWar: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestStopPledgeWar: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestStopPledgeWar: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestSurrenderPersonally
com.l2jfrozen.gameserver.network.clientpackets.RequestSurrenderPersonally: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestSurrenderPersonally: java.lang.String _pledgeName
com.l2jfrozen.gameserver.network.clientpackets.RequestSurrenderPersonally: com.l2jfrozen.gameserver.model.L2Clan _clan
com.l2jfrozen.gameserver.network.clientpackets.RequestSurrenderPersonally: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.clientpackets.RequestSurrenderPersonally: RequestSurrenderPersonally()
com.l2jfrozen.gameserver.network.clientpackets.RequestSurrenderPersonally: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestSurrenderPersonally: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestSurrenderPersonally: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestSurrenderPersonally: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestSurrenderPledgeWar
com.l2jfrozen.gameserver.network.clientpackets.RequestSurrenderPledgeWar: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestSurrenderPledgeWar: java.lang.String _pledgeName
com.l2jfrozen.gameserver.network.clientpackets.RequestSurrenderPledgeWar: com.l2jfrozen.gameserver.model.L2Clan _clan
com.l2jfrozen.gameserver.network.clientpackets.RequestSurrenderPledgeWar: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.clientpackets.RequestSurrenderPledgeWar: RequestSurrenderPledgeWar()
com.l2jfrozen.gameserver.network.clientpackets.RequestSurrenderPledgeWar: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestSurrenderPledgeWar: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestSurrenderPledgeWar: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestSurrenderPledgeWar: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestTargetCanceld
com.l2jfrozen.gameserver.network.clientpackets.RequestTargetCanceld: int _unselect
com.l2jfrozen.gameserver.network.clientpackets.RequestTargetCanceld: RequestTargetCanceld()
com.l2jfrozen.gameserver.network.clientpackets.RequestTargetCanceld: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestTargetCanceld: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestTargetCanceld: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestTutorialClientEvent
com.l2jfrozen.gameserver.network.clientpackets.RequestTutorialClientEvent: int eventId
com.l2jfrozen.gameserver.network.clientpackets.RequestTutorialClientEvent: RequestTutorialClientEvent()
com.l2jfrozen.gameserver.network.clientpackets.RequestTutorialClientEvent: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestTutorialClientEvent: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestTutorialClientEvent: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestTutorialLinkHtml
com.l2jfrozen.gameserver.network.clientpackets.RequestTutorialLinkHtml: java.lang.String _bypass
com.l2jfrozen.gameserver.network.clientpackets.RequestTutorialLinkHtml: boolean protector_packet
com.l2jfrozen.gameserver.network.clientpackets.RequestTutorialLinkHtml: int answer_id
com.l2jfrozen.gameserver.network.clientpackets.RequestTutorialLinkHtml: RequestTutorialLinkHtml()
com.l2jfrozen.gameserver.network.clientpackets.RequestTutorialLinkHtml: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestTutorialLinkHtml: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestTutorialLinkHtml: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestTutorialPassCmdToServer
com.l2jfrozen.gameserver.network.clientpackets.RequestTutorialPassCmdToServer: java.lang.String _bypass
com.l2jfrozen.gameserver.network.clientpackets.RequestTutorialPassCmdToServer: RequestTutorialPassCmdToServer()
com.l2jfrozen.gameserver.network.clientpackets.RequestTutorialPassCmdToServer: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestTutorialPassCmdToServer: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestTutorialPassCmdToServer: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestTutorialQuestionMark
com.l2jfrozen.gameserver.network.clientpackets.RequestTutorialQuestionMark: int _number
com.l2jfrozen.gameserver.network.clientpackets.RequestTutorialQuestionMark: RequestTutorialQuestionMark()
com.l2jfrozen.gameserver.network.clientpackets.RequestTutorialQuestionMark: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestTutorialQuestionMark: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestTutorialQuestionMark: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestUnEquipItem
com.l2jfrozen.gameserver.network.clientpackets.RequestUnEquipItem: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestUnEquipItem: int _slot
com.l2jfrozen.gameserver.network.clientpackets.RequestUnEquipItem: RequestUnEquipItem()
com.l2jfrozen.gameserver.network.clientpackets.RequestUnEquipItem: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestUnEquipItem: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestUnEquipItem: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestUnEquipItem: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestUserCommand
com.l2jfrozen.gameserver.network.clientpackets.RequestUserCommand: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestUserCommand: int _command
com.l2jfrozen.gameserver.network.clientpackets.RequestUserCommand: RequestUserCommand()
com.l2jfrozen.gameserver.network.clientpackets.RequestUserCommand: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestUserCommand: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestUserCommand: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestUserCommand: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestWearItem
com.l2jfrozen.gameserver.network.clientpackets.RequestWearItem: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.RequestWearItem: java.util.concurrent.Future _removeWearItemsTask
com.l2jfrozen.gameserver.network.clientpackets.RequestWearItem: int _unknow
com.l2jfrozen.gameserver.network.clientpackets.RequestWearItem: int _listId
com.l2jfrozen.gameserver.network.clientpackets.RequestWearItem: int _count
com.l2jfrozen.gameserver.network.clientpackets.RequestWearItem: int[] _items
com.l2jfrozen.gameserver.network.clientpackets.RequestWearItem: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.clientpackets.RequestWearItem: RequestWearItem()
com.l2jfrozen.gameserver.network.clientpackets.RequestWearItem: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestWearItem: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestWearItem: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestWearItem: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.RequestWearItem$RemoveWearItemsTask
com.l2jfrozen.gameserver.network.clientpackets.RequestWearItem$RemoveWearItemsTask: com.l2jfrozen.gameserver.network.clientpackets.RequestWearItem this$0
com.l2jfrozen.gameserver.network.clientpackets.RequestWearItem$RemoveWearItemsTask: RequestWearItem$RemoveWearItemsTask(com.l2jfrozen.gameserver.network.clientpackets.RequestWearItem)
com.l2jfrozen.gameserver.network.clientpackets.RequestWearItem$RemoveWearItemsTask: void run()
com.l2jfrozen.gameserver.network.clientpackets.RequestWithDrawalParty
com.l2jfrozen.gameserver.network.clientpackets.RequestWithDrawalParty: RequestWithDrawalParty()
com.l2jfrozen.gameserver.network.clientpackets.RequestWithDrawalParty: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestWithDrawalParty: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestWithDrawalParty: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestWithdrawPartyRoom
com.l2jfrozen.gameserver.network.clientpackets.RequestWithdrawPartyRoom: int _roomid
com.l2jfrozen.gameserver.network.clientpackets.RequestWithdrawPartyRoom: int _unk1
com.l2jfrozen.gameserver.network.clientpackets.RequestWithdrawPartyRoom: RequestWithdrawPartyRoom()
com.l2jfrozen.gameserver.network.clientpackets.RequestWithdrawPartyRoom: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestWithdrawPartyRoom: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestWithdrawPartyRoom: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestWithdrawalPledge
com.l2jfrozen.gameserver.network.clientpackets.RequestWithdrawalPledge: RequestWithdrawalPledge()
com.l2jfrozen.gameserver.network.clientpackets.RequestWithdrawalPledge: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestWithdrawalPledge: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestWithdrawalPledge: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.RequestWriteHeroWords
com.l2jfrozen.gameserver.network.clientpackets.RequestWriteHeroWords: java.lang.String _heroWords
com.l2jfrozen.gameserver.network.clientpackets.RequestWriteHeroWords: RequestWriteHeroWords()
com.l2jfrozen.gameserver.network.clientpackets.RequestWriteHeroWords: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestWriteHeroWords: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.RequestWriteHeroWords: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.Say2
com.l2jfrozen.gameserver.network.clientpackets.Say2: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.Say2: java.util.logging.Logger _logChat
com.l2jfrozen.gameserver.network.clientpackets.Say2: int ALL
com.l2jfrozen.gameserver.network.clientpackets.Say2: int SHOUT
com.l2jfrozen.gameserver.network.clientpackets.Say2: int TELL
com.l2jfrozen.gameserver.network.clientpackets.Say2: int PARTY
com.l2jfrozen.gameserver.network.clientpackets.Say2: int CLAN
com.l2jfrozen.gameserver.network.clientpackets.Say2: int GM
com.l2jfrozen.gameserver.network.clientpackets.Say2: int PETITION_PLAYER
com.l2jfrozen.gameserver.network.clientpackets.Say2: int PETITION_GM
com.l2jfrozen.gameserver.network.clientpackets.Say2: int TRADE
com.l2jfrozen.gameserver.network.clientpackets.Say2: int ALLIANCE
com.l2jfrozen.gameserver.network.clientpackets.Say2: int ANNOUNCEMENT
com.l2jfrozen.gameserver.network.clientpackets.Say2: int PARTYROOM_ALL
com.l2jfrozen.gameserver.network.clientpackets.Say2: int PARTYROOM_COMMANDER
com.l2jfrozen.gameserver.network.clientpackets.Say2: int HERO_VOICE
com.l2jfrozen.gameserver.network.clientpackets.Say2: int CRITICAL_ANNOUNCE
com.l2jfrozen.gameserver.network.clientpackets.Say2: java.lang.String[] CHAT_NAMES
com.l2jfrozen.gameserver.network.clientpackets.Say2: java.lang.String _text
com.l2jfrozen.gameserver.network.clientpackets.Say2: int _type
com.l2jfrozen.gameserver.network.clientpackets.Say2: com.l2jfrozen.gameserver.network.SystemChatChannelId _type2Check
com.l2jfrozen.gameserver.network.clientpackets.Say2: java.lang.String _target
com.l2jfrozen.gameserver.network.clientpackets.Say2: java.lang.String[] WALKER_COMMAND_LIST
com.l2jfrozen.gameserver.network.clientpackets.Say2: Say2()
com.l2jfrozen.gameserver.network.clientpackets.Say2: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.Say2: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.Say2: boolean checkBot(java.lang.String)
com.l2jfrozen.gameserver.network.clientpackets.Say2: void checkText(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.clientpackets.Say2: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.Say2: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.SendBypassBuildCmd
com.l2jfrozen.gameserver.network.clientpackets.SendBypassBuildCmd: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.SendBypassBuildCmd: int GM_MESSAGE
com.l2jfrozen.gameserver.network.clientpackets.SendBypassBuildCmd: int ANNOUNCEMENT
com.l2jfrozen.gameserver.network.clientpackets.SendBypassBuildCmd: java.lang.String _command
com.l2jfrozen.gameserver.network.clientpackets.SendBypassBuildCmd: SendBypassBuildCmd()
com.l2jfrozen.gameserver.network.clientpackets.SendBypassBuildCmd: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.SendBypassBuildCmd: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.SendBypassBuildCmd: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.SendBypassBuildCmd: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.SendWareHouseDepositList
com.l2jfrozen.gameserver.network.clientpackets.SendWareHouseDepositList: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.SendWareHouseDepositList: int _count
com.l2jfrozen.gameserver.network.clientpackets.SendWareHouseDepositList: int[] _items
com.l2jfrozen.gameserver.network.clientpackets.SendWareHouseDepositList: SendWareHouseDepositList()
com.l2jfrozen.gameserver.network.clientpackets.SendWareHouseDepositList: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.SendWareHouseDepositList: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.SendWareHouseDepositList: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.SendWareHouseDepositList: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.SendWareHouseWithDrawList
com.l2jfrozen.gameserver.network.clientpackets.SendWareHouseWithDrawList: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.SendWareHouseWithDrawList: int _count
com.l2jfrozen.gameserver.network.clientpackets.SendWareHouseWithDrawList: int[] _items
com.l2jfrozen.gameserver.network.clientpackets.SendWareHouseWithDrawList: SendWareHouseWithDrawList()
com.l2jfrozen.gameserver.network.clientpackets.SendWareHouseWithDrawList: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.SendWareHouseWithDrawList: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.SendWareHouseWithDrawList: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.SendWareHouseWithDrawList: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.SetPrivateStoreListBuy
com.l2jfrozen.gameserver.network.clientpackets.SetPrivateStoreListBuy: int _count
com.l2jfrozen.gameserver.network.clientpackets.SetPrivateStoreListBuy: int[] _items
com.l2jfrozen.gameserver.network.clientpackets.SetPrivateStoreListBuy: SetPrivateStoreListBuy()
com.l2jfrozen.gameserver.network.clientpackets.SetPrivateStoreListBuy: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.SetPrivateStoreListBuy: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.SetPrivateStoreListBuy: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.SetPrivateStoreListSell
com.l2jfrozen.gameserver.network.clientpackets.SetPrivateStoreListSell: int _count
com.l2jfrozen.gameserver.network.clientpackets.SetPrivateStoreListSell: boolean _packageSale
com.l2jfrozen.gameserver.network.clientpackets.SetPrivateStoreListSell: int[] _items
com.l2jfrozen.gameserver.network.clientpackets.SetPrivateStoreListSell: SetPrivateStoreListSell()
com.l2jfrozen.gameserver.network.clientpackets.SetPrivateStoreListSell: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.SetPrivateStoreListSell: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.SetPrivateStoreListSell: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.SetPrivateStoreMsgBuy
com.l2jfrozen.gameserver.network.clientpackets.SetPrivateStoreMsgBuy: java.lang.String _storeMsg
com.l2jfrozen.gameserver.network.clientpackets.SetPrivateStoreMsgBuy: SetPrivateStoreMsgBuy()
com.l2jfrozen.gameserver.network.clientpackets.SetPrivateStoreMsgBuy: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.SetPrivateStoreMsgBuy: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.SetPrivateStoreMsgBuy: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.SetPrivateStoreMsgSell
com.l2jfrozen.gameserver.network.clientpackets.SetPrivateStoreMsgSell: java.lang.String _storeMsg
com.l2jfrozen.gameserver.network.clientpackets.SetPrivateStoreMsgSell: SetPrivateStoreMsgSell()
com.l2jfrozen.gameserver.network.clientpackets.SetPrivateStoreMsgSell: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.SetPrivateStoreMsgSell: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.SetPrivateStoreMsgSell: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.SnoopQuit
com.l2jfrozen.gameserver.network.clientpackets.SnoopQuit: int _snoopID
com.l2jfrozen.gameserver.network.clientpackets.SnoopQuit: SnoopQuit()
com.l2jfrozen.gameserver.network.clientpackets.SnoopQuit: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.SnoopQuit: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.SnoopQuit: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.StartRotating
com.l2jfrozen.gameserver.network.clientpackets.StartRotating: int _degree
com.l2jfrozen.gameserver.network.clientpackets.StartRotating: int _side
com.l2jfrozen.gameserver.network.clientpackets.StartRotating: StartRotating()
com.l2jfrozen.gameserver.network.clientpackets.StartRotating: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.StartRotating: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.StartRotating: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.SuperCmdCharacterInfo
com.l2jfrozen.gameserver.network.clientpackets.SuperCmdCharacterInfo: java.lang.String _characterName
com.l2jfrozen.gameserver.network.clientpackets.SuperCmdCharacterInfo: SuperCmdCharacterInfo()
com.l2jfrozen.gameserver.network.clientpackets.SuperCmdCharacterInfo: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.SuperCmdCharacterInfo: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.SuperCmdCharacterInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.SuperCmdServerStatus
com.l2jfrozen.gameserver.network.clientpackets.SuperCmdServerStatus: SuperCmdServerStatus()
com.l2jfrozen.gameserver.network.clientpackets.SuperCmdServerStatus: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.SuperCmdServerStatus: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.SuperCmdServerStatus: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.SuperCmdSummonCmd
com.l2jfrozen.gameserver.network.clientpackets.SuperCmdSummonCmd: java.lang.String _summonName
com.l2jfrozen.gameserver.network.clientpackets.SuperCmdSummonCmd: SuperCmdSummonCmd()
com.l2jfrozen.gameserver.network.clientpackets.SuperCmdSummonCmd: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.SuperCmdSummonCmd: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.SuperCmdSummonCmd: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.TradeDone
com.l2jfrozen.gameserver.network.clientpackets.TradeDone: int _response
com.l2jfrozen.gameserver.network.clientpackets.TradeDone: TradeDone()
com.l2jfrozen.gameserver.network.clientpackets.TradeDone: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.TradeDone: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.TradeDone: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.TradeRequest
com.l2jfrozen.gameserver.network.clientpackets.TradeRequest: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.TradeRequest: int _objectId
com.l2jfrozen.gameserver.network.clientpackets.TradeRequest: TradeRequest()
com.l2jfrozen.gameserver.network.clientpackets.TradeRequest: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.TradeRequest: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.TradeRequest: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.TradeRequest: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.UseItem
com.l2jfrozen.gameserver.network.clientpackets.UseItem: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.UseItem: int _objectId
com.l2jfrozen.gameserver.network.clientpackets.UseItem: UseItem()
com.l2jfrozen.gameserver.network.clientpackets.UseItem: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.UseItem: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.UseItem: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.UseItem: void <clinit>()
com.l2jfrozen.gameserver.network.clientpackets.ValidatePosition
com.l2jfrozen.gameserver.network.clientpackets.ValidatePosition: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.clientpackets.ValidatePosition: int _x
com.l2jfrozen.gameserver.network.clientpackets.ValidatePosition: int _y
com.l2jfrozen.gameserver.network.clientpackets.ValidatePosition: int _z
com.l2jfrozen.gameserver.network.clientpackets.ValidatePosition: int _heading
com.l2jfrozen.gameserver.network.clientpackets.ValidatePosition: int _data
com.l2jfrozen.gameserver.network.clientpackets.ValidatePosition: ValidatePosition()
com.l2jfrozen.gameserver.network.clientpackets.ValidatePosition: void readImpl()
com.l2jfrozen.gameserver.network.clientpackets.ValidatePosition: void runImpl()
com.l2jfrozen.gameserver.network.clientpackets.ValidatePosition: void clientToServer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.clientpackets.ValidatePosition: boolean equal(com.l2jfrozen.gameserver.network.clientpackets.ValidatePosition)
com.l2jfrozen.gameserver.network.clientpackets.ValidatePosition: java.lang.String getType()
com.l2jfrozen.gameserver.network.clientpackets.ValidatePosition: void <clinit>()
com.l2jfrozen.gameserver.network.gameserverpackets.AuthRequest
com.l2jfrozen.gameserver.network.gameserverpackets.AuthRequest: AuthRequest(int,boolean,byte[],int,boolean,int,java.util.List,java.util.List)
com.l2jfrozen.gameserver.network.gameserverpackets.AuthRequest: byte[] getContent()
com.l2jfrozen.gameserver.network.gameserverpackets.BlowFishKey
com.l2jfrozen.gameserver.network.gameserverpackets.BlowFishKey: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.gameserverpackets.BlowFishKey: BlowFishKey(byte[],java.security.interfaces.RSAPublicKey)
com.l2jfrozen.gameserver.network.gameserverpackets.BlowFishKey: byte[] getContent()
com.l2jfrozen.gameserver.network.gameserverpackets.BlowFishKey: void <clinit>()
com.l2jfrozen.gameserver.network.gameserverpackets.ChangeAccessLevel
com.l2jfrozen.gameserver.network.gameserverpackets.ChangeAccessLevel: ChangeAccessLevel(java.lang.String,int)
com.l2jfrozen.gameserver.network.gameserverpackets.ChangeAccessLevel: byte[] getContent()
com.l2jfrozen.gameserver.network.gameserverpackets.PlayerAuthRequest
com.l2jfrozen.gameserver.network.gameserverpackets.PlayerAuthRequest: PlayerAuthRequest(java.lang.String,com.l2jfrozen.netcore.SessionKey)
com.l2jfrozen.gameserver.network.gameserverpackets.PlayerAuthRequest: byte[] getContent()
com.l2jfrozen.gameserver.network.gameserverpackets.PlayerInGame
com.l2jfrozen.gameserver.network.gameserverpackets.PlayerInGame: PlayerInGame(java.lang.String)
com.l2jfrozen.gameserver.network.gameserverpackets.PlayerInGame: PlayerInGame(java.util.List)
com.l2jfrozen.gameserver.network.gameserverpackets.PlayerInGame: byte[] getContent()
com.l2jfrozen.gameserver.network.gameserverpackets.PlayerLogout
com.l2jfrozen.gameserver.network.gameserverpackets.PlayerLogout: PlayerLogout(java.lang.String)
com.l2jfrozen.gameserver.network.gameserverpackets.PlayerLogout: byte[] getContent()
com.l2jfrozen.gameserver.network.gameserverpackets.PlayerTracert
com.l2jfrozen.gameserver.network.gameserverpackets.PlayerTracert: PlayerTracert(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.network.gameserverpackets.PlayerTracert: byte[] getContent()
com.l2jfrozen.gameserver.network.gameserverpackets.ServerStatus
com.l2jfrozen.gameserver.network.gameserverpackets.ServerStatus: java.util.ArrayList _attributes
com.l2jfrozen.gameserver.network.gameserverpackets.ServerStatus: java.lang.String[] STATUS_STRING
com.l2jfrozen.gameserver.network.gameserverpackets.ServerStatus: int SERVER_LIST_STATUS
com.l2jfrozen.gameserver.network.gameserverpackets.ServerStatus: int SERVER_TYPE
com.l2jfrozen.gameserver.network.gameserverpackets.ServerStatus: int SERVER_LIST_SQUARE_BRACKET
com.l2jfrozen.gameserver.network.gameserverpackets.ServerStatus: int MAX_PLAYERS
com.l2jfrozen.gameserver.network.gameserverpackets.ServerStatus: int SERVER_AGE
com.l2jfrozen.gameserver.network.gameserverpackets.ServerStatus: int STATUS_AUTO
com.l2jfrozen.gameserver.network.gameserverpackets.ServerStatus: int STATUS_GOOD
com.l2jfrozen.gameserver.network.gameserverpackets.ServerStatus: int STATUS_NORMAL
com.l2jfrozen.gameserver.network.gameserverpackets.ServerStatus: int STATUS_FULL
com.l2jfrozen.gameserver.network.gameserverpackets.ServerStatus: int STATUS_DOWN
com.l2jfrozen.gameserver.network.gameserverpackets.ServerStatus: int STATUS_GM_ONLY
com.l2jfrozen.gameserver.network.gameserverpackets.ServerStatus: int SERVER_NORMAL
com.l2jfrozen.gameserver.network.gameserverpackets.ServerStatus: int SERVER_RELAX
com.l2jfrozen.gameserver.network.gameserverpackets.ServerStatus: int SERVER_TEST
com.l2jfrozen.gameserver.network.gameserverpackets.ServerStatus: int SERVER_NOLABEL
com.l2jfrozen.gameserver.network.gameserverpackets.ServerStatus: int SERVER_CREATION_RESTRICTED
com.l2jfrozen.gameserver.network.gameserverpackets.ServerStatus: int SERVER_EVENT
com.l2jfrozen.gameserver.network.gameserverpackets.ServerStatus: int SERVER_FREE
com.l2jfrozen.gameserver.network.gameserverpackets.ServerStatus: int SERVER_AGE_ALL
com.l2jfrozen.gameserver.network.gameserverpackets.ServerStatus: int SERVER_AGE_15
com.l2jfrozen.gameserver.network.gameserverpackets.ServerStatus: int SERVER_AGE_18
com.l2jfrozen.gameserver.network.gameserverpackets.ServerStatus: int ON
com.l2jfrozen.gameserver.network.gameserverpackets.ServerStatus: int OFF
com.l2jfrozen.gameserver.network.gameserverpackets.ServerStatus: ServerStatus()
com.l2jfrozen.gameserver.network.gameserverpackets.ServerStatus: void addAttribute(int,int)
com.l2jfrozen.gameserver.network.gameserverpackets.ServerStatus: byte[] getContent()
com.l2jfrozen.gameserver.network.gameserverpackets.ServerStatus: void <clinit>()
com.l2jfrozen.gameserver.network.gameserverpackets.ServerStatus$Attribute
com.l2jfrozen.gameserver.network.gameserverpackets.ServerStatus$Attribute: int id
com.l2jfrozen.gameserver.network.gameserverpackets.ServerStatus$Attribute: int value
com.l2jfrozen.gameserver.network.gameserverpackets.ServerStatus$Attribute: ServerStatus$Attribute(int,int)
com.l2jfrozen.gameserver.network.loginserverpackets.AuthResponse
com.l2jfrozen.gameserver.network.loginserverpackets.AuthResponse: int _serverId
com.l2jfrozen.gameserver.network.loginserverpackets.AuthResponse: java.lang.String _serverName
com.l2jfrozen.gameserver.network.loginserverpackets.AuthResponse: AuthResponse(byte[])
com.l2jfrozen.gameserver.network.loginserverpackets.AuthResponse: int getServerId()
com.l2jfrozen.gameserver.network.loginserverpackets.AuthResponse: java.lang.String getServerName()
com.l2jfrozen.gameserver.network.loginserverpackets.InitLS
com.l2jfrozen.gameserver.network.loginserverpackets.InitLS: int _rev
com.l2jfrozen.gameserver.network.loginserverpackets.InitLS: byte[] _key
com.l2jfrozen.gameserver.network.loginserverpackets.InitLS: int getRevision()
com.l2jfrozen.gameserver.network.loginserverpackets.InitLS: byte[] getRSAKey()
com.l2jfrozen.gameserver.network.loginserverpackets.InitLS: InitLS(byte[])
com.l2jfrozen.gameserver.network.loginserverpackets.KickPlayer
com.l2jfrozen.gameserver.network.loginserverpackets.KickPlayer: java.lang.String _account
com.l2jfrozen.gameserver.network.loginserverpackets.KickPlayer: KickPlayer(byte[])
com.l2jfrozen.gameserver.network.loginserverpackets.KickPlayer: java.lang.String getAccount()
com.l2jfrozen.gameserver.network.loginserverpackets.LoginServerFail
com.l2jfrozen.gameserver.network.loginserverpackets.LoginServerFail: java.lang.String[] REASONS
com.l2jfrozen.gameserver.network.loginserverpackets.LoginServerFail: int _reason
com.l2jfrozen.gameserver.network.loginserverpackets.LoginServerFail: LoginServerFail(byte[])
com.l2jfrozen.gameserver.network.loginserverpackets.LoginServerFail: java.lang.String getReasonString()
com.l2jfrozen.gameserver.network.loginserverpackets.LoginServerFail: int getReason()
com.l2jfrozen.gameserver.network.loginserverpackets.LoginServerFail: void <clinit>()
com.l2jfrozen.gameserver.network.loginserverpackets.PlayerAuthResponse
com.l2jfrozen.gameserver.network.loginserverpackets.PlayerAuthResponse: java.lang.String _account
com.l2jfrozen.gameserver.network.loginserverpackets.PlayerAuthResponse: boolean _authed
com.l2jfrozen.gameserver.network.loginserverpackets.PlayerAuthResponse: PlayerAuthResponse(byte[])
com.l2jfrozen.gameserver.network.loginserverpackets.PlayerAuthResponse: java.lang.String getAccount()
com.l2jfrozen.gameserver.network.loginserverpackets.PlayerAuthResponse: boolean isAuthed()
com.l2jfrozen.gameserver.network.serverpackets.AbstractServerBasePacket
com.l2jfrozen.gameserver.network.serverpackets.AbstractServerBasePacket: AbstractServerBasePacket()
com.l2jfrozen.gameserver.network.serverpackets.AbstractServerBasePacket: void runImpl()
com.l2jfrozen.gameserver.network.serverpackets.AbstractServerBasePacket: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.AbstractServerBasePacket: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ActionFailed
com.l2jfrozen.gameserver.network.serverpackets.ActionFailed: java.lang.String _S__25_ACTIONFAILED
com.l2jfrozen.gameserver.network.serverpackets.ActionFailed: com.l2jfrozen.gameserver.network.serverpackets.ActionFailed STATIC_PACKET
com.l2jfrozen.gameserver.network.serverpackets.ActionFailed: ActionFailed()
com.l2jfrozen.gameserver.network.serverpackets.ActionFailed: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ActionFailed: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ActionFailed: void <clinit>()
com.l2jfrozen.gameserver.network.serverpackets.AdminForgePacket
com.l2jfrozen.gameserver.network.serverpackets.AdminForgePacket: java.util.List _parts
com.l2jfrozen.gameserver.network.serverpackets.AdminForgePacket: AdminForgePacket()
com.l2jfrozen.gameserver.network.serverpackets.AdminForgePacket: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.AdminForgePacket: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.AdminForgePacket: boolean generate(byte,java.lang.String)
com.l2jfrozen.gameserver.network.serverpackets.AdminForgePacket: void addPart(byte,java.lang.String)
com.l2jfrozen.gameserver.network.serverpackets.AdminForgePacket$Part
com.l2jfrozen.gameserver.network.serverpackets.AdminForgePacket$Part: byte b
com.l2jfrozen.gameserver.network.serverpackets.AdminForgePacket$Part: java.lang.String str
com.l2jfrozen.gameserver.network.serverpackets.AdminForgePacket$Part: com.l2jfrozen.gameserver.network.serverpackets.AdminForgePacket this$0
com.l2jfrozen.gameserver.network.serverpackets.AdminForgePacket$Part: AdminForgePacket$Part(com.l2jfrozen.gameserver.network.serverpackets.AdminForgePacket,byte,java.lang.String)
com.l2jfrozen.gameserver.network.serverpackets.AllyCrest
com.l2jfrozen.gameserver.network.serverpackets.AllyCrest: java.lang.String _S__C7_ALLYCREST
com.l2jfrozen.gameserver.network.serverpackets.AllyCrest: int _crestId
com.l2jfrozen.gameserver.network.serverpackets.AllyCrest: byte[] _data
com.l2jfrozen.gameserver.network.serverpackets.AllyCrest: AllyCrest(int)
com.l2jfrozen.gameserver.network.serverpackets.AllyCrest: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.AllyCrest: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.AllyInfo
com.l2jfrozen.gameserver.network.serverpackets.AllyInfo: java.lang.String _S__7A_FRIENDLIST
com.l2jfrozen.gameserver.network.serverpackets.AllyInfo: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _cha
com.l2jfrozen.gameserver.network.serverpackets.AllyInfo: AllyInfo(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.AllyInfo: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.AllyInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.AquireSkillInfo
com.l2jfrozen.gameserver.network.serverpackets.AquireSkillInfo: java.lang.String _S__A4_AQUIRESKILLINFO
com.l2jfrozen.gameserver.network.serverpackets.AquireSkillInfo: java.util.List _reqs
com.l2jfrozen.gameserver.network.serverpackets.AquireSkillInfo: int _id
com.l2jfrozen.gameserver.network.serverpackets.AquireSkillInfo: int _level
com.l2jfrozen.gameserver.network.serverpackets.AquireSkillInfo: int _spCost
com.l2jfrozen.gameserver.network.serverpackets.AquireSkillInfo: int _mode
com.l2jfrozen.gameserver.network.serverpackets.AquireSkillInfo: AquireSkillInfo(int,int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.AquireSkillInfo: void addRequirement(int,int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.AquireSkillInfo: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.AquireSkillInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.AquireSkillInfo$Req
com.l2jfrozen.gameserver.network.serverpackets.AquireSkillInfo$Req: int itemId
com.l2jfrozen.gameserver.network.serverpackets.AquireSkillInfo$Req: int count
com.l2jfrozen.gameserver.network.serverpackets.AquireSkillInfo$Req: int type
com.l2jfrozen.gameserver.network.serverpackets.AquireSkillInfo$Req: int unk
com.l2jfrozen.gameserver.network.serverpackets.AquireSkillInfo$Req: com.l2jfrozen.gameserver.network.serverpackets.AquireSkillInfo this$0
com.l2jfrozen.gameserver.network.serverpackets.AquireSkillInfo$Req: AquireSkillInfo$Req(com.l2jfrozen.gameserver.network.serverpackets.AquireSkillInfo,int,int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.AquireSkillList
com.l2jfrozen.gameserver.network.serverpackets.AquireSkillList: java.lang.String _S__A3_AQUIRESKILLLIST
com.l2jfrozen.gameserver.network.serverpackets.AquireSkillList: java.util.List _skills
com.l2jfrozen.gameserver.network.serverpackets.AquireSkillList: com.l2jfrozen.gameserver.network.serverpackets.skillType _fishingSkills
com.l2jfrozen.gameserver.network.serverpackets.AquireSkillList: AquireSkillList(com.l2jfrozen.gameserver.network.serverpackets.skillType)
com.l2jfrozen.gameserver.network.serverpackets.AquireSkillList: void addSkill(int,int,int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.AquireSkillList: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.AquireSkillList: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.AquireSkillList$Skill
com.l2jfrozen.gameserver.network.serverpackets.AquireSkillList$Skill: int id
com.l2jfrozen.gameserver.network.serverpackets.AquireSkillList$Skill: int nextLevel
com.l2jfrozen.gameserver.network.serverpackets.AquireSkillList$Skill: int maxLevel
com.l2jfrozen.gameserver.network.serverpackets.AquireSkillList$Skill: int spCost
com.l2jfrozen.gameserver.network.serverpackets.AquireSkillList$Skill: int requirements
com.l2jfrozen.gameserver.network.serverpackets.AquireSkillList$Skill: com.l2jfrozen.gameserver.network.serverpackets.AquireSkillList this$0
com.l2jfrozen.gameserver.network.serverpackets.AquireSkillList$Skill: AquireSkillList$Skill(com.l2jfrozen.gameserver.network.serverpackets.AquireSkillList,int,int,int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.AskJoinAlly
com.l2jfrozen.gameserver.network.serverpackets.AskJoinAlly: java.lang.String _S__A8_ASKJOINALLY_0XA8
com.l2jfrozen.gameserver.network.serverpackets.AskJoinAlly: java.lang.String _requestorName
com.l2jfrozen.gameserver.network.serverpackets.AskJoinAlly: int _requestorObjId
com.l2jfrozen.gameserver.network.serverpackets.AskJoinAlly: AskJoinAlly(int,java.lang.String)
com.l2jfrozen.gameserver.network.serverpackets.AskJoinAlly: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.AskJoinAlly: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.AskJoinFriend
com.l2jfrozen.gameserver.network.serverpackets.AskJoinFriend: java.lang.String _S__7d_ASKJoinFriend_0X7d
com.l2jfrozen.gameserver.network.serverpackets.AskJoinFriend: java.lang.String _requestorName
com.l2jfrozen.gameserver.network.serverpackets.AskJoinFriend: AskJoinFriend(java.lang.String)
com.l2jfrozen.gameserver.network.serverpackets.AskJoinFriend: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.AskJoinFriend: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.AskJoinParty
com.l2jfrozen.gameserver.network.serverpackets.AskJoinParty: java.lang.String _S__4B_ASKJOINPARTY_0X4B
com.l2jfrozen.gameserver.network.serverpackets.AskJoinParty: java.lang.String _requestorName
com.l2jfrozen.gameserver.network.serverpackets.AskJoinParty: int _itemDistribution
com.l2jfrozen.gameserver.network.serverpackets.AskJoinParty: AskJoinParty(java.lang.String,int)
com.l2jfrozen.gameserver.network.serverpackets.AskJoinParty: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.AskJoinParty: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.AskJoinPledge
com.l2jfrozen.gameserver.network.serverpackets.AskJoinPledge: int _requestorObjId
com.l2jfrozen.gameserver.network.serverpackets.AskJoinPledge: java.lang.String _pledgeName
com.l2jfrozen.gameserver.network.serverpackets.AskJoinPledge: AskJoinPledge(int,java.lang.String)
com.l2jfrozen.gameserver.network.serverpackets.AskJoinPledge: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.AskJoinPledge: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.Attack
com.l2jfrozen.gameserver.network.serverpackets.Attack: java.lang.String _S__06_ATTACK
com.l2jfrozen.gameserver.network.serverpackets.Attack: int _attackerObjId
com.l2jfrozen.gameserver.network.serverpackets.Attack: boolean soulshot
com.l2jfrozen.gameserver.network.serverpackets.Attack: int _grade
com.l2jfrozen.gameserver.network.serverpackets.Attack: int _x
com.l2jfrozen.gameserver.network.serverpackets.Attack: int _y
com.l2jfrozen.gameserver.network.serverpackets.Attack: int _z
com.l2jfrozen.gameserver.network.serverpackets.Attack: com.l2jfrozen.gameserver.network.serverpackets.Attack$Hit[] _hits
com.l2jfrozen.gameserver.network.serverpackets.Attack: Attack(com.l2jfrozen.gameserver.model.L2Character,boolean,int)
com.l2jfrozen.gameserver.network.serverpackets.Attack: void addHit(com.l2jfrozen.gameserver.model.L2Object,int,boolean,boolean,boolean)
com.l2jfrozen.gameserver.network.serverpackets.Attack: boolean hasHits()
com.l2jfrozen.gameserver.network.serverpackets.Attack: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.Attack: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.Attack$Hit
com.l2jfrozen.gameserver.network.serverpackets.Attack$Hit: int _targetId
com.l2jfrozen.gameserver.network.serverpackets.Attack$Hit: int _damage
com.l2jfrozen.gameserver.network.serverpackets.Attack$Hit: int _flags
com.l2jfrozen.gameserver.network.serverpackets.Attack$Hit: com.l2jfrozen.gameserver.network.serverpackets.Attack this$0
com.l2jfrozen.gameserver.network.serverpackets.Attack$Hit: Attack$Hit(com.l2jfrozen.gameserver.network.serverpackets.Attack,com.l2jfrozen.gameserver.model.L2Object,int,boolean,boolean,boolean)
com.l2jfrozen.gameserver.network.serverpackets.AuthLoginFail
com.l2jfrozen.gameserver.network.serverpackets.AuthLoginFail: java.lang.String _S__12_AUTHLOGINFAIL
com.l2jfrozen.gameserver.network.serverpackets.AuthLoginFail: int NO_TEXT
com.l2jfrozen.gameserver.network.serverpackets.AuthLoginFail: int SYSTEM_ERROR_LOGIN_LATER
com.l2jfrozen.gameserver.network.serverpackets.AuthLoginFail: int PASSWORD_DOES_NOT_MATCH_THIS_ACCOUNT
com.l2jfrozen.gameserver.network.serverpackets.AuthLoginFail: int PASSWORD_DOES_NOT_MATCH_THIS_ACCOUNT2
com.l2jfrozen.gameserver.network.serverpackets.AuthLoginFail: int ACCESS_FAILED_TRY_LATER
com.l2jfrozen.gameserver.network.serverpackets.AuthLoginFail: int INCORRECT_ACCOUNT_INFO_CONTACT_CUSTOMER_SUPPORT
com.l2jfrozen.gameserver.network.serverpackets.AuthLoginFail: int ACCESS_FAILED_TRY_LATER2
com.l2jfrozen.gameserver.network.serverpackets.AuthLoginFail: int ACOUNT_ALREADY_IN_USE
com.l2jfrozen.gameserver.network.serverpackets.AuthLoginFail: int ACCESS_FAILED_TRY_LATER3
com.l2jfrozen.gameserver.network.serverpackets.AuthLoginFail: int ACCESS_FAILED_TRY_LATER4
com.l2jfrozen.gameserver.network.serverpackets.AuthLoginFail: int ACCESS_FAILED_TRY_LATER5
com.l2jfrozen.gameserver.network.serverpackets.AuthLoginFail: int _reason
com.l2jfrozen.gameserver.network.serverpackets.AuthLoginFail: AuthLoginFail(int)
com.l2jfrozen.gameserver.network.serverpackets.AuthLoginFail: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.AuthLoginFail: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.AutoAttackStart
com.l2jfrozen.gameserver.network.serverpackets.AutoAttackStart: java.lang.String _S__3B_AUTOATTACKSTART
com.l2jfrozen.gameserver.network.serverpackets.AutoAttackStart: int _targetObjId
com.l2jfrozen.gameserver.network.serverpackets.AutoAttackStart: AutoAttackStart(int)
com.l2jfrozen.gameserver.network.serverpackets.AutoAttackStart: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.AutoAttackStart: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.AutoAttackStop
com.l2jfrozen.gameserver.network.serverpackets.AutoAttackStop: java.lang.String _S__3C_AUTOATTACKSTOP
com.l2jfrozen.gameserver.network.serverpackets.AutoAttackStop: int _targetObjId
com.l2jfrozen.gameserver.network.serverpackets.AutoAttackStop: AutoAttackStop(int)
com.l2jfrozen.gameserver.network.serverpackets.AutoAttackStop: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.AutoAttackStop: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.BeginRotation
com.l2jfrozen.gameserver.network.serverpackets.BeginRotation: java.lang.String _S__62_BEGINROTATION
com.l2jfrozen.gameserver.network.serverpackets.BeginRotation: int _charObjId
com.l2jfrozen.gameserver.network.serverpackets.BeginRotation: int _degree
com.l2jfrozen.gameserver.network.serverpackets.BeginRotation: int _side
com.l2jfrozen.gameserver.network.serverpackets.BeginRotation: int _speed
com.l2jfrozen.gameserver.network.serverpackets.BeginRotation: BeginRotation(com.l2jfrozen.gameserver.model.L2Character,int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.BeginRotation: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.BeginRotation: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.BuyList
com.l2jfrozen.gameserver.network.serverpackets.BuyList: java.lang.String _S__1D_BUYLIST
com.l2jfrozen.gameserver.network.serverpackets.BuyList: int _listId
com.l2jfrozen.gameserver.network.serverpackets.BuyList: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance[] _list
com.l2jfrozen.gameserver.network.serverpackets.BuyList: int _money
com.l2jfrozen.gameserver.network.serverpackets.BuyList: double _taxRate
com.l2jfrozen.gameserver.network.serverpackets.BuyList: BuyList(com.l2jfrozen.gameserver.model.L2TradeList,int)
com.l2jfrozen.gameserver.network.serverpackets.BuyList: BuyList(com.l2jfrozen.gameserver.model.L2TradeList,int,double)
com.l2jfrozen.gameserver.network.serverpackets.BuyList: BuyList(java.util.List,int,int)
com.l2jfrozen.gameserver.network.serverpackets.BuyList: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.BuyList: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.BuyListSeed
com.l2jfrozen.gameserver.network.serverpackets.BuyListSeed: java.lang.String _S__E8_BUYLISTSEED
com.l2jfrozen.gameserver.network.serverpackets.BuyListSeed: int _manorId
com.l2jfrozen.gameserver.network.serverpackets.BuyListSeed: java.util.List _list
com.l2jfrozen.gameserver.network.serverpackets.BuyListSeed: int _money
com.l2jfrozen.gameserver.network.serverpackets.BuyListSeed: BuyListSeed(com.l2jfrozen.gameserver.model.L2TradeList,int,int)
com.l2jfrozen.gameserver.network.serverpackets.BuyListSeed: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.BuyListSeed: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.CameraMode
com.l2jfrozen.gameserver.network.serverpackets.CameraMode: java.lang.String _S__F1_CAMERAMODE
com.l2jfrozen.gameserver.network.serverpackets.CameraMode: int _mode
com.l2jfrozen.gameserver.network.serverpackets.CameraMode: CameraMode(int)
com.l2jfrozen.gameserver.network.serverpackets.CameraMode: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.CameraMode: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ChairSit
com.l2jfrozen.gameserver.network.serverpackets.ChairSit: java.lang.String _S__e1_CHAIRSIT
com.l2jfrozen.gameserver.network.serverpackets.ChairSit: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.ChairSit: int _staticObjectId
com.l2jfrozen.gameserver.network.serverpackets.ChairSit: ChairSit(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.network.serverpackets.ChairSit: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ChairSit: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ChangeMoveType
com.l2jfrozen.gameserver.network.serverpackets.ChangeMoveType: java.lang.String _S__3E_CHANGEMOVETYPE
com.l2jfrozen.gameserver.network.serverpackets.ChangeMoveType: int WALK
com.l2jfrozen.gameserver.network.serverpackets.ChangeMoveType: int RUN
com.l2jfrozen.gameserver.network.serverpackets.ChangeMoveType: int _charObjId
com.l2jfrozen.gameserver.network.serverpackets.ChangeMoveType: boolean _running
com.l2jfrozen.gameserver.network.serverpackets.ChangeMoveType: ChangeMoveType(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.network.serverpackets.ChangeMoveType: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ChangeMoveType: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ChangeWaitType
com.l2jfrozen.gameserver.network.serverpackets.ChangeWaitType: java.lang.String _S__3F_CHANGEWAITTYPE
com.l2jfrozen.gameserver.network.serverpackets.ChangeWaitType: int _charObjId
com.l2jfrozen.gameserver.network.serverpackets.ChangeWaitType: int _moveType
com.l2jfrozen.gameserver.network.serverpackets.ChangeWaitType: int _x
com.l2jfrozen.gameserver.network.serverpackets.ChangeWaitType: int _y
com.l2jfrozen.gameserver.network.serverpackets.ChangeWaitType: int _z
com.l2jfrozen.gameserver.network.serverpackets.ChangeWaitType: int WT_SITTING
com.l2jfrozen.gameserver.network.serverpackets.ChangeWaitType: int WT_STANDING
com.l2jfrozen.gameserver.network.serverpackets.ChangeWaitType: int WT_START_FAKEDEATH
com.l2jfrozen.gameserver.network.serverpackets.ChangeWaitType: int WT_STOP_FAKEDEATH
com.l2jfrozen.gameserver.network.serverpackets.ChangeWaitType: ChangeWaitType(com.l2jfrozen.gameserver.model.L2Character,int)
com.l2jfrozen.gameserver.network.serverpackets.ChangeWaitType: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ChangeWaitType: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.CharCreateFail
com.l2jfrozen.gameserver.network.serverpackets.CharCreateFail: java.lang.String _S__26_CHARCREATEFAIL
com.l2jfrozen.gameserver.network.serverpackets.CharCreateFail: int REASON_CREATION_FAILED
com.l2jfrozen.gameserver.network.serverpackets.CharCreateFail: int REASON_TOO_MANY_CHARACTERS
com.l2jfrozen.gameserver.network.serverpackets.CharCreateFail: int REASON_NAME_ALREADY_EXISTS
com.l2jfrozen.gameserver.network.serverpackets.CharCreateFail: int REASON_16_ENG_CHARS
com.l2jfrozen.gameserver.network.serverpackets.CharCreateFail: int _error
com.l2jfrozen.gameserver.network.serverpackets.CharCreateFail: CharCreateFail(int)
com.l2jfrozen.gameserver.network.serverpackets.CharCreateFail: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.CharCreateFail: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.CharCreateOk
com.l2jfrozen.gameserver.network.serverpackets.CharCreateOk: java.lang.String _S__25_CHARCREATEOK
com.l2jfrozen.gameserver.network.serverpackets.CharCreateOk: CharCreateOk()
com.l2jfrozen.gameserver.network.serverpackets.CharCreateOk: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.CharCreateOk: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.CharDeleteFail
com.l2jfrozen.gameserver.network.serverpackets.CharDeleteFail: java.lang.String _S__34_CHARDELETEFAIL
com.l2jfrozen.gameserver.network.serverpackets.CharDeleteFail: int REASON_DELETION_FAILED
com.l2jfrozen.gameserver.network.serverpackets.CharDeleteFail: int REASON_YOU_MAY_NOT_DELETE_CLAN_MEMBER
com.l2jfrozen.gameserver.network.serverpackets.CharDeleteFail: int REASON_CLAN_LEADERS_MAY_NOT_BE_DELETED
com.l2jfrozen.gameserver.network.serverpackets.CharDeleteFail: int _error
com.l2jfrozen.gameserver.network.serverpackets.CharDeleteFail: CharDeleteFail(int)
com.l2jfrozen.gameserver.network.serverpackets.CharDeleteFail: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.CharDeleteFail: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.CharDeleteOk
com.l2jfrozen.gameserver.network.serverpackets.CharDeleteOk: java.lang.String _S__33_CHARDELETEOK
com.l2jfrozen.gameserver.network.serverpackets.CharDeleteOk: CharDeleteOk()
com.l2jfrozen.gameserver.network.serverpackets.CharDeleteOk: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.CharDeleteOk: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.CharInfo
com.l2jfrozen.gameserver.network.serverpackets.CharInfo: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.serverpackets.CharInfo: java.lang.String _S__03_CHARINFO
com.l2jfrozen.gameserver.network.serverpackets.CharInfo: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.CharInfo: com.l2jfrozen.gameserver.model.Inventory _inv
com.l2jfrozen.gameserver.network.serverpackets.CharInfo: int _x
com.l2jfrozen.gameserver.network.serverpackets.CharInfo: int _y
com.l2jfrozen.gameserver.network.serverpackets.CharInfo: int _z
com.l2jfrozen.gameserver.network.serverpackets.CharInfo: int _heading
com.l2jfrozen.gameserver.network.serverpackets.CharInfo: int _mAtkSpd
com.l2jfrozen.gameserver.network.serverpackets.CharInfo: int _pAtkSpd
com.l2jfrozen.gameserver.network.serverpackets.CharInfo: int _runSpd
com.l2jfrozen.gameserver.network.serverpackets.CharInfo: int _walkSpd
com.l2jfrozen.gameserver.network.serverpackets.CharInfo: int _swimRunSpd
com.l2jfrozen.gameserver.network.serverpackets.CharInfo: int _swimWalkSpd
com.l2jfrozen.gameserver.network.serverpackets.CharInfo: int _flRunSpd
com.l2jfrozen.gameserver.network.serverpackets.CharInfo: int _flWalkSpd
com.l2jfrozen.gameserver.network.serverpackets.CharInfo: int _flyRunSpd
com.l2jfrozen.gameserver.network.serverpackets.CharInfo: int _flyWalkSpd
com.l2jfrozen.gameserver.network.serverpackets.CharInfo: float _moveMultiplier
com.l2jfrozen.gameserver.network.serverpackets.CharInfo: float _attackSpeedMultiplier
com.l2jfrozen.gameserver.network.serverpackets.CharInfo: int _maxCp
com.l2jfrozen.gameserver.network.serverpackets.CharInfo: CharInfo(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.CharInfo: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.CharInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.CharInfo: void <clinit>()
com.l2jfrozen.gameserver.network.serverpackets.CharMoveToLocation
com.l2jfrozen.gameserver.network.serverpackets.CharMoveToLocation: java.lang.String _S__01_CHARMOVETOLOCATION
com.l2jfrozen.gameserver.network.serverpackets.CharMoveToLocation: int _charObjId
com.l2jfrozen.gameserver.network.serverpackets.CharMoveToLocation: int _x
com.l2jfrozen.gameserver.network.serverpackets.CharMoveToLocation: int _y
com.l2jfrozen.gameserver.network.serverpackets.CharMoveToLocation: int _z
com.l2jfrozen.gameserver.network.serverpackets.CharMoveToLocation: int _xDst
com.l2jfrozen.gameserver.network.serverpackets.CharMoveToLocation: int _yDst
com.l2jfrozen.gameserver.network.serverpackets.CharMoveToLocation: int _zDst
com.l2jfrozen.gameserver.network.serverpackets.CharMoveToLocation: CharMoveToLocation(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.network.serverpackets.CharMoveToLocation: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.CharMoveToLocation: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.CharSelectInfo
com.l2jfrozen.gameserver.network.serverpackets.CharSelectInfo: java.lang.String _S__1F_CHARSELECTINFO
com.l2jfrozen.gameserver.network.serverpackets.CharSelectInfo: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.serverpackets.CharSelectInfo: java.lang.String _loginName
com.l2jfrozen.gameserver.network.serverpackets.CharSelectInfo: int _sessionId
com.l2jfrozen.gameserver.network.serverpackets.CharSelectInfo: int _activeId
com.l2jfrozen.gameserver.network.serverpackets.CharSelectInfo: com.l2jfrozen.gameserver.model.CharSelectInfoPackage[] _characterPackages
com.l2jfrozen.gameserver.network.serverpackets.CharSelectInfo: CharSelectInfo(java.lang.String,int)
com.l2jfrozen.gameserver.network.serverpackets.CharSelectInfo: CharSelectInfo(java.lang.String,int,int)
com.l2jfrozen.gameserver.network.serverpackets.CharSelectInfo: com.l2jfrozen.gameserver.model.CharSelectInfoPackage[] getCharInfo()
com.l2jfrozen.gameserver.network.serverpackets.CharSelectInfo: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.CharSelectInfo: com.l2jfrozen.gameserver.model.CharSelectInfoPackage[] loadCharacterSelectInfo()
com.l2jfrozen.gameserver.network.serverpackets.CharSelectInfo: void loadCharacterSubclassInfo(com.l2jfrozen.gameserver.model.CharSelectInfoPackage,int,int)
com.l2jfrozen.gameserver.network.serverpackets.CharSelectInfo: com.l2jfrozen.gameserver.model.CharSelectInfoPackage restoreChar(java.sql.ResultSet)
com.l2jfrozen.gameserver.network.serverpackets.CharSelectInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.CharSelectInfo: void <clinit>()
com.l2jfrozen.gameserver.network.serverpackets.CharSelected
com.l2jfrozen.gameserver.network.serverpackets.CharSelected: java.lang.String _S__21_CHARSELECTED
com.l2jfrozen.gameserver.network.serverpackets.CharSelected: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.CharSelected: int _sessionId
com.l2jfrozen.gameserver.network.serverpackets.CharSelected: CharSelected(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.network.serverpackets.CharSelected: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.CharSelected: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.CharTemplates
com.l2jfrozen.gameserver.network.serverpackets.CharTemplates: java.lang.String _S__23_CHARTEMPLATES
com.l2jfrozen.gameserver.network.serverpackets.CharTemplates: java.util.List _chars
com.l2jfrozen.gameserver.network.serverpackets.CharTemplates: CharTemplates()
com.l2jfrozen.gameserver.network.serverpackets.CharTemplates: void addChar(com.l2jfrozen.gameserver.templates.L2PcTemplate)
com.l2jfrozen.gameserver.network.serverpackets.CharTemplates: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.CharTemplates: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ChooseInventoryItem
com.l2jfrozen.gameserver.network.serverpackets.ChooseInventoryItem: java.lang.String _S__6F_CHOOSEINVENTORYITEM
com.l2jfrozen.gameserver.network.serverpackets.ChooseInventoryItem: int _itemId
com.l2jfrozen.gameserver.network.serverpackets.ChooseInventoryItem: ChooseInventoryItem(int)
com.l2jfrozen.gameserver.network.serverpackets.ChooseInventoryItem: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ChooseInventoryItem: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ClanHallDecoration
com.l2jfrozen.gameserver.network.serverpackets.ClanHallDecoration: java.lang.String _S__F7_AGITDECOINFO
com.l2jfrozen.gameserver.network.serverpackets.ClanHallDecoration: com.l2jfrozen.gameserver.model.entity.ClanHall _clanHall
com.l2jfrozen.gameserver.network.serverpackets.ClanHallDecoration: com.l2jfrozen.gameserver.model.entity.ClanHall$ClanHallFunction _function
com.l2jfrozen.gameserver.network.serverpackets.ClanHallDecoration: ClanHallDecoration(com.l2jfrozen.gameserver.model.entity.ClanHall)
com.l2jfrozen.gameserver.network.serverpackets.ClanHallDecoration: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ClanHallDecoration: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ClientSetTime
com.l2jfrozen.gameserver.network.serverpackets.ClientSetTime: java.lang.String _S__EC_CLIENTSETTIME
com.l2jfrozen.gameserver.network.serverpackets.ClientSetTime: ClientSetTime()
com.l2jfrozen.gameserver.network.serverpackets.ClientSetTime: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ClientSetTime: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ConfirmDlg
com.l2jfrozen.gameserver.network.serverpackets.ConfirmDlg: java.lang.String _S__ED_CONFIRMDLG
com.l2jfrozen.gameserver.network.serverpackets.ConfirmDlg: int _messageId
com.l2jfrozen.gameserver.network.serverpackets.ConfirmDlg: int _skillLvL
com.l2jfrozen.gameserver.network.serverpackets.ConfirmDlg: int TYPE_ZONE_NAME
com.l2jfrozen.gameserver.network.serverpackets.ConfirmDlg: int TYPE_SKILL_NAME
com.l2jfrozen.gameserver.network.serverpackets.ConfirmDlg: int TYPE_ITEM_NAME
com.l2jfrozen.gameserver.network.serverpackets.ConfirmDlg: int TYPE_NPC_NAME
com.l2jfrozen.gameserver.network.serverpackets.ConfirmDlg: int TYPE_NUMBER
com.l2jfrozen.gameserver.network.serverpackets.ConfirmDlg: int TYPE_TEXT
com.l2jfrozen.gameserver.network.serverpackets.ConfirmDlg: java.util.Vector _types
com.l2jfrozen.gameserver.network.serverpackets.ConfirmDlg: java.util.Vector _values
com.l2jfrozen.gameserver.network.serverpackets.ConfirmDlg: int _time
com.l2jfrozen.gameserver.network.serverpackets.ConfirmDlg: int _requesterId
com.l2jfrozen.gameserver.network.serverpackets.ConfirmDlg: ConfirmDlg(int)
com.l2jfrozen.gameserver.network.serverpackets.ConfirmDlg: com.l2jfrozen.gameserver.network.serverpackets.ConfirmDlg addString(java.lang.String)
com.l2jfrozen.gameserver.network.serverpackets.ConfirmDlg: com.l2jfrozen.gameserver.network.serverpackets.ConfirmDlg addNumber(int)
com.l2jfrozen.gameserver.network.serverpackets.ConfirmDlg: com.l2jfrozen.gameserver.network.serverpackets.ConfirmDlg addNpcName(int)
com.l2jfrozen.gameserver.network.serverpackets.ConfirmDlg: com.l2jfrozen.gameserver.network.serverpackets.ConfirmDlg addItemName(int)
com.l2jfrozen.gameserver.network.serverpackets.ConfirmDlg: com.l2jfrozen.gameserver.network.serverpackets.ConfirmDlg addZoneName(int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.ConfirmDlg: com.l2jfrozen.gameserver.network.serverpackets.ConfirmDlg addSkillName(int)
com.l2jfrozen.gameserver.network.serverpackets.ConfirmDlg: com.l2jfrozen.gameserver.network.serverpackets.ConfirmDlg addSkillName(int,int)
com.l2jfrozen.gameserver.network.serverpackets.ConfirmDlg: com.l2jfrozen.gameserver.network.serverpackets.ConfirmDlg addTime(int)
com.l2jfrozen.gameserver.network.serverpackets.ConfirmDlg: com.l2jfrozen.gameserver.network.serverpackets.ConfirmDlg addRequesterId(int)
com.l2jfrozen.gameserver.network.serverpackets.ConfirmDlg: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ConfirmDlg: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.CreatureSay
com.l2jfrozen.gameserver.network.serverpackets.CreatureSay: java.lang.String _S__4A_CREATURESAY
com.l2jfrozen.gameserver.network.serverpackets.CreatureSay: int _objectId
com.l2jfrozen.gameserver.network.serverpackets.CreatureSay: int _textType
com.l2jfrozen.gameserver.network.serverpackets.CreatureSay: java.lang.String _charName
com.l2jfrozen.gameserver.network.serverpackets.CreatureSay: java.lang.String _text
com.l2jfrozen.gameserver.network.serverpackets.CreatureSay: CreatureSay(int,int,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.network.serverpackets.CreatureSay: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.CreatureSay: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.CustomNpcInfo
com.l2jfrozen.gameserver.network.serverpackets.CustomNpcInfo: java.lang.String _S__03_CUSTOMNPCINFO
com.l2jfrozen.gameserver.network.serverpackets.CustomNpcInfo: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.CustomNpcInfo: CustomNpcInfo(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.network.serverpackets.CustomNpcInfo: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.CustomNpcInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.CustomNpcInfo: void write(char,int,int)
com.l2jfrozen.gameserver.network.serverpackets.DeleteObject
com.l2jfrozen.gameserver.network.serverpackets.DeleteObject: java.lang.String _S__1E_DELETEOBJECT
com.l2jfrozen.gameserver.network.serverpackets.DeleteObject: int _objectId
com.l2jfrozen.gameserver.network.serverpackets.DeleteObject: DeleteObject(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.network.serverpackets.DeleteObject: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.DeleteObject: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.Dice
com.l2jfrozen.gameserver.network.serverpackets.Dice: java.lang.String _S__D4_Dice
com.l2jfrozen.gameserver.network.serverpackets.Dice: int _charObjId
com.l2jfrozen.gameserver.network.serverpackets.Dice: int _itemId
com.l2jfrozen.gameserver.network.serverpackets.Dice: int _number
com.l2jfrozen.gameserver.network.serverpackets.Dice: int _x
com.l2jfrozen.gameserver.network.serverpackets.Dice: int _y
com.l2jfrozen.gameserver.network.serverpackets.Dice: int _z
com.l2jfrozen.gameserver.network.serverpackets.Dice: Dice(int,int,int,int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.Dice: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.Dice: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.Die
com.l2jfrozen.gameserver.network.serverpackets.Die: java.lang.String _S__0B_DIE
com.l2jfrozen.gameserver.network.serverpackets.Die: int _charObjId
com.l2jfrozen.gameserver.network.serverpackets.Die: boolean _fake
com.l2jfrozen.gameserver.network.serverpackets.Die: boolean _sweepable
com.l2jfrozen.gameserver.network.serverpackets.Die: boolean _canTeleport
com.l2jfrozen.gameserver.network.serverpackets.Die: com.l2jfrozen.gameserver.datatables.AccessLevel _access
com.l2jfrozen.gameserver.network.serverpackets.Die: com.l2jfrozen.gameserver.model.L2Clan _clan
com.l2jfrozen.gameserver.network.serverpackets.Die: com.l2jfrozen.gameserver.model.L2Character _activeChar
com.l2jfrozen.gameserver.network.serverpackets.Die: Die(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.network.serverpackets.Die: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.Die: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.DoorInfo
com.l2jfrozen.gameserver.network.serverpackets.DoorInfo: java.lang.String _S__60_DOORINFO
com.l2jfrozen.gameserver.network.serverpackets.DoorInfo: com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance _door
com.l2jfrozen.gameserver.network.serverpackets.DoorInfo: DoorInfo(com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance,boolean)
com.l2jfrozen.gameserver.network.serverpackets.DoorInfo: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.DoorInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.DoorStatusUpdate
com.l2jfrozen.gameserver.network.serverpackets.DoorStatusUpdate: java.lang.String _S__61_DOORSTATUSUPDATE
com.l2jfrozen.gameserver.network.serverpackets.DoorStatusUpdate: com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance _door
com.l2jfrozen.gameserver.network.serverpackets.DoorStatusUpdate: DoorStatusUpdate(com.l2jfrozen.gameserver.model.actor.instance.L2DoorInstance)
com.l2jfrozen.gameserver.network.serverpackets.DoorStatusUpdate: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.DoorStatusUpdate: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.DropItem
com.l2jfrozen.gameserver.network.serverpackets.DropItem: java.lang.String _S__16_DROPITEM
com.l2jfrozen.gameserver.network.serverpackets.DropItem: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance _item
com.l2jfrozen.gameserver.network.serverpackets.DropItem: int _charObjId
com.l2jfrozen.gameserver.network.serverpackets.DropItem: DropItem(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance,int)
com.l2jfrozen.gameserver.network.serverpackets.DropItem: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.DropItem: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.Earthquake
com.l2jfrozen.gameserver.network.serverpackets.Earthquake: java.lang.String _S__C4_EARTHQUAKE
com.l2jfrozen.gameserver.network.serverpackets.Earthquake: int _x
com.l2jfrozen.gameserver.network.serverpackets.Earthquake: int _y
com.l2jfrozen.gameserver.network.serverpackets.Earthquake: int _z
com.l2jfrozen.gameserver.network.serverpackets.Earthquake: int _intensity
com.l2jfrozen.gameserver.network.serverpackets.Earthquake: int _duration
com.l2jfrozen.gameserver.network.serverpackets.Earthquake: Earthquake(int,int,int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.Earthquake: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.Earthquake: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.EnchantResult
com.l2jfrozen.gameserver.network.serverpackets.EnchantResult: java.lang.String _S__81_ENCHANTRESULT
com.l2jfrozen.gameserver.network.serverpackets.EnchantResult: int _unknown
com.l2jfrozen.gameserver.network.serverpackets.EnchantResult: EnchantResult(int)
com.l2jfrozen.gameserver.network.serverpackets.EnchantResult: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.EnchantResult: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.EquipUpdate
com.l2jfrozen.gameserver.network.serverpackets.EquipUpdate: java.lang.String _S__5E_EQUIPUPDATE
com.l2jfrozen.gameserver.network.serverpackets.EquipUpdate: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.serverpackets.EquipUpdate: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance _item
com.l2jfrozen.gameserver.network.serverpackets.EquipUpdate: int _change
com.l2jfrozen.gameserver.network.serverpackets.EquipUpdate: EquipUpdate(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance,int)
com.l2jfrozen.gameserver.network.serverpackets.EquipUpdate: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.EquipUpdate: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.EquipUpdate: void <clinit>()
com.l2jfrozen.gameserver.network.serverpackets.EtcStatusUpdate
com.l2jfrozen.gameserver.network.serverpackets.EtcStatusUpdate: java.lang.String _S__F3_ETCSTATUSUPDATE
com.l2jfrozen.gameserver.network.serverpackets.EtcStatusUpdate: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.EtcStatusUpdate: com.l2jfrozen.gameserver.skills.effects.EffectCharge _effect
com.l2jfrozen.gameserver.network.serverpackets.EtcStatusUpdate: EtcStatusUpdate(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.EtcStatusUpdate: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.EtcStatusUpdate: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExAskJoinMPCC
com.l2jfrozen.gameserver.network.serverpackets.ExAskJoinMPCC: java.lang.String _requestorName
com.l2jfrozen.gameserver.network.serverpackets.ExAskJoinMPCC: ExAskJoinMPCC(java.lang.String)
com.l2jfrozen.gameserver.network.serverpackets.ExAskJoinMPCC: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExAskJoinMPCC: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExAskJoinPartyRoom
com.l2jfrozen.gameserver.network.serverpackets.ExAskJoinPartyRoom: java.lang.String _charName
com.l2jfrozen.gameserver.network.serverpackets.ExAskJoinPartyRoom: ExAskJoinPartyRoom(java.lang.String)
com.l2jfrozen.gameserver.network.serverpackets.ExAskJoinPartyRoom: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExAskJoinPartyRoom: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExAutoSoulShot
com.l2jfrozen.gameserver.network.serverpackets.ExAutoSoulShot: java.lang.String _S__FE_12_EXAUTOSOULSHOT
com.l2jfrozen.gameserver.network.serverpackets.ExAutoSoulShot: int _itemId
com.l2jfrozen.gameserver.network.serverpackets.ExAutoSoulShot: int _type
com.l2jfrozen.gameserver.network.serverpackets.ExAutoSoulShot: ExAutoSoulShot(int,int)
com.l2jfrozen.gameserver.network.serverpackets.ExAutoSoulShot: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExAutoSoulShot: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExCaptureOrc
com.l2jfrozen.gameserver.network.serverpackets.ExCaptureOrc: java.lang.String _S__FE_44_EXCAPTUREORC
com.l2jfrozen.gameserver.network.serverpackets.ExCaptureOrc: byte[] _test
com.l2jfrozen.gameserver.network.serverpackets.ExCaptureOrc: ExCaptureOrc()
com.l2jfrozen.gameserver.network.serverpackets.ExCaptureOrc: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExCaptureOrc: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExCaptureOrc: void <clinit>()
com.l2jfrozen.gameserver.network.serverpackets.ExCloseMPCC
com.l2jfrozen.gameserver.network.serverpackets.ExCloseMPCC: ExCloseMPCC()
com.l2jfrozen.gameserver.network.serverpackets.ExCloseMPCC: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExCloseMPCC: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExClosePartyRoom
com.l2jfrozen.gameserver.network.serverpackets.ExClosePartyRoom: ExClosePartyRoom()
com.l2jfrozen.gameserver.network.serverpackets.ExClosePartyRoom: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExClosePartyRoom: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExConfirmCancelItem
com.l2jfrozen.gameserver.network.serverpackets.ExConfirmCancelItem: java.lang.String _S__FE_56_EXCONFIRMCANCELITEM
com.l2jfrozen.gameserver.network.serverpackets.ExConfirmCancelItem: int _itemObjId
com.l2jfrozen.gameserver.network.serverpackets.ExConfirmCancelItem: int _price
com.l2jfrozen.gameserver.network.serverpackets.ExConfirmCancelItem: ExConfirmCancelItem(int,int)
com.l2jfrozen.gameserver.network.serverpackets.ExConfirmCancelItem: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExConfirmCancelItem: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExConfirmVariationGemstone
com.l2jfrozen.gameserver.network.serverpackets.ExConfirmVariationGemstone: java.lang.String _S__FE_54_EXCONFIRMVARIATIONGEMSTONE
com.l2jfrozen.gameserver.network.serverpackets.ExConfirmVariationGemstone: int _gemstoneObjId
com.l2jfrozen.gameserver.network.serverpackets.ExConfirmVariationGemstone: int _unk1
com.l2jfrozen.gameserver.network.serverpackets.ExConfirmVariationGemstone: int _gemstoneCount
com.l2jfrozen.gameserver.network.serverpackets.ExConfirmVariationGemstone: int _unk2
com.l2jfrozen.gameserver.network.serverpackets.ExConfirmVariationGemstone: int _unk3
com.l2jfrozen.gameserver.network.serverpackets.ExConfirmVariationGemstone: ExConfirmVariationGemstone(int,int)
com.l2jfrozen.gameserver.network.serverpackets.ExConfirmVariationGemstone: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExConfirmVariationGemstone: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExConfirmVariationItem
com.l2jfrozen.gameserver.network.serverpackets.ExConfirmVariationItem: java.lang.String _S__FE_52_EXCONFIRMVARIATIONITEM
com.l2jfrozen.gameserver.network.serverpackets.ExConfirmVariationItem: int _itemObjId
com.l2jfrozen.gameserver.network.serverpackets.ExConfirmVariationItem: int _unk1
com.l2jfrozen.gameserver.network.serverpackets.ExConfirmVariationItem: int _unk2
com.l2jfrozen.gameserver.network.serverpackets.ExConfirmVariationItem: ExConfirmVariationItem(int)
com.l2jfrozen.gameserver.network.serverpackets.ExConfirmVariationItem: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExConfirmVariationItem: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExConfirmVariationRefiner
com.l2jfrozen.gameserver.network.serverpackets.ExConfirmVariationRefiner: java.lang.String _S__FE_53_EXCONFIRMVARIATIONREFINER
com.l2jfrozen.gameserver.network.serverpackets.ExConfirmVariationRefiner: int _refinerItemObjId
com.l2jfrozen.gameserver.network.serverpackets.ExConfirmVariationRefiner: int _lifestoneItemId
com.l2jfrozen.gameserver.network.serverpackets.ExConfirmVariationRefiner: int _gemstoneItemId
com.l2jfrozen.gameserver.network.serverpackets.ExConfirmVariationRefiner: int _gemstoneCount
com.l2jfrozen.gameserver.network.serverpackets.ExConfirmVariationRefiner: int _unk2
com.l2jfrozen.gameserver.network.serverpackets.ExConfirmVariationRefiner: ExConfirmVariationRefiner(int,int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.ExConfirmVariationRefiner: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExConfirmVariationRefiner: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExCursedWeaponList
com.l2jfrozen.gameserver.network.serverpackets.ExCursedWeaponList: java.lang.String _S__FE_45_EXCURSEDWEAPONLIST
com.l2jfrozen.gameserver.network.serverpackets.ExCursedWeaponList: java.util.List _cursedWeaponIds
com.l2jfrozen.gameserver.network.serverpackets.ExCursedWeaponList: ExCursedWeaponList(java.util.List)
com.l2jfrozen.gameserver.network.serverpackets.ExCursedWeaponList: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExCursedWeaponList: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExCursedWeaponLocation
com.l2jfrozen.gameserver.network.serverpackets.ExCursedWeaponLocation: java.lang.String _S__FE_46_EXCURSEDWEAPONLOCATION
com.l2jfrozen.gameserver.network.serverpackets.ExCursedWeaponLocation: java.util.List _cursedWeaponInfo
com.l2jfrozen.gameserver.network.serverpackets.ExCursedWeaponLocation: ExCursedWeaponLocation(java.util.List)
com.l2jfrozen.gameserver.network.serverpackets.ExCursedWeaponLocation: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExCursedWeaponLocation: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExCursedWeaponLocation$CursedWeaponInfo
com.l2jfrozen.gameserver.network.serverpackets.ExCursedWeaponLocation$CursedWeaponInfo: com.l2jfrozen.common.util.Point3D pos
com.l2jfrozen.gameserver.network.serverpackets.ExCursedWeaponLocation$CursedWeaponInfo: int id
com.l2jfrozen.gameserver.network.serverpackets.ExCursedWeaponLocation$CursedWeaponInfo: int activated
com.l2jfrozen.gameserver.network.serverpackets.ExCursedWeaponLocation$CursedWeaponInfo: ExCursedWeaponLocation$CursedWeaponInfo(com.l2jfrozen.common.util.Point3D,int,int)
com.l2jfrozen.gameserver.network.serverpackets.ExDuelAskStart
com.l2jfrozen.gameserver.network.serverpackets.ExDuelAskStart: java.lang.String _S__FE_4B_EXDUELASKSTART
com.l2jfrozen.gameserver.network.serverpackets.ExDuelAskStart: java.lang.String _requestorName
com.l2jfrozen.gameserver.network.serverpackets.ExDuelAskStart: int _partyDuel
com.l2jfrozen.gameserver.network.serverpackets.ExDuelAskStart: ExDuelAskStart(java.lang.String,int)
com.l2jfrozen.gameserver.network.serverpackets.ExDuelAskStart: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExDuelAskStart: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExDuelEnd
com.l2jfrozen.gameserver.network.serverpackets.ExDuelEnd: java.lang.String _S__FE_4E_EXDUELEND
com.l2jfrozen.gameserver.network.serverpackets.ExDuelEnd: int _unk1
com.l2jfrozen.gameserver.network.serverpackets.ExDuelEnd: ExDuelEnd(int)
com.l2jfrozen.gameserver.network.serverpackets.ExDuelEnd: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExDuelEnd: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExDuelReady
com.l2jfrozen.gameserver.network.serverpackets.ExDuelReady: java.lang.String _S__FE_4C_EXDUELREADY
com.l2jfrozen.gameserver.network.serverpackets.ExDuelReady: int _unk1
com.l2jfrozen.gameserver.network.serverpackets.ExDuelReady: ExDuelReady(int)
com.l2jfrozen.gameserver.network.serverpackets.ExDuelReady: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExDuelReady: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExDuelStart
com.l2jfrozen.gameserver.network.serverpackets.ExDuelStart: java.lang.String _S__FE_4D_EXDUELSTART
com.l2jfrozen.gameserver.network.serverpackets.ExDuelStart: int _unk1
com.l2jfrozen.gameserver.network.serverpackets.ExDuelStart: ExDuelStart(int)
com.l2jfrozen.gameserver.network.serverpackets.ExDuelStart: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExDuelStart: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExDuelUpdateUserInfo
com.l2jfrozen.gameserver.network.serverpackets.ExDuelUpdateUserInfo: java.lang.String _S__FE_4F_EXDUELUPDATEUSERINFO
com.l2jfrozen.gameserver.network.serverpackets.ExDuelUpdateUserInfo: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.ExDuelUpdateUserInfo: ExDuelUpdateUserInfo(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.ExDuelUpdateUserInfo: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExDuelUpdateUserInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExEnchantSkillInfo
com.l2jfrozen.gameserver.network.serverpackets.ExEnchantSkillInfo: java.lang.String _S__FE_18_EXENCHANTSKILLINFO
com.l2jfrozen.gameserver.network.serverpackets.ExEnchantSkillInfo: javolution.util.FastList _reqs
com.l2jfrozen.gameserver.network.serverpackets.ExEnchantSkillInfo: int _id
com.l2jfrozen.gameserver.network.serverpackets.ExEnchantSkillInfo: int _level
com.l2jfrozen.gameserver.network.serverpackets.ExEnchantSkillInfo: int _spCost
com.l2jfrozen.gameserver.network.serverpackets.ExEnchantSkillInfo: int _xpCost
com.l2jfrozen.gameserver.network.serverpackets.ExEnchantSkillInfo: int _rate
com.l2jfrozen.gameserver.network.serverpackets.ExEnchantSkillInfo: ExEnchantSkillInfo(int,int,int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.ExEnchantSkillInfo: void addRequirement(int,int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.ExEnchantSkillInfo: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExEnchantSkillInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExEnchantSkillInfo$Req
com.l2jfrozen.gameserver.network.serverpackets.ExEnchantSkillInfo$Req: int id
com.l2jfrozen.gameserver.network.serverpackets.ExEnchantSkillInfo$Req: int count
com.l2jfrozen.gameserver.network.serverpackets.ExEnchantSkillInfo$Req: int type
com.l2jfrozen.gameserver.network.serverpackets.ExEnchantSkillInfo$Req: int unk
com.l2jfrozen.gameserver.network.serverpackets.ExEnchantSkillInfo$Req: com.l2jfrozen.gameserver.network.serverpackets.ExEnchantSkillInfo this$0
com.l2jfrozen.gameserver.network.serverpackets.ExEnchantSkillInfo$Req: ExEnchantSkillInfo$Req(com.l2jfrozen.gameserver.network.serverpackets.ExEnchantSkillInfo,int,int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.ExEnchantSkillList
com.l2jfrozen.gameserver.network.serverpackets.ExEnchantSkillList: java.lang.String _S__FE_17_EXENCHANTSKILLLIST
com.l2jfrozen.gameserver.network.serverpackets.ExEnchantSkillList: java.util.List _skills
com.l2jfrozen.gameserver.network.serverpackets.ExEnchantSkillList: void addSkill(int,int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.ExEnchantSkillList: ExEnchantSkillList()
com.l2jfrozen.gameserver.network.serverpackets.ExEnchantSkillList: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExEnchantSkillList: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExEnchantSkillList$Skill
com.l2jfrozen.gameserver.network.serverpackets.ExEnchantSkillList$Skill: int id
com.l2jfrozen.gameserver.network.serverpackets.ExEnchantSkillList$Skill: int nextLevel
com.l2jfrozen.gameserver.network.serverpackets.ExEnchantSkillList$Skill: int sp
com.l2jfrozen.gameserver.network.serverpackets.ExEnchantSkillList$Skill: int exp
com.l2jfrozen.gameserver.network.serverpackets.ExEnchantSkillList$Skill: com.l2jfrozen.gameserver.network.serverpackets.ExEnchantSkillList this$0
com.l2jfrozen.gameserver.network.serverpackets.ExEnchantSkillList$Skill: ExEnchantSkillList$Skill(com.l2jfrozen.gameserver.network.serverpackets.ExEnchantSkillList,int,int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.ExFishingEnd
com.l2jfrozen.gameserver.network.serverpackets.ExFishingEnd: java.lang.String _S__FE_14_EXFISHINGEND
com.l2jfrozen.gameserver.network.serverpackets.ExFishingEnd: boolean _win
com.l2jfrozen.gameserver.network.serverpackets.ExFishingEnd: com.l2jfrozen.gameserver.model.L2Character _activeChar
com.l2jfrozen.gameserver.network.serverpackets.ExFishingEnd: ExFishingEnd(boolean,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.ExFishingEnd: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExFishingEnd: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExFishingHpRegen
com.l2jfrozen.gameserver.network.serverpackets.ExFishingHpRegen: java.lang.String _S__FE_16_EXFISHINGHPREGEN
com.l2jfrozen.gameserver.network.serverpackets.ExFishingHpRegen: com.l2jfrozen.gameserver.model.L2Character _activeChar
com.l2jfrozen.gameserver.network.serverpackets.ExFishingHpRegen: int _time
com.l2jfrozen.gameserver.network.serverpackets.ExFishingHpRegen: int _fishHP
com.l2jfrozen.gameserver.network.serverpackets.ExFishingHpRegen: int _hpMode
com.l2jfrozen.gameserver.network.serverpackets.ExFishingHpRegen: int _anim
com.l2jfrozen.gameserver.network.serverpackets.ExFishingHpRegen: int _goodUse
com.l2jfrozen.gameserver.network.serverpackets.ExFishingHpRegen: int _penalty
com.l2jfrozen.gameserver.network.serverpackets.ExFishingHpRegen: int _hpBarColor
com.l2jfrozen.gameserver.network.serverpackets.ExFishingHpRegen: ExFishingHpRegen(com.l2jfrozen.gameserver.model.L2Character,int,int,int,int,int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.ExFishingHpRegen: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExFishingHpRegen: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExFishingStart
com.l2jfrozen.gameserver.network.serverpackets.ExFishingStart: java.lang.String _S__FE_13_EXFISHINGSTART
com.l2jfrozen.gameserver.network.serverpackets.ExFishingStart: com.l2jfrozen.gameserver.model.L2Character _activeChar
com.l2jfrozen.gameserver.network.serverpackets.ExFishingStart: int _x
com.l2jfrozen.gameserver.network.serverpackets.ExFishingStart: int _y
com.l2jfrozen.gameserver.network.serverpackets.ExFishingStart: int _z
com.l2jfrozen.gameserver.network.serverpackets.ExFishingStart: int _fishType
com.l2jfrozen.gameserver.network.serverpackets.ExFishingStart: ExFishingStart(com.l2jfrozen.gameserver.model.L2Character,int,int,int,int,boolean)
com.l2jfrozen.gameserver.network.serverpackets.ExFishingStart: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExFishingStart: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExFishingStartCombat
com.l2jfrozen.gameserver.network.serverpackets.ExFishingStartCombat: java.lang.String _S__FE_15_EXFISHINGSTARTCOMBAT
com.l2jfrozen.gameserver.network.serverpackets.ExFishingStartCombat: com.l2jfrozen.gameserver.model.L2Character _activeChar
com.l2jfrozen.gameserver.network.serverpackets.ExFishingStartCombat: int _time
com.l2jfrozen.gameserver.network.serverpackets.ExFishingStartCombat: int _hp
com.l2jfrozen.gameserver.network.serverpackets.ExFishingStartCombat: int _lureType
com.l2jfrozen.gameserver.network.serverpackets.ExFishingStartCombat: int _deceptiveMode
com.l2jfrozen.gameserver.network.serverpackets.ExFishingStartCombat: int _mode
com.l2jfrozen.gameserver.network.serverpackets.ExFishingStartCombat: ExFishingStartCombat(com.l2jfrozen.gameserver.model.L2Character,int,int,int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.ExFishingStartCombat: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExFishingStartCombat: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExGetBossRecord
com.l2jfrozen.gameserver.network.serverpackets.ExGetBossRecord: java.lang.String _S__FE_33_EXGETBOSSRECORD
com.l2jfrozen.gameserver.network.serverpackets.ExGetBossRecord: java.util.Map _bossRecordInfo
com.l2jfrozen.gameserver.network.serverpackets.ExGetBossRecord: int _ranking
com.l2jfrozen.gameserver.network.serverpackets.ExGetBossRecord: int _totalPoints
com.l2jfrozen.gameserver.network.serverpackets.ExGetBossRecord: ExGetBossRecord(int,int,java.util.Map)
com.l2jfrozen.gameserver.network.serverpackets.ExGetBossRecord: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExGetBossRecord: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExHeroList
com.l2jfrozen.gameserver.network.serverpackets.ExHeroList: java.lang.String _S__FE_23_EXHEROLIST
com.l2jfrozen.gameserver.network.serverpackets.ExHeroList: java.util.Map _heroList
com.l2jfrozen.gameserver.network.serverpackets.ExHeroList: ExHeroList()
com.l2jfrozen.gameserver.network.serverpackets.ExHeroList: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExHeroList: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExListPartyMatchingWaitingRoom
com.l2jfrozen.gameserver.network.serverpackets.ExListPartyMatchingWaitingRoom: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.ExListPartyMatchingWaitingRoom: int _minlvl
com.l2jfrozen.gameserver.network.serverpackets.ExListPartyMatchingWaitingRoom: int _maxlvl
com.l2jfrozen.gameserver.network.serverpackets.ExListPartyMatchingWaitingRoom: int _mode
com.l2jfrozen.gameserver.network.serverpackets.ExListPartyMatchingWaitingRoom: javolution.util.FastList _members
com.l2jfrozen.gameserver.network.serverpackets.ExListPartyMatchingWaitingRoom: ExListPartyMatchingWaitingRoom(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.ExListPartyMatchingWaitingRoom: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExListPartyMatchingWaitingRoom: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExMPCCShowPartyMemberInfo
com.l2jfrozen.gameserver.network.serverpackets.ExMPCCShowPartyMemberInfo: com.l2jfrozen.gameserver.model.L2Party _party
com.l2jfrozen.gameserver.network.serverpackets.ExMPCCShowPartyMemberInfo: ExMPCCShowPartyMemberInfo(com.l2jfrozen.gameserver.model.L2Party)
com.l2jfrozen.gameserver.network.serverpackets.ExMPCCShowPartyMemberInfo: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExMPCCShowPartyMemberInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExMailArrived
com.l2jfrozen.gameserver.network.serverpackets.ExMailArrived: java.lang.String _S__FE_2D_EXMAILARRIVED
com.l2jfrozen.gameserver.network.serverpackets.ExMailArrived: ExMailArrived()
com.l2jfrozen.gameserver.network.serverpackets.ExMailArrived: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExMailArrived: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExManagePartyRoomMember
com.l2jfrozen.gameserver.network.serverpackets.ExManagePartyRoomMember: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.ExManagePartyRoomMember: com.l2jfrozen.gameserver.model.PartyMatchRoom _room
com.l2jfrozen.gameserver.network.serverpackets.ExManagePartyRoomMember: int _mode
com.l2jfrozen.gameserver.network.serverpackets.ExManagePartyRoomMember: ExManagePartyRoomMember(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.PartyMatchRoom,int)
com.l2jfrozen.gameserver.network.serverpackets.ExManagePartyRoomMember: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExManagePartyRoomMember: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExMultiPartyCommandChannelInfo
com.l2jfrozen.gameserver.network.serverpackets.ExMultiPartyCommandChannelInfo: com.l2jfrozen.gameserver.model.L2CommandChannel _channel
com.l2jfrozen.gameserver.network.serverpackets.ExMultiPartyCommandChannelInfo: ExMultiPartyCommandChannelInfo(com.l2jfrozen.gameserver.model.L2CommandChannel)
com.l2jfrozen.gameserver.network.serverpackets.ExMultiPartyCommandChannelInfo: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExMultiPartyCommandChannelInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExOlympiadMode
com.l2jfrozen.gameserver.network.serverpackets.ExOlympiadMode: java.lang.String _S__FE_2B_OLYMPIADMODE
com.l2jfrozen.gameserver.network.serverpackets.ExOlympiadMode: int _mode
com.l2jfrozen.gameserver.network.serverpackets.ExOlympiadMode: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.ExOlympiadMode: ExOlympiadMode(int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.ExOlympiadMode: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExOlympiadMode: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExOlympiadSpelledInfo
com.l2jfrozen.gameserver.network.serverpackets.ExOlympiadSpelledInfo: java.lang.String _S__FE_2A_OLYMPIADSPELLEDINFO
com.l2jfrozen.gameserver.network.serverpackets.ExOlympiadSpelledInfo: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _player
com.l2jfrozen.gameserver.network.serverpackets.ExOlympiadSpelledInfo: java.util.List _effects
com.l2jfrozen.gameserver.network.serverpackets.ExOlympiadSpelledInfo: ExOlympiadSpelledInfo(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.ExOlympiadSpelledInfo: void addEffect(int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.ExOlympiadSpelledInfo: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExOlympiadSpelledInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExOlympiadSpelledInfo$Effect
com.l2jfrozen.gameserver.network.serverpackets.ExOlympiadSpelledInfo$Effect: int _skillId
com.l2jfrozen.gameserver.network.serverpackets.ExOlympiadSpelledInfo$Effect: int _level
com.l2jfrozen.gameserver.network.serverpackets.ExOlympiadSpelledInfo$Effect: int _duration
com.l2jfrozen.gameserver.network.serverpackets.ExOlympiadSpelledInfo$Effect: com.l2jfrozen.gameserver.network.serverpackets.ExOlympiadSpelledInfo this$0
com.l2jfrozen.gameserver.network.serverpackets.ExOlympiadSpelledInfo$Effect: ExOlympiadSpelledInfo$Effect(com.l2jfrozen.gameserver.network.serverpackets.ExOlympiadSpelledInfo,int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.ExOlympiadUserInfo
com.l2jfrozen.gameserver.network.serverpackets.ExOlympiadUserInfo: java.lang.String _S__FE_29_OLYMPIADUSERINFO
com.l2jfrozen.gameserver.network.serverpackets.ExOlympiadUserInfo: int _side
com.l2jfrozen.gameserver.network.serverpackets.ExOlympiadUserInfo: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.ExOlympiadUserInfo: ExOlympiadUserInfo(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.network.serverpackets.ExOlympiadUserInfo: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExOlympiadUserInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExOpenMPCC
com.l2jfrozen.gameserver.network.serverpackets.ExOpenMPCC: ExOpenMPCC()
com.l2jfrozen.gameserver.network.serverpackets.ExOpenMPCC: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExOpenMPCC: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExOrcMove
com.l2jfrozen.gameserver.network.serverpackets.ExOrcMove: java.lang.String _S__FE_44_EXORCMOVE
com.l2jfrozen.gameserver.network.serverpackets.ExOrcMove: ExOrcMove()
com.l2jfrozen.gameserver.network.serverpackets.ExOrcMove: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExOrcMove: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExPCCafePointInfo
com.l2jfrozen.gameserver.network.serverpackets.ExPCCafePointInfo: java.lang.String _S__FE_31_EXPCCAFEPOINTINFO
com.l2jfrozen.gameserver.network.serverpackets.ExPCCafePointInfo: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _character
com.l2jfrozen.gameserver.network.serverpackets.ExPCCafePointInfo: int m_AddPoint
com.l2jfrozen.gameserver.network.serverpackets.ExPCCafePointInfo: int m_PeriodType
com.l2jfrozen.gameserver.network.serverpackets.ExPCCafePointInfo: int RemainTime
com.l2jfrozen.gameserver.network.serverpackets.ExPCCafePointInfo: int PointType
com.l2jfrozen.gameserver.network.serverpackets.ExPCCafePointInfo: ExPCCafePointInfo(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,boolean,int,boolean)
com.l2jfrozen.gameserver.network.serverpackets.ExPCCafePointInfo: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExPCCafePointInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExPartyRoomMember
com.l2jfrozen.gameserver.network.serverpackets.ExPartyRoomMember: com.l2jfrozen.gameserver.model.PartyMatchRoom _room
com.l2jfrozen.gameserver.network.serverpackets.ExPartyRoomMember: int _mode
com.l2jfrozen.gameserver.network.serverpackets.ExPartyRoomMember: ExPartyRoomMember(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.PartyMatchRoom,int)
com.l2jfrozen.gameserver.network.serverpackets.ExPartyRoomMember: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExPartyRoomMember: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExPledgeCrestLarge
com.l2jfrozen.gameserver.network.serverpackets.ExPledgeCrestLarge: java.lang.String _S__FE_28_EXPLEDGECRESTLARGE
com.l2jfrozen.gameserver.network.serverpackets.ExPledgeCrestLarge: int _crestId
com.l2jfrozen.gameserver.network.serverpackets.ExPledgeCrestLarge: byte[] _data
com.l2jfrozen.gameserver.network.serverpackets.ExPledgeCrestLarge: ExPledgeCrestLarge(int,byte[])
com.l2jfrozen.gameserver.network.serverpackets.ExPledgeCrestLarge: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExPledgeCrestLarge: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExQuestInfo
com.l2jfrozen.gameserver.network.serverpackets.ExQuestInfo: java.lang.String _S__FE_19_EXQUESTINFO
com.l2jfrozen.gameserver.network.serverpackets.ExQuestInfo: ExQuestInfo()
com.l2jfrozen.gameserver.network.serverpackets.ExQuestInfo: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExQuestInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExRedSky
com.l2jfrozen.gameserver.network.serverpackets.ExRedSky: java.lang.String _S__FE_40_EXREDSKYPACKET
com.l2jfrozen.gameserver.network.serverpackets.ExRedSky: int _duration
com.l2jfrozen.gameserver.network.serverpackets.ExRedSky: ExRedSky(int)
com.l2jfrozen.gameserver.network.serverpackets.ExRedSky: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExRedSky: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExRequestHackShield
com.l2jfrozen.gameserver.network.serverpackets.ExRequestHackShield: java.lang.String _S__FE_48_EXREQUESTHACKSHIELD
com.l2jfrozen.gameserver.network.serverpackets.ExRequestHackShield: ExRequestHackShield()
com.l2jfrozen.gameserver.network.serverpackets.ExRequestHackShield: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExRequestHackShield: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExRestartClient
com.l2jfrozen.gameserver.network.serverpackets.ExRestartClient: java.lang.String _S__FE_47_EXRESTARTCLIENT
com.l2jfrozen.gameserver.network.serverpackets.ExRestartClient: ExRestartClient()
com.l2jfrozen.gameserver.network.serverpackets.ExRestartClient: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExRestartClient: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExSendManorList
com.l2jfrozen.gameserver.network.serverpackets.ExSendManorList: java.lang.String _S__FE_1B_EXSENDMANORLIST
com.l2jfrozen.gameserver.network.serverpackets.ExSendManorList: javolution.util.FastList _manors
com.l2jfrozen.gameserver.network.serverpackets.ExSendManorList: ExSendManorList(javolution.util.FastList)
com.l2jfrozen.gameserver.network.serverpackets.ExSendManorList: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExSendManorList: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExSetCompassZoneCode
com.l2jfrozen.gameserver.network.serverpackets.ExSetCompassZoneCode: java.lang.String _S__FE_32_EXSETCOMPASSZONECODE
com.l2jfrozen.gameserver.network.serverpackets.ExSetCompassZoneCode: int SIEGEWARZONE1
com.l2jfrozen.gameserver.network.serverpackets.ExSetCompassZoneCode: int SIEGEWARZONE2
com.l2jfrozen.gameserver.network.serverpackets.ExSetCompassZoneCode: int PEACEZONE
com.l2jfrozen.gameserver.network.serverpackets.ExSetCompassZoneCode: int SEVENSIGNSZONE
com.l2jfrozen.gameserver.network.serverpackets.ExSetCompassZoneCode: int PVPZONE
com.l2jfrozen.gameserver.network.serverpackets.ExSetCompassZoneCode: int GENERALZONE
com.l2jfrozen.gameserver.network.serverpackets.ExSetCompassZoneCode: int _zoneType
com.l2jfrozen.gameserver.network.serverpackets.ExSetCompassZoneCode: ExSetCompassZoneCode(int)
com.l2jfrozen.gameserver.network.serverpackets.ExSetCompassZoneCode: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExSetCompassZoneCode: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExShowAdventurerGuideBook
com.l2jfrozen.gameserver.network.serverpackets.ExShowAdventurerGuideBook: java.lang.String _S__FE_37_EXSHOWADVENTURERGUIDEBOOK
com.l2jfrozen.gameserver.network.serverpackets.ExShowAdventurerGuideBook: ExShowAdventurerGuideBook()
com.l2jfrozen.gameserver.network.serverpackets.ExShowAdventurerGuideBook: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExShowAdventurerGuideBook: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExShowCropInfo
com.l2jfrozen.gameserver.network.serverpackets.ExShowCropInfo: java.lang.String _S__FE_1C_EXSHOWSEEDINFO
com.l2jfrozen.gameserver.network.serverpackets.ExShowCropInfo: javolution.util.FastList _crops
com.l2jfrozen.gameserver.network.serverpackets.ExShowCropInfo: int _manorId
com.l2jfrozen.gameserver.network.serverpackets.ExShowCropInfo: ExShowCropInfo(int,javolution.util.FastList)
com.l2jfrozen.gameserver.network.serverpackets.ExShowCropInfo: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExShowCropInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExShowCropSetting
com.l2jfrozen.gameserver.network.serverpackets.ExShowCropSetting: java.lang.String _S__FE_20_EXSHOWCROPSETTING
com.l2jfrozen.gameserver.network.serverpackets.ExShowCropSetting: int _manorId
com.l2jfrozen.gameserver.network.serverpackets.ExShowCropSetting: int _count
com.l2jfrozen.gameserver.network.serverpackets.ExShowCropSetting: int[] _cropData
com.l2jfrozen.gameserver.network.serverpackets.ExShowCropSetting: void runImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExShowCropSetting: ExShowCropSetting(int)
com.l2jfrozen.gameserver.network.serverpackets.ExShowCropSetting: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExShowCropSetting: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExShowManorDefaultInfo
com.l2jfrozen.gameserver.network.serverpackets.ExShowManorDefaultInfo: java.lang.String _S__FE_1C_EXSHOWSEEDINFO
com.l2jfrozen.gameserver.network.serverpackets.ExShowManorDefaultInfo: javolution.util.FastList _crops
com.l2jfrozen.gameserver.network.serverpackets.ExShowManorDefaultInfo: ExShowManorDefaultInfo()
com.l2jfrozen.gameserver.network.serverpackets.ExShowManorDefaultInfo: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExShowManorDefaultInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExShowProcureCropDetail
com.l2jfrozen.gameserver.network.serverpackets.ExShowProcureCropDetail: java.lang.String _S__FE_22_EXSHOWPROCURECROPDETAIL
com.l2jfrozen.gameserver.network.serverpackets.ExShowProcureCropDetail: int _cropId
com.l2jfrozen.gameserver.network.serverpackets.ExShowProcureCropDetail: javolution.util.FastMap _castleCrops
com.l2jfrozen.gameserver.network.serverpackets.ExShowProcureCropDetail: ExShowProcureCropDetail(int)
com.l2jfrozen.gameserver.network.serverpackets.ExShowProcureCropDetail: void runImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExShowProcureCropDetail: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExShowProcureCropDetail: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExShowQuestMark
com.l2jfrozen.gameserver.network.serverpackets.ExShowQuestMark: int _questId
com.l2jfrozen.gameserver.network.serverpackets.ExShowQuestMark: ExShowQuestMark(int)
com.l2jfrozen.gameserver.network.serverpackets.ExShowQuestMark: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExShowQuestMark: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExShowScreenMessage
com.l2jfrozen.gameserver.network.serverpackets.ExShowScreenMessage: int _type
com.l2jfrozen.gameserver.network.serverpackets.ExShowScreenMessage: int _sysMessageId
com.l2jfrozen.gameserver.network.serverpackets.ExShowScreenMessage: int _unk1
com.l2jfrozen.gameserver.network.serverpackets.ExShowScreenMessage: int _unk2
com.l2jfrozen.gameserver.network.serverpackets.ExShowScreenMessage: int _unk3
com.l2jfrozen.gameserver.network.serverpackets.ExShowScreenMessage: int _unk4
com.l2jfrozen.gameserver.network.serverpackets.ExShowScreenMessage: int _size
com.l2jfrozen.gameserver.network.serverpackets.ExShowScreenMessage: int _position
com.l2jfrozen.gameserver.network.serverpackets.ExShowScreenMessage: boolean _effect
com.l2jfrozen.gameserver.network.serverpackets.ExShowScreenMessage: java.lang.String _text
com.l2jfrozen.gameserver.network.serverpackets.ExShowScreenMessage: int _time
com.l2jfrozen.gameserver.network.serverpackets.ExShowScreenMessage: ExShowScreenMessage(java.lang.String,int)
com.l2jfrozen.gameserver.network.serverpackets.ExShowScreenMessage: ExShowScreenMessage(int,int,int,int,int,int,int,boolean,int,int,java.lang.String)
com.l2jfrozen.gameserver.network.serverpackets.ExShowScreenMessage: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExShowScreenMessage: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExShowSeedInfo
com.l2jfrozen.gameserver.network.serverpackets.ExShowSeedInfo: java.lang.String _S__FE_1C_EXSHOWSEEDINFO
com.l2jfrozen.gameserver.network.serverpackets.ExShowSeedInfo: javolution.util.FastList _seeds
com.l2jfrozen.gameserver.network.serverpackets.ExShowSeedInfo: int _manorId
com.l2jfrozen.gameserver.network.serverpackets.ExShowSeedInfo: ExShowSeedInfo(int,javolution.util.FastList)
com.l2jfrozen.gameserver.network.serverpackets.ExShowSeedInfo: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExShowSeedInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExShowSeedSetting
com.l2jfrozen.gameserver.network.serverpackets.ExShowSeedSetting: java.lang.String _S__FE_1F_EXSHOWSEEDSETTING
com.l2jfrozen.gameserver.network.serverpackets.ExShowSeedSetting: int _manorId
com.l2jfrozen.gameserver.network.serverpackets.ExShowSeedSetting: int _count
com.l2jfrozen.gameserver.network.serverpackets.ExShowSeedSetting: int[] _seedData
com.l2jfrozen.gameserver.network.serverpackets.ExShowSeedSetting: void runImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExShowSeedSetting: ExShowSeedSetting(int)
com.l2jfrozen.gameserver.network.serverpackets.ExShowSeedSetting: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExShowSeedSetting: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExShowSellCropList
com.l2jfrozen.gameserver.network.serverpackets.ExShowSellCropList: java.lang.String _S__FE_21_EXSHOWSELLCROPLIST
com.l2jfrozen.gameserver.network.serverpackets.ExShowSellCropList: int _manorId
com.l2jfrozen.gameserver.network.serverpackets.ExShowSellCropList: javolution.util.FastMap _cropsItems
com.l2jfrozen.gameserver.network.serverpackets.ExShowSellCropList: javolution.util.FastMap _castleCrops
com.l2jfrozen.gameserver.network.serverpackets.ExShowSellCropList: ExShowSellCropList(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,javolution.util.FastList)
com.l2jfrozen.gameserver.network.serverpackets.ExShowSellCropList: void runImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExShowSellCropList: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExShowSellCropList: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExShowVariationCancelWindow
com.l2jfrozen.gameserver.network.serverpackets.ExShowVariationCancelWindow: java.lang.String _S__FE_51_EXSHOWVARIATIONCANCELWINDOW
com.l2jfrozen.gameserver.network.serverpackets.ExShowVariationCancelWindow: ExShowVariationCancelWindow()
com.l2jfrozen.gameserver.network.serverpackets.ExShowVariationCancelWindow: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExShowVariationCancelWindow: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExShowVariationMakeWindow
com.l2jfrozen.gameserver.network.serverpackets.ExShowVariationMakeWindow: java.lang.String _S__FE_50_EXSHOWVARIATIONMAKEWINDOW
com.l2jfrozen.gameserver.network.serverpackets.ExShowVariationMakeWindow: ExShowVariationMakeWindow()
com.l2jfrozen.gameserver.network.serverpackets.ExShowVariationMakeWindow: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExShowVariationMakeWindow: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExStorageMaxCount
com.l2jfrozen.gameserver.network.serverpackets.ExStorageMaxCount: java.lang.String _S__FE_2E_EXSTORAGEMAXCOUNT
com.l2jfrozen.gameserver.network.serverpackets.ExStorageMaxCount: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.ExStorageMaxCount: int _inventory
com.l2jfrozen.gameserver.network.serverpackets.ExStorageMaxCount: int _warehouse
com.l2jfrozen.gameserver.network.serverpackets.ExStorageMaxCount: int _freight
com.l2jfrozen.gameserver.network.serverpackets.ExStorageMaxCount: int _privateSell
com.l2jfrozen.gameserver.network.serverpackets.ExStorageMaxCount: int _privateBuy
com.l2jfrozen.gameserver.network.serverpackets.ExStorageMaxCount: int _receipeD
com.l2jfrozen.gameserver.network.serverpackets.ExStorageMaxCount: int _recipe
com.l2jfrozen.gameserver.network.serverpackets.ExStorageMaxCount: ExStorageMaxCount(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.ExStorageMaxCount: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExStorageMaxCount: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExUseSharedGroupItem
com.l2jfrozen.gameserver.network.serverpackets.ExUseSharedGroupItem: java.lang.String _S__FE_49_EXUSESHAREDGROUPITEM
com.l2jfrozen.gameserver.network.serverpackets.ExUseSharedGroupItem: int _unk1
com.l2jfrozen.gameserver.network.serverpackets.ExUseSharedGroupItem: int _unk2
com.l2jfrozen.gameserver.network.serverpackets.ExUseSharedGroupItem: int _unk3
com.l2jfrozen.gameserver.network.serverpackets.ExUseSharedGroupItem: int _unk4
com.l2jfrozen.gameserver.network.serverpackets.ExUseSharedGroupItem: ExUseSharedGroupItem(int,int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.ExUseSharedGroupItem: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExUseSharedGroupItem: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExVariationCancelResult
com.l2jfrozen.gameserver.network.serverpackets.ExVariationCancelResult: java.lang.String _S__FE_57_EXVARIATIONCANCELRESULT
com.l2jfrozen.gameserver.network.serverpackets.ExVariationCancelResult: int _closeWindow
com.l2jfrozen.gameserver.network.serverpackets.ExVariationCancelResult: int _unk1
com.l2jfrozen.gameserver.network.serverpackets.ExVariationCancelResult: ExVariationCancelResult(int)
com.l2jfrozen.gameserver.network.serverpackets.ExVariationCancelResult: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExVariationCancelResult: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ExVariationResult
com.l2jfrozen.gameserver.network.serverpackets.ExVariationResult: java.lang.String _S__FE_55_EXVARIATIONRESULT
com.l2jfrozen.gameserver.network.serverpackets.ExVariationResult: int _stat12
com.l2jfrozen.gameserver.network.serverpackets.ExVariationResult: int _stat34
com.l2jfrozen.gameserver.network.serverpackets.ExVariationResult: int _unk3
com.l2jfrozen.gameserver.network.serverpackets.ExVariationResult: ExVariationResult(int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.ExVariationResult: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ExVariationResult: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.FinishRotation
com.l2jfrozen.gameserver.network.serverpackets.FinishRotation: java.lang.String _S__78_FINISHROTATION
com.l2jfrozen.gameserver.network.serverpackets.FinishRotation: int _heading
com.l2jfrozen.gameserver.network.serverpackets.FinishRotation: int _charObjId
com.l2jfrozen.gameserver.network.serverpackets.FinishRotation: FinishRotation(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.network.serverpackets.FinishRotation: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.FinishRotation: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.FortSiegeAttackerList
com.l2jfrozen.gameserver.network.serverpackets.FortSiegeAttackerList: java.lang.String _S__CA_SiegeAttackerList
com.l2jfrozen.gameserver.network.serverpackets.FortSiegeAttackerList: com.l2jfrozen.gameserver.model.entity.siege.Fort _fort
com.l2jfrozen.gameserver.network.serverpackets.FortSiegeAttackerList: FortSiegeAttackerList(com.l2jfrozen.gameserver.model.entity.siege.Fort)
com.l2jfrozen.gameserver.network.serverpackets.FortSiegeAttackerList: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.FortSiegeAttackerList: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.FortSiegeDefenderList
com.l2jfrozen.gameserver.network.serverpackets.FortSiegeDefenderList: java.lang.String _S__CA_SiegeDefenderList
com.l2jfrozen.gameserver.network.serverpackets.FortSiegeDefenderList: com.l2jfrozen.gameserver.model.entity.siege.Fort _fort
com.l2jfrozen.gameserver.network.serverpackets.FortSiegeDefenderList: FortSiegeDefenderList(com.l2jfrozen.gameserver.model.entity.siege.Fort)
com.l2jfrozen.gameserver.network.serverpackets.FortSiegeDefenderList: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.FortSiegeDefenderList: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.FortSiegeDefenderList$1
com.l2jfrozen.gameserver.network.serverpackets.FortSiegeDefenderList$1: int[] $SwitchMap$com$l2jfrozen$gameserver$model$SiegeClanType
com.l2jfrozen.gameserver.network.serverpackets.FortSiegeDefenderList$1: void <clinit>()
com.l2jfrozen.gameserver.network.serverpackets.FortressSiegeInfo
com.l2jfrozen.gameserver.network.serverpackets.FortressSiegeInfo: java.lang.String _S__C9_SIEGEINFO
com.l2jfrozen.gameserver.network.serverpackets.FortressSiegeInfo: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.serverpackets.FortressSiegeInfo: com.l2jfrozen.gameserver.model.entity.siege.Fort _fort
com.l2jfrozen.gameserver.network.serverpackets.FortressSiegeInfo: FortressSiegeInfo(com.l2jfrozen.gameserver.model.entity.siege.Fort)
com.l2jfrozen.gameserver.network.serverpackets.FortressSiegeInfo: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.FortressSiegeInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.FortressSiegeInfo: void <clinit>()
com.l2jfrozen.gameserver.network.serverpackets.FriendList
com.l2jfrozen.gameserver.network.serverpackets.FriendList: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.serverpackets.FriendList: java.lang.String _S__FA_FRIENDLIST
com.l2jfrozen.gameserver.network.serverpackets.FriendList: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.FriendList: FriendList(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.FriendList: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.FriendList: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.FriendList: void <clinit>()
com.l2jfrozen.gameserver.network.serverpackets.FriendRecvMsg
com.l2jfrozen.gameserver.network.serverpackets.FriendRecvMsg: java.lang.String _S__FD_FRIENDRECVMSG
com.l2jfrozen.gameserver.network.serverpackets.FriendRecvMsg: java.lang.String _sender
com.l2jfrozen.gameserver.network.serverpackets.FriendRecvMsg: java.lang.String _receiver
com.l2jfrozen.gameserver.network.serverpackets.FriendRecvMsg: java.lang.String _message
com.l2jfrozen.gameserver.network.serverpackets.FriendRecvMsg: FriendRecvMsg(java.lang.String,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.network.serverpackets.FriendRecvMsg: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.FriendRecvMsg: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.GMViewCharacterInfo
com.l2jfrozen.gameserver.network.serverpackets.GMViewCharacterInfo: java.lang.String _S__8F_GMVIEWCHARINFO
com.l2jfrozen.gameserver.network.serverpackets.GMViewCharacterInfo: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.GMViewCharacterInfo: GMViewCharacterInfo(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.GMViewCharacterInfo: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.GMViewCharacterInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.GMViewItemList
com.l2jfrozen.gameserver.network.serverpackets.GMViewItemList: java.lang.String _S__AD_GMVIEWITEMLIST
com.l2jfrozen.gameserver.network.serverpackets.GMViewItemList: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance[] _items
com.l2jfrozen.gameserver.network.serverpackets.GMViewItemList: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _cha
com.l2jfrozen.gameserver.network.serverpackets.GMViewItemList: java.lang.String _playerName
com.l2jfrozen.gameserver.network.serverpackets.GMViewItemList: GMViewItemList(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.GMViewItemList: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.GMViewItemList: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.GMViewPledgeInfo
com.l2jfrozen.gameserver.network.serverpackets.GMViewPledgeInfo: java.lang.String _S__A9_GMVIEWPLEDGEINFO
com.l2jfrozen.gameserver.network.serverpackets.GMViewPledgeInfo: com.l2jfrozen.gameserver.model.L2Clan _clan
com.l2jfrozen.gameserver.network.serverpackets.GMViewPledgeInfo: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.GMViewPledgeInfo: GMViewPledgeInfo(com.l2jfrozen.gameserver.model.L2Clan,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.GMViewPledgeInfo: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.GMViewPledgeInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.GMViewQuestList
com.l2jfrozen.gameserver.network.serverpackets.GMViewQuestList: java.lang.String _S__AC_GMVIEWQUESTLIST
com.l2jfrozen.gameserver.network.serverpackets.GMViewQuestList: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.GMViewQuestList: GMViewQuestList(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.GMViewQuestList: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.GMViewQuestList: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.GMViewSkillInfo
com.l2jfrozen.gameserver.network.serverpackets.GMViewSkillInfo: java.lang.String _S__91_GMViewSkillInfo
com.l2jfrozen.gameserver.network.serverpackets.GMViewSkillInfo: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.GMViewSkillInfo: com.l2jfrozen.gameserver.model.L2Skill[] _skills
com.l2jfrozen.gameserver.network.serverpackets.GMViewSkillInfo: GMViewSkillInfo(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.GMViewSkillInfo: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.GMViewSkillInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.GMViewWarehouseWithdrawList
com.l2jfrozen.gameserver.network.serverpackets.GMViewWarehouseWithdrawList: java.lang.String _S__95_GMViewWarehouseWithdrawList
com.l2jfrozen.gameserver.network.serverpackets.GMViewWarehouseWithdrawList: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance[] _items
com.l2jfrozen.gameserver.network.serverpackets.GMViewWarehouseWithdrawList: java.lang.String _playerName
com.l2jfrozen.gameserver.network.serverpackets.GMViewWarehouseWithdrawList: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.GMViewWarehouseWithdrawList: int _money
com.l2jfrozen.gameserver.network.serverpackets.GMViewWarehouseWithdrawList: GMViewWarehouseWithdrawList(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.GMViewWarehouseWithdrawList: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.GMViewWarehouseWithdrawList: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.GameGuardQuery
com.l2jfrozen.gameserver.network.serverpackets.GameGuardQuery: java.lang.String _S__F9_GAMEGUARDQUERY
com.l2jfrozen.gameserver.network.serverpackets.GameGuardQuery: GameGuardQuery()
com.l2jfrozen.gameserver.network.serverpackets.GameGuardQuery: void runImpl()
com.l2jfrozen.gameserver.network.serverpackets.GameGuardQuery: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.GameGuardQuery: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.GetItem
com.l2jfrozen.gameserver.network.serverpackets.GetItem: java.lang.String _S__17_GETITEM
com.l2jfrozen.gameserver.network.serverpackets.GetItem: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance _item
com.l2jfrozen.gameserver.network.serverpackets.GetItem: int _playerId
com.l2jfrozen.gameserver.network.serverpackets.GetItem: GetItem(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance,int)
com.l2jfrozen.gameserver.network.serverpackets.GetItem: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.GetItem: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.GetOffVehicle
com.l2jfrozen.gameserver.network.serverpackets.GetOffVehicle: int _x
com.l2jfrozen.gameserver.network.serverpackets.GetOffVehicle: int _y
com.l2jfrozen.gameserver.network.serverpackets.GetOffVehicle: int _z
com.l2jfrozen.gameserver.network.serverpackets.GetOffVehicle: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.GetOffVehicle: com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance _boat
com.l2jfrozen.gameserver.network.serverpackets.GetOffVehicle: GetOffVehicle(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance,int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.GetOffVehicle: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.GetOffVehicle: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.GetOnVehicle
com.l2jfrozen.gameserver.network.serverpackets.GetOnVehicle: int _x
com.l2jfrozen.gameserver.network.serverpackets.GetOnVehicle: int _y
com.l2jfrozen.gameserver.network.serverpackets.GetOnVehicle: int _z
com.l2jfrozen.gameserver.network.serverpackets.GetOnVehicle: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.GetOnVehicle: com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance _boat
com.l2jfrozen.gameserver.network.serverpackets.GetOnVehicle: GetOnVehicle(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance,int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.GetOnVehicle: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.GetOnVehicle: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.HennaEquipList
com.l2jfrozen.gameserver.network.serverpackets.HennaEquipList: java.lang.String _S__E2_HennaEquipList
com.l2jfrozen.gameserver.network.serverpackets.HennaEquipList: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _player
com.l2jfrozen.gameserver.network.serverpackets.HennaEquipList: com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance[] _hennaEquipList
com.l2jfrozen.gameserver.network.serverpackets.HennaEquipList: HennaEquipList(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance[])
com.l2jfrozen.gameserver.network.serverpackets.HennaEquipList: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.HennaEquipList: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.HennaInfo
com.l2jfrozen.gameserver.network.serverpackets.HennaInfo: java.lang.String _S__E4_HennaInfo
com.l2jfrozen.gameserver.network.serverpackets.HennaInfo: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.HennaInfo: com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance[] _hennas
com.l2jfrozen.gameserver.network.serverpackets.HennaInfo: int _count
com.l2jfrozen.gameserver.network.serverpackets.HennaInfo: HennaInfo(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.HennaInfo: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.HennaInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.HennaItemInfo
com.l2jfrozen.gameserver.network.serverpackets.HennaItemInfo: java.lang.String _S__E3_HennaItemInfo
com.l2jfrozen.gameserver.network.serverpackets.HennaItemInfo: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.HennaItemInfo: com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance _henna
com.l2jfrozen.gameserver.network.serverpackets.HennaItemInfo: HennaItemInfo(com.l2jfrozen.gameserver.model.actor.instance.L2HennaInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.HennaItemInfo: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.HennaItemInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.InventoryUpdate
com.l2jfrozen.gameserver.network.serverpackets.InventoryUpdate: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.serverpackets.InventoryUpdate: java.lang.String _S__37_INVENTORYUPDATE
com.l2jfrozen.gameserver.network.serverpackets.InventoryUpdate: java.util.List _items
com.l2jfrozen.gameserver.network.serverpackets.InventoryUpdate: InventoryUpdate()
com.l2jfrozen.gameserver.network.serverpackets.InventoryUpdate: InventoryUpdate(java.util.List)
com.l2jfrozen.gameserver.network.serverpackets.InventoryUpdate: void addItem(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.network.serverpackets.InventoryUpdate: void addNewItem(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.network.serverpackets.InventoryUpdate: void addModifiedItem(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.network.serverpackets.InventoryUpdate: void addRemovedItem(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.network.serverpackets.InventoryUpdate: void addItems(java.util.List)
com.l2jfrozen.gameserver.network.serverpackets.InventoryUpdate: void showDebug()
com.l2jfrozen.gameserver.network.serverpackets.InventoryUpdate: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.InventoryUpdate: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.InventoryUpdate: void <clinit>()
com.l2jfrozen.gameserver.network.serverpackets.ItemList
com.l2jfrozen.gameserver.network.serverpackets.ItemList: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.serverpackets.ItemList: java.lang.String _S__27_ITEMLIST
com.l2jfrozen.gameserver.network.serverpackets.ItemList: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance[] _items
com.l2jfrozen.gameserver.network.serverpackets.ItemList: boolean _showWindow
com.l2jfrozen.gameserver.network.serverpackets.ItemList: ItemList(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.network.serverpackets.ItemList: ItemList(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance[],boolean)
com.l2jfrozen.gameserver.network.serverpackets.ItemList: void showDebug()
com.l2jfrozen.gameserver.network.serverpackets.ItemList: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ItemList: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ItemList: void <clinit>()
com.l2jfrozen.gameserver.network.serverpackets.JoinParty
com.l2jfrozen.gameserver.network.serverpackets.JoinParty: java.lang.String _S__4C_JOINPARTY
com.l2jfrozen.gameserver.network.serverpackets.JoinParty: int _response
com.l2jfrozen.gameserver.network.serverpackets.JoinParty: JoinParty(int)
com.l2jfrozen.gameserver.network.serverpackets.JoinParty: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.JoinParty: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.JoinPledge
com.l2jfrozen.gameserver.network.serverpackets.JoinPledge: java.lang.String _S__45_JOINPLEDGE
com.l2jfrozen.gameserver.network.serverpackets.JoinPledge: int _pledgeId
com.l2jfrozen.gameserver.network.serverpackets.JoinPledge: JoinPledge(int)
com.l2jfrozen.gameserver.network.serverpackets.JoinPledge: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.JoinPledge: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.KeyPacket
com.l2jfrozen.gameserver.network.serverpackets.KeyPacket: java.lang.String _S__01_KEYPACKET
com.l2jfrozen.gameserver.network.serverpackets.KeyPacket: byte[] _key
com.l2jfrozen.gameserver.network.serverpackets.KeyPacket: KeyPacket(byte[])
com.l2jfrozen.gameserver.network.serverpackets.KeyPacket: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.KeyPacket: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.L2GameServerPacket
com.l2jfrozen.gameserver.network.serverpackets.L2GameServerPacket: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.serverpackets.L2GameServerPacket: L2GameServerPacket()
com.l2jfrozen.gameserver.network.serverpackets.L2GameServerPacket: void write()
com.l2jfrozen.gameserver.network.serverpackets.L2GameServerPacket: void runImpl()
com.l2jfrozen.gameserver.network.serverpackets.L2GameServerPacket: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.L2GameServerPacket: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.L2GameServerPacket: void <clinit>()
com.l2jfrozen.gameserver.network.serverpackets.LeaveWorld
com.l2jfrozen.gameserver.network.serverpackets.LeaveWorld: java.lang.String _S__96_LEAVEWORLD
com.l2jfrozen.gameserver.network.serverpackets.LeaveWorld: com.l2jfrozen.gameserver.network.serverpackets.LeaveWorld STATIC_PACKET
com.l2jfrozen.gameserver.network.serverpackets.LeaveWorld: LeaveWorld()
com.l2jfrozen.gameserver.network.serverpackets.LeaveWorld: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.LeaveWorld: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.LeaveWorld: void <clinit>()
com.l2jfrozen.gameserver.network.serverpackets.MagicEffectIcons
com.l2jfrozen.gameserver.network.serverpackets.MagicEffectIcons: java.lang.String _S__97_MAGICEFFECTICONS
com.l2jfrozen.gameserver.network.serverpackets.MagicEffectIcons: javolution.util.FastList _effects
com.l2jfrozen.gameserver.network.serverpackets.MagicEffectIcons: javolution.util.FastList _debuffs
com.l2jfrozen.gameserver.network.serverpackets.MagicEffectIcons: MagicEffectIcons()
com.l2jfrozen.gameserver.network.serverpackets.MagicEffectIcons: void addEffect(int,int,int,boolean)
com.l2jfrozen.gameserver.network.serverpackets.MagicEffectIcons: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.MagicEffectIcons: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.MagicEffectIcons$Effect
com.l2jfrozen.gameserver.network.serverpackets.MagicEffectIcons$Effect: int _skillId
com.l2jfrozen.gameserver.network.serverpackets.MagicEffectIcons$Effect: int _level
com.l2jfrozen.gameserver.network.serverpackets.MagicEffectIcons$Effect: int _duration
com.l2jfrozen.gameserver.network.serverpackets.MagicEffectIcons$Effect: com.l2jfrozen.gameserver.network.serverpackets.MagicEffectIcons this$0
com.l2jfrozen.gameserver.network.serverpackets.MagicEffectIcons$Effect: MagicEffectIcons$Effect(com.l2jfrozen.gameserver.network.serverpackets.MagicEffectIcons,int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.MagicSkillCanceld
com.l2jfrozen.gameserver.network.serverpackets.MagicSkillCanceld: java.lang.String _S__5B_MAGICSKILLCANCELD
com.l2jfrozen.gameserver.network.serverpackets.MagicSkillCanceld: int _objectId
com.l2jfrozen.gameserver.network.serverpackets.MagicSkillCanceld: MagicSkillCanceld(int)
com.l2jfrozen.gameserver.network.serverpackets.MagicSkillCanceld: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.MagicSkillCanceld: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.MagicSkillLaunched
com.l2jfrozen.gameserver.network.serverpackets.MagicSkillLaunched: java.lang.String _S__8E_MAGICSKILLLAUNCHED
com.l2jfrozen.gameserver.network.serverpackets.MagicSkillLaunched: int _charObjId
com.l2jfrozen.gameserver.network.serverpackets.MagicSkillLaunched: int _skillId
com.l2jfrozen.gameserver.network.serverpackets.MagicSkillLaunched: int _skillLevel
com.l2jfrozen.gameserver.network.serverpackets.MagicSkillLaunched: int _numberOfTargets
com.l2jfrozen.gameserver.network.serverpackets.MagicSkillLaunched: com.l2jfrozen.gameserver.model.L2Object[] _targets
com.l2jfrozen.gameserver.network.serverpackets.MagicSkillLaunched: int _singleTargetId
com.l2jfrozen.gameserver.network.serverpackets.MagicSkillLaunched: MagicSkillLaunched(com.l2jfrozen.gameserver.model.L2Character,int,int,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.network.serverpackets.MagicSkillLaunched: MagicSkillLaunched(com.l2jfrozen.gameserver.model.L2Character,int,int)
com.l2jfrozen.gameserver.network.serverpackets.MagicSkillLaunched: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.MagicSkillLaunched: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.MagicSkillUser
com.l2jfrozen.gameserver.network.serverpackets.MagicSkillUser: java.lang.String _S__5A_MAGICSKILLUSER
com.l2jfrozen.gameserver.network.serverpackets.MagicSkillUser: int _targetId
com.l2jfrozen.gameserver.network.serverpackets.MagicSkillUser: int _skillId
com.l2jfrozen.gameserver.network.serverpackets.MagicSkillUser: int _skillLevel
com.l2jfrozen.gameserver.network.serverpackets.MagicSkillUser: int _hitTime
com.l2jfrozen.gameserver.network.serverpackets.MagicSkillUser: int _reuseDelay
com.l2jfrozen.gameserver.network.serverpackets.MagicSkillUser: int _charObjId
com.l2jfrozen.gameserver.network.serverpackets.MagicSkillUser: int _x
com.l2jfrozen.gameserver.network.serverpackets.MagicSkillUser: int _y
com.l2jfrozen.gameserver.network.serverpackets.MagicSkillUser: int _z
com.l2jfrozen.gameserver.network.serverpackets.MagicSkillUser: MagicSkillUser(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Character,int,int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.MagicSkillUser: MagicSkillUser(com.l2jfrozen.gameserver.model.L2Character,int,int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.MagicSkillUser: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.MagicSkillUser: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ManagePledgePower
com.l2jfrozen.gameserver.network.serverpackets.ManagePledgePower: java.lang.String _S__30_MANAGEPLEDGEPOWER
com.l2jfrozen.gameserver.network.serverpackets.ManagePledgePower: int _action
com.l2jfrozen.gameserver.network.serverpackets.ManagePledgePower: com.l2jfrozen.gameserver.model.L2Clan _clan
com.l2jfrozen.gameserver.network.serverpackets.ManagePledgePower: int _rank
com.l2jfrozen.gameserver.network.serverpackets.ManagePledgePower: int _privs
com.l2jfrozen.gameserver.network.serverpackets.ManagePledgePower: ManagePledgePower(com.l2jfrozen.gameserver.model.L2Clan,int,int)
com.l2jfrozen.gameserver.network.serverpackets.ManagePledgePower: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ManagePledgePower: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.MonRaceInfo
com.l2jfrozen.gameserver.network.serverpackets.MonRaceInfo: java.lang.String _S__DD_MonRaceInfo
com.l2jfrozen.gameserver.network.serverpackets.MonRaceInfo: int _unknown1
com.l2jfrozen.gameserver.network.serverpackets.MonRaceInfo: int _unknown2
com.l2jfrozen.gameserver.network.serverpackets.MonRaceInfo: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance[] _monsters
com.l2jfrozen.gameserver.network.serverpackets.MonRaceInfo: int[][] _speeds
com.l2jfrozen.gameserver.network.serverpackets.MonRaceInfo: MonRaceInfo(int,int,com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance[],int[][])
com.l2jfrozen.gameserver.network.serverpackets.MonRaceInfo: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.MonRaceInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.MoveOnVehicle
com.l2jfrozen.gameserver.network.serverpackets.MoveOnVehicle: java.lang.String _S__71_MOVEONVEICLE
com.l2jfrozen.gameserver.network.serverpackets.MoveOnVehicle: int _id
com.l2jfrozen.gameserver.network.serverpackets.MoveOnVehicle: int _x
com.l2jfrozen.gameserver.network.serverpackets.MoveOnVehicle: int _y
com.l2jfrozen.gameserver.network.serverpackets.MoveOnVehicle: int _z
com.l2jfrozen.gameserver.network.serverpackets.MoveOnVehicle: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.MoveOnVehicle: MoveOnVehicle(int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.MoveOnVehicle: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.MoveOnVehicle: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.MoveToLocationInVehicle
com.l2jfrozen.gameserver.network.serverpackets.MoveToLocationInVehicle: int _charObjId
com.l2jfrozen.gameserver.network.serverpackets.MoveToLocationInVehicle: int _boatId
com.l2jfrozen.gameserver.network.serverpackets.MoveToLocationInVehicle: com.l2jfrozen.gameserver.model.actor.position.L2CharPosition _destination
com.l2jfrozen.gameserver.network.serverpackets.MoveToLocationInVehicle: com.l2jfrozen.gameserver.model.actor.position.L2CharPosition _origin
com.l2jfrozen.gameserver.network.serverpackets.MoveToLocationInVehicle: MoveToLocationInVehicle(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.actor.position.L2CharPosition,com.l2jfrozen.gameserver.model.actor.position.L2CharPosition)
com.l2jfrozen.gameserver.network.serverpackets.MoveToLocationInVehicle: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.MoveToLocationInVehicle: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.MoveToPawn
com.l2jfrozen.gameserver.network.serverpackets.MoveToPawn: java.lang.String _S__75_MOVETOPAWN
com.l2jfrozen.gameserver.network.serverpackets.MoveToPawn: int _charObjId
com.l2jfrozen.gameserver.network.serverpackets.MoveToPawn: int _targetId
com.l2jfrozen.gameserver.network.serverpackets.MoveToPawn: int _distance
com.l2jfrozen.gameserver.network.serverpackets.MoveToPawn: int _x
com.l2jfrozen.gameserver.network.serverpackets.MoveToPawn: int _y
com.l2jfrozen.gameserver.network.serverpackets.MoveToPawn: int _z
com.l2jfrozen.gameserver.network.serverpackets.MoveToPawn: MoveToPawn(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Character,int)
com.l2jfrozen.gameserver.network.serverpackets.MoveToPawn: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.MoveToPawn: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.MultiSellList
com.l2jfrozen.gameserver.network.serverpackets.MultiSellList: java.lang.String _S__D0_MULTISELLLIST
com.l2jfrozen.gameserver.network.serverpackets.MultiSellList: int _listId
com.l2jfrozen.gameserver.network.serverpackets.MultiSellList: int _page
com.l2jfrozen.gameserver.network.serverpackets.MultiSellList: int _finished
com.l2jfrozen.gameserver.network.serverpackets.MultiSellList: com.l2jfrozen.gameserver.model.multisell.MultiSellListContainer _list
com.l2jfrozen.gameserver.network.serverpackets.MultiSellList: MultiSellList(com.l2jfrozen.gameserver.model.multisell.MultiSellListContainer,int,int)
com.l2jfrozen.gameserver.network.serverpackets.MultiSellList: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.MultiSellList: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.MyTargetSelected
com.l2jfrozen.gameserver.network.serverpackets.MyTargetSelected: java.lang.String _S__BF_MYTARGETSELECTED
com.l2jfrozen.gameserver.network.serverpackets.MyTargetSelected: int _objectId
com.l2jfrozen.gameserver.network.serverpackets.MyTargetSelected: int _color
com.l2jfrozen.gameserver.network.serverpackets.MyTargetSelected: MyTargetSelected(int,int)
com.l2jfrozen.gameserver.network.serverpackets.MyTargetSelected: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.MyTargetSelected: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.NormalCamera
com.l2jfrozen.gameserver.network.serverpackets.NormalCamera: java.lang.String _S__C8_NORMALCAMERA
com.l2jfrozen.gameserver.network.serverpackets.NormalCamera: NormalCamera()
com.l2jfrozen.gameserver.network.serverpackets.NormalCamera: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.NormalCamera: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.NpcHtmlMessage
com.l2jfrozen.gameserver.network.serverpackets.NpcHtmlMessage: java.lang.String _S__1B_NPCHTMLMESSAGE
com.l2jfrozen.gameserver.network.serverpackets.NpcHtmlMessage: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.serverpackets.NpcHtmlMessage: int _npcObjId
com.l2jfrozen.gameserver.network.serverpackets.NpcHtmlMessage: java.lang.String _html
com.l2jfrozen.gameserver.network.serverpackets.NpcHtmlMessage: boolean _validate
com.l2jfrozen.gameserver.network.serverpackets.NpcHtmlMessage: NpcHtmlMessage(int,java.lang.String)
com.l2jfrozen.gameserver.network.serverpackets.NpcHtmlMessage: NpcHtmlMessage(int)
com.l2jfrozen.gameserver.network.serverpackets.NpcHtmlMessage: void runImpl()
com.l2jfrozen.gameserver.network.serverpackets.NpcHtmlMessage: void setHtml(java.lang.String)
com.l2jfrozen.gameserver.network.serverpackets.NpcHtmlMessage: boolean setFile(java.lang.String)
com.l2jfrozen.gameserver.network.serverpackets.NpcHtmlMessage: void replace(java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.network.serverpackets.NpcHtmlMessage: void replace(java.lang.String,boolean)
com.l2jfrozen.gameserver.network.serverpackets.NpcHtmlMessage: void replace(java.lang.String,int)
com.l2jfrozen.gameserver.network.serverpackets.NpcHtmlMessage: void replace(java.lang.String,long)
com.l2jfrozen.gameserver.network.serverpackets.NpcHtmlMessage: void replace(java.lang.String,double)
com.l2jfrozen.gameserver.network.serverpackets.NpcHtmlMessage: void buildBypassCache(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.NpcHtmlMessage: void buildLinksCache(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.NpcHtmlMessage: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.NpcHtmlMessage: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.NpcHtmlMessage: java.lang.String getContent()
com.l2jfrozen.gameserver.network.serverpackets.NpcHtmlMessage: void <clinit>()
com.l2jfrozen.gameserver.network.serverpackets.NpcInfo
com.l2jfrozen.gameserver.network.serverpackets.NpcInfo: java.lang.String _S__22_NPCINFO
com.l2jfrozen.gameserver.network.serverpackets.NpcInfo: com.l2jfrozen.gameserver.model.L2Character _activeChar
com.l2jfrozen.gameserver.network.serverpackets.NpcInfo: int _x
com.l2jfrozen.gameserver.network.serverpackets.NpcInfo: int _y
com.l2jfrozen.gameserver.network.serverpackets.NpcInfo: int _z
com.l2jfrozen.gameserver.network.serverpackets.NpcInfo: int _heading
com.l2jfrozen.gameserver.network.serverpackets.NpcInfo: int _idTemplate
com.l2jfrozen.gameserver.network.serverpackets.NpcInfo: boolean _isAttackable
com.l2jfrozen.gameserver.network.serverpackets.NpcInfo: boolean _isSummoned
com.l2jfrozen.gameserver.network.serverpackets.NpcInfo: int _mAtkSpd
com.l2jfrozen.gameserver.network.serverpackets.NpcInfo: int _pAtkSpd
com.l2jfrozen.gameserver.network.serverpackets.NpcInfo: int _runSpd
com.l2jfrozen.gameserver.network.serverpackets.NpcInfo: int _walkSpd
com.l2jfrozen.gameserver.network.serverpackets.NpcInfo: int _swimRunSpd
com.l2jfrozen.gameserver.network.serverpackets.NpcInfo: int _swimWalkSpd
com.l2jfrozen.gameserver.network.serverpackets.NpcInfo: int _flRunSpd
com.l2jfrozen.gameserver.network.serverpackets.NpcInfo: int _flWalkSpd
com.l2jfrozen.gameserver.network.serverpackets.NpcInfo: int _flyRunSpd
com.l2jfrozen.gameserver.network.serverpackets.NpcInfo: int _flyWalkSpd
com.l2jfrozen.gameserver.network.serverpackets.NpcInfo: int _rhand
com.l2jfrozen.gameserver.network.serverpackets.NpcInfo: int _lhand
com.l2jfrozen.gameserver.network.serverpackets.NpcInfo: int _collisionHeight
com.l2jfrozen.gameserver.network.serverpackets.NpcInfo: int _collisionRadius
com.l2jfrozen.gameserver.network.serverpackets.NpcInfo: java.lang.String _name
com.l2jfrozen.gameserver.network.serverpackets.NpcInfo: java.lang.String _title
com.l2jfrozen.gameserver.network.serverpackets.NpcInfo: NpcInfo(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.network.serverpackets.NpcInfo: NpcInfo(com.l2jfrozen.gameserver.model.L2Summon,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.network.serverpackets.NpcInfo: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.NpcInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.NpcInfoPoly
com.l2jfrozen.gameserver.network.serverpackets.NpcInfoPoly: java.lang.String _S__22_NPCINFO
com.l2jfrozen.gameserver.network.serverpackets.NpcInfoPoly: com.l2jfrozen.gameserver.model.L2Character _activeChar
com.l2jfrozen.gameserver.network.serverpackets.NpcInfoPoly: com.l2jfrozen.gameserver.model.L2Object _obj
com.l2jfrozen.gameserver.network.serverpackets.NpcInfoPoly: int _x
com.l2jfrozen.gameserver.network.serverpackets.NpcInfoPoly: int _y
com.l2jfrozen.gameserver.network.serverpackets.NpcInfoPoly: int _z
com.l2jfrozen.gameserver.network.serverpackets.NpcInfoPoly: int _heading
com.l2jfrozen.gameserver.network.serverpackets.NpcInfoPoly: int _npcId
com.l2jfrozen.gameserver.network.serverpackets.NpcInfoPoly: boolean _isAttackable
com.l2jfrozen.gameserver.network.serverpackets.NpcInfoPoly: boolean _isSummoned
com.l2jfrozen.gameserver.network.serverpackets.NpcInfoPoly: boolean _isRunning
com.l2jfrozen.gameserver.network.serverpackets.NpcInfoPoly: boolean _isInCombat
com.l2jfrozen.gameserver.network.serverpackets.NpcInfoPoly: boolean _isAlikeDead
com.l2jfrozen.gameserver.network.serverpackets.NpcInfoPoly: int _mAtkSpd
com.l2jfrozen.gameserver.network.serverpackets.NpcInfoPoly: int _pAtkSpd
com.l2jfrozen.gameserver.network.serverpackets.NpcInfoPoly: int _runSpd
com.l2jfrozen.gameserver.network.serverpackets.NpcInfoPoly: int _walkSpd
com.l2jfrozen.gameserver.network.serverpackets.NpcInfoPoly: int _swimRunSpd
com.l2jfrozen.gameserver.network.serverpackets.NpcInfoPoly: int _swimWalkSpd
com.l2jfrozen.gameserver.network.serverpackets.NpcInfoPoly: int _flRunSpd
com.l2jfrozen.gameserver.network.serverpackets.NpcInfoPoly: int _flWalkSpd
com.l2jfrozen.gameserver.network.serverpackets.NpcInfoPoly: int _flyRunSpd
com.l2jfrozen.gameserver.network.serverpackets.NpcInfoPoly: int _flyWalkSpd
com.l2jfrozen.gameserver.network.serverpackets.NpcInfoPoly: int _rhand
com.l2jfrozen.gameserver.network.serverpackets.NpcInfoPoly: int _lhand
com.l2jfrozen.gameserver.network.serverpackets.NpcInfoPoly: java.lang.String _name
com.l2jfrozen.gameserver.network.serverpackets.NpcInfoPoly: java.lang.String _title
com.l2jfrozen.gameserver.network.serverpackets.NpcInfoPoly: int _abnormalEffect
com.l2jfrozen.gameserver.network.serverpackets.NpcInfoPoly: com.l2jfrozen.gameserver.templates.L2NpcTemplate _template
com.l2jfrozen.gameserver.network.serverpackets.NpcInfoPoly: int _collisionRadius
com.l2jfrozen.gameserver.network.serverpackets.NpcInfoPoly: int _collisionHeight
com.l2jfrozen.gameserver.network.serverpackets.NpcInfoPoly: NpcInfoPoly(com.l2jfrozen.gameserver.model.L2Object,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.network.serverpackets.NpcInfoPoly: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.NpcInfoPoly: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ObservationMode
com.l2jfrozen.gameserver.network.serverpackets.ObservationMode: java.lang.String _S__DF_OBSERVMODE
com.l2jfrozen.gameserver.network.serverpackets.ObservationMode: int _x
com.l2jfrozen.gameserver.network.serverpackets.ObservationMode: int _y
com.l2jfrozen.gameserver.network.serverpackets.ObservationMode: int _z
com.l2jfrozen.gameserver.network.serverpackets.ObservationMode: ObservationMode(int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.ObservationMode: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ObservationMode: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ObservationReturn
com.l2jfrozen.gameserver.network.serverpackets.ObservationReturn: java.lang.String _S__E0_OBSERVRETURN
com.l2jfrozen.gameserver.network.serverpackets.ObservationReturn: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.ObservationReturn: ObservationReturn(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.ObservationReturn: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ObservationReturn: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.OnVehicleCheckLocation
com.l2jfrozen.gameserver.network.serverpackets.OnVehicleCheckLocation: com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance _boat
com.l2jfrozen.gameserver.network.serverpackets.OnVehicleCheckLocation: int _x
com.l2jfrozen.gameserver.network.serverpackets.OnVehicleCheckLocation: int _y
com.l2jfrozen.gameserver.network.serverpackets.OnVehicleCheckLocation: int _z
com.l2jfrozen.gameserver.network.serverpackets.OnVehicleCheckLocation: OnVehicleCheckLocation(com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance,int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.OnVehicleCheckLocation: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.OnVehicleCheckLocation: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PackageSendableList
com.l2jfrozen.gameserver.network.serverpackets.PackageSendableList: java.lang.String _S__C3_PACKAGESENDABLELIST
com.l2jfrozen.gameserver.network.serverpackets.PackageSendableList: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance[] _items
com.l2jfrozen.gameserver.network.serverpackets.PackageSendableList: int _playerObjId
com.l2jfrozen.gameserver.network.serverpackets.PackageSendableList: PackageSendableList(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance[],int)
com.l2jfrozen.gameserver.network.serverpackets.PackageSendableList: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PackageSendableList: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PackageToList
com.l2jfrozen.gameserver.network.serverpackets.PackageToList: java.lang.String _S__C2_PACKAGETOLIST
com.l2jfrozen.gameserver.network.serverpackets.PackageToList: java.util.Map _players
com.l2jfrozen.gameserver.network.serverpackets.PackageToList: PackageToList(java.util.Map)
com.l2jfrozen.gameserver.network.serverpackets.PackageToList: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PackageToList: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PartyMatchDetail
com.l2jfrozen.gameserver.network.serverpackets.PartyMatchDetail: com.l2jfrozen.gameserver.model.PartyMatchRoom _room
com.l2jfrozen.gameserver.network.serverpackets.PartyMatchDetail: PartyMatchDetail(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.PartyMatchRoom)
com.l2jfrozen.gameserver.network.serverpackets.PartyMatchDetail: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PartyMatchDetail: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PartyMatchList
com.l2jfrozen.gameserver.network.serverpackets.PartyMatchList: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _cha
com.l2jfrozen.gameserver.network.serverpackets.PartyMatchList: int _loc
com.l2jfrozen.gameserver.network.serverpackets.PartyMatchList: int _lim
com.l2jfrozen.gameserver.network.serverpackets.PartyMatchList: javolution.util.FastList _rooms
com.l2jfrozen.gameserver.network.serverpackets.PartyMatchList: PartyMatchList(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.PartyMatchList: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PartyMatchList: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PartyMemberPosition
com.l2jfrozen.gameserver.network.serverpackets.PartyMemberPosition: java.util.Map locations
com.l2jfrozen.gameserver.network.serverpackets.PartyMemberPosition: PartyMemberPosition(com.l2jfrozen.gameserver.model.L2Party)
com.l2jfrozen.gameserver.network.serverpackets.PartyMemberPosition: void reuse(com.l2jfrozen.gameserver.model.L2Party)
com.l2jfrozen.gameserver.network.serverpackets.PartyMemberPosition: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PartyMemberPosition: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PartySmallWindowAdd
com.l2jfrozen.gameserver.network.serverpackets.PartySmallWindowAdd: java.lang.String _S__64_PARTYSMALLWINDOWADD
com.l2jfrozen.gameserver.network.serverpackets.PartySmallWindowAdd: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _member
com.l2jfrozen.gameserver.network.serverpackets.PartySmallWindowAdd: int _leaderId
com.l2jfrozen.gameserver.network.serverpackets.PartySmallWindowAdd: int _distribution
com.l2jfrozen.gameserver.network.serverpackets.PartySmallWindowAdd: PartySmallWindowAdd(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Party)
com.l2jfrozen.gameserver.network.serverpackets.PartySmallWindowAdd: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PartySmallWindowAdd: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PartySmallWindowAll
com.l2jfrozen.gameserver.network.serverpackets.PartySmallWindowAll: java.lang.String _S__63_PARTYSMALLWINDOWALL
com.l2jfrozen.gameserver.network.serverpackets.PartySmallWindowAll: com.l2jfrozen.gameserver.model.L2Party _party
com.l2jfrozen.gameserver.network.serverpackets.PartySmallWindowAll: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _exclude
com.l2jfrozen.gameserver.network.serverpackets.PartySmallWindowAll: int _dist
com.l2jfrozen.gameserver.network.serverpackets.PartySmallWindowAll: int _LeaderOID
com.l2jfrozen.gameserver.network.serverpackets.PartySmallWindowAll: PartySmallWindowAll(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2Party)
com.l2jfrozen.gameserver.network.serverpackets.PartySmallWindowAll: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PartySmallWindowAll: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PartySmallWindowDelete
com.l2jfrozen.gameserver.network.serverpackets.PartySmallWindowDelete: java.lang.String _S__66_PARTYSMALLWINDOWDELETE
com.l2jfrozen.gameserver.network.serverpackets.PartySmallWindowDelete: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _member
com.l2jfrozen.gameserver.network.serverpackets.PartySmallWindowDelete: PartySmallWindowDelete(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.PartySmallWindowDelete: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PartySmallWindowDelete: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PartySmallWindowDeleteAll
com.l2jfrozen.gameserver.network.serverpackets.PartySmallWindowDeleteAll: java.lang.String _S__65_PARTYSMALLWINDOWDELETEALL
com.l2jfrozen.gameserver.network.serverpackets.PartySmallWindowDeleteAll: PartySmallWindowDeleteAll()
com.l2jfrozen.gameserver.network.serverpackets.PartySmallWindowDeleteAll: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PartySmallWindowDeleteAll: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PartySmallWindowUpdate
com.l2jfrozen.gameserver.network.serverpackets.PartySmallWindowUpdate: java.lang.String _S__67_PARTYSMALLWINDOWUPDATE
com.l2jfrozen.gameserver.network.serverpackets.PartySmallWindowUpdate: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _member
com.l2jfrozen.gameserver.network.serverpackets.PartySmallWindowUpdate: PartySmallWindowUpdate(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.PartySmallWindowUpdate: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PartySmallWindowUpdate: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PartySpelled
com.l2jfrozen.gameserver.network.serverpackets.PartySpelled: java.lang.String _S__EE_PartySpelled
com.l2jfrozen.gameserver.network.serverpackets.PartySpelled: java.util.List _effects
com.l2jfrozen.gameserver.network.serverpackets.PartySpelled: com.l2jfrozen.gameserver.model.L2Character _activeChar
com.l2jfrozen.gameserver.network.serverpackets.PartySpelled: PartySpelled(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.network.serverpackets.PartySpelled: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PartySpelled: void addPartySpelledEffect(int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.PartySpelled: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PartySpelled$Effect
com.l2jfrozen.gameserver.network.serverpackets.PartySpelled$Effect: int _skillId
com.l2jfrozen.gameserver.network.serverpackets.PartySpelled$Effect: int _dat
com.l2jfrozen.gameserver.network.serverpackets.PartySpelled$Effect: int _duration
com.l2jfrozen.gameserver.network.serverpackets.PartySpelled$Effect: com.l2jfrozen.gameserver.network.serverpackets.PartySpelled this$0
com.l2jfrozen.gameserver.network.serverpackets.PartySpelled$Effect: PartySpelled$Effect(com.l2jfrozen.gameserver.network.serverpackets.PartySpelled,int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.PetDelete
com.l2jfrozen.gameserver.network.serverpackets.PetDelete: java.lang.String _S__CF_PETDELETE
com.l2jfrozen.gameserver.network.serverpackets.PetDelete: int _petId
com.l2jfrozen.gameserver.network.serverpackets.PetDelete: int _petObjId
com.l2jfrozen.gameserver.network.serverpackets.PetDelete: PetDelete(int,int)
com.l2jfrozen.gameserver.network.serverpackets.PetDelete: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PetDelete: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PetInfo
com.l2jfrozen.gameserver.network.serverpackets.PetInfo: java.lang.String _S__CA_PETINFO
com.l2jfrozen.gameserver.network.serverpackets.PetInfo: com.l2jfrozen.gameserver.model.L2Summon _summon
com.l2jfrozen.gameserver.network.serverpackets.PetInfo: int _x
com.l2jfrozen.gameserver.network.serverpackets.PetInfo: int _y
com.l2jfrozen.gameserver.network.serverpackets.PetInfo: int _z
com.l2jfrozen.gameserver.network.serverpackets.PetInfo: int _heading
com.l2jfrozen.gameserver.network.serverpackets.PetInfo: boolean _isSummoned
com.l2jfrozen.gameserver.network.serverpackets.PetInfo: int _mAtkSpd
com.l2jfrozen.gameserver.network.serverpackets.PetInfo: int _pAtkSpd
com.l2jfrozen.gameserver.network.serverpackets.PetInfo: int _runSpd
com.l2jfrozen.gameserver.network.serverpackets.PetInfo: int _walkSpd
com.l2jfrozen.gameserver.network.serverpackets.PetInfo: int _swimRunSpd
com.l2jfrozen.gameserver.network.serverpackets.PetInfo: int _swimWalkSpd
com.l2jfrozen.gameserver.network.serverpackets.PetInfo: int _flRunSpd
com.l2jfrozen.gameserver.network.serverpackets.PetInfo: int _flWalkSpd
com.l2jfrozen.gameserver.network.serverpackets.PetInfo: int _flyRunSpd
com.l2jfrozen.gameserver.network.serverpackets.PetInfo: int _flyWalkSpd
com.l2jfrozen.gameserver.network.serverpackets.PetInfo: int _maxHp
com.l2jfrozen.gameserver.network.serverpackets.PetInfo: int _maxMp
com.l2jfrozen.gameserver.network.serverpackets.PetInfo: int _maxFed
com.l2jfrozen.gameserver.network.serverpackets.PetInfo: int _curFed
com.l2jfrozen.gameserver.network.serverpackets.PetInfo: PetInfo(com.l2jfrozen.gameserver.model.L2Summon)
com.l2jfrozen.gameserver.network.serverpackets.PetInfo: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PetInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PetInventoryUpdate
com.l2jfrozen.gameserver.network.serverpackets.PetInventoryUpdate: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.serverpackets.PetInventoryUpdate: java.lang.String _S__37_INVENTORYUPDATE
com.l2jfrozen.gameserver.network.serverpackets.PetInventoryUpdate: java.util.List _items
com.l2jfrozen.gameserver.network.serverpackets.PetInventoryUpdate: PetInventoryUpdate(java.util.List)
com.l2jfrozen.gameserver.network.serverpackets.PetInventoryUpdate: PetInventoryUpdate()
com.l2jfrozen.gameserver.network.serverpackets.PetInventoryUpdate: void addItem(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.network.serverpackets.PetInventoryUpdate: void addNewItem(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.network.serverpackets.PetInventoryUpdate: void addModifiedItem(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.network.serverpackets.PetInventoryUpdate: void addRemovedItem(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.network.serverpackets.PetInventoryUpdate: void addItems(java.util.List)
com.l2jfrozen.gameserver.network.serverpackets.PetInventoryUpdate: void showDebug()
com.l2jfrozen.gameserver.network.serverpackets.PetInventoryUpdate: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PetInventoryUpdate: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PetInventoryUpdate: void <clinit>()
com.l2jfrozen.gameserver.network.serverpackets.PetItemList
com.l2jfrozen.gameserver.network.serverpackets.PetItemList: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.serverpackets.PetItemList: java.lang.String _S__cb_PETITEMLIST
com.l2jfrozen.gameserver.network.serverpackets.PetItemList: com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.PetItemList: PetItemList(com.l2jfrozen.gameserver.model.actor.instance.L2PetInstance)
com.l2jfrozen.gameserver.network.serverpackets.PetItemList: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PetItemList: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PetItemList: void <clinit>()
com.l2jfrozen.gameserver.network.serverpackets.PetStatusShow
com.l2jfrozen.gameserver.network.serverpackets.PetStatusShow: java.lang.String _S__C9_PETSTATUSSHOW
com.l2jfrozen.gameserver.network.serverpackets.PetStatusShow: int _summonType
com.l2jfrozen.gameserver.network.serverpackets.PetStatusShow: PetStatusShow(com.l2jfrozen.gameserver.model.L2Summon)
com.l2jfrozen.gameserver.network.serverpackets.PetStatusShow: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PetStatusShow: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PetStatusUpdate
com.l2jfrozen.gameserver.network.serverpackets.PetStatusUpdate: java.lang.String _S__CE_PETSTATUSSHOW
com.l2jfrozen.gameserver.network.serverpackets.PetStatusUpdate: com.l2jfrozen.gameserver.model.L2Summon _summon
com.l2jfrozen.gameserver.network.serverpackets.PetStatusUpdate: int _maxHp
com.l2jfrozen.gameserver.network.serverpackets.PetStatusUpdate: int _maxMp
com.l2jfrozen.gameserver.network.serverpackets.PetStatusUpdate: int _maxFed
com.l2jfrozen.gameserver.network.serverpackets.PetStatusUpdate: int _curFed
com.l2jfrozen.gameserver.network.serverpackets.PetStatusUpdate: PetStatusUpdate(com.l2jfrozen.gameserver.model.L2Summon)
com.l2jfrozen.gameserver.network.serverpackets.PetStatusUpdate: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PetStatusUpdate: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PlaySound
com.l2jfrozen.gameserver.network.serverpackets.PlaySound: java.lang.String _S__98_PlaySound
com.l2jfrozen.gameserver.network.serverpackets.PlaySound: int _unknown1
com.l2jfrozen.gameserver.network.serverpackets.PlaySound: java.lang.String _soundFile
com.l2jfrozen.gameserver.network.serverpackets.PlaySound: int _unknown3
com.l2jfrozen.gameserver.network.serverpackets.PlaySound: int _unknown4
com.l2jfrozen.gameserver.network.serverpackets.PlaySound: int _unknown5
com.l2jfrozen.gameserver.network.serverpackets.PlaySound: int _unknown6
com.l2jfrozen.gameserver.network.serverpackets.PlaySound: int _unknown7
com.l2jfrozen.gameserver.network.serverpackets.PlaySound: PlaySound(java.lang.String)
com.l2jfrozen.gameserver.network.serverpackets.PlaySound: PlaySound(int,java.lang.String,int,int,int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.PlaySound: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PlaySound: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PledgeCrest
com.l2jfrozen.gameserver.network.serverpackets.PledgeCrest: java.lang.String _S__84_PLEDGECREST
com.l2jfrozen.gameserver.network.serverpackets.PledgeCrest: int _crestId
com.l2jfrozen.gameserver.network.serverpackets.PledgeCrest: byte[] _data
com.l2jfrozen.gameserver.network.serverpackets.PledgeCrest: PledgeCrest(int)
com.l2jfrozen.gameserver.network.serverpackets.PledgeCrest: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PledgeCrest: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PledgeInfo
com.l2jfrozen.gameserver.network.serverpackets.PledgeInfo: java.lang.String _S__9C_PLEDGEINFO
com.l2jfrozen.gameserver.network.serverpackets.PledgeInfo: com.l2jfrozen.gameserver.model.L2Clan _clan
com.l2jfrozen.gameserver.network.serverpackets.PledgeInfo: PledgeInfo(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.network.serverpackets.PledgeInfo: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PledgeInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PledgePowerGradeList
com.l2jfrozen.gameserver.network.serverpackets.PledgePowerGradeList: java.lang.String _S__FE_3B_PLEDGEPOWERGRADELIST
com.l2jfrozen.gameserver.network.serverpackets.PledgePowerGradeList: com.l2jfrozen.gameserver.model.L2Clan$RankPrivs[] _privs
com.l2jfrozen.gameserver.network.serverpackets.PledgePowerGradeList: PledgePowerGradeList(com.l2jfrozen.gameserver.model.L2Clan$RankPrivs[])
com.l2jfrozen.gameserver.network.serverpackets.PledgePowerGradeList: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PledgePowerGradeList: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PledgeReceiveMemberInfo
com.l2jfrozen.gameserver.network.serverpackets.PledgeReceiveMemberInfo: java.lang.String _S__FE_3D_PLEDGERECEIVEMEMBERINFO
com.l2jfrozen.gameserver.network.serverpackets.PledgeReceiveMemberInfo: com.l2jfrozen.gameserver.model.L2ClanMember _member
com.l2jfrozen.gameserver.network.serverpackets.PledgeReceiveMemberInfo: PledgeReceiveMemberInfo(com.l2jfrozen.gameserver.model.L2ClanMember)
com.l2jfrozen.gameserver.network.serverpackets.PledgeReceiveMemberInfo: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PledgeReceiveMemberInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PledgeReceivePowerInfo
com.l2jfrozen.gameserver.network.serverpackets.PledgeReceivePowerInfo: java.lang.String _S__FE_3C_PLEDGERECEIVEPOWERINFO
com.l2jfrozen.gameserver.network.serverpackets.PledgeReceivePowerInfo: com.l2jfrozen.gameserver.model.L2ClanMember _member
com.l2jfrozen.gameserver.network.serverpackets.PledgeReceivePowerInfo: PledgeReceivePowerInfo(com.l2jfrozen.gameserver.model.L2ClanMember)
com.l2jfrozen.gameserver.network.serverpackets.PledgeReceivePowerInfo: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PledgeReceivePowerInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PledgeReceiveSubPledgeCreated
com.l2jfrozen.gameserver.network.serverpackets.PledgeReceiveSubPledgeCreated: java.lang.String _S__FE_3F_PLEDGERECEIVESUBPLEDGECREATED
com.l2jfrozen.gameserver.network.serverpackets.PledgeReceiveSubPledgeCreated: com.l2jfrozen.gameserver.model.L2Clan$SubPledge _subPledge
com.l2jfrozen.gameserver.network.serverpackets.PledgeReceiveSubPledgeCreated: PledgeReceiveSubPledgeCreated(com.l2jfrozen.gameserver.model.L2Clan$SubPledge)
com.l2jfrozen.gameserver.network.serverpackets.PledgeReceiveSubPledgeCreated: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PledgeReceiveSubPledgeCreated: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PledgeReceiveWarList
com.l2jfrozen.gameserver.network.serverpackets.PledgeReceiveWarList: java.lang.String _S__FE_3E_PLEDGERECEIVEWARELIST
com.l2jfrozen.gameserver.network.serverpackets.PledgeReceiveWarList: com.l2jfrozen.gameserver.model.L2Clan _clan
com.l2jfrozen.gameserver.network.serverpackets.PledgeReceiveWarList: int _tab
com.l2jfrozen.gameserver.network.serverpackets.PledgeReceiveWarList: PledgeReceiveWarList(com.l2jfrozen.gameserver.model.L2Clan,int)
com.l2jfrozen.gameserver.network.serverpackets.PledgeReceiveWarList: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PledgeReceiveWarList: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowInfoUpdate
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowInfoUpdate: java.lang.String _S__A1_PLEDGESHOWINFOUPDATE
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowInfoUpdate: com.l2jfrozen.gameserver.model.L2Clan _clan
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowInfoUpdate: PledgeShowInfoUpdate(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowInfoUpdate: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowInfoUpdate: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListAdd
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListAdd: java.lang.String _S__55_PLEDGESHOWMEMBERLISTADD
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListAdd: java.lang.String _name
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListAdd: int _lvl
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListAdd: int _classId
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListAdd: int _isOnline
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListAdd: int _pledgeType
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListAdd: PledgeShowMemberListAdd(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListAdd: PledgeShowMemberListAdd(com.l2jfrozen.gameserver.model.L2ClanMember)
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListAdd: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListAdd: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListAll
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListAll: java.lang.String _S__68_PLEDGESHOWMEMBERLISTALL
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListAll: com.l2jfrozen.gameserver.model.L2Clan _clan
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListAll: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListAll: com.l2jfrozen.gameserver.model.L2ClanMember[] _members
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListAll: int _pledgeType
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListAll: PledgeShowMemberListAll(com.l2jfrozen.gameserver.model.L2Clan,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListAll: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListAll: void writePledge(int)
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListAll: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListDelete
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListDelete: java.lang.String _S__6B_PLEDGESHOWMEMBERLISTDELETE
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListDelete: java.lang.String _player
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListDelete: PledgeShowMemberListDelete(java.lang.String)
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListDelete: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListDelete: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListDeleteAll
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListDeleteAll: java.lang.String _S__9B_PLEDGESHOWMEMBERLISTDELETEALL
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListDeleteAll: PledgeShowMemberListDeleteAll()
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListDeleteAll: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListDeleteAll: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListUpdate
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListUpdate: java.lang.String _S__54_PLEDGESHOWMEMBERLISTUPDATE
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListUpdate: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListUpdate: int _pledgeType
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListUpdate: int _hasSponsor
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListUpdate: java.lang.String _name
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListUpdate: int _level
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListUpdate: int _classId
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListUpdate: int _objectId
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListUpdate: int _isOnline
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListUpdate: PledgeShowMemberListUpdate(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListUpdate: PledgeShowMemberListUpdate(com.l2jfrozen.gameserver.model.L2ClanMember)
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListUpdate: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PledgeShowMemberListUpdate: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PledgeSkillList
com.l2jfrozen.gameserver.network.serverpackets.PledgeSkillList: java.lang.String _S__FE_39_PLEDGESKILLLIST
com.l2jfrozen.gameserver.network.serverpackets.PledgeSkillList: com.l2jfrozen.gameserver.model.L2Clan _clan
com.l2jfrozen.gameserver.network.serverpackets.PledgeSkillList: PledgeSkillList(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.network.serverpackets.PledgeSkillList: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PledgeSkillList: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PledgeSkillListAdd
com.l2jfrozen.gameserver.network.serverpackets.PledgeSkillListAdd: java.lang.String _S__FE_3A_PLEDGESKILLLISTADD
com.l2jfrozen.gameserver.network.serverpackets.PledgeSkillListAdd: int _id
com.l2jfrozen.gameserver.network.serverpackets.PledgeSkillListAdd: int _lvl
com.l2jfrozen.gameserver.network.serverpackets.PledgeSkillListAdd: PledgeSkillListAdd(int,int)
com.l2jfrozen.gameserver.network.serverpackets.PledgeSkillListAdd: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PledgeSkillListAdd: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PledgeStatusChanged
com.l2jfrozen.gameserver.network.serverpackets.PledgeStatusChanged: java.lang.String _S__CD_PLEDGESTATUS_CHANGED
com.l2jfrozen.gameserver.network.serverpackets.PledgeStatusChanged: com.l2jfrozen.gameserver.model.L2Clan _clan
com.l2jfrozen.gameserver.network.serverpackets.PledgeStatusChanged: PledgeStatusChanged(com.l2jfrozen.gameserver.model.L2Clan)
com.l2jfrozen.gameserver.network.serverpackets.PledgeStatusChanged: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PledgeStatusChanged: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreListBuy
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreListBuy: java.lang.String _S__D1_PRIVATESTORELISTBUY
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreListBuy: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _storePlayer
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreListBuy: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreListBuy: int _playerAdena
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreListBuy: com.l2jfrozen.gameserver.model.TradeList$TradeItem[] _items
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreListBuy: PrivateStoreListBuy(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreListBuy: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreListBuy: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreListSell
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreListSell: java.lang.String _S__B4_PRIVATESTORELISTSELL
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreListSell: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _storePlayer
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreListSell: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreListSell: int _playerAdena
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreListSell: boolean _packageSale
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreListSell: com.l2jfrozen.gameserver.model.TradeList$TradeItem[] _items
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreListSell: PrivateStoreListSell(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreListSell: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreListSell: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreManageListBuy
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreManageListBuy: java.lang.String _S__D0_PRIVATESELLLISTBUY
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreManageListBuy: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreManageListBuy: int _playerAdena
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreManageListBuy: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance[] _itemList
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreManageListBuy: com.l2jfrozen.gameserver.model.TradeList$TradeItem[] _buyList
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreManageListBuy: PrivateStoreManageListBuy(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreManageListBuy: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreManageListBuy: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreManageListSell
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreManageListSell: java.lang.String _S__B3_PRIVATESELLLISTSELL
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreManageListSell: int _objId
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreManageListSell: int _playerAdena
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreManageListSell: boolean _packageSale
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreManageListSell: com.l2jfrozen.gameserver.model.TradeList$TradeItem[] _itemList
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreManageListSell: com.l2jfrozen.gameserver.model.TradeList$TradeItem[] _sellList
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreManageListSell: PrivateStoreManageListSell(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreManageListSell: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreManageListSell: boolean isItemInSelling(com.l2jfrozen.gameserver.model.TradeList$TradeItem)
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreManageListSell: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreMsgBuy
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreMsgBuy: java.lang.String _S__D2_PRIVATESTOREMSGBUY
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreMsgBuy: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreMsgBuy: java.lang.String _storeMsg
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreMsgBuy: PrivateStoreMsgBuy(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreMsgBuy: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreMsgBuy: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreMsgSell
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreMsgSell: java.lang.String _S__B5_PRIVATESTOREMSGSELL
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreMsgSell: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreMsgSell: java.lang.String _storeMsg
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreMsgSell: PrivateStoreMsgSell(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreMsgSell: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.PrivateStoreMsgSell: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.QuestList
com.l2jfrozen.gameserver.network.serverpackets.QuestList: java.lang.String _S__98_QUESTLIST
com.l2jfrozen.gameserver.network.serverpackets.QuestList: com.l2jfrozen.gameserver.model.quest.Quest[] _quests
com.l2jfrozen.gameserver.network.serverpackets.QuestList: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.QuestList: QuestList()
com.l2jfrozen.gameserver.network.serverpackets.QuestList: void runImpl()
com.l2jfrozen.gameserver.network.serverpackets.QuestList: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.QuestList: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.RadarControl
com.l2jfrozen.gameserver.network.serverpackets.RadarControl: java.lang.String _S__EB_RadarControl
com.l2jfrozen.gameserver.network.serverpackets.RadarControl: int _showRadar
com.l2jfrozen.gameserver.network.serverpackets.RadarControl: int _type
com.l2jfrozen.gameserver.network.serverpackets.RadarControl: int _x
com.l2jfrozen.gameserver.network.serverpackets.RadarControl: int _y
com.l2jfrozen.gameserver.network.serverpackets.RadarControl: int _z
com.l2jfrozen.gameserver.network.serverpackets.RadarControl: RadarControl(int,int,int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.RadarControl: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.RadarControl: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.RecipeBookItemList
com.l2jfrozen.gameserver.network.serverpackets.RecipeBookItemList: java.lang.String _S__D6_RECIPEBOOKITEMLIST
com.l2jfrozen.gameserver.network.serverpackets.RecipeBookItemList: com.l2jfrozen.gameserver.model.L2RecipeList[] _recipes
com.l2jfrozen.gameserver.network.serverpackets.RecipeBookItemList: boolean _isDwarvenCraft
com.l2jfrozen.gameserver.network.serverpackets.RecipeBookItemList: int _maxMp
com.l2jfrozen.gameserver.network.serverpackets.RecipeBookItemList: RecipeBookItemList(boolean,int)
com.l2jfrozen.gameserver.network.serverpackets.RecipeBookItemList: void addRecipes(com.l2jfrozen.gameserver.model.L2RecipeList[])
com.l2jfrozen.gameserver.network.serverpackets.RecipeBookItemList: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.RecipeBookItemList: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.RecipeItemMakeInfo
com.l2jfrozen.gameserver.network.serverpackets.RecipeItemMakeInfo: java.lang.String _S__D7_RECIPEITEMMAKEINFO
com.l2jfrozen.gameserver.network.serverpackets.RecipeItemMakeInfo: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.serverpackets.RecipeItemMakeInfo: int _id
com.l2jfrozen.gameserver.network.serverpackets.RecipeItemMakeInfo: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.RecipeItemMakeInfo: boolean _success
com.l2jfrozen.gameserver.network.serverpackets.RecipeItemMakeInfo: RecipeItemMakeInfo(int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.network.serverpackets.RecipeItemMakeInfo: RecipeItemMakeInfo(int,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.RecipeItemMakeInfo: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.RecipeItemMakeInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.RecipeItemMakeInfo: void <clinit>()
com.l2jfrozen.gameserver.network.serverpackets.RecipeShopItemInfo
com.l2jfrozen.gameserver.network.serverpackets.RecipeShopItemInfo: java.lang.String _S__DA_RecipeShopItemInfo
com.l2jfrozen.gameserver.network.serverpackets.RecipeShopItemInfo: int _shopId
com.l2jfrozen.gameserver.network.serverpackets.RecipeShopItemInfo: int _recipeId
com.l2jfrozen.gameserver.network.serverpackets.RecipeShopItemInfo: RecipeShopItemInfo(int,int)
com.l2jfrozen.gameserver.network.serverpackets.RecipeShopItemInfo: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.RecipeShopItemInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.RecipeShopManageList
com.l2jfrozen.gameserver.network.serverpackets.RecipeShopManageList: java.lang.String _S__D8_RecipeShopManageList
com.l2jfrozen.gameserver.network.serverpackets.RecipeShopManageList: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _seller
com.l2jfrozen.gameserver.network.serverpackets.RecipeShopManageList: boolean _isDwarven
com.l2jfrozen.gameserver.network.serverpackets.RecipeShopManageList: com.l2jfrozen.gameserver.model.L2RecipeList[] _recipes
com.l2jfrozen.gameserver.network.serverpackets.RecipeShopManageList: RecipeShopManageList(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,boolean)
com.l2jfrozen.gameserver.network.serverpackets.RecipeShopManageList: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.RecipeShopManageList: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.RecipeShopMsg
com.l2jfrozen.gameserver.network.serverpackets.RecipeShopMsg: java.lang.String _S__DB_RecipeShopMsg
com.l2jfrozen.gameserver.network.serverpackets.RecipeShopMsg: int _chaObjectId
com.l2jfrozen.gameserver.network.serverpackets.RecipeShopMsg: java.lang.String _chaStoreName
com.l2jfrozen.gameserver.network.serverpackets.RecipeShopMsg: RecipeShopMsg(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.RecipeShopMsg: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.RecipeShopMsg: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.RecipeShopSellList
com.l2jfrozen.gameserver.network.serverpackets.RecipeShopSellList: java.lang.String _S__D9_RecipeShopSellList
com.l2jfrozen.gameserver.network.serverpackets.RecipeShopSellList: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _buyer
com.l2jfrozen.gameserver.network.serverpackets.RecipeShopSellList: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _manufacturer
com.l2jfrozen.gameserver.network.serverpackets.RecipeShopSellList: RecipeShopSellList(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.RecipeShopSellList: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.RecipeShopSellList: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.RelationChanged
com.l2jfrozen.gameserver.network.serverpackets.RelationChanged: int RELATION_PVP_FLAG
com.l2jfrozen.gameserver.network.serverpackets.RelationChanged: int RELATION_HAS_KARMA
com.l2jfrozen.gameserver.network.serverpackets.RelationChanged: int RELATION_LEADER
com.l2jfrozen.gameserver.network.serverpackets.RelationChanged: int RELATION_INSIEGE
com.l2jfrozen.gameserver.network.serverpackets.RelationChanged: int RELATION_ATTACKER
com.l2jfrozen.gameserver.network.serverpackets.RelationChanged: int RELATION_ALLY
com.l2jfrozen.gameserver.network.serverpackets.RelationChanged: int RELATION_ENEMY
com.l2jfrozen.gameserver.network.serverpackets.RelationChanged: int RELATION_MUTUAL_WAR
com.l2jfrozen.gameserver.network.serverpackets.RelationChanged: int RELATION_1SIDED_WAR
com.l2jfrozen.gameserver.network.serverpackets.RelationChanged: java.lang.String _S__CE_RELATIONCHANGED
com.l2jfrozen.gameserver.network.serverpackets.RelationChanged: int _objId
com.l2jfrozen.gameserver.network.serverpackets.RelationChanged: int _relation
com.l2jfrozen.gameserver.network.serverpackets.RelationChanged: int _autoAttackable
com.l2jfrozen.gameserver.network.serverpackets.RelationChanged: int _karma
com.l2jfrozen.gameserver.network.serverpackets.RelationChanged: int _pvpFlag
com.l2jfrozen.gameserver.network.serverpackets.RelationChanged: RelationChanged(com.l2jfrozen.gameserver.model.actor.instance.L2PlayableInstance,int,boolean)
com.l2jfrozen.gameserver.network.serverpackets.RelationChanged: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.RelationChanged: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.RestartResponse
com.l2jfrozen.gameserver.network.serverpackets.RestartResponse: java.lang.String _S__74_RESTARTRESPONSE
com.l2jfrozen.gameserver.network.serverpackets.RestartResponse: com.l2jfrozen.gameserver.network.serverpackets.RestartResponse STATIC_PACKET_TRUE
com.l2jfrozen.gameserver.network.serverpackets.RestartResponse: com.l2jfrozen.gameserver.network.serverpackets.RestartResponse STATIC_PACKET_FALSE
com.l2jfrozen.gameserver.network.serverpackets.RestartResponse: java.lang.String _message
com.l2jfrozen.gameserver.network.serverpackets.RestartResponse: boolean _result
com.l2jfrozen.gameserver.network.serverpackets.RestartResponse: com.l2jfrozen.gameserver.network.serverpackets.RestartResponse valueOf(boolean)
com.l2jfrozen.gameserver.network.serverpackets.RestartResponse: RestartResponse(boolean)
com.l2jfrozen.gameserver.network.serverpackets.RestartResponse: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.RestartResponse: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.RestartResponse: void <clinit>()
com.l2jfrozen.gameserver.network.serverpackets.Revive
com.l2jfrozen.gameserver.network.serverpackets.Revive: java.lang.String _S__0C_REVIVE
com.l2jfrozen.gameserver.network.serverpackets.Revive: int _objectId
com.l2jfrozen.gameserver.network.serverpackets.Revive: Revive(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.network.serverpackets.Revive: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.Revive: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.Ride
com.l2jfrozen.gameserver.network.serverpackets.Ride: java.lang.String _S__86_Ride
com.l2jfrozen.gameserver.network.serverpackets.Ride: int ACTION_MOUNT
com.l2jfrozen.gameserver.network.serverpackets.Ride: int ACTION_DISMOUNT
com.l2jfrozen.gameserver.network.serverpackets.Ride: int _id
com.l2jfrozen.gameserver.network.serverpackets.Ride: int _bRide
com.l2jfrozen.gameserver.network.serverpackets.Ride: int _rideType
com.l2jfrozen.gameserver.network.serverpackets.Ride: int _rideClassID
com.l2jfrozen.gameserver.network.serverpackets.Ride: Ride(int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.Ride: void runImpl()
com.l2jfrozen.gameserver.network.serverpackets.Ride: int getMountType()
com.l2jfrozen.gameserver.network.serverpackets.Ride: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.Ride: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.SSQStatus
com.l2jfrozen.gameserver.network.serverpackets.SSQStatus: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.serverpackets.SSQStatus: java.lang.String _S__F5_SSQStatus
com.l2jfrozen.gameserver.network.serverpackets.SSQStatus: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activevChar
com.l2jfrozen.gameserver.network.serverpackets.SSQStatus: int _page
com.l2jfrozen.gameserver.network.serverpackets.SSQStatus: SSQStatus(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.network.serverpackets.SSQStatus: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.SSQStatus: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.SSQStatus: void <clinit>()
com.l2jfrozen.gameserver.network.serverpackets.SellList
com.l2jfrozen.gameserver.network.serverpackets.SellList: java.lang.String _S__10_SELLLIST
com.l2jfrozen.gameserver.network.serverpackets.SellList: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.serverpackets.SellList: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.SellList: com.l2jfrozen.gameserver.model.actor.instance.L2MerchantInstance _lease
com.l2jfrozen.gameserver.network.serverpackets.SellList: int _money
com.l2jfrozen.gameserver.network.serverpackets.SellList: java.util.List _selllist
com.l2jfrozen.gameserver.network.serverpackets.SellList: SellList(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.SellList: SellList(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.actor.instance.L2MerchantInstance)
com.l2jfrozen.gameserver.network.serverpackets.SellList: void doLease()
com.l2jfrozen.gameserver.network.serverpackets.SellList: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.SellList: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.SellList: void <clinit>()
com.l2jfrozen.gameserver.network.serverpackets.SellListProcure
com.l2jfrozen.gameserver.network.serverpackets.SellListProcure: java.lang.String _S__E9_SELLLISTPROCURE
com.l2jfrozen.gameserver.network.serverpackets.SellListProcure: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.SellListProcure: int _money
com.l2jfrozen.gameserver.network.serverpackets.SellListProcure: java.util.Map _sellList
com.l2jfrozen.gameserver.network.serverpackets.SellListProcure: java.util.List _procureList
com.l2jfrozen.gameserver.network.serverpackets.SellListProcure: int _castle
com.l2jfrozen.gameserver.network.serverpackets.SellListProcure: SellListProcure(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.network.serverpackets.SellListProcure: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.SellListProcure: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.SendMacroList
com.l2jfrozen.gameserver.network.serverpackets.SendMacroList: java.lang.String _S__E7_SENDMACROLIST
com.l2jfrozen.gameserver.network.serverpackets.SendMacroList: int _rev
com.l2jfrozen.gameserver.network.serverpackets.SendMacroList: int _count
com.l2jfrozen.gameserver.network.serverpackets.SendMacroList: com.l2jfrozen.gameserver.model.L2Macro _macro
com.l2jfrozen.gameserver.network.serverpackets.SendMacroList: SendMacroList(int,int,com.l2jfrozen.gameserver.model.L2Macro)
com.l2jfrozen.gameserver.network.serverpackets.SendMacroList: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.SendMacroList: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.SendTradeDone
com.l2jfrozen.gameserver.network.serverpackets.SendTradeDone: java.lang.String _S__32_SENDTRADEDONE
com.l2jfrozen.gameserver.network.serverpackets.SendTradeDone: int _num
com.l2jfrozen.gameserver.network.serverpackets.SendTradeDone: SendTradeDone(int)
com.l2jfrozen.gameserver.network.serverpackets.SendTradeDone: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.SendTradeDone: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.SendTradeRequest
com.l2jfrozen.gameserver.network.serverpackets.SendTradeRequest: java.lang.String _S__73_SENDTRADEREQUEST
com.l2jfrozen.gameserver.network.serverpackets.SendTradeRequest: int _senderID
com.l2jfrozen.gameserver.network.serverpackets.SendTradeRequest: SendTradeRequest(int)
com.l2jfrozen.gameserver.network.serverpackets.SendTradeRequest: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.SendTradeRequest: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ServerClose
com.l2jfrozen.gameserver.network.serverpackets.ServerClose: java.lang.String _S__26_SERVERCLOSE
com.l2jfrozen.gameserver.network.serverpackets.ServerClose: com.l2jfrozen.gameserver.network.serverpackets.ServerClose STATIC_PACKET
com.l2jfrozen.gameserver.network.serverpackets.ServerClose: ServerClose()
com.l2jfrozen.gameserver.network.serverpackets.ServerClose: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ServerClose: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ServerClose: void <clinit>()
com.l2jfrozen.gameserver.network.serverpackets.SetSummonRemainTime
com.l2jfrozen.gameserver.network.serverpackets.SetSummonRemainTime: java.lang.String _S__D1_SET_SUMMON_REMAIN_TIME
com.l2jfrozen.gameserver.network.serverpackets.SetSummonRemainTime: int _maxTime
com.l2jfrozen.gameserver.network.serverpackets.SetSummonRemainTime: int _remainingTime
com.l2jfrozen.gameserver.network.serverpackets.SetSummonRemainTime: SetSummonRemainTime(int,int)
com.l2jfrozen.gameserver.network.serverpackets.SetSummonRemainTime: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.SetSummonRemainTime: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.SetToLocation
com.l2jfrozen.gameserver.network.serverpackets.SetToLocation: java.lang.String _S__76_SETTOLOCATION
com.l2jfrozen.gameserver.network.serverpackets.SetToLocation: int _charObjId
com.l2jfrozen.gameserver.network.serverpackets.SetToLocation: int _x
com.l2jfrozen.gameserver.network.serverpackets.SetToLocation: int _y
com.l2jfrozen.gameserver.network.serverpackets.SetToLocation: int _z
com.l2jfrozen.gameserver.network.serverpackets.SetToLocation: int _heading
com.l2jfrozen.gameserver.network.serverpackets.SetToLocation: SetToLocation(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.network.serverpackets.SetToLocation: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.SetToLocation: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.SetupGauge
com.l2jfrozen.gameserver.network.serverpackets.SetupGauge: java.lang.String _S__85_SETUPGAUGE
com.l2jfrozen.gameserver.network.serverpackets.SetupGauge: int BLUE
com.l2jfrozen.gameserver.network.serverpackets.SetupGauge: int RED
com.l2jfrozen.gameserver.network.serverpackets.SetupGauge: int CYAN
com.l2jfrozen.gameserver.network.serverpackets.SetupGauge: int _dat1
com.l2jfrozen.gameserver.network.serverpackets.SetupGauge: int _time
com.l2jfrozen.gameserver.network.serverpackets.SetupGauge: SetupGauge(int,int)
com.l2jfrozen.gameserver.network.serverpackets.SetupGauge: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.SetupGauge: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ShortBuffStatusUpdate
com.l2jfrozen.gameserver.network.serverpackets.ShortBuffStatusUpdate: java.lang.String _S__F4_SHORTBUFFSTATUSUPDATE
com.l2jfrozen.gameserver.network.serverpackets.ShortBuffStatusUpdate: int _skillId
com.l2jfrozen.gameserver.network.serverpackets.ShortBuffStatusUpdate: int _skillLvl
com.l2jfrozen.gameserver.network.serverpackets.ShortBuffStatusUpdate: int _duration
com.l2jfrozen.gameserver.network.serverpackets.ShortBuffStatusUpdate: ShortBuffStatusUpdate(int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.ShortBuffStatusUpdate: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ShortBuffStatusUpdate: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ShortCutInit
com.l2jfrozen.gameserver.network.serverpackets.ShortCutInit: java.lang.String _S__57_SHORTCUTINIT
com.l2jfrozen.gameserver.network.serverpackets.ShortCutInit: com.l2jfrozen.gameserver.model.L2ShortCut[] _shortCuts
com.l2jfrozen.gameserver.network.serverpackets.ShortCutInit: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.ShortCutInit: ShortCutInit(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.ShortCutInit: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ShortCutInit: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ShortCutRegister
com.l2jfrozen.gameserver.network.serverpackets.ShortCutRegister: java.lang.String _S__56_SHORTCUTREGISTER
com.l2jfrozen.gameserver.network.serverpackets.ShortCutRegister: com.l2jfrozen.gameserver.model.L2ShortCut _shortcut
com.l2jfrozen.gameserver.network.serverpackets.ShortCutRegister: ShortCutRegister(com.l2jfrozen.gameserver.model.L2ShortCut)
com.l2jfrozen.gameserver.network.serverpackets.ShortCutRegister: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ShortCutRegister: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ShowBoard
com.l2jfrozen.gameserver.network.serverpackets.ShowBoard: java.lang.String _S__6E_SHOWBOARD
com.l2jfrozen.gameserver.network.serverpackets.ShowBoard: java.lang.String _htmlCode
com.l2jfrozen.gameserver.network.serverpackets.ShowBoard: java.lang.String _id
com.l2jfrozen.gameserver.network.serverpackets.ShowBoard: java.util.List _arg
com.l2jfrozen.gameserver.network.serverpackets.ShowBoard: ShowBoard(java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.network.serverpackets.ShowBoard: ShowBoard(java.util.List)
com.l2jfrozen.gameserver.network.serverpackets.ShowBoard: byte[] get1002()
com.l2jfrozen.gameserver.network.serverpackets.ShowBoard: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ShowBoard: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ShowCalculator
com.l2jfrozen.gameserver.network.serverpackets.ShowCalculator: java.lang.String _S__DC_SHOWCALCULATOR
com.l2jfrozen.gameserver.network.serverpackets.ShowCalculator: int _calculatorId
com.l2jfrozen.gameserver.network.serverpackets.ShowCalculator: ShowCalculator(int)
com.l2jfrozen.gameserver.network.serverpackets.ShowCalculator: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ShowCalculator: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ShowMiniMap
com.l2jfrozen.gameserver.network.serverpackets.ShowMiniMap: java.lang.String _S__B6_SHOWMINIMAP
com.l2jfrozen.gameserver.network.serverpackets.ShowMiniMap: int _mapId
com.l2jfrozen.gameserver.network.serverpackets.ShowMiniMap: ShowMiniMap(int)
com.l2jfrozen.gameserver.network.serverpackets.ShowMiniMap: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ShowMiniMap: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ShowPCCafeCouponShowUI
com.l2jfrozen.gameserver.network.serverpackets.ShowPCCafeCouponShowUI: java.lang.String _S__FE_43_SHOWPCCAFECOUPONSHOWUI
com.l2jfrozen.gameserver.network.serverpackets.ShowPCCafeCouponShowUI: ShowPCCafeCouponShowUI()
com.l2jfrozen.gameserver.network.serverpackets.ShowPCCafeCouponShowUI: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ShowPCCafeCouponShowUI: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ShowTownMap
com.l2jfrozen.gameserver.network.serverpackets.ShowTownMap: java.lang.String _S__DE_ShowTownMap
com.l2jfrozen.gameserver.network.serverpackets.ShowTownMap: java.lang.String _texture
com.l2jfrozen.gameserver.network.serverpackets.ShowTownMap: int _x
com.l2jfrozen.gameserver.network.serverpackets.ShowTownMap: int _y
com.l2jfrozen.gameserver.network.serverpackets.ShowTownMap: ShowTownMap(java.lang.String,int,int)
com.l2jfrozen.gameserver.network.serverpackets.ShowTownMap: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ShowTownMap: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ShowXMasSeal
com.l2jfrozen.gameserver.network.serverpackets.ShowXMasSeal: java.lang.String _S__F2_SHOWXMASSEAL
com.l2jfrozen.gameserver.network.serverpackets.ShowXMasSeal: int _item
com.l2jfrozen.gameserver.network.serverpackets.ShowXMasSeal: ShowXMasSeal(int)
com.l2jfrozen.gameserver.network.serverpackets.ShowXMasSeal: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ShowXMasSeal: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.SiegeAttackerList
com.l2jfrozen.gameserver.network.serverpackets.SiegeAttackerList: java.lang.String _S__CA_SiegeAttackerList
com.l2jfrozen.gameserver.network.serverpackets.SiegeAttackerList: com.l2jfrozen.gameserver.model.entity.siege.Castle _castle
com.l2jfrozen.gameserver.network.serverpackets.SiegeAttackerList: SiegeAttackerList(com.l2jfrozen.gameserver.model.entity.siege.Castle)
com.l2jfrozen.gameserver.network.serverpackets.SiegeAttackerList: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.SiegeAttackerList: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.SiegeDefenderList
com.l2jfrozen.gameserver.network.serverpackets.SiegeDefenderList: java.lang.String _S__CA_SiegeDefenderList
com.l2jfrozen.gameserver.network.serverpackets.SiegeDefenderList: com.l2jfrozen.gameserver.model.entity.siege.Castle _castle
com.l2jfrozen.gameserver.network.serverpackets.SiegeDefenderList: SiegeDefenderList(com.l2jfrozen.gameserver.model.entity.siege.Castle)
com.l2jfrozen.gameserver.network.serverpackets.SiegeDefenderList: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.SiegeDefenderList: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.SiegeDefenderList$1
com.l2jfrozen.gameserver.network.serverpackets.SiegeDefenderList$1: int[] $SwitchMap$com$l2jfrozen$gameserver$model$SiegeClanType
com.l2jfrozen.gameserver.network.serverpackets.SiegeDefenderList$1: void <clinit>()
com.l2jfrozen.gameserver.network.serverpackets.SiegeInfo
com.l2jfrozen.gameserver.network.serverpackets.SiegeInfo: java.lang.String _S__C9_SIEGEINFO
com.l2jfrozen.gameserver.network.serverpackets.SiegeInfo: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.serverpackets.SiegeInfo: com.l2jfrozen.gameserver.model.entity.siege.Castle _castle
com.l2jfrozen.gameserver.network.serverpackets.SiegeInfo: SiegeInfo(com.l2jfrozen.gameserver.model.entity.siege.Castle)
com.l2jfrozen.gameserver.network.serverpackets.SiegeInfo: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.SiegeInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.SiegeInfo: void <clinit>()
com.l2jfrozen.gameserver.network.serverpackets.SignsSky
com.l2jfrozen.gameserver.network.serverpackets.SignsSky: java.lang.String _S__F8_SignsSky
com.l2jfrozen.gameserver.network.serverpackets.SignsSky: int _state
com.l2jfrozen.gameserver.network.serverpackets.SignsSky: SignsSky()
com.l2jfrozen.gameserver.network.serverpackets.SignsSky: SignsSky(int)
com.l2jfrozen.gameserver.network.serverpackets.SignsSky: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.SignsSky: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.SkillCoolTime
com.l2jfrozen.gameserver.network.serverpackets.SkillCoolTime: java.util.Collection _reuseTimeStamps
com.l2jfrozen.gameserver.network.serverpackets.SkillCoolTime: SkillCoolTime(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.SkillCoolTime: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.SkillCoolTime: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.SkillList
com.l2jfrozen.gameserver.network.serverpackets.SkillList: java.lang.String _S__6D_SKILLLIST
com.l2jfrozen.gameserver.network.serverpackets.SkillList: com.l2jfrozen.gameserver.network.serverpackets.SkillList$Skill[] _skills
com.l2jfrozen.gameserver.network.serverpackets.SkillList: SkillList()
com.l2jfrozen.gameserver.network.serverpackets.SkillList: void addSkill(int,int,boolean)
com.l2jfrozen.gameserver.network.serverpackets.SkillList: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.SkillList: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.SkillList$Skill
com.l2jfrozen.gameserver.network.serverpackets.SkillList$Skill: int id
com.l2jfrozen.gameserver.network.serverpackets.SkillList$Skill: int level
com.l2jfrozen.gameserver.network.serverpackets.SkillList$Skill: boolean passive
com.l2jfrozen.gameserver.network.serverpackets.SkillList$Skill: com.l2jfrozen.gameserver.network.serverpackets.SkillList this$0
com.l2jfrozen.gameserver.network.serverpackets.SkillList$Skill: SkillList$Skill(com.l2jfrozen.gameserver.network.serverpackets.SkillList,int,int,boolean)
com.l2jfrozen.gameserver.network.serverpackets.Snoop
com.l2jfrozen.gameserver.network.serverpackets.Snoop: java.lang.String _S__D5_SNOOP
com.l2jfrozen.gameserver.network.serverpackets.Snoop: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _snooped
com.l2jfrozen.gameserver.network.serverpackets.Snoop: int _type
com.l2jfrozen.gameserver.network.serverpackets.Snoop: java.lang.String _speaker
com.l2jfrozen.gameserver.network.serverpackets.Snoop: java.lang.String _msg
com.l2jfrozen.gameserver.network.serverpackets.Snoop: Snoop(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.network.serverpackets.Snoop: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.Snoop: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.SocialAction
com.l2jfrozen.gameserver.network.serverpackets.SocialAction: java.lang.String _S__3D_SOCIALACTION
com.l2jfrozen.gameserver.network.serverpackets.SocialAction: int _charObjId
com.l2jfrozen.gameserver.network.serverpackets.SocialAction: int _actionId
com.l2jfrozen.gameserver.network.serverpackets.SocialAction: SocialAction(int,int)
com.l2jfrozen.gameserver.network.serverpackets.SocialAction: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.SocialAction: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.SpawnItem
com.l2jfrozen.gameserver.network.serverpackets.SpawnItem: java.lang.String _S__15_SPAWNITEM
com.l2jfrozen.gameserver.network.serverpackets.SpawnItem: int _objectId
com.l2jfrozen.gameserver.network.serverpackets.SpawnItem: int _itemId
com.l2jfrozen.gameserver.network.serverpackets.SpawnItem: int _x
com.l2jfrozen.gameserver.network.serverpackets.SpawnItem: int _y
com.l2jfrozen.gameserver.network.serverpackets.SpawnItem: int _z
com.l2jfrozen.gameserver.network.serverpackets.SpawnItem: int _stackable
com.l2jfrozen.gameserver.network.serverpackets.SpawnItem: int _count
com.l2jfrozen.gameserver.network.serverpackets.SpawnItem: SpawnItem(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.network.serverpackets.SpawnItem: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.SpawnItem: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.SpawnItemPoly
com.l2jfrozen.gameserver.network.serverpackets.SpawnItemPoly: java.lang.String _S__15_SPAWNITEM
com.l2jfrozen.gameserver.network.serverpackets.SpawnItemPoly: int _objectId
com.l2jfrozen.gameserver.network.serverpackets.SpawnItemPoly: int _itemId
com.l2jfrozen.gameserver.network.serverpackets.SpawnItemPoly: int _x
com.l2jfrozen.gameserver.network.serverpackets.SpawnItemPoly: int _y
com.l2jfrozen.gameserver.network.serverpackets.SpawnItemPoly: int _z
com.l2jfrozen.gameserver.network.serverpackets.SpawnItemPoly: int _stackable
com.l2jfrozen.gameserver.network.serverpackets.SpawnItemPoly: int _count
com.l2jfrozen.gameserver.network.serverpackets.SpawnItemPoly: SpawnItemPoly(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.network.serverpackets.SpawnItemPoly: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.SpawnItemPoly: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.SpecialCamera
com.l2jfrozen.gameserver.network.serverpackets.SpecialCamera: java.lang.String _S__C7_SPECIALCAMERA
com.l2jfrozen.gameserver.network.serverpackets.SpecialCamera: int _id
com.l2jfrozen.gameserver.network.serverpackets.SpecialCamera: int _dist
com.l2jfrozen.gameserver.network.serverpackets.SpecialCamera: int _yaw
com.l2jfrozen.gameserver.network.serverpackets.SpecialCamera: int _pitch
com.l2jfrozen.gameserver.network.serverpackets.SpecialCamera: int _time
com.l2jfrozen.gameserver.network.serverpackets.SpecialCamera: int _duration
com.l2jfrozen.gameserver.network.serverpackets.SpecialCamera: SpecialCamera(int,int,int,int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.SpecialCamera: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.SpecialCamera: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.StartPledgeWar
com.l2jfrozen.gameserver.network.serverpackets.StartPledgeWar: java.lang.String _S__65_STARTPLEDGEWAR
com.l2jfrozen.gameserver.network.serverpackets.StartPledgeWar: java.lang.String _pledgeName
com.l2jfrozen.gameserver.network.serverpackets.StartPledgeWar: java.lang.String _playerName
com.l2jfrozen.gameserver.network.serverpackets.StartPledgeWar: StartPledgeWar(java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.network.serverpackets.StartPledgeWar: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.StartPledgeWar: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.StaticObject
com.l2jfrozen.gameserver.network.serverpackets.StaticObject: java.lang.String _S__99_StaticObjectPacket
com.l2jfrozen.gameserver.network.serverpackets.StaticObject: com.l2jfrozen.gameserver.model.actor.instance.L2StaticObjectInstance _staticObject
com.l2jfrozen.gameserver.network.serverpackets.StaticObject: StaticObject(com.l2jfrozen.gameserver.model.actor.instance.L2StaticObjectInstance)
com.l2jfrozen.gameserver.network.serverpackets.StaticObject: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.StaticObject: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate: java.lang.String _S__1A_STATUSUPDATE
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate: int LEVEL
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate: int EXP
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate: int STR
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate: int DEX
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate: int CON
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate: int INT
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate: int WIT
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate: int MEN
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate: int CUR_HP
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate: int MAX_HP
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate: int CUR_MP
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate: int MAX_MP
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate: int SP
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate: int CUR_LOAD
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate: int MAX_LOAD
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate: int P_ATK
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate: int ATK_SPD
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate: int P_DEF
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate: int EVASION
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate: int ACCURACY
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate: int CRITICAL
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate: int M_ATK
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate: int CAST_SPD
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate: int M_DEF
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate: int PVP_FLAG
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate: int KARMA
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate: int CUR_CP
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate: int MAX_CP
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _actor
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate: java.util.Vector _attributes
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate: int _objectId
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate: StatusUpdate(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate: StatusUpdate(int)
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate: void addAttribute(int,int)
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate$Attribute
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate$Attribute: int id
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate$Attribute: int value
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate$Attribute: com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate this$0
com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate$Attribute: StatusUpdate$Attribute(com.l2jfrozen.gameserver.network.serverpackets.StatusUpdate,int,int)
com.l2jfrozen.gameserver.network.serverpackets.StopMove
com.l2jfrozen.gameserver.network.serverpackets.StopMove: java.lang.String _S__59_STOPMOVE
com.l2jfrozen.gameserver.network.serverpackets.StopMove: int _objectId
com.l2jfrozen.gameserver.network.serverpackets.StopMove: int _x
com.l2jfrozen.gameserver.network.serverpackets.StopMove: int _y
com.l2jfrozen.gameserver.network.serverpackets.StopMove: int _z
com.l2jfrozen.gameserver.network.serverpackets.StopMove: int _heading
com.l2jfrozen.gameserver.network.serverpackets.StopMove: StopMove(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.network.serverpackets.StopMove: StopMove(int,int,int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.StopMove: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.StopMove: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.StopMoveInVehicle
com.l2jfrozen.gameserver.network.serverpackets.StopMoveInVehicle: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.StopMoveInVehicle: int _boatId
com.l2jfrozen.gameserver.network.serverpackets.StopMoveInVehicle: StopMoveInVehicle(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.network.serverpackets.StopMoveInVehicle: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.StopMoveInVehicle: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.StopPledgeWar
com.l2jfrozen.gameserver.network.serverpackets.StopPledgeWar: java.lang.String _S__7f_STOPPLEDGEWAR
com.l2jfrozen.gameserver.network.serverpackets.StopPledgeWar: java.lang.String _pledgeName
com.l2jfrozen.gameserver.network.serverpackets.StopPledgeWar: java.lang.String _playerName
com.l2jfrozen.gameserver.network.serverpackets.StopPledgeWar: StopPledgeWar(java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.network.serverpackets.StopPledgeWar: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.StopPledgeWar: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.StopRotation
com.l2jfrozen.gameserver.network.serverpackets.StopRotation: java.lang.String _S__78_STOPROTATION
com.l2jfrozen.gameserver.network.serverpackets.StopRotation: int _charObjId
com.l2jfrozen.gameserver.network.serverpackets.StopRotation: int _degree
com.l2jfrozen.gameserver.network.serverpackets.StopRotation: int _speed
com.l2jfrozen.gameserver.network.serverpackets.StopRotation: StopRotation(com.l2jfrozen.gameserver.model.L2Character,int,int)
com.l2jfrozen.gameserver.network.serverpackets.StopRotation: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.StopRotation: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.SunRise
com.l2jfrozen.gameserver.network.serverpackets.SunRise: java.lang.String _S__28_SUNRISE
com.l2jfrozen.gameserver.network.serverpackets.SunRise: SunRise()
com.l2jfrozen.gameserver.network.serverpackets.SunRise: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.SunRise: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.SunSet
com.l2jfrozen.gameserver.network.serverpackets.SunSet: java.lang.String _S__29_SUNSET
com.l2jfrozen.gameserver.network.serverpackets.SunSet: SunSet()
com.l2jfrozen.gameserver.network.serverpackets.SunSet: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.SunSet: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.SurrenderPledgeWar
com.l2jfrozen.gameserver.network.serverpackets.SurrenderPledgeWar: java.lang.String _S__81_SURRENDERPLEDGEWAR
com.l2jfrozen.gameserver.network.serverpackets.SurrenderPledgeWar: java.lang.String _pledgeName
com.l2jfrozen.gameserver.network.serverpackets.SurrenderPledgeWar: java.lang.String _playerName
com.l2jfrozen.gameserver.network.serverpackets.SurrenderPledgeWar: SurrenderPledgeWar(java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.network.serverpackets.SurrenderPledgeWar: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.SurrenderPledgeWar: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.SystemMessage
com.l2jfrozen.gameserver.network.serverpackets.SystemMessage: int TYPE_ZONE_NAME
com.l2jfrozen.gameserver.network.serverpackets.SystemMessage: int TYPE_SKILL_NAME
com.l2jfrozen.gameserver.network.serverpackets.SystemMessage: int TYPE_ITEM_NAME
com.l2jfrozen.gameserver.network.serverpackets.SystemMessage: int TYPE_NPC_NAME
com.l2jfrozen.gameserver.network.serverpackets.SystemMessage: int TYPE_NUMBER
com.l2jfrozen.gameserver.network.serverpackets.SystemMessage: int TYPE_TEXT
com.l2jfrozen.gameserver.network.serverpackets.SystemMessage: int _messageId
com.l2jfrozen.gameserver.network.serverpackets.SystemMessage: java.util.Vector _types
com.l2jfrozen.gameserver.network.serverpackets.SystemMessage: java.util.Vector _values
com.l2jfrozen.gameserver.network.serverpackets.SystemMessage: int _skillLvL
com.l2jfrozen.gameserver.network.serverpackets.SystemMessage: SystemMessage(com.l2jfrozen.gameserver.network.SystemMessageId)
com.l2jfrozen.gameserver.network.serverpackets.SystemMessage: SystemMessage(int)
com.l2jfrozen.gameserver.network.serverpackets.SystemMessage: com.l2jfrozen.gameserver.network.serverpackets.SystemMessage sendString(java.lang.String)
com.l2jfrozen.gameserver.network.serverpackets.SystemMessage: com.l2jfrozen.gameserver.network.serverpackets.SystemMessage addString(java.lang.String)
com.l2jfrozen.gameserver.network.serverpackets.SystemMessage: com.l2jfrozen.gameserver.network.serverpackets.SystemMessage addNumber(int)
com.l2jfrozen.gameserver.network.serverpackets.SystemMessage: com.l2jfrozen.gameserver.network.serverpackets.SystemMessage addNpcName(int)
com.l2jfrozen.gameserver.network.serverpackets.SystemMessage: com.l2jfrozen.gameserver.network.serverpackets.SystemMessage addItemName(int)
com.l2jfrozen.gameserver.network.serverpackets.SystemMessage: com.l2jfrozen.gameserver.network.serverpackets.SystemMessage addZoneName(int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.SystemMessage: com.l2jfrozen.gameserver.network.serverpackets.SystemMessage addSkillName(int)
com.l2jfrozen.gameserver.network.serverpackets.SystemMessage: com.l2jfrozen.gameserver.network.serverpackets.SystemMessage addSkillName(int,int)
com.l2jfrozen.gameserver.network.serverpackets.SystemMessage: void addSkillName(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.network.serverpackets.SystemMessage: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.SystemMessage: int getMessageID()
com.l2jfrozen.gameserver.network.serverpackets.SystemMessage: com.l2jfrozen.gameserver.network.serverpackets.SystemMessage getSystemMessage(com.l2jfrozen.gameserver.network.SystemMessageId)
com.l2jfrozen.gameserver.network.serverpackets.SystemMessage: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.TargetSelected
com.l2jfrozen.gameserver.network.serverpackets.TargetSelected: java.lang.String _S__39_TARGETSELECTED
com.l2jfrozen.gameserver.network.serverpackets.TargetSelected: int _objectId
com.l2jfrozen.gameserver.network.serverpackets.TargetSelected: int _targetObjId
com.l2jfrozen.gameserver.network.serverpackets.TargetSelected: int _x
com.l2jfrozen.gameserver.network.serverpackets.TargetSelected: int _y
com.l2jfrozen.gameserver.network.serverpackets.TargetSelected: int _z
com.l2jfrozen.gameserver.network.serverpackets.TargetSelected: TargetSelected(int,int,int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.TargetSelected: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.TargetSelected: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.TargetUnselected
com.l2jfrozen.gameserver.network.serverpackets.TargetUnselected: java.lang.String _S__3A_TARGETUNSELECTED
com.l2jfrozen.gameserver.network.serverpackets.TargetUnselected: int _targetObjId
com.l2jfrozen.gameserver.network.serverpackets.TargetUnselected: int _x
com.l2jfrozen.gameserver.network.serverpackets.TargetUnselected: int _y
com.l2jfrozen.gameserver.network.serverpackets.TargetUnselected: int _z
com.l2jfrozen.gameserver.network.serverpackets.TargetUnselected: TargetUnselected(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.network.serverpackets.TargetUnselected: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.TargetUnselected: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.TeleportToLocation
com.l2jfrozen.gameserver.network.serverpackets.TeleportToLocation: java.lang.String _S__38_TELEPORTTOLOCATION
com.l2jfrozen.gameserver.network.serverpackets.TeleportToLocation: int _targetObjId
com.l2jfrozen.gameserver.network.serverpackets.TeleportToLocation: int _x
com.l2jfrozen.gameserver.network.serverpackets.TeleportToLocation: int _y
com.l2jfrozen.gameserver.network.serverpackets.TeleportToLocation: int _z
com.l2jfrozen.gameserver.network.serverpackets.TeleportToLocation: int _heading
com.l2jfrozen.gameserver.network.serverpackets.TeleportToLocation: TeleportToLocation(com.l2jfrozen.gameserver.model.L2Object,int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.TeleportToLocation: TeleportToLocation(com.l2jfrozen.gameserver.model.L2Object,int,int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.TeleportToLocation: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.TeleportToLocation: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.TitleUpdate
com.l2jfrozen.gameserver.network.serverpackets.TitleUpdate: java.lang.String _S__CC_TITLE_UPDATE
com.l2jfrozen.gameserver.network.serverpackets.TitleUpdate: java.lang.String _title
com.l2jfrozen.gameserver.network.serverpackets.TitleUpdate: int _objectId
com.l2jfrozen.gameserver.network.serverpackets.TitleUpdate: TitleUpdate(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.TitleUpdate: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.TitleUpdate: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.TradeOtherAdd
com.l2jfrozen.gameserver.network.serverpackets.TradeOtherAdd: java.lang.String _S__31_TRADEOTHERADD
com.l2jfrozen.gameserver.network.serverpackets.TradeOtherAdd: com.l2jfrozen.gameserver.model.TradeList$TradeItem _item
com.l2jfrozen.gameserver.network.serverpackets.TradeOtherAdd: TradeOtherAdd(com.l2jfrozen.gameserver.model.TradeList$TradeItem)
com.l2jfrozen.gameserver.network.serverpackets.TradeOtherAdd: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.TradeOtherAdd: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.TradeOwnAdd
com.l2jfrozen.gameserver.network.serverpackets.TradeOwnAdd: java.lang.String _S__30_TRADEOWNADD
com.l2jfrozen.gameserver.network.serverpackets.TradeOwnAdd: com.l2jfrozen.gameserver.model.TradeList$TradeItem _item
com.l2jfrozen.gameserver.network.serverpackets.TradeOwnAdd: TradeOwnAdd(com.l2jfrozen.gameserver.model.TradeList$TradeItem)
com.l2jfrozen.gameserver.network.serverpackets.TradeOwnAdd: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.TradeOwnAdd: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.TradePressOtherOk
com.l2jfrozen.gameserver.network.serverpackets.TradePressOtherOk: com.l2jfrozen.gameserver.network.serverpackets.TradePressOtherOk STATIC_PACKET
com.l2jfrozen.gameserver.network.serverpackets.TradePressOtherOk: TradePressOtherOk()
com.l2jfrozen.gameserver.network.serverpackets.TradePressOtherOk: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.TradePressOtherOk: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.TradePressOtherOk: void <clinit>()
com.l2jfrozen.gameserver.network.serverpackets.TradePressOwnOk
com.l2jfrozen.gameserver.network.serverpackets.TradePressOwnOk: com.l2jfrozen.gameserver.network.serverpackets.TradePressOwnOk STATIC_PACKET
com.l2jfrozen.gameserver.network.serverpackets.TradePressOwnOk: TradePressOwnOk()
com.l2jfrozen.gameserver.network.serverpackets.TradePressOwnOk: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.TradePressOwnOk: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.TradePressOwnOk: void <clinit>()
com.l2jfrozen.gameserver.network.serverpackets.TradeStart
com.l2jfrozen.gameserver.network.serverpackets.TradeStart: java.lang.String _S__2E_TRADESTART
com.l2jfrozen.gameserver.network.serverpackets.TradeStart: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.TradeStart: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance[] _itemList
com.l2jfrozen.gameserver.network.serverpackets.TradeStart: TradeStart(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.TradeStart: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.TradeStart: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.TradeUpdate
com.l2jfrozen.gameserver.network.serverpackets.TradeUpdate: java.lang.String _S__74_TRADEUPDATE
com.l2jfrozen.gameserver.network.serverpackets.TradeUpdate: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance[] _items
com.l2jfrozen.gameserver.network.serverpackets.TradeUpdate: com.l2jfrozen.gameserver.model.TradeList$TradeItem[] _trade_items
com.l2jfrozen.gameserver.network.serverpackets.TradeUpdate: TradeUpdate(com.l2jfrozen.gameserver.model.TradeList,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.TradeUpdate: int getItemCount(int)
com.l2jfrozen.gameserver.network.serverpackets.TradeUpdate: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.TradeUpdate: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.TutorialCloseHtml
com.l2jfrozen.gameserver.network.serverpackets.TutorialCloseHtml: java.lang.String _S__A3_TUTORIALCLOSEHTML
com.l2jfrozen.gameserver.network.serverpackets.TutorialCloseHtml: TutorialCloseHtml()
com.l2jfrozen.gameserver.network.serverpackets.TutorialCloseHtml: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.TutorialCloseHtml: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.TutorialEnableClientEvent
com.l2jfrozen.gameserver.network.serverpackets.TutorialEnableClientEvent: java.lang.String _S__A2_TUTORIALENABLECLIENTEVENT
com.l2jfrozen.gameserver.network.serverpackets.TutorialEnableClientEvent: int _eventId
com.l2jfrozen.gameserver.network.serverpackets.TutorialEnableClientEvent: TutorialEnableClientEvent(int)
com.l2jfrozen.gameserver.network.serverpackets.TutorialEnableClientEvent: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.TutorialEnableClientEvent: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.TutorialShowHtml
com.l2jfrozen.gameserver.network.serverpackets.TutorialShowHtml: java.lang.String _S__A0_TUTORIALSHOWHTML
com.l2jfrozen.gameserver.network.serverpackets.TutorialShowHtml: java.lang.String _html
com.l2jfrozen.gameserver.network.serverpackets.TutorialShowHtml: TutorialShowHtml(java.lang.String)
com.l2jfrozen.gameserver.network.serverpackets.TutorialShowHtml: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.TutorialShowHtml: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.TutorialShowQuestionMark
com.l2jfrozen.gameserver.network.serverpackets.TutorialShowQuestionMark: java.lang.String _S__A1_TUTORIALSHOWQUESTIONMARK
com.l2jfrozen.gameserver.network.serverpackets.TutorialShowQuestionMark: int _blink
com.l2jfrozen.gameserver.network.serverpackets.TutorialShowQuestionMark: TutorialShowQuestionMark(int)
com.l2jfrozen.gameserver.network.serverpackets.TutorialShowQuestionMark: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.TutorialShowQuestionMark: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.UserInfo
com.l2jfrozen.gameserver.network.serverpackets.UserInfo: java.lang.String _S__04_USERINFO
com.l2jfrozen.gameserver.network.serverpackets.UserInfo: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.UserInfo: int _runSpd
com.l2jfrozen.gameserver.network.serverpackets.UserInfo: int _walkSpd
com.l2jfrozen.gameserver.network.serverpackets.UserInfo: int _swimRunSpd
com.l2jfrozen.gameserver.network.serverpackets.UserInfo: int _swimWalkSpd
com.l2jfrozen.gameserver.network.serverpackets.UserInfo: int _flRunSpd
com.l2jfrozen.gameserver.network.serverpackets.UserInfo: int _flWalkSpd
com.l2jfrozen.gameserver.network.serverpackets.UserInfo: int _flyRunSpd
com.l2jfrozen.gameserver.network.serverpackets.UserInfo: int _flyWalkSpd
com.l2jfrozen.gameserver.network.serverpackets.UserInfo: int _relation
com.l2jfrozen.gameserver.network.serverpackets.UserInfo: float _moveMultiplier
com.l2jfrozen.gameserver.network.serverpackets.UserInfo: boolean _critical_test
com.l2jfrozen.gameserver.network.serverpackets.UserInfo: UserInfo(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.network.serverpackets.UserInfo: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.UserInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ValidateLocation
com.l2jfrozen.gameserver.network.serverpackets.ValidateLocation: java.lang.String _S__76_SETTOLOCATION
com.l2jfrozen.gameserver.network.serverpackets.ValidateLocation: int _charObjId
com.l2jfrozen.gameserver.network.serverpackets.ValidateLocation: int _x
com.l2jfrozen.gameserver.network.serverpackets.ValidateLocation: int _y
com.l2jfrozen.gameserver.network.serverpackets.ValidateLocation: int _z
com.l2jfrozen.gameserver.network.serverpackets.ValidateLocation: int _heading
com.l2jfrozen.gameserver.network.serverpackets.ValidateLocation: ValidateLocation(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.network.serverpackets.ValidateLocation: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ValidateLocation: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.ValidateLocationInVehicle
com.l2jfrozen.gameserver.network.serverpackets.ValidateLocationInVehicle: java.lang.String _S__73_ValidateLocationInVehicle
com.l2jfrozen.gameserver.network.serverpackets.ValidateLocationInVehicle: int _boat
com.l2jfrozen.gameserver.network.serverpackets.ValidateLocationInVehicle: int _x
com.l2jfrozen.gameserver.network.serverpackets.ValidateLocationInVehicle: int _y
com.l2jfrozen.gameserver.network.serverpackets.ValidateLocationInVehicle: int _z
com.l2jfrozen.gameserver.network.serverpackets.ValidateLocationInVehicle: int _heading
com.l2jfrozen.gameserver.network.serverpackets.ValidateLocationInVehicle: int _playerObj
com.l2jfrozen.gameserver.network.serverpackets.ValidateLocationInVehicle: ValidateLocationInVehicle(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.network.serverpackets.ValidateLocationInVehicle: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.ValidateLocationInVehicle: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.VehicleDeparture
com.l2jfrozen.gameserver.network.serverpackets.VehicleDeparture: com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance _boat
com.l2jfrozen.gameserver.network.serverpackets.VehicleDeparture: int _speed1
com.l2jfrozen.gameserver.network.serverpackets.VehicleDeparture: int _speed2
com.l2jfrozen.gameserver.network.serverpackets.VehicleDeparture: int _x
com.l2jfrozen.gameserver.network.serverpackets.VehicleDeparture: int _y
com.l2jfrozen.gameserver.network.serverpackets.VehicleDeparture: int _z
com.l2jfrozen.gameserver.network.serverpackets.VehicleDeparture: VehicleDeparture(com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance,int,int,int,int,int)
com.l2jfrozen.gameserver.network.serverpackets.VehicleDeparture: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.VehicleDeparture: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.VehicleInfo
com.l2jfrozen.gameserver.network.serverpackets.VehicleInfo: com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance _boat
com.l2jfrozen.gameserver.network.serverpackets.VehicleInfo: VehicleInfo(com.l2jfrozen.gameserver.model.actor.instance.L2BoatInstance)
com.l2jfrozen.gameserver.network.serverpackets.VehicleInfo: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.VehicleInfo: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.WareHouseDepositList
com.l2jfrozen.gameserver.network.serverpackets.WareHouseDepositList: int PRIVATE
com.l2jfrozen.gameserver.network.serverpackets.WareHouseDepositList: int CLAN
com.l2jfrozen.gameserver.network.serverpackets.WareHouseDepositList: int CASTLE
com.l2jfrozen.gameserver.network.serverpackets.WareHouseDepositList: int FREIGHT
com.l2jfrozen.gameserver.network.serverpackets.WareHouseDepositList: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.serverpackets.WareHouseDepositList: java.lang.String _S__53_WAREHOUSEDEPOSITLIST
com.l2jfrozen.gameserver.network.serverpackets.WareHouseDepositList: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.WareHouseDepositList: int _playerAdena
com.l2jfrozen.gameserver.network.serverpackets.WareHouseDepositList: javolution.util.FastList _items
com.l2jfrozen.gameserver.network.serverpackets.WareHouseDepositList: int _whType
com.l2jfrozen.gameserver.network.serverpackets.WareHouseDepositList: WareHouseDepositList(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.network.serverpackets.WareHouseDepositList: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.WareHouseDepositList: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.WareHouseDepositList: void <clinit>()
com.l2jfrozen.gameserver.network.serverpackets.WareHouseWithdrawalList
com.l2jfrozen.gameserver.network.serverpackets.WareHouseWithdrawalList: int PRIVATE
com.l2jfrozen.gameserver.network.serverpackets.WareHouseWithdrawalList: int CLAN
com.l2jfrozen.gameserver.network.serverpackets.WareHouseWithdrawalList: int CASTLE
com.l2jfrozen.gameserver.network.serverpackets.WareHouseWithdrawalList: int FREIGHT
com.l2jfrozen.gameserver.network.serverpackets.WareHouseWithdrawalList: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.network.serverpackets.WareHouseWithdrawalList: java.lang.String _S__54_WAREHOUSEWITHDRAWALLIST
com.l2jfrozen.gameserver.network.serverpackets.WareHouseWithdrawalList: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _activeChar
com.l2jfrozen.gameserver.network.serverpackets.WareHouseWithdrawalList: int _playerAdena
com.l2jfrozen.gameserver.network.serverpackets.WareHouseWithdrawalList: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance[] _items
com.l2jfrozen.gameserver.network.serverpackets.WareHouseWithdrawalList: int _whType
com.l2jfrozen.gameserver.network.serverpackets.WareHouseWithdrawalList: WareHouseWithdrawalList(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int)
com.l2jfrozen.gameserver.network.serverpackets.WareHouseWithdrawalList: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.WareHouseWithdrawalList: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.WareHouseWithdrawalList: void <clinit>()
com.l2jfrozen.gameserver.network.serverpackets.WearList
com.l2jfrozen.gameserver.network.serverpackets.WearList: java.lang.String _S__EF_WEARLIST
com.l2jfrozen.gameserver.network.serverpackets.WearList: int _listId
com.l2jfrozen.gameserver.network.serverpackets.WearList: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance[] _list
com.l2jfrozen.gameserver.network.serverpackets.WearList: int _money
com.l2jfrozen.gameserver.network.serverpackets.WearList: int _expertise
com.l2jfrozen.gameserver.network.serverpackets.WearList: WearList(com.l2jfrozen.gameserver.model.L2TradeList,int,int)
com.l2jfrozen.gameserver.network.serverpackets.WearList: WearList(java.util.List,int,int)
com.l2jfrozen.gameserver.network.serverpackets.WearList: void writeImpl()
com.l2jfrozen.gameserver.network.serverpackets.WearList: java.lang.String getType()
com.l2jfrozen.gameserver.network.serverpackets.skillType
com.l2jfrozen.gameserver.network.serverpackets.skillType: com.l2jfrozen.gameserver.network.serverpackets.skillType Usual
com.l2jfrozen.gameserver.network.serverpackets.skillType: com.l2jfrozen.gameserver.network.serverpackets.skillType Fishing
com.l2jfrozen.gameserver.network.serverpackets.skillType: com.l2jfrozen.gameserver.network.serverpackets.skillType Clan
com.l2jfrozen.gameserver.network.serverpackets.skillType: com.l2jfrozen.gameserver.network.serverpackets.skillType[] $VALUES
com.l2jfrozen.gameserver.network.serverpackets.skillType: com.l2jfrozen.gameserver.network.serverpackets.skillType[] values()
com.l2jfrozen.gameserver.network.serverpackets.skillType: com.l2jfrozen.gameserver.network.serverpackets.skillType valueOf(java.lang.String)
com.l2jfrozen.gameserver.network.serverpackets.skillType: skillType(java.lang.String,int)
com.l2jfrozen.gameserver.network.serverpackets.skillType: void <clinit>()
com.l2jfrozen.gameserver.powerpak.Buffer.BuffHandler
com.l2jfrozen.gameserver.powerpak.Buffer.BuffHandler: java.lang.String PARENT_DIR
com.l2jfrozen.gameserver.powerpak.Buffer.BuffHandler: java.util.Map _buffs
com.l2jfrozen.gameserver.powerpak.Buffer.BuffHandler: java.util.Map _visitedPages
com.l2jfrozen.gameserver.powerpak.Buffer.BuffHandler: java.lang.String[] _BYPASSCMD
com.l2jfrozen.gameserver.powerpak.Buffer.BuffHandler: java.lang.String[] _BBSCommand
com.l2jfrozen.gameserver.powerpak.Buffer.BuffHandler: java.util.ArrayList getOwnBuffs(int)
com.l2jfrozen.gameserver.powerpak.Buffer.BuffHandler: BuffHandler()
com.l2jfrozen.gameserver.powerpak.Buffer.BuffHandler: java.lang.String[] getVoicedCommandList()
com.l2jfrozen.gameserver.powerpak.Buffer.BuffHandler: boolean checkAllowed(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.powerpak.Buffer.BuffHandler: boolean useVoicedCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.powerpak.Buffer.BuffHandler: java.lang.String[] getByPassCommands()
com.l2jfrozen.gameserver.powerpak.Buffer.BuffHandler: void handleCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.powerpak.Buffer.BuffHandler: java.lang.String[] getBBSCommands()
com.l2jfrozen.gameserver.powerpak.Buffer.BuffHandler: void sendHtmlMessage(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.network.serverpackets.NpcHtmlMessage)
com.l2jfrozen.gameserver.powerpak.Buffer.BuffHandler: void showGiveBuffsWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.powerpak.Buffer.BuffHandler: void showManageSchemeWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.powerpak.Buffer.BuffHandler: void showEditSchemeWindow(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.powerpak.Buffer.BuffHandler: java.lang.String getPlayerSchemeListFrame(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.powerpak.Buffer.BuffHandler: java.lang.String getGroupSkillListFrame(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.powerpak.Buffer.BuffHandler: java.lang.String getPlayerSkillListFrame(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.powerpak.Buffer.BuffHandler: java.lang.String getTypesFrame(java.lang.String)
com.l2jfrozen.gameserver.powerpak.Buffer.BuffHandler: int getFee(javolution.util.FastList)
com.l2jfrozen.gameserver.powerpak.Buffer.BuffHandler: void <clinit>()
com.l2jfrozen.gameserver.powerpak.Buffer.BuffTable
com.l2jfrozen.gameserver.powerpak.Buffer.BuffTable: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.powerpak.Buffer.BuffTable: com.l2jfrozen.gameserver.powerpak.Buffer.BuffTable _instance
com.l2jfrozen.gameserver.powerpak.Buffer.BuffTable: java.util.Map _buffs
com.l2jfrozen.gameserver.powerpak.Buffer.BuffTable: java.util.Map _buffs_by_id
com.l2jfrozen.gameserver.powerpak.Buffer.BuffTable: com.l2jfrozen.gameserver.powerpak.Buffer.BuffTable getInstance()
com.l2jfrozen.gameserver.powerpak.Buffer.BuffTable: BuffTable()
com.l2jfrozen.gameserver.powerpak.Buffer.BuffTable: java.util.ArrayList getBuffsForName(java.lang.String)
com.l2jfrozen.gameserver.powerpak.Buffer.BuffTable: java.util.ArrayList getBuffsForID(java.lang.Integer)
com.l2jfrozen.gameserver.powerpak.Buffer.BuffTable: java.util.Iterator skill_groups()
com.l2jfrozen.gameserver.powerpak.Buffer.BuffTable: void <clinit>()
com.l2jfrozen.gameserver.powerpak.Buffer.BuffTable$Buff
com.l2jfrozen.gameserver.powerpak.Buffer.BuffTable$Buff: int _skillId
com.l2jfrozen.gameserver.powerpak.Buffer.BuffTable$Buff: int _skillLevel
com.l2jfrozen.gameserver.powerpak.Buffer.BuffTable$Buff: boolean _force
com.l2jfrozen.gameserver.powerpak.Buffer.BuffTable$Buff: int _minLevel
com.l2jfrozen.gameserver.powerpak.Buffer.BuffTable$Buff: int _maxLevel
com.l2jfrozen.gameserver.powerpak.Buffer.BuffTable$Buff: int _price
com.l2jfrozen.gameserver.powerpak.Buffer.BuffTable$Buff: com.l2jfrozen.gameserver.model.L2Skill _skill
com.l2jfrozen.gameserver.powerpak.Buffer.BuffTable$Buff: com.l2jfrozen.gameserver.powerpak.Buffer.BuffTable this$0
com.l2jfrozen.gameserver.powerpak.Buffer.BuffTable$Buff: BuffTable$Buff(com.l2jfrozen.gameserver.powerpak.Buffer.BuffTable,java.sql.ResultSet)
com.l2jfrozen.gameserver.powerpak.Buffer.BuffTable$Buff: boolean checkLevel(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.powerpak.Buffer.BuffTable$Buff: boolean checkPrice(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.powerpak.Buffer.L2BufferInstance
com.l2jfrozen.gameserver.powerpak.Buffer.L2BufferInstance: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance selfBuffer
com.l2jfrozen.gameserver.powerpak.Buffer.L2BufferInstance: com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance npcBuffer
com.l2jfrozen.gameserver.powerpak.Buffer.L2BufferInstance: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.powerpak.Buffer.L2BufferInstance: L2BufferInstance()
com.l2jfrozen.gameserver.powerpak.Buffer.L2BufferInstance: void makeBuffs(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,com.l2jfrozen.gameserver.model.L2Object,boolean)
com.l2jfrozen.gameserver.powerpak.Buffer.L2BufferInstance: com.l2jfrozen.gameserver.model.L2Character getbufferType(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.powerpak.Buffer.L2BufferInstance: void <clinit>()
com.l2jfrozen.gameserver.powerpak.L2Utils
com.l2jfrozen.gameserver.powerpak.L2Utils: L2Utils()
com.l2jfrozen.gameserver.powerpak.L2Utils: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance loadPlayer(java.lang.String)
com.l2jfrozen.gameserver.powerpak.L2Utils: java.lang.String formatUserItems(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,com.l2jfrozen.gameserver.powerpak.L2Utils$IItemFilter,java.lang.String)
com.l2jfrozen.gameserver.powerpak.L2Utils: java.lang.String loadMessage(java.lang.String)
com.l2jfrozen.gameserver.powerpak.L2Utils$IItemFilter
com.l2jfrozen.gameserver.powerpak.L2Utils$IItemFilter: boolean isCanShow(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.powerpak.PowerPak
com.l2jfrozen.gameserver.powerpak.PowerPak: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.powerpak.PowerPak: com.l2jfrozen.gameserver.powerpak.PowerPak _instance
com.l2jfrozen.gameserver.powerpak.PowerPak: com.l2jfrozen.gameserver.powerpak.PowerPak getInstance()
com.l2jfrozen.gameserver.powerpak.PowerPak: PowerPak()
com.l2jfrozen.gameserver.powerpak.PowerPak: void chatHandler(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,java.lang.String)
com.l2jfrozen.gameserver.powerpak.PowerPak: void <clinit>()
com.l2jfrozen.gameserver.powerpak.PowerPakConfig
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: int BUFFER_NPC
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: boolean BUFFER_ENABLED
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: java.util.List BUFFER_EXCLUDE_ON
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: java.lang.String BUFFER_COMMAND
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: int BUFFER_PRICE
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: boolean BUFFER_USEBBS
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: boolean BUFFER_USECOMMAND
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: javolution.util.FastMap FIGHTER_SKILL_LIST
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: javolution.util.FastMap MAGE_SKILL_LIST
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: int NPCBUFFER_MAX_SCHEMES
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: int NPCBUFFER_MAX_SKILLS
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: boolean NPCBUFFER_STORE_SCHEMES
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: int NPCBUFFER_STATIC_BUFF_COST
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: java.util.List GLOBALGK_EXCLUDE_ON
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: boolean GLOBALGK_ENABDLED
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: boolean GLOBALGK_USEBBS
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: int GLOBALGK_NPC
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: int GLOBALGK_PRICE
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: int GLOBALGK_TIMEOUT
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: java.lang.String GLOBALGK_COMMAND
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: boolean GLOBALGK_USECOMMAND
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: int GMSHOP_NPC
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: boolean GMSHOP_ENABLED
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: boolean GMSHOP_USEBBS
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: java.lang.String GMSHOP_COMMAND
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: java.util.List GMSHOP_EXCLUDE_ON
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: boolean GMSHOP_USECOMMAND
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: boolean WEBSERVER_ENABLED
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: int WEBSERVER_PORT
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: java.lang.String WEBSERVER_HOST
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: boolean L2TOPDEMON_ENABLED
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: int L2TOPDEMON_POLLINTERVAL
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: boolean L2TOPDEMON_IGNOREFIRST
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: int L2TOPDEMON_MIN
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: int L2TOPDEMON_MAX
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: int L2TOPDEMON_ITEM
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: java.lang.String L2TOPDEMON_MESSAGE
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: java.lang.String L2TOPDEMON_URL
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: java.lang.String L2TOPDEMON_PREFIX
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: int VOTES_FOR_REWARD
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: java.lang.String VOTES_REWARDS
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: java.lang.String VOTES_SITE_TOPZONE_URL
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: java.lang.String VOTES_SITE_HOPZONE_URL
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: java.lang.String VOTES_SITE_L2NETWORK_URL
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: javolution.util.FastMap VOTES_REWARDS_LIST
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: int VOTES_SYSYEM_INITIAL_DELAY
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: int VOTES_SYSYEM_STEP_DELAY
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: boolean ENABLE_VOTE_COMMAND
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: java.lang.String SERVER_WEB_SITE
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: boolean AUTOVOTEREWARD_ENABLED
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: boolean ENABLE_SAY_SOCIAL_ACTIONS
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: boolean CHAR_REPAIR
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: boolean VOTEMANAGER_LOG
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: PowerPakConfig()
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: void load()
com.l2jfrozen.gameserver.powerpak.PowerPakConfig: void <clinit>()
com.l2jfrozen.gameserver.powerpak.RaidInfo.RaidInfoHandler
com.l2jfrozen.gameserver.powerpak.RaidInfo.RaidInfoHandler: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.powerpak.RaidInfo.RaidInfoHandler: int NPC_ID
com.l2jfrozen.gameserver.powerpak.RaidInfo.RaidInfoHandler: java.lang.String[] _BYPASSCMD
com.l2jfrozen.gameserver.powerpak.RaidInfo.RaidInfoHandler: RaidInfoHandler()
com.l2jfrozen.gameserver.powerpak.RaidInfo.RaidInfoHandler: java.lang.String[] getByPassCommands()
com.l2jfrozen.gameserver.powerpak.RaidInfo.RaidInfoHandler: void handleCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.powerpak.RaidInfo.RaidInfoHandler: void sendInfo(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.powerpak.RaidInfo.RaidInfoHandler: void <clinit>()
com.l2jfrozen.gameserver.powerpak.StringTable
com.l2jfrozen.gameserver.powerpak.StringTable: java.util.Map _messagetable
com.l2jfrozen.gameserver.powerpak.StringTable: StringTable(java.lang.String)
com.l2jfrozen.gameserver.powerpak.StringTable: void load(java.io.File)
com.l2jfrozen.gameserver.powerpak.StringTable: java.lang.String Message(java.lang.String)
com.l2jfrozen.gameserver.powerpak.StringTable: java.lang.String format(java.lang.String,java.lang.Object[])
com.l2jfrozen.gameserver.powerpak.globalGK.GKHandler
com.l2jfrozen.gameserver.powerpak.globalGK.GKHandler: GKHandler()
com.l2jfrozen.gameserver.powerpak.globalGK.GKHandler: java.lang.String[] getVoicedCommandList()
com.l2jfrozen.gameserver.powerpak.globalGK.GKHandler: boolean checkAllowed(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.powerpak.globalGK.GKHandler: boolean useVoicedCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.powerpak.globalGK.GKHandler: java.lang.String[] getByPassCommands()
com.l2jfrozen.gameserver.powerpak.globalGK.GKHandler: void handleCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.powerpak.globalGK.GKHandler: java.lang.String[] getBBSCommands()
com.l2jfrozen.gameserver.powerpak.globalGK.GKHandler$EscapeFinalizer
com.l2jfrozen.gameserver.powerpak.globalGK.GKHandler$EscapeFinalizer: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _player
com.l2jfrozen.gameserver.powerpak.globalGK.GKHandler$EscapeFinalizer: com.l2jfrozen.gameserver.model.L2TeleportLocation _tp
com.l2jfrozen.gameserver.powerpak.globalGK.GKHandler$EscapeFinalizer: com.l2jfrozen.gameserver.powerpak.globalGK.GKHandler this$0
com.l2jfrozen.gameserver.powerpak.globalGK.GKHandler$EscapeFinalizer: GKHandler$EscapeFinalizer(com.l2jfrozen.gameserver.powerpak.globalGK.GKHandler,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,com.l2jfrozen.gameserver.model.L2TeleportLocation)
com.l2jfrozen.gameserver.powerpak.globalGK.GKHandler$EscapeFinalizer: void run()
com.l2jfrozen.gameserver.powerpak.gmshop.GMShop
com.l2jfrozen.gameserver.powerpak.gmshop.GMShop: java.lang.String[] _CMD
com.l2jfrozen.gameserver.powerpak.gmshop.GMShop: GMShop()
com.l2jfrozen.gameserver.powerpak.gmshop.GMShop: java.lang.String[] getVoicedCommandList()
com.l2jfrozen.gameserver.powerpak.gmshop.GMShop: boolean checkAllowed(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.powerpak.gmshop.GMShop: boolean useVoicedCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.powerpak.gmshop.GMShop: java.lang.String[] getByPassCommands()
com.l2jfrozen.gameserver.powerpak.gmshop.GMShop: void handleCommand(java.lang.String,com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String)
com.l2jfrozen.gameserver.powerpak.gmshop.GMShop: java.lang.String[] getBBSCommands()
com.l2jfrozen.gameserver.powerpak.gmshop.GMShop: void <clinit>()
com.l2jfrozen.gameserver.powerpak.vote.L2TopDeamon
com.l2jfrozen.gameserver.powerpak.vote.L2TopDeamon: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.powerpak.vote.L2TopDeamon: java.util.concurrent.ScheduledFuture _task
com.l2jfrozen.gameserver.powerpak.vote.L2TopDeamon: java.sql.Timestamp _lastVote
com.l2jfrozen.gameserver.powerpak.vote.L2TopDeamon: boolean _firstRun
com.l2jfrozen.gameserver.powerpak.vote.L2TopDeamon: L2TopDeamon()
com.l2jfrozen.gameserver.powerpak.vote.L2TopDeamon: boolean checkVotes()
com.l2jfrozen.gameserver.powerpak.vote.L2TopDeamon: void run()
com.l2jfrozen.gameserver.powerpak.vote.L2TopDeamon: com.l2jfrozen.gameserver.powerpak.vote.L2TopDeamon getInstance()
com.l2jfrozen.gameserver.powerpak.vote.L2TopDeamon: L2TopDeamon(com.l2jfrozen.gameserver.powerpak.vote.L2TopDeamon$1)
com.l2jfrozen.gameserver.powerpak.vote.L2TopDeamon: void <clinit>()
com.l2jfrozen.gameserver.powerpak.vote.L2TopDeamon$1
com.l2jfrozen.gameserver.powerpak.vote.L2TopDeamon$SingletonHolder
com.l2jfrozen.gameserver.powerpak.vote.L2TopDeamon$SingletonHolder: com.l2jfrozen.gameserver.powerpak.vote.L2TopDeamon _instance
com.l2jfrozen.gameserver.powerpak.vote.L2TopDeamon$SingletonHolder: L2TopDeamon$SingletonHolder()
com.l2jfrozen.gameserver.powerpak.vote.L2TopDeamon$SingletonHolder: void <clinit>()
com.l2jfrozen.gameserver.powerpak.vote.L2TopDeamon$Terminator
com.l2jfrozen.gameserver.powerpak.vote.L2TopDeamon$Terminator: com.l2jfrozen.gameserver.powerpak.vote.L2TopDeamon this$0
com.l2jfrozen.gameserver.powerpak.vote.L2TopDeamon$Terminator: L2TopDeamon$Terminator(com.l2jfrozen.gameserver.powerpak.vote.L2TopDeamon)
com.l2jfrozen.gameserver.powerpak.vote.L2TopDeamon$Terminator: void run()
com.l2jfrozen.gameserver.powerpak.vote.L2TopDeamon$VotesUpdate
com.l2jfrozen.gameserver.powerpak.vote.L2TopDeamon$VotesUpdate: java.sql.Timestamp _votedate
com.l2jfrozen.gameserver.powerpak.vote.L2TopDeamon$VotesUpdate: java.lang.String _charName
com.l2jfrozen.gameserver.powerpak.vote.L2TopDeamon$VotesUpdate: boolean _fr
com.l2jfrozen.gameserver.powerpak.vote.L2TopDeamon$VotesUpdate: com.l2jfrozen.gameserver.powerpak.vote.L2TopDeamon this$0
com.l2jfrozen.gameserver.powerpak.vote.L2TopDeamon$VotesUpdate: L2TopDeamon$VotesUpdate(com.l2jfrozen.gameserver.powerpak.vote.L2TopDeamon,java.sql.Timestamp,java.lang.String,boolean)
com.l2jfrozen.gameserver.powerpak.vote.L2TopDeamon$VotesUpdate: void execute(java.sql.Connection)
com.l2jfrozen.gameserver.script.DateRange
com.l2jfrozen.gameserver.script.DateRange: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.script.DateRange: java.util.Date _startDate
com.l2jfrozen.gameserver.script.DateRange: java.util.Date _endDate
com.l2jfrozen.gameserver.script.DateRange: DateRange(java.util.Date,java.util.Date)
com.l2jfrozen.gameserver.script.DateRange: com.l2jfrozen.gameserver.script.DateRange parse(java.lang.String,java.text.DateFormat)
com.l2jfrozen.gameserver.script.DateRange: boolean isValid()
com.l2jfrozen.gameserver.script.DateRange: boolean isWithinRange(java.util.Date)
com.l2jfrozen.gameserver.script.DateRange: java.util.Date getEndDate()
com.l2jfrozen.gameserver.script.DateRange: java.util.Date getStartDate()
com.l2jfrozen.gameserver.script.DateRange: void <clinit>()
com.l2jfrozen.gameserver.script.EngineInterface
com.l2jfrozen.gameserver.script.EngineInterface: com.l2jfrozen.gameserver.datatables.sql.CharNameTable charNametable
com.l2jfrozen.gameserver.script.EngineInterface: com.l2jfrozen.gameserver.idfactory.IdFactory idFactory
com.l2jfrozen.gameserver.script.EngineInterface: com.l2jfrozen.gameserver.datatables.sql.ItemTable itemTable
com.l2jfrozen.gameserver.script.EngineInterface: com.l2jfrozen.gameserver.datatables.SkillTable skillTable
com.l2jfrozen.gameserver.script.EngineInterface: com.l2jfrozen.gameserver.controllers.RecipeController recipeController
com.l2jfrozen.gameserver.script.EngineInterface: com.l2jfrozen.gameserver.datatables.sql.SkillTreeTable skillTreeTable
com.l2jfrozen.gameserver.script.EngineInterface: com.l2jfrozen.gameserver.datatables.sql.CharTemplateTable charTemplates
com.l2jfrozen.gameserver.script.EngineInterface: com.l2jfrozen.gameserver.datatables.sql.ClanTable clanTable
com.l2jfrozen.gameserver.script.EngineInterface: com.l2jfrozen.gameserver.datatables.sql.NpcTable npcTable
com.l2jfrozen.gameserver.script.EngineInterface: com.l2jfrozen.gameserver.datatables.sql.TeleportLocationTable teleTable
com.l2jfrozen.gameserver.script.EngineInterface: com.l2jfrozen.gameserver.datatables.sql.LevelUpData levelUpData
com.l2jfrozen.gameserver.script.EngineInterface: com.l2jfrozen.gameserver.model.L2World world
com.l2jfrozen.gameserver.script.EngineInterface: com.l2jfrozen.gameserver.datatables.sql.SpawnTable spawnTable
com.l2jfrozen.gameserver.script.EngineInterface: com.l2jfrozen.gameserver.controllers.GameTimeController gameTimeController
com.l2jfrozen.gameserver.script.EngineInterface: com.l2jfrozen.gameserver.model.entity.Announcements announcements
com.l2jfrozen.gameserver.script.EngineInterface: com.l2jfrozen.gameserver.datatables.csv.MapRegionTable mapRegions
com.l2jfrozen.gameserver.script.EngineInterface: void addQuestDrop(int,int,int,int,int,java.lang.String,java.lang.String[])
com.l2jfrozen.gameserver.script.EngineInterface: void addEventDrop(int[],int[],double,com.l2jfrozen.gameserver.script.DateRange)
com.l2jfrozen.gameserver.script.EngineInterface: void onPlayerLogin(java.lang.String[],com.l2jfrozen.gameserver.script.DateRange)
com.l2jfrozen.gameserver.script.EngineInterface: void <clinit>()
com.l2jfrozen.gameserver.script.EventDroplist
com.l2jfrozen.gameserver.script.EventDroplist: com.l2jfrozen.gameserver.script.EventDroplist _instance
com.l2jfrozen.gameserver.script.EventDroplist: java.util.List _allNpcDateDrops
com.l2jfrozen.gameserver.script.EventDroplist: com.l2jfrozen.gameserver.script.EventDroplist getInstance()
com.l2jfrozen.gameserver.script.EventDroplist: EventDroplist()
com.l2jfrozen.gameserver.script.EventDroplist: void addGlobalDrop(int[],int[],int,com.l2jfrozen.gameserver.script.DateRange)
com.l2jfrozen.gameserver.script.EventDroplist: java.util.List getAllDrops()
com.l2jfrozen.gameserver.script.EventDroplist$DateDrop
com.l2jfrozen.gameserver.script.EventDroplist$DateDrop: com.l2jfrozen.gameserver.script.DateRange dateRange
com.l2jfrozen.gameserver.script.EventDroplist$DateDrop: int[] items
com.l2jfrozen.gameserver.script.EventDroplist$DateDrop: int min
com.l2jfrozen.gameserver.script.EventDroplist$DateDrop: int max
com.l2jfrozen.gameserver.script.EventDroplist$DateDrop: int chance
com.l2jfrozen.gameserver.script.EventDroplist$DateDrop: com.l2jfrozen.gameserver.script.EventDroplist this$0
com.l2jfrozen.gameserver.script.EventDroplist$DateDrop: EventDroplist$DateDrop(com.l2jfrozen.gameserver.script.EventDroplist)
com.l2jfrozen.gameserver.script.Expression
com.l2jfrozen.gameserver.script.Expression: javax.script.ScriptContext _context
com.l2jfrozen.gameserver.script.Expression: java.lang.Object eval(java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.script.Expression: java.lang.Object eval(javax.script.ScriptContext,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.script.Expression: com.l2jfrozen.gameserver.script.Expression create(javax.script.ScriptContext)
com.l2jfrozen.gameserver.script.Expression: Expression(javax.script.ScriptContext)
com.l2jfrozen.gameserver.script.Expression: void addDynamicVariable(java.lang.String,java.lang.Object)
com.l2jfrozen.gameserver.script.Expression: void removeDynamicVariable(java.lang.String)
com.l2jfrozen.gameserver.script.IntList
com.l2jfrozen.gameserver.script.IntList: IntList()
com.l2jfrozen.gameserver.script.IntList: int[] parse(java.lang.String)
com.l2jfrozen.gameserver.script.IntList: int getInt(java.lang.String)
com.l2jfrozen.gameserver.script.IntList: int[] getIntegerList(java.lang.String[])
com.l2jfrozen.gameserver.script.Parser
com.l2jfrozen.gameserver.script.Parser: Parser()
com.l2jfrozen.gameserver.script.Parser: void parseScript(org.w3c.dom.Node,javax.script.ScriptContext)
com.l2jfrozen.gameserver.script.ParserFactory
com.l2jfrozen.gameserver.script.ParserFactory: ParserFactory()
com.l2jfrozen.gameserver.script.ParserFactory: com.l2jfrozen.gameserver.script.Parser create()
com.l2jfrozen.gameserver.script.ParserNotCreatedException
com.l2jfrozen.gameserver.script.ParserNotCreatedException: long serialVersionUID
com.l2jfrozen.gameserver.script.ParserNotCreatedException: ParserNotCreatedException()
com.l2jfrozen.gameserver.script.ScriptDocument
com.l2jfrozen.gameserver.script.ScriptDocument: org.w3c.dom.Document _document
com.l2jfrozen.gameserver.script.ScriptDocument: java.lang.String _name
com.l2jfrozen.gameserver.script.ScriptDocument: ScriptDocument(java.lang.String,java.io.InputStream)
com.l2jfrozen.gameserver.script.ScriptDocument: org.w3c.dom.Document getDocument()
com.l2jfrozen.gameserver.script.ScriptDocument: java.lang.String getName()
com.l2jfrozen.gameserver.script.ScriptDocument: java.lang.String toString()
com.l2jfrozen.gameserver.script.ScriptEngine
com.l2jfrozen.gameserver.script.ScriptEngine: com.l2jfrozen.gameserver.script.EngineInterface _utils
com.l2jfrozen.gameserver.script.ScriptEngine: java.util.Hashtable parserFactories
com.l2jfrozen.gameserver.script.ScriptEngine: ScriptEngine()
com.l2jfrozen.gameserver.script.ScriptEngine: com.l2jfrozen.gameserver.script.Parser createParser(java.lang.String)
com.l2jfrozen.gameserver.script.ScriptEngine: void <clinit>()
com.l2jfrozen.gameserver.script.ScriptPackage
com.l2jfrozen.gameserver.script.ScriptPackage: java.util.List _scriptFiles
com.l2jfrozen.gameserver.script.ScriptPackage: java.util.List _otherFiles
com.l2jfrozen.gameserver.script.ScriptPackage: java.lang.String _name
com.l2jfrozen.gameserver.script.ScriptPackage: ScriptPackage(java.util.zip.ZipFile)
com.l2jfrozen.gameserver.script.ScriptPackage: java.util.List getOtherFiles()
com.l2jfrozen.gameserver.script.ScriptPackage: java.util.List getScriptFiles()
com.l2jfrozen.gameserver.script.ScriptPackage: void addFiles(java.util.zip.ZipFile)
com.l2jfrozen.gameserver.script.ScriptPackage: java.lang.String getName()
com.l2jfrozen.gameserver.script.ScriptPackage: java.lang.String toString()
com.l2jfrozen.gameserver.script.ShortList
com.l2jfrozen.gameserver.script.ShortList: ShortList()
com.l2jfrozen.gameserver.script.ShortList: short[] parse(java.lang.String)
com.l2jfrozen.gameserver.script.ShortList: short getShort(java.lang.String)
com.l2jfrozen.gameserver.script.ShortList: short[] getShortList(java.lang.String[])
com.l2jfrozen.gameserver.script.faenor.FaenorEventParser
com.l2jfrozen.gameserver.script.faenor.FaenorEventParser: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.script.faenor.FaenorEventParser: com.l2jfrozen.gameserver.script.DateRange _eventDates
com.l2jfrozen.gameserver.script.faenor.FaenorEventParser: FaenorEventParser()
com.l2jfrozen.gameserver.script.faenor.FaenorEventParser: void parseScript(org.w3c.dom.Node,javax.script.ScriptContext)
com.l2jfrozen.gameserver.script.faenor.FaenorEventParser: void parseEventDropAndMessage(org.w3c.dom.Node)
com.l2jfrozen.gameserver.script.faenor.FaenorEventParser: void parseEventMessage(org.w3c.dom.Node)
com.l2jfrozen.gameserver.script.faenor.FaenorEventParser: void parseEventDropList(org.w3c.dom.Node)
com.l2jfrozen.gameserver.script.faenor.FaenorEventParser: void parseEventDrop(org.w3c.dom.Node)
com.l2jfrozen.gameserver.script.faenor.FaenorEventParser: void <clinit>()
com.l2jfrozen.gameserver.script.faenor.FaenorEventParser$1
com.l2jfrozen.gameserver.script.faenor.FaenorEventParser$1: org.w3c.dom.Node val$eventNode
com.l2jfrozen.gameserver.script.faenor.FaenorEventParser$1: com.l2jfrozen.gameserver.script.faenor.FaenorEventParser this$0
com.l2jfrozen.gameserver.script.faenor.FaenorEventParser$1: FaenorEventParser$1(com.l2jfrozen.gameserver.script.faenor.FaenorEventParser,org.w3c.dom.Node)
com.l2jfrozen.gameserver.script.faenor.FaenorEventParser$1: void run()
com.l2jfrozen.gameserver.script.faenor.FaenorEventParser$FaenorEventParserFactory
com.l2jfrozen.gameserver.script.faenor.FaenorEventParser$FaenorEventParserFactory: FaenorEventParser$FaenorEventParserFactory()
com.l2jfrozen.gameserver.script.faenor.FaenorEventParser$FaenorEventParserFactory: com.l2jfrozen.gameserver.script.Parser create()
com.l2jfrozen.gameserver.script.faenor.FaenorInterface
com.l2jfrozen.gameserver.script.faenor.FaenorInterface: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.script.faenor.FaenorInterface: com.l2jfrozen.gameserver.script.faenor.FaenorInterface getInstance()
com.l2jfrozen.gameserver.script.faenor.FaenorInterface: FaenorInterface()
com.l2jfrozen.gameserver.script.faenor.FaenorInterface: java.util.List getAllPlayers()
com.l2jfrozen.gameserver.script.faenor.FaenorInterface: void addQuestDrop(int,int,int,int,int,java.lang.String,java.lang.String[])
com.l2jfrozen.gameserver.script.faenor.FaenorInterface: void addDrop(int,int,int,int,boolean,int)
com.l2jfrozen.gameserver.script.faenor.FaenorInterface: void addDrop(com.l2jfrozen.gameserver.templates.L2NpcTemplate,com.l2jfrozen.gameserver.model.L2DropData,boolean)
com.l2jfrozen.gameserver.script.faenor.FaenorInterface: void addDrop(com.l2jfrozen.gameserver.templates.L2NpcTemplate,com.l2jfrozen.gameserver.model.L2DropData,int)
com.l2jfrozen.gameserver.script.faenor.FaenorInterface: java.util.List getQuestDrops(int)
com.l2jfrozen.gameserver.script.faenor.FaenorInterface: void addEventDrop(int[],int[],double,com.l2jfrozen.gameserver.script.DateRange)
com.l2jfrozen.gameserver.script.faenor.FaenorInterface: void onPlayerLogin(java.lang.String[],com.l2jfrozen.gameserver.script.DateRange)
com.l2jfrozen.gameserver.script.faenor.FaenorInterface: void addPetData(javax.script.ScriptContext,int,int,int,java.util.Map)
com.l2jfrozen.gameserver.script.faenor.FaenorInterface: FaenorInterface(com.l2jfrozen.gameserver.script.faenor.FaenorInterface$1)
com.l2jfrozen.gameserver.script.faenor.FaenorInterface: void <clinit>()
com.l2jfrozen.gameserver.script.faenor.FaenorInterface$1
com.l2jfrozen.gameserver.script.faenor.FaenorInterface$SingletonHolder
com.l2jfrozen.gameserver.script.faenor.FaenorInterface$SingletonHolder: com.l2jfrozen.gameserver.script.faenor.FaenorInterface _instance
com.l2jfrozen.gameserver.script.faenor.FaenorInterface$SingletonHolder: FaenorInterface$SingletonHolder()
com.l2jfrozen.gameserver.script.faenor.FaenorInterface$SingletonHolder: void <clinit>()
com.l2jfrozen.gameserver.script.faenor.FaenorParser
com.l2jfrozen.gameserver.script.faenor.FaenorParser: com.l2jfrozen.gameserver.script.faenor.FaenorInterface _bridge
com.l2jfrozen.gameserver.script.faenor.FaenorParser: java.text.DateFormat DATE_FORMAT
com.l2jfrozen.gameserver.script.faenor.FaenorParser: boolean DEBUG
com.l2jfrozen.gameserver.script.faenor.FaenorParser: FaenorParser()
com.l2jfrozen.gameserver.script.faenor.FaenorParser: java.lang.String attribute(org.w3c.dom.Node,java.lang.String)
com.l2jfrozen.gameserver.script.faenor.FaenorParser: java.lang.String element(org.w3c.dom.Node,java.lang.String)
com.l2jfrozen.gameserver.script.faenor.FaenorParser: java.lang.String attribute(org.w3c.dom.Node,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.script.faenor.FaenorParser: java.lang.String element(org.w3c.dom.Node,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.script.faenor.FaenorParser: boolean isNodeName(org.w3c.dom.Node,java.lang.String)
com.l2jfrozen.gameserver.script.faenor.FaenorParser: double getPercent(java.lang.String)
com.l2jfrozen.gameserver.script.faenor.FaenorParser: int getInt(java.lang.String)
com.l2jfrozen.gameserver.script.faenor.FaenorParser: double getDouble(java.lang.String)
com.l2jfrozen.gameserver.script.faenor.FaenorParser: float getFloat(java.lang.String)
com.l2jfrozen.gameserver.script.faenor.FaenorParser: java.lang.String getParserName(java.lang.String)
com.l2jfrozen.gameserver.script.faenor.FaenorParser: void parseScript(org.w3c.dom.Node,javax.script.ScriptContext)
com.l2jfrozen.gameserver.script.faenor.FaenorParser: void <clinit>()
com.l2jfrozen.gameserver.script.faenor.FaenorQuestParser
com.l2jfrozen.gameserver.script.faenor.FaenorQuestParser: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.script.faenor.FaenorQuestParser: FaenorQuestParser()
com.l2jfrozen.gameserver.script.faenor.FaenorQuestParser: void parseScript(org.w3c.dom.Node,javax.script.ScriptContext)
com.l2jfrozen.gameserver.script.faenor.FaenorQuestParser: void parseQuestDropList(org.w3c.dom.Node,java.lang.String)
com.l2jfrozen.gameserver.script.faenor.FaenorQuestParser: void parseQuestDrop(org.w3c.dom.Node,java.lang.String)
com.l2jfrozen.gameserver.script.faenor.FaenorQuestParser: void <clinit>()
com.l2jfrozen.gameserver.script.faenor.FaenorQuestParser$FaenorQuestParserFactory
com.l2jfrozen.gameserver.script.faenor.FaenorQuestParser$FaenorQuestParserFactory: FaenorQuestParser$FaenorQuestParserFactory()
com.l2jfrozen.gameserver.script.faenor.FaenorQuestParser$FaenorQuestParserFactory: com.l2jfrozen.gameserver.script.Parser create()
com.l2jfrozen.gameserver.script.faenor.FaenorScriptEngine
com.l2jfrozen.gameserver.script.faenor.FaenorScriptEngine: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.script.faenor.FaenorScriptEngine: java.lang.String PACKAGE_DIRECTORY
com.l2jfrozen.gameserver.script.faenor.FaenorScriptEngine: boolean DEBUG
com.l2jfrozen.gameserver.script.faenor.FaenorScriptEngine: java.util.LinkedList _scripts
com.l2jfrozen.gameserver.script.faenor.FaenorScriptEngine: com.l2jfrozen.gameserver.script.faenor.FaenorScriptEngine getInstance()
com.l2jfrozen.gameserver.script.faenor.FaenorScriptEngine: FaenorScriptEngine()
com.l2jfrozen.gameserver.script.faenor.FaenorScriptEngine: void reloadPackages()
com.l2jfrozen.gameserver.script.faenor.FaenorScriptEngine: void loadPackages()
com.l2jfrozen.gameserver.script.faenor.FaenorScriptEngine: void orderScripts()
com.l2jfrozen.gameserver.script.faenor.FaenorScriptEngine: void parsePackages()
com.l2jfrozen.gameserver.script.faenor.FaenorScriptEngine: void parseScript(com.l2jfrozen.gameserver.script.ScriptDocument,javax.script.ScriptContext)
com.l2jfrozen.gameserver.script.faenor.FaenorScriptEngine: java.lang.String toString()
com.l2jfrozen.gameserver.script.faenor.FaenorScriptEngine: FaenorScriptEngine(com.l2jfrozen.gameserver.script.faenor.FaenorScriptEngine$1)
com.l2jfrozen.gameserver.script.faenor.FaenorScriptEngine: void <clinit>()
com.l2jfrozen.gameserver.script.faenor.FaenorScriptEngine$1
com.l2jfrozen.gameserver.script.faenor.FaenorScriptEngine$1: com.l2jfrozen.gameserver.script.faenor.FaenorScriptEngine this$0
com.l2jfrozen.gameserver.script.faenor.FaenorScriptEngine$1: FaenorScriptEngine$1(com.l2jfrozen.gameserver.script.faenor.FaenorScriptEngine)
com.l2jfrozen.gameserver.script.faenor.FaenorScriptEngine$1: boolean accept(java.io.File)
com.l2jfrozen.gameserver.script.faenor.FaenorScriptEngine$SingletonHolder
com.l2jfrozen.gameserver.script.faenor.FaenorScriptEngine$SingletonHolder: com.l2jfrozen.gameserver.script.faenor.FaenorScriptEngine _instance
com.l2jfrozen.gameserver.script.faenor.FaenorScriptEngine$SingletonHolder: FaenorScriptEngine$SingletonHolder()
com.l2jfrozen.gameserver.script.faenor.FaenorScriptEngine$SingletonHolder: void <clinit>()
com.l2jfrozen.gameserver.script.faenor.FaenorWorldDataParser
com.l2jfrozen.gameserver.script.faenor.FaenorWorldDataParser: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.script.faenor.FaenorWorldDataParser: java.lang.String PET_DATA
com.l2jfrozen.gameserver.script.faenor.FaenorWorldDataParser: FaenorWorldDataParser()
com.l2jfrozen.gameserver.script.faenor.FaenorWorldDataParser: void parseScript(org.w3c.dom.Node,javax.script.ScriptContext)
com.l2jfrozen.gameserver.script.faenor.FaenorWorldDataParser: void parsePetData(org.w3c.dom.Node,javax.script.ScriptContext)
com.l2jfrozen.gameserver.script.faenor.FaenorWorldDataParser: void parseStat(org.w3c.dom.Node,com.l2jfrozen.gameserver.script.faenor.FaenorWorldDataParser$PetData)
com.l2jfrozen.gameserver.script.faenor.FaenorWorldDataParser: java.lang.String parseForumla(org.w3c.dom.Node)
com.l2jfrozen.gameserver.script.faenor.FaenorWorldDataParser: void <clinit>()
com.l2jfrozen.gameserver.script.faenor.FaenorWorldDataParser$FaenorWorldDataParserFactory
com.l2jfrozen.gameserver.script.faenor.FaenorWorldDataParser$FaenorWorldDataParserFactory: FaenorWorldDataParser$FaenorWorldDataParserFactory()
com.l2jfrozen.gameserver.script.faenor.FaenorWorldDataParser$FaenorWorldDataParserFactory: com.l2jfrozen.gameserver.script.Parser create()
com.l2jfrozen.gameserver.script.faenor.FaenorWorldDataParser$PetData
com.l2jfrozen.gameserver.script.faenor.FaenorWorldDataParser$PetData: int petId
com.l2jfrozen.gameserver.script.faenor.FaenorWorldDataParser$PetData: int levelStart
com.l2jfrozen.gameserver.script.faenor.FaenorWorldDataParser$PetData: int levelEnd
com.l2jfrozen.gameserver.script.faenor.FaenorWorldDataParser$PetData: java.util.Map statValues
com.l2jfrozen.gameserver.script.faenor.FaenorWorldDataParser$PetData: com.l2jfrozen.gameserver.script.faenor.FaenorWorldDataParser this$0
com.l2jfrozen.gameserver.script.faenor.FaenorWorldDataParser$PetData: FaenorWorldDataParser$PetData(com.l2jfrozen.gameserver.script.faenor.FaenorWorldDataParser)
com.l2jfrozen.gameserver.scripting.CompiledScriptCache
com.l2jfrozen.gameserver.scripting.CompiledScriptCache: long serialVersionUID
com.l2jfrozen.gameserver.scripting.CompiledScriptCache: org.apache.log4j.Logger LOG
com.l2jfrozen.gameserver.scripting.CompiledScriptCache: java.util.Map _compiledScriptCache
com.l2jfrozen.gameserver.scripting.CompiledScriptCache: boolean _modified
com.l2jfrozen.gameserver.scripting.CompiledScriptCache: CompiledScriptCache()
com.l2jfrozen.gameserver.scripting.CompiledScriptCache: javax.script.CompiledScript loadCompiledScript(javax.script.ScriptEngine,java.io.File)
com.l2jfrozen.gameserver.scripting.CompiledScriptCache: boolean isModified()
com.l2jfrozen.gameserver.scripting.CompiledScriptCache: void purge()
com.l2jfrozen.gameserver.scripting.CompiledScriptCache: void save()
com.l2jfrozen.gameserver.scripting.CompiledScriptCache: void <clinit>()
com.l2jfrozen.gameserver.scripting.CompiledScriptHolder
com.l2jfrozen.gameserver.scripting.CompiledScriptHolder: long serialVersionUID
com.l2jfrozen.gameserver.scripting.CompiledScriptHolder: long _lastModified
com.l2jfrozen.gameserver.scripting.CompiledScriptHolder: long _size
com.l2jfrozen.gameserver.scripting.CompiledScriptHolder: javax.script.CompiledScript _compiledScript
com.l2jfrozen.gameserver.scripting.CompiledScriptHolder: CompiledScriptHolder(javax.script.CompiledScript,long,long)
com.l2jfrozen.gameserver.scripting.CompiledScriptHolder: CompiledScriptHolder(javax.script.CompiledScript,java.io.File)
com.l2jfrozen.gameserver.scripting.CompiledScriptHolder: long getLastModified()
com.l2jfrozen.gameserver.scripting.CompiledScriptHolder: void setLastModified(long)
com.l2jfrozen.gameserver.scripting.CompiledScriptHolder: long getSize()
com.l2jfrozen.gameserver.scripting.CompiledScriptHolder: void setSize(long)
com.l2jfrozen.gameserver.scripting.CompiledScriptHolder: javax.script.CompiledScript getCompiledScript()
com.l2jfrozen.gameserver.scripting.CompiledScriptHolder: void setCompiledScript(javax.script.CompiledScript)
com.l2jfrozen.gameserver.scripting.CompiledScriptHolder: boolean matches(java.io.File)
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager: java.io.File SCRIPT_FOLDER
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager: java.util.Map _nameEngines
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager: java.util.Map _extEngines
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager: java.util.List _scriptManagers
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager: com.l2jfrozen.gameserver.scripting.CompiledScriptCache _cache
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager: java.io.File _currentLoadingScript
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager: com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager getInstance()
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager: L2ScriptEngineManager()
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager: void preConfigure()
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager: javax.script.ScriptEngine getEngineByName(java.lang.String)
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager: javax.script.ScriptEngine getEngineByExtension(java.lang.String)
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager: void executeScriptsList(java.io.File)
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager: void executeAllScriptsInDirectory(java.io.File)
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager: void executeAllScriptsInDirectory(java.io.File,boolean,int)
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager: void executeAllScriptsInDirectory(java.io.File,boolean,int,int)
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager: com.l2jfrozen.gameserver.scripting.CompiledScriptCache getCompiledScriptCache()
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager: com.l2jfrozen.gameserver.scripting.CompiledScriptCache loadCompiledScriptCache()
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager: void executeScript(java.io.File)
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager: void executeScript(java.lang.String,java.io.File)
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager: void executeScript(javax.script.ScriptEngine,java.io.File)
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager: java.lang.String getClassForFile(java.io.File)
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager: javax.script.ScriptContext getScriptContext(javax.script.ScriptEngine)
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager: javax.script.ScriptContext getScriptContext(java.lang.String)
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager: java.lang.Object eval(javax.script.ScriptEngine,java.lang.String,javax.script.ScriptContext)
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager: java.lang.Object eval(java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager: java.lang.Object eval(java.lang.String,java.lang.String,javax.script.ScriptContext)
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager: java.lang.Object eval(javax.script.ScriptEngine,java.lang.String)
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager: void reportScriptFileError(java.io.File,javax.script.ScriptException)
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager: void registerScriptManager(com.l2jfrozen.gameserver.scripting.ScriptManager)
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager: void removeScriptManager(com.l2jfrozen.gameserver.scripting.ScriptManager)
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager: java.util.List getScriptManagers()
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager: void setCurrentLoadingScript(java.io.File)
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager: java.io.File getCurrentLoadScript()
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager: L2ScriptEngineManager(com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager$1)
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager: void <clinit>()
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager$1
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager$CleaneCache
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager$CleaneCache: com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager this$0
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager$CleaneCache: L2ScriptEngineManager$CleaneCache(com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager)
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager$CleaneCache: void run()
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager$SingletonHolder
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager$SingletonHolder: com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager _instance
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager$SingletonHolder: L2ScriptEngineManager$SingletonHolder()
com.l2jfrozen.gameserver.scripting.L2ScriptEngineManager$SingletonHolder: void <clinit>()
com.l2jfrozen.gameserver.scripting.ManagedScript
com.l2jfrozen.gameserver.scripting.ManagedScript: java.io.File _scriptFile
com.l2jfrozen.gameserver.scripting.ManagedScript: long _lastLoadTime
com.l2jfrozen.gameserver.scripting.ManagedScript: boolean _isActive
com.l2jfrozen.gameserver.scripting.ManagedScript: ManagedScript()
com.l2jfrozen.gameserver.scripting.ManagedScript: boolean reload()
com.l2jfrozen.gameserver.scripting.ManagedScript: boolean unload()
com.l2jfrozen.gameserver.scripting.ManagedScript: void setActive(boolean)
com.l2jfrozen.gameserver.scripting.ManagedScript: boolean isActive()
com.l2jfrozen.gameserver.scripting.ManagedScript: java.io.File getScriptFile()
com.l2jfrozen.gameserver.scripting.ManagedScript: void setLastLoadTime(long)
com.l2jfrozen.gameserver.scripting.ManagedScript: long getLastLoadTime()
com.l2jfrozen.gameserver.scripting.ManagedScript: java.lang.String getScriptName()
com.l2jfrozen.gameserver.scripting.ManagedScript: com.l2jfrozen.gameserver.scripting.ScriptManager getScriptManager()
com.l2jfrozen.gameserver.scripting.ScriptManager
com.l2jfrozen.gameserver.scripting.ScriptManager: ScriptManager()
com.l2jfrozen.gameserver.scripting.ScriptManager: java.lang.Iterable getAllManagedScripts()
com.l2jfrozen.gameserver.scripting.ScriptManager: boolean reload(com.l2jfrozen.gameserver.scripting.ManagedScript)
com.l2jfrozen.gameserver.scripting.ScriptManager: boolean unload(com.l2jfrozen.gameserver.scripting.ManagedScript)
com.l2jfrozen.gameserver.scripting.ScriptManager: void setActive(com.l2jfrozen.gameserver.scripting.ManagedScript,boolean)
com.l2jfrozen.gameserver.scripting.ScriptManager: java.lang.String getScriptManagerName()
com.l2jfrozen.gameserver.skills.BaseStats
com.l2jfrozen.gameserver.skills.BaseStats: com.l2jfrozen.gameserver.skills.BaseStats STR
com.l2jfrozen.gameserver.skills.BaseStats: com.l2jfrozen.gameserver.skills.BaseStats INT
com.l2jfrozen.gameserver.skills.BaseStats: com.l2jfrozen.gameserver.skills.BaseStats DEX
com.l2jfrozen.gameserver.skills.BaseStats: com.l2jfrozen.gameserver.skills.BaseStats WIT
com.l2jfrozen.gameserver.skills.BaseStats: com.l2jfrozen.gameserver.skills.BaseStats CON
com.l2jfrozen.gameserver.skills.BaseStats: com.l2jfrozen.gameserver.skills.BaseStats MEN
com.l2jfrozen.gameserver.skills.BaseStats: com.l2jfrozen.gameserver.skills.BaseStats NULL
com.l2jfrozen.gameserver.skills.BaseStats: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.skills.BaseStats: int MAX_STAT_VALUE
com.l2jfrozen.gameserver.skills.BaseStats: double[] STRbonus
com.l2jfrozen.gameserver.skills.BaseStats: double[] INTbonus
com.l2jfrozen.gameserver.skills.BaseStats: double[] DEXbonus
com.l2jfrozen.gameserver.skills.BaseStats: double[] WITbonus
com.l2jfrozen.gameserver.skills.BaseStats: double[] CONbonus
com.l2jfrozen.gameserver.skills.BaseStats: double[] MENbonus
com.l2jfrozen.gameserver.skills.BaseStats: com.l2jfrozen.gameserver.skills.BaseStats$BaseStat _stat
com.l2jfrozen.gameserver.skills.BaseStats: com.l2jfrozen.gameserver.skills.BaseStats[] $VALUES
com.l2jfrozen.gameserver.skills.BaseStats: com.l2jfrozen.gameserver.skills.BaseStats[] values()
com.l2jfrozen.gameserver.skills.BaseStats: com.l2jfrozen.gameserver.skills.BaseStats valueOf(java.lang.String)
com.l2jfrozen.gameserver.skills.BaseStats: java.lang.String getValue()
com.l2jfrozen.gameserver.skills.BaseStats: BaseStats(java.lang.String,int,com.l2jfrozen.gameserver.skills.BaseStats$BaseStat)
com.l2jfrozen.gameserver.skills.BaseStats: double calcBonus(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.skills.BaseStats: com.l2jfrozen.gameserver.skills.BaseStats valueOfXml(java.lang.String)
com.l2jfrozen.gameserver.skills.BaseStats: void <clinit>()
com.l2jfrozen.gameserver.skills.BaseStats$BaseStat
com.l2jfrozen.gameserver.skills.BaseStats$BaseStat: double calcBonus(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.skills.BaseStats$CON
com.l2jfrozen.gameserver.skills.BaseStats$CON: BaseStats$CON()
com.l2jfrozen.gameserver.skills.BaseStats$CON: double calcBonus(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.skills.BaseStats$DEX
com.l2jfrozen.gameserver.skills.BaseStats$DEX: BaseStats$DEX()
com.l2jfrozen.gameserver.skills.BaseStats$DEX: double calcBonus(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.skills.BaseStats$INT
com.l2jfrozen.gameserver.skills.BaseStats$INT: BaseStats$INT()
com.l2jfrozen.gameserver.skills.BaseStats$INT: double calcBonus(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.skills.BaseStats$MEN
com.l2jfrozen.gameserver.skills.BaseStats$MEN: BaseStats$MEN()
com.l2jfrozen.gameserver.skills.BaseStats$MEN: double calcBonus(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.skills.BaseStats$NULL
com.l2jfrozen.gameserver.skills.BaseStats$NULL: BaseStats$NULL()
com.l2jfrozen.gameserver.skills.BaseStats$NULL: double calcBonus(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.skills.BaseStats$STR
com.l2jfrozen.gameserver.skills.BaseStats$STR: BaseStats$STR()
com.l2jfrozen.gameserver.skills.BaseStats$STR: double calcBonus(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.skills.BaseStats$WIT
com.l2jfrozen.gameserver.skills.BaseStats$WIT: BaseStats$WIT()
com.l2jfrozen.gameserver.skills.BaseStats$WIT: double calcBonus(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.skills.Calculator
com.l2jfrozen.gameserver.skills.Calculator: com.l2jfrozen.gameserver.skills.funcs.Func[] _emptyFuncs
com.l2jfrozen.gameserver.skills.Calculator: com.l2jfrozen.gameserver.skills.funcs.Func[] _functions
com.l2jfrozen.gameserver.skills.Calculator: Calculator()
com.l2jfrozen.gameserver.skills.Calculator: Calculator(com.l2jfrozen.gameserver.skills.Calculator)
com.l2jfrozen.gameserver.skills.Calculator: boolean equalsCals(com.l2jfrozen.gameserver.skills.Calculator,com.l2jfrozen.gameserver.skills.Calculator)
com.l2jfrozen.gameserver.skills.Calculator: int size()
com.l2jfrozen.gameserver.skills.Calculator: void addFunc(com.l2jfrozen.gameserver.skills.funcs.Func)
com.l2jfrozen.gameserver.skills.Calculator: void removeFunc(com.l2jfrozen.gameserver.skills.funcs.Func)
com.l2jfrozen.gameserver.skills.Calculator: javolution.util.FastList removeOwner(java.lang.Object)
com.l2jfrozen.gameserver.skills.Calculator: void calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.Calculator: void <clinit>()
com.l2jfrozen.gameserver.skills.DocumentBase
com.l2jfrozen.gameserver.skills.DocumentBase: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.skills.DocumentBase: java.io.File _file
com.l2jfrozen.gameserver.skills.DocumentBase: java.util.Map _tables
com.l2jfrozen.gameserver.skills.DocumentBase: DocumentBase(java.io.File)
com.l2jfrozen.gameserver.skills.DocumentBase: org.w3c.dom.Document parse()
com.l2jfrozen.gameserver.skills.DocumentBase: void parseDocument(org.w3c.dom.Document)
com.l2jfrozen.gameserver.skills.DocumentBase: com.l2jfrozen.gameserver.templates.StatsSet getStatsSet()
com.l2jfrozen.gameserver.skills.DocumentBase: java.lang.String getTableValue(java.lang.String)
com.l2jfrozen.gameserver.skills.DocumentBase: java.lang.String getTableValue(java.lang.String,int)
com.l2jfrozen.gameserver.skills.DocumentBase: void resetTable()
com.l2jfrozen.gameserver.skills.DocumentBase: void setTable(java.lang.String,java.lang.String[])
com.l2jfrozen.gameserver.skills.DocumentBase: void parseTemplate(org.w3c.dom.Node,java.lang.Object)
com.l2jfrozen.gameserver.skills.DocumentBase: void attachFunc(org.w3c.dom.Node,java.lang.Object,java.lang.String,com.l2jfrozen.gameserver.skills.conditions.Condition)
com.l2jfrozen.gameserver.skills.DocumentBase: void attachLambdaFunc(org.w3c.dom.Node,java.lang.Object,com.l2jfrozen.gameserver.skills.funcs.LambdaCalc)
com.l2jfrozen.gameserver.skills.DocumentBase: void attachEffect(org.w3c.dom.Node,java.lang.Object,com.l2jfrozen.gameserver.skills.conditions.Condition)
com.l2jfrozen.gameserver.skills.DocumentBase: void attachSkill(org.w3c.dom.Node,java.lang.Object,com.l2jfrozen.gameserver.skills.conditions.Condition)
com.l2jfrozen.gameserver.skills.DocumentBase: com.l2jfrozen.gameserver.skills.conditions.Condition parseCondition(org.w3c.dom.Node,java.lang.Object)
com.l2jfrozen.gameserver.skills.DocumentBase: com.l2jfrozen.gameserver.skills.conditions.Condition parseLogicAnd(org.w3c.dom.Node,java.lang.Object)
com.l2jfrozen.gameserver.skills.DocumentBase: com.l2jfrozen.gameserver.skills.conditions.Condition parseLogicOr(org.w3c.dom.Node,java.lang.Object)
com.l2jfrozen.gameserver.skills.DocumentBase: com.l2jfrozen.gameserver.skills.conditions.Condition parseLogicNot(org.w3c.dom.Node,java.lang.Object)
com.l2jfrozen.gameserver.skills.DocumentBase: com.l2jfrozen.gameserver.skills.conditions.Condition parsePlayerCondition(org.w3c.dom.Node)
com.l2jfrozen.gameserver.skills.DocumentBase: com.l2jfrozen.gameserver.skills.conditions.Condition parseTargetCondition(org.w3c.dom.Node,java.lang.Object)
com.l2jfrozen.gameserver.skills.DocumentBase: com.l2jfrozen.gameserver.skills.conditions.Condition parseSkillCondition(org.w3c.dom.Node)
com.l2jfrozen.gameserver.skills.DocumentBase: com.l2jfrozen.gameserver.skills.conditions.Condition parseUsingCondition(org.w3c.dom.Node)
com.l2jfrozen.gameserver.skills.DocumentBase: com.l2jfrozen.gameserver.skills.conditions.Condition parseGameCondition(org.w3c.dom.Node)
com.l2jfrozen.gameserver.skills.DocumentBase: void parseTable(org.w3c.dom.Node)
com.l2jfrozen.gameserver.skills.DocumentBase: void parseBeanSet(org.w3c.dom.Node,com.l2jfrozen.gameserver.templates.StatsSet,java.lang.Integer)
com.l2jfrozen.gameserver.skills.DocumentBase: com.l2jfrozen.gameserver.skills.funcs.Lambda getLambda(org.w3c.dom.Node,java.lang.Object)
com.l2jfrozen.gameserver.skills.DocumentBase: java.lang.String getValue(java.lang.String,java.lang.Object)
com.l2jfrozen.gameserver.skills.DocumentBase: com.l2jfrozen.gameserver.skills.conditions.Condition joinAnd(com.l2jfrozen.gameserver.skills.conditions.Condition,com.l2jfrozen.gameserver.skills.conditions.Condition)
com.l2jfrozen.gameserver.skills.DocumentBase: void <clinit>()
com.l2jfrozen.gameserver.skills.DocumentItem
com.l2jfrozen.gameserver.skills.DocumentItem: com.l2jfrozen.gameserver.model.Item _currentItem
com.l2jfrozen.gameserver.skills.DocumentItem: java.util.List _itemsInFile
com.l2jfrozen.gameserver.skills.DocumentItem: java.util.Map _itemData
com.l2jfrozen.gameserver.skills.DocumentItem: DocumentItem(java.util.Map,java.io.File)
com.l2jfrozen.gameserver.skills.DocumentItem: void setCurrentItem(com.l2jfrozen.gameserver.model.Item)
com.l2jfrozen.gameserver.skills.DocumentItem: com.l2jfrozen.gameserver.templates.StatsSet getStatsSet()
com.l2jfrozen.gameserver.skills.DocumentItem: java.lang.String getTableValue(java.lang.String)
com.l2jfrozen.gameserver.skills.DocumentItem: java.lang.String getTableValue(java.lang.String,int)
com.l2jfrozen.gameserver.skills.DocumentItem: void parseDocument(org.w3c.dom.Document)
com.l2jfrozen.gameserver.skills.DocumentItem: void parseItem(org.w3c.dom.Node)
com.l2jfrozen.gameserver.skills.DocumentItem: void makeItem()
com.l2jfrozen.gameserver.skills.DocumentItem: java.util.List getItemList()
com.l2jfrozen.gameserver.skills.DocumentSkill
com.l2jfrozen.gameserver.skills.DocumentSkill: com.l2jfrozen.gameserver.skills.DocumentSkill$Skill _currentSkill
com.l2jfrozen.gameserver.skills.DocumentSkill: java.util.List _skillsInFile
com.l2jfrozen.gameserver.skills.DocumentSkill: DocumentSkill(java.io.File)
com.l2jfrozen.gameserver.skills.DocumentSkill: void setCurrentSkill(com.l2jfrozen.gameserver.skills.DocumentSkill$Skill)
com.l2jfrozen.gameserver.skills.DocumentSkill: com.l2jfrozen.gameserver.templates.StatsSet getStatsSet()
com.l2jfrozen.gameserver.skills.DocumentSkill: java.util.List getSkills()
com.l2jfrozen.gameserver.skills.DocumentSkill: java.lang.String getTableValue(java.lang.String)
com.l2jfrozen.gameserver.skills.DocumentSkill: java.lang.String getTableValue(java.lang.String,int)
com.l2jfrozen.gameserver.skills.DocumentSkill: void parseDocument(org.w3c.dom.Document)
com.l2jfrozen.gameserver.skills.DocumentSkill: void parseSkill(org.w3c.dom.Node)
com.l2jfrozen.gameserver.skills.DocumentSkill: void makeSkills()
com.l2jfrozen.gameserver.skills.DocumentSkill$Skill
com.l2jfrozen.gameserver.skills.DocumentSkill$Skill: int id
com.l2jfrozen.gameserver.skills.DocumentSkill$Skill: java.lang.String name
com.l2jfrozen.gameserver.skills.DocumentSkill$Skill: com.l2jfrozen.gameserver.templates.StatsSet[] sets
com.l2jfrozen.gameserver.skills.DocumentSkill$Skill: com.l2jfrozen.gameserver.templates.StatsSet[] enchsets1
com.l2jfrozen.gameserver.skills.DocumentSkill$Skill: com.l2jfrozen.gameserver.templates.StatsSet[] enchsets2
com.l2jfrozen.gameserver.skills.DocumentSkill$Skill: int currentLevel
com.l2jfrozen.gameserver.skills.DocumentSkill$Skill: java.util.List skills
com.l2jfrozen.gameserver.skills.DocumentSkill$Skill: java.util.List currentSkills
com.l2jfrozen.gameserver.skills.DocumentSkill$Skill: com.l2jfrozen.gameserver.skills.DocumentSkill this$0
com.l2jfrozen.gameserver.skills.DocumentSkill$Skill: DocumentSkill$Skill(com.l2jfrozen.gameserver.skills.DocumentSkill)
com.l2jfrozen.gameserver.skills.Env
com.l2jfrozen.gameserver.skills.Env: com.l2jfrozen.gameserver.model.L2Character player
com.l2jfrozen.gameserver.skills.Env: com.l2jfrozen.gameserver.model.L2Character target
com.l2jfrozen.gameserver.skills.Env: com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance item
com.l2jfrozen.gameserver.skills.Env: com.l2jfrozen.gameserver.model.L2Skill skill
com.l2jfrozen.gameserver.skills.Env: double value
com.l2jfrozen.gameserver.skills.Env: double baseValue
com.l2jfrozen.gameserver.skills.Env: boolean skillMastery
com.l2jfrozen.gameserver.skills.Env: com.l2jfrozen.gameserver.model.L2Character character
com.l2jfrozen.gameserver.skills.Env: com.l2jfrozen.gameserver.model.L2Character _target
com.l2jfrozen.gameserver.skills.Env: Env()
com.l2jfrozen.gameserver.skills.Env: com.l2jfrozen.gameserver.model.L2Character getCharacter()
com.l2jfrozen.gameserver.skills.Env: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance getPlayer()
com.l2jfrozen.gameserver.skills.Env: com.l2jfrozen.gameserver.model.L2Character getTarget()
com.l2jfrozen.gameserver.skills.Formulas
com.l2jfrozen.gameserver.skills.Formulas: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.skills.Formulas: int HP_REGENERATE_PERIOD
com.l2jfrozen.gameserver.skills.Formulas: com.l2jfrozen.gameserver.skills.Formulas _instance
com.l2jfrozen.gameserver.skills.Formulas: com.l2jfrozen.gameserver.skills.Formulas getInstance()
com.l2jfrozen.gameserver.skills.Formulas: Formulas()
com.l2jfrozen.gameserver.skills.Formulas: int getRegeneratePeriod(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.skills.Formulas: com.l2jfrozen.gameserver.skills.Calculator[] getStdNPCCalculators()
com.l2jfrozen.gameserver.skills.Formulas: void addFuncsToNewCharacter(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.skills.Formulas: double calcHpRegen(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.skills.Formulas: double calcMpRegen(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.skills.Formulas: double calcCpRegen(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.skills.Formulas: double calcFestivalRegenModifier(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.skills.Formulas: double calcSiegeRegenModifer(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance)
com.l2jfrozen.gameserver.skills.Formulas: double calcBlowDamage(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,boolean,boolean,boolean)
com.l2jfrozen.gameserver.skills.Formulas: double calcPhysDam(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,boolean,boolean,boolean,boolean)
com.l2jfrozen.gameserver.skills.Formulas: double calcMagicDam(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,boolean,boolean,boolean)
com.l2jfrozen.gameserver.skills.Formulas: double calcMagicDam(com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance,com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,boolean)
com.l2jfrozen.gameserver.skills.Formulas: boolean calcCrit(double)
com.l2jfrozen.gameserver.skills.Formulas: boolean calcBlow(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Character,int)
com.l2jfrozen.gameserver.skills.Formulas: double calcLethal(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Character,int)
com.l2jfrozen.gameserver.skills.Formulas: boolean calcLethalHit(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.skills.Formulas: boolean calcMCrit(double)
com.l2jfrozen.gameserver.skills.Formulas: boolean calcAtkBreak(com.l2jfrozen.gameserver.model.L2Character,double)
com.l2jfrozen.gameserver.skills.Formulas: int calcPAtkSpd(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Character,double)
com.l2jfrozen.gameserver.skills.Formulas: int calcMAtkSpd(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,double)
com.l2jfrozen.gameserver.skills.Formulas: int calcMAtkSpd(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,double)
com.l2jfrozen.gameserver.skills.Formulas: boolean calcHitMiss(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.skills.Formulas: boolean calcShldUse(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.skills.Formulas: boolean calcMagicAffected(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.skills.Formulas: double calcSkillVulnerability(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.skills.Formulas: double calcSkillStatModifier(com.l2jfrozen.gameserver.model.L2Skill,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.skills.Formulas: boolean calcCubicSkillSuccess(com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance,com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.skills.Formulas: boolean calcSkillSuccess(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,boolean,boolean,boolean)
com.l2jfrozen.gameserver.skills.Formulas: boolean calcEffectSuccess(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.skills.effects.EffectTemplate,com.l2jfrozen.gameserver.model.L2Skill,boolean,boolean,boolean)
com.l2jfrozen.gameserver.skills.Formulas: double calcSkillTypeVulnerability(double,com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.SkillType)
com.l2jfrozen.gameserver.skills.Formulas: int calcLvlDependModifier(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.skills.Formulas: float getChanceMultiplier(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.skills.Formulas: boolean calcBuffSuccess(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.skills.Formulas: boolean calcMagicSuccess(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.skills.Formulas: boolean calculateUnlockChance(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.skills.Formulas: double calcManaDam(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,boolean,boolean)
com.l2jfrozen.gameserver.skills.Formulas: double calculateSkillResurrectRestorePercent(double,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.skills.Formulas: boolean calcPhysicalSkillEvasion(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.skills.Formulas: boolean calcSkillMastery(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.skills.Formulas: double calcFallDam(com.l2jfrozen.gameserver.model.L2Character,int)
com.l2jfrozen.gameserver.skills.Formulas: double calcChargeSkillsDam(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill,boolean,boolean,boolean,int)
com.l2jfrozen.gameserver.skills.Formulas: void <clinit>()
com.l2jfrozen.gameserver.skills.Formulas$1
com.l2jfrozen.gameserver.skills.Formulas$1: int[] $SwitchMap$com$l2jfrozen$gameserver$templates$L2WeaponType
com.l2jfrozen.gameserver.skills.Formulas$1: int[] $SwitchMap$com$l2jfrozen$gameserver$templates$Race
com.l2jfrozen.gameserver.skills.Formulas$1: int[] $SwitchMap$com$l2jfrozen$gameserver$skills$Stats
com.l2jfrozen.gameserver.skills.Formulas$1: int[] $SwitchMap$com$l2jfrozen$gameserver$model$SkillType
com.l2jfrozen.gameserver.skills.Formulas$1: void <clinit>()
com.l2jfrozen.gameserver.skills.Formulas$FuncAddLevel3
com.l2jfrozen.gameserver.skills.Formulas$FuncAddLevel3: com.l2jfrozen.gameserver.skills.Formulas$FuncAddLevel3[] _instancies
com.l2jfrozen.gameserver.skills.Formulas$FuncAddLevel3: com.l2jfrozen.gameserver.skills.funcs.Func getInstance(com.l2jfrozen.gameserver.skills.Stats)
com.l2jfrozen.gameserver.skills.Formulas$FuncAddLevel3: Formulas$FuncAddLevel3(com.l2jfrozen.gameserver.skills.Stats)
com.l2jfrozen.gameserver.skills.Formulas$FuncAddLevel3: void calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.Formulas$FuncAddLevel3: void <clinit>()
com.l2jfrozen.gameserver.skills.Formulas$FuncAtkAccuracy
com.l2jfrozen.gameserver.skills.Formulas$FuncAtkAccuracy: com.l2jfrozen.gameserver.skills.Formulas$FuncAtkAccuracy _faa_instance
com.l2jfrozen.gameserver.skills.Formulas$FuncAtkAccuracy: com.l2jfrozen.gameserver.skills.funcs.Func getInstance()
com.l2jfrozen.gameserver.skills.Formulas$FuncAtkAccuracy: Formulas$FuncAtkAccuracy()
com.l2jfrozen.gameserver.skills.Formulas$FuncAtkAccuracy: void calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.Formulas$FuncAtkAccuracy: void <clinit>()
com.l2jfrozen.gameserver.skills.Formulas$FuncAtkCritical
com.l2jfrozen.gameserver.skills.Formulas$FuncAtkCritical: com.l2jfrozen.gameserver.skills.Formulas$FuncAtkCritical _fac_instance
com.l2jfrozen.gameserver.skills.Formulas$FuncAtkCritical: com.l2jfrozen.gameserver.skills.funcs.Func getInstance()
com.l2jfrozen.gameserver.skills.Formulas$FuncAtkCritical: Formulas$FuncAtkCritical()
com.l2jfrozen.gameserver.skills.Formulas$FuncAtkCritical: void calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.Formulas$FuncAtkCritical: void <clinit>()
com.l2jfrozen.gameserver.skills.Formulas$FuncAtkEvasion
com.l2jfrozen.gameserver.skills.Formulas$FuncAtkEvasion: com.l2jfrozen.gameserver.skills.Formulas$FuncAtkEvasion _fae_instance
com.l2jfrozen.gameserver.skills.Formulas$FuncAtkEvasion: com.l2jfrozen.gameserver.skills.funcs.Func getInstance()
com.l2jfrozen.gameserver.skills.Formulas$FuncAtkEvasion: Formulas$FuncAtkEvasion()
com.l2jfrozen.gameserver.skills.Formulas$FuncAtkEvasion: void calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.Formulas$FuncAtkEvasion: void <clinit>()
com.l2jfrozen.gameserver.skills.Formulas$FuncBowAtkRange
com.l2jfrozen.gameserver.skills.Formulas$FuncBowAtkRange: com.l2jfrozen.gameserver.skills.Formulas$FuncBowAtkRange _fbar_instance
com.l2jfrozen.gameserver.skills.Formulas$FuncBowAtkRange: com.l2jfrozen.gameserver.skills.funcs.Func getInstance()
com.l2jfrozen.gameserver.skills.Formulas$FuncBowAtkRange: Formulas$FuncBowAtkRange()
com.l2jfrozen.gameserver.skills.Formulas$FuncBowAtkRange: void calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.Formulas$FuncBowAtkRange: void <clinit>()
com.l2jfrozen.gameserver.skills.Formulas$FuncHennaCON
com.l2jfrozen.gameserver.skills.Formulas$FuncHennaCON: com.l2jfrozen.gameserver.skills.Formulas$FuncHennaCON _fh_instance
com.l2jfrozen.gameserver.skills.Formulas$FuncHennaCON: com.l2jfrozen.gameserver.skills.funcs.Func getInstance()
com.l2jfrozen.gameserver.skills.Formulas$FuncHennaCON: Formulas$FuncHennaCON()
com.l2jfrozen.gameserver.skills.Formulas$FuncHennaCON: void calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.Formulas$FuncHennaCON: void <clinit>()
com.l2jfrozen.gameserver.skills.Formulas$FuncHennaDEX
com.l2jfrozen.gameserver.skills.Formulas$FuncHennaDEX: com.l2jfrozen.gameserver.skills.Formulas$FuncHennaDEX _fh_instance
com.l2jfrozen.gameserver.skills.Formulas$FuncHennaDEX: com.l2jfrozen.gameserver.skills.funcs.Func getInstance()
com.l2jfrozen.gameserver.skills.Formulas$FuncHennaDEX: Formulas$FuncHennaDEX()
com.l2jfrozen.gameserver.skills.Formulas$FuncHennaDEX: void calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.Formulas$FuncHennaDEX: void <clinit>()
com.l2jfrozen.gameserver.skills.Formulas$FuncHennaINT
com.l2jfrozen.gameserver.skills.Formulas$FuncHennaINT: com.l2jfrozen.gameserver.skills.Formulas$FuncHennaINT _fh_instance
com.l2jfrozen.gameserver.skills.Formulas$FuncHennaINT: com.l2jfrozen.gameserver.skills.funcs.Func getInstance()
com.l2jfrozen.gameserver.skills.Formulas$FuncHennaINT: Formulas$FuncHennaINT()
com.l2jfrozen.gameserver.skills.Formulas$FuncHennaINT: void calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.Formulas$FuncHennaINT: void <clinit>()
com.l2jfrozen.gameserver.skills.Formulas$FuncHennaMEN
com.l2jfrozen.gameserver.skills.Formulas$FuncHennaMEN: com.l2jfrozen.gameserver.skills.Formulas$FuncHennaMEN _fh_instance
com.l2jfrozen.gameserver.skills.Formulas$FuncHennaMEN: com.l2jfrozen.gameserver.skills.funcs.Func getInstance()
com.l2jfrozen.gameserver.skills.Formulas$FuncHennaMEN: Formulas$FuncHennaMEN()
com.l2jfrozen.gameserver.skills.Formulas$FuncHennaMEN: void calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.Formulas$FuncHennaMEN: void <clinit>()
com.l2jfrozen.gameserver.skills.Formulas$FuncHennaSTR
com.l2jfrozen.gameserver.skills.Formulas$FuncHennaSTR: com.l2jfrozen.gameserver.skills.Formulas$FuncHennaSTR _fh_instance
com.l2jfrozen.gameserver.skills.Formulas$FuncHennaSTR: com.l2jfrozen.gameserver.skills.funcs.Func getInstance()
com.l2jfrozen.gameserver.skills.Formulas$FuncHennaSTR: Formulas$FuncHennaSTR()
com.l2jfrozen.gameserver.skills.Formulas$FuncHennaSTR: void calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.Formulas$FuncHennaSTR: void <clinit>()
com.l2jfrozen.gameserver.skills.Formulas$FuncHennaWIT
com.l2jfrozen.gameserver.skills.Formulas$FuncHennaWIT: com.l2jfrozen.gameserver.skills.Formulas$FuncHennaWIT _fh_instance
com.l2jfrozen.gameserver.skills.Formulas$FuncHennaWIT: com.l2jfrozen.gameserver.skills.funcs.Func getInstance()
com.l2jfrozen.gameserver.skills.Formulas$FuncHennaWIT: Formulas$FuncHennaWIT()
com.l2jfrozen.gameserver.skills.Formulas$FuncHennaWIT: void calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.Formulas$FuncHennaWIT: void <clinit>()
com.l2jfrozen.gameserver.skills.Formulas$FuncMAtkCritical
com.l2jfrozen.gameserver.skills.Formulas$FuncMAtkCritical: com.l2jfrozen.gameserver.skills.Formulas$FuncMAtkCritical _fac_instance
com.l2jfrozen.gameserver.skills.Formulas$FuncMAtkCritical: com.l2jfrozen.gameserver.skills.funcs.Func getInstance()
com.l2jfrozen.gameserver.skills.Formulas$FuncMAtkCritical: Formulas$FuncMAtkCritical()
com.l2jfrozen.gameserver.skills.Formulas$FuncMAtkCritical: void calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.Formulas$FuncMAtkCritical: void <clinit>()
com.l2jfrozen.gameserver.skills.Formulas$FuncMAtkMod
com.l2jfrozen.gameserver.skills.Formulas$FuncMAtkMod: com.l2jfrozen.gameserver.skills.Formulas$FuncMAtkMod _fma_instance
com.l2jfrozen.gameserver.skills.Formulas$FuncMAtkMod: com.l2jfrozen.gameserver.skills.funcs.Func getInstance()
com.l2jfrozen.gameserver.skills.Formulas$FuncMAtkMod: Formulas$FuncMAtkMod()
com.l2jfrozen.gameserver.skills.Formulas$FuncMAtkMod: void calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.Formulas$FuncMAtkMod: void <clinit>()
com.l2jfrozen.gameserver.skills.Formulas$FuncMAtkSpeed
com.l2jfrozen.gameserver.skills.Formulas$FuncMAtkSpeed: com.l2jfrozen.gameserver.skills.Formulas$FuncMAtkSpeed _fas_instance
com.l2jfrozen.gameserver.skills.Formulas$FuncMAtkSpeed: com.l2jfrozen.gameserver.skills.funcs.Func getInstance()
com.l2jfrozen.gameserver.skills.Formulas$FuncMAtkSpeed: Formulas$FuncMAtkSpeed()
com.l2jfrozen.gameserver.skills.Formulas$FuncMAtkSpeed: void calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.Formulas$FuncMAtkSpeed: void <clinit>()
com.l2jfrozen.gameserver.skills.Formulas$FuncMDefMod
com.l2jfrozen.gameserver.skills.Formulas$FuncMDefMod: com.l2jfrozen.gameserver.skills.Formulas$FuncMDefMod _fmm_instance
com.l2jfrozen.gameserver.skills.Formulas$FuncMDefMod: com.l2jfrozen.gameserver.skills.funcs.Func getInstance()
com.l2jfrozen.gameserver.skills.Formulas$FuncMDefMod: Formulas$FuncMDefMod()
com.l2jfrozen.gameserver.skills.Formulas$FuncMDefMod: void calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.Formulas$FuncMDefMod: void <clinit>()
com.l2jfrozen.gameserver.skills.Formulas$FuncMaxCpAdd
com.l2jfrozen.gameserver.skills.Formulas$FuncMaxCpAdd: com.l2jfrozen.gameserver.skills.Formulas$FuncMaxCpAdd _fmca_instance
com.l2jfrozen.gameserver.skills.Formulas$FuncMaxCpAdd: com.l2jfrozen.gameserver.skills.funcs.Func getInstance()
com.l2jfrozen.gameserver.skills.Formulas$FuncMaxCpAdd: Formulas$FuncMaxCpAdd()
com.l2jfrozen.gameserver.skills.Formulas$FuncMaxCpAdd: void calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.Formulas$FuncMaxCpAdd: void <clinit>()
com.l2jfrozen.gameserver.skills.Formulas$FuncMaxCpMul
com.l2jfrozen.gameserver.skills.Formulas$FuncMaxCpMul: com.l2jfrozen.gameserver.skills.Formulas$FuncMaxCpMul _fmcm_instance
com.l2jfrozen.gameserver.skills.Formulas$FuncMaxCpMul: com.l2jfrozen.gameserver.skills.funcs.Func getInstance()
com.l2jfrozen.gameserver.skills.Formulas$FuncMaxCpMul: Formulas$FuncMaxCpMul()
com.l2jfrozen.gameserver.skills.Formulas$FuncMaxCpMul: void calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.Formulas$FuncMaxCpMul: void <clinit>()
com.l2jfrozen.gameserver.skills.Formulas$FuncMaxHpAdd
com.l2jfrozen.gameserver.skills.Formulas$FuncMaxHpAdd: com.l2jfrozen.gameserver.skills.Formulas$FuncMaxHpAdd _fmha_instance
com.l2jfrozen.gameserver.skills.Formulas$FuncMaxHpAdd: com.l2jfrozen.gameserver.skills.funcs.Func getInstance()
com.l2jfrozen.gameserver.skills.Formulas$FuncMaxHpAdd: Formulas$FuncMaxHpAdd()
com.l2jfrozen.gameserver.skills.Formulas$FuncMaxHpAdd: void calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.Formulas$FuncMaxHpAdd: void <clinit>()
com.l2jfrozen.gameserver.skills.Formulas$FuncMaxHpMul
com.l2jfrozen.gameserver.skills.Formulas$FuncMaxHpMul: com.l2jfrozen.gameserver.skills.Formulas$FuncMaxHpMul _fmhm_instance
com.l2jfrozen.gameserver.skills.Formulas$FuncMaxHpMul: com.l2jfrozen.gameserver.skills.funcs.Func getInstance()
com.l2jfrozen.gameserver.skills.Formulas$FuncMaxHpMul: Formulas$FuncMaxHpMul()
com.l2jfrozen.gameserver.skills.Formulas$FuncMaxHpMul: void calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.Formulas$FuncMaxHpMul: void <clinit>()
com.l2jfrozen.gameserver.skills.Formulas$FuncMaxMpAdd
com.l2jfrozen.gameserver.skills.Formulas$FuncMaxMpAdd: com.l2jfrozen.gameserver.skills.Formulas$FuncMaxMpAdd _fmma_instance
com.l2jfrozen.gameserver.skills.Formulas$FuncMaxMpAdd: com.l2jfrozen.gameserver.skills.funcs.Func getInstance()
com.l2jfrozen.gameserver.skills.Formulas$FuncMaxMpAdd: Formulas$FuncMaxMpAdd()
com.l2jfrozen.gameserver.skills.Formulas$FuncMaxMpAdd: void calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.Formulas$FuncMaxMpAdd: void <clinit>()
com.l2jfrozen.gameserver.skills.Formulas$FuncMaxMpMul
com.l2jfrozen.gameserver.skills.Formulas$FuncMaxMpMul: com.l2jfrozen.gameserver.skills.Formulas$FuncMaxMpMul _fmmm_instance
com.l2jfrozen.gameserver.skills.Formulas$FuncMaxMpMul: com.l2jfrozen.gameserver.skills.funcs.Func getInstance()
com.l2jfrozen.gameserver.skills.Formulas$FuncMaxMpMul: Formulas$FuncMaxMpMul()
com.l2jfrozen.gameserver.skills.Formulas$FuncMaxMpMul: void calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.Formulas$FuncMaxMpMul: void <clinit>()
com.l2jfrozen.gameserver.skills.Formulas$FuncMoveSpeed
com.l2jfrozen.gameserver.skills.Formulas$FuncMoveSpeed: com.l2jfrozen.gameserver.skills.Formulas$FuncMoveSpeed _fms_instance
com.l2jfrozen.gameserver.skills.Formulas$FuncMoveSpeed: com.l2jfrozen.gameserver.skills.funcs.Func getInstance()
com.l2jfrozen.gameserver.skills.Formulas$FuncMoveSpeed: Formulas$FuncMoveSpeed()
com.l2jfrozen.gameserver.skills.Formulas$FuncMoveSpeed: void calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.Formulas$FuncMoveSpeed: void <clinit>()
com.l2jfrozen.gameserver.skills.Formulas$FuncMultLevelMod
com.l2jfrozen.gameserver.skills.Formulas$FuncMultLevelMod: com.l2jfrozen.gameserver.skills.Formulas$FuncMultLevelMod[] _instancies
com.l2jfrozen.gameserver.skills.Formulas$FuncMultLevelMod: com.l2jfrozen.gameserver.skills.funcs.Func getInstance(com.l2jfrozen.gameserver.skills.Stats)
com.l2jfrozen.gameserver.skills.Formulas$FuncMultLevelMod: Formulas$FuncMultLevelMod(com.l2jfrozen.gameserver.skills.Stats)
com.l2jfrozen.gameserver.skills.Formulas$FuncMultLevelMod: void calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.Formulas$FuncMultLevelMod: void <clinit>()
com.l2jfrozen.gameserver.skills.Formulas$FuncMultRegenResting
com.l2jfrozen.gameserver.skills.Formulas$FuncMultRegenResting: com.l2jfrozen.gameserver.skills.Formulas$FuncMultRegenResting[] _instancies
com.l2jfrozen.gameserver.skills.Formulas$FuncMultRegenResting: com.l2jfrozen.gameserver.skills.funcs.Func getInstance(com.l2jfrozen.gameserver.skills.Stats)
com.l2jfrozen.gameserver.skills.Formulas$FuncMultRegenResting: Formulas$FuncMultRegenResting(com.l2jfrozen.gameserver.skills.Stats)
com.l2jfrozen.gameserver.skills.Formulas$FuncMultRegenResting: void calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.Formulas$FuncMultRegenResting: void <clinit>()
com.l2jfrozen.gameserver.skills.Formulas$FuncPAtkMod
com.l2jfrozen.gameserver.skills.Formulas$FuncPAtkMod: com.l2jfrozen.gameserver.skills.Formulas$FuncPAtkMod _fpa_instance
com.l2jfrozen.gameserver.skills.Formulas$FuncPAtkMod: com.l2jfrozen.gameserver.skills.funcs.Func getInstance()
com.l2jfrozen.gameserver.skills.Formulas$FuncPAtkMod: Formulas$FuncPAtkMod()
com.l2jfrozen.gameserver.skills.Formulas$FuncPAtkMod: void calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.Formulas$FuncPAtkMod: void <clinit>()
com.l2jfrozen.gameserver.skills.Formulas$FuncPAtkSpeed
com.l2jfrozen.gameserver.skills.Formulas$FuncPAtkSpeed: com.l2jfrozen.gameserver.skills.Formulas$FuncPAtkSpeed _fas_instance
com.l2jfrozen.gameserver.skills.Formulas$FuncPAtkSpeed: com.l2jfrozen.gameserver.skills.funcs.Func getInstance()
com.l2jfrozen.gameserver.skills.Formulas$FuncPAtkSpeed: Formulas$FuncPAtkSpeed()
com.l2jfrozen.gameserver.skills.Formulas$FuncPAtkSpeed: void calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.Formulas$FuncPAtkSpeed: void <clinit>()
com.l2jfrozen.gameserver.skills.Formulas$FuncPDefMod
com.l2jfrozen.gameserver.skills.Formulas$FuncPDefMod: com.l2jfrozen.gameserver.skills.Formulas$FuncPDefMod _fmm_instance
com.l2jfrozen.gameserver.skills.Formulas$FuncPDefMod: com.l2jfrozen.gameserver.skills.funcs.Func getInstance()
com.l2jfrozen.gameserver.skills.Formulas$FuncPDefMod: Formulas$FuncPDefMod()
com.l2jfrozen.gameserver.skills.Formulas$FuncPDefMod: void calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.Formulas$FuncPDefMod: void <clinit>()
com.l2jfrozen.gameserver.skills.SkillHolder
com.l2jfrozen.gameserver.skills.SkillHolder: int _skillId
com.l2jfrozen.gameserver.skills.SkillHolder: int _skillLvl
com.l2jfrozen.gameserver.skills.SkillHolder: SkillHolder(int,int)
com.l2jfrozen.gameserver.skills.SkillHolder: SkillHolder(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.skills.SkillHolder: int getSkillId()
com.l2jfrozen.gameserver.skills.SkillHolder: int getSkillLvl()
com.l2jfrozen.gameserver.skills.SkillHolder: com.l2jfrozen.gameserver.model.L2Skill getSkill()
com.l2jfrozen.gameserver.skills.SkillsEngine
com.l2jfrozen.gameserver.skills.SkillsEngine: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.skills.SkillsEngine: com.l2jfrozen.gameserver.skills.SkillsEngine _instance
com.l2jfrozen.gameserver.skills.SkillsEngine: java.util.List _armorFiles
com.l2jfrozen.gameserver.skills.SkillsEngine: java.util.List _weaponFiles
com.l2jfrozen.gameserver.skills.SkillsEngine: java.util.List _etcitemFiles
com.l2jfrozen.gameserver.skills.SkillsEngine: java.util.List _skillFiles
com.l2jfrozen.gameserver.skills.SkillsEngine: com.l2jfrozen.gameserver.skills.SkillsEngine getInstance()
com.l2jfrozen.gameserver.skills.SkillsEngine: SkillsEngine()
com.l2jfrozen.gameserver.skills.SkillsEngine: void hashFiles(java.lang.String,java.util.List)
com.l2jfrozen.gameserver.skills.SkillsEngine: java.util.List loadSkills(java.io.File)
com.l2jfrozen.gameserver.skills.SkillsEngine: void loadAllSkills(java.util.HashMap)
com.l2jfrozen.gameserver.skills.SkillsEngine: java.util.List loadArmors(java.util.Map)
com.l2jfrozen.gameserver.skills.SkillsEngine: java.util.List loadWeapons(java.util.Map)
com.l2jfrozen.gameserver.skills.SkillsEngine: java.util.List loadItems(java.util.Map)
com.l2jfrozen.gameserver.skills.SkillsEngine: java.util.List loadData(java.util.Map,java.util.List)
com.l2jfrozen.gameserver.skills.SkillsEngine: void <clinit>()
com.l2jfrozen.gameserver.skills.Stats
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats MAX_HP
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats MAX_MP
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats MAX_CP
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats REGENERATE_HP_RATE
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats REGENERATE_CP_RATE
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats REGENERATE_MP_RATE
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats RECHARGE_MP_RATE
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats HEAL_EFFECTIVNESS
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats POWER_DEFENCE
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats MAGIC_DEFENCE
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats POWER_ATTACK
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats MAGIC_ATTACK
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats POWER_ATTACK_SPEED
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats MAGIC_ATTACK_SPEED
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats MAGIC_REUSE_RATE
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats SHIELD_DEFENCE
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats CRITICAL_DAMAGE
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats CRITICAL_DAMAGE_ADD
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats PVP_PHYSICAL_DMG
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats PVP_MAGICAL_DMG
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats PVP_PHYS_SKILL_DMG
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats EVASION_RATE
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats P_SKILL_EVASION
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats SHIELD_RATE
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats SHIELD_ANGLE
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats CRITICAL_RATE
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats BLOW_RATE
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats LETHAL_RATE
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats MCRITICAL_RATE
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats EXPSP_RATE
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats ATTACK_CANCEL
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats ACCURACY_COMBAT
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats POWER_ATTACK_RANGE
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats MAGIC_ATTACK_RANGE
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats POWER_ATTACK_ANGLE
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats ATTACK_COUNT_MAX
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats RUN_SPEED
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats WALK_SPEED
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats STAT_STR
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats STAT_CON
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats STAT_DEX
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats STAT_INT
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats STAT_WIT
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats STAT_MEN
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats BREATH
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats FALL
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats AGGRESSION
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats BLEED
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats POISON
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats STUN
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats ROOT
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats MOVEMENT
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats CONFUSION
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats SLEEP
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats FIRE
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats WIND
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats WATER
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats EARTH
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats HOLY
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats DARK
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats AGGRESSION_VULN
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats BLEED_VULN
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats POISON_VULN
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats STUN_VULN
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats PARALYZE_VULN
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats ROOT_VULN
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats SLEEP_VULN
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats CONFUSION_VULN
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats MOVEMENT_VULN
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats FIRE_VULN
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats WIND_VULN
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats WATER_VULN
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats EARTH_VULN
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats HOLY_VULN
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats DARK_VULN
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats CANCEL_VULN
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats DERANGEMENT_VULN
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats DEBUFF_VULN
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats BUFF_VULN
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats FALL_VULN
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats CAST_INTERRUPT
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats CRIT_VULN
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats DEBUFF_IMMUNITY
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats NONE_WPN_VULN
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats SWORD_WPN_VULN
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats BLUNT_WPN_VULN
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats DAGGER_WPN_VULN
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats BOW_WPN_VULN
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats POLE_WPN_VULN
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats ETC_WPN_VULN
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats FIST_WPN_VULN
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats DUAL_WPN_VULN
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats DUALFIST_WPN_VULN
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats POLE_TARGERT_COUNT
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats BIGSWORD_WPN_VULN
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats BIGBLUNT_WPN_VULN
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats REFLECT_DAMAGE_PERCENT
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats REFLECT_SKILL_MAGIC
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats REFLECT_SKILL_PHYSIC
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats VENGEANCE_SKILL_PHYSICAL_DAMAGE
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats ABSORB_DAMAGE_PERCENT
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats TRANSFER_DAMAGE_PERCENT
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats MAX_LOAD
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats WEIGHT_PENALTY
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats PATK_PLANTS
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats PATK_INSECTS
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats PATK_ANIMALS
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats PATK_MONSTERS
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats PATK_DRAGONS
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats PATK_UNDEAD
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats PATK_ANGELS
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats PATK_GIANTS
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats PATK_MCREATURES
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats PDEF_GIANTS
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats PDEF_MCREATURES
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats PDEF_UNDEAD
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats PDEF_PLANTS
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats PDEF_INSECTS
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats PDEF_ANIMALS
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats PDEF_MONSTERS
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats PDEF_DRAGONS
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats PDEF_ANGELS
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats ATK_REUSE
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats P_REUSE
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats INV_LIM
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats WH_LIM
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats FREIGHT_LIM
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats P_SELL_LIM
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats P_BUY_LIM
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats REC_D_LIM
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats REC_C_LIM
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats PHYSICAL_MP_CONSUME_RATE
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats MAGICAL_MP_CONSUME_RATE
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats DANCE_MP_CONSUME_RATE
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats HP_CONSUME_RATE
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats MP_CONSUME
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats SOULSHOT_COUNT
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats SKILL_MASTERY
com.l2jfrozen.gameserver.skills.Stats: int NUM_STATS
com.l2jfrozen.gameserver.skills.Stats: java.lang.String _value
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats[] $VALUES
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats[] values()
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats valueOf(java.lang.String)
com.l2jfrozen.gameserver.skills.Stats: java.lang.String getValue()
com.l2jfrozen.gameserver.skills.Stats: Stats(java.lang.String,int,java.lang.String)
com.l2jfrozen.gameserver.skills.Stats: com.l2jfrozen.gameserver.skills.Stats valueOfXml(java.lang.String)
com.l2jfrozen.gameserver.skills.Stats: void <clinit>()
com.l2jfrozen.gameserver.skills.conditions.BaseStat
com.l2jfrozen.gameserver.skills.conditions.BaseStat: com.l2jfrozen.gameserver.skills.conditions.BaseStat Int
com.l2jfrozen.gameserver.skills.conditions.BaseStat: com.l2jfrozen.gameserver.skills.conditions.BaseStat Str
com.l2jfrozen.gameserver.skills.conditions.BaseStat: com.l2jfrozen.gameserver.skills.conditions.BaseStat Con
com.l2jfrozen.gameserver.skills.conditions.BaseStat: com.l2jfrozen.gameserver.skills.conditions.BaseStat Dex
com.l2jfrozen.gameserver.skills.conditions.BaseStat: com.l2jfrozen.gameserver.skills.conditions.BaseStat Men
com.l2jfrozen.gameserver.skills.conditions.BaseStat: com.l2jfrozen.gameserver.skills.conditions.BaseStat Wit
com.l2jfrozen.gameserver.skills.conditions.BaseStat: com.l2jfrozen.gameserver.skills.conditions.BaseStat[] $VALUES
com.l2jfrozen.gameserver.skills.conditions.BaseStat: com.l2jfrozen.gameserver.skills.conditions.BaseStat[] values()
com.l2jfrozen.gameserver.skills.conditions.BaseStat: com.l2jfrozen.gameserver.skills.conditions.BaseStat valueOf(java.lang.String)
com.l2jfrozen.gameserver.skills.conditions.BaseStat: BaseStat(java.lang.String,int)
com.l2jfrozen.gameserver.skills.conditions.BaseStat: void <clinit>()
com.l2jfrozen.gameserver.skills.conditions.CheckGameTime
com.l2jfrozen.gameserver.skills.conditions.CheckGameTime: com.l2jfrozen.gameserver.skills.conditions.CheckGameTime NIGHT
com.l2jfrozen.gameserver.skills.conditions.CheckGameTime: com.l2jfrozen.gameserver.skills.conditions.CheckGameTime[] $VALUES
com.l2jfrozen.gameserver.skills.conditions.CheckGameTime: com.l2jfrozen.gameserver.skills.conditions.CheckGameTime[] values()
com.l2jfrozen.gameserver.skills.conditions.CheckGameTime: com.l2jfrozen.gameserver.skills.conditions.CheckGameTime valueOf(java.lang.String)
com.l2jfrozen.gameserver.skills.conditions.CheckGameTime: CheckGameTime(java.lang.String,int)
com.l2jfrozen.gameserver.skills.conditions.CheckGameTime: void <clinit>()
com.l2jfrozen.gameserver.skills.conditions.CheckPlayerState
com.l2jfrozen.gameserver.skills.conditions.CheckPlayerState: com.l2jfrozen.gameserver.skills.conditions.CheckPlayerState RESTING
com.l2jfrozen.gameserver.skills.conditions.CheckPlayerState: com.l2jfrozen.gameserver.skills.conditions.CheckPlayerState MOVING
com.l2jfrozen.gameserver.skills.conditions.CheckPlayerState: com.l2jfrozen.gameserver.skills.conditions.CheckPlayerState RUNNING
com.l2jfrozen.gameserver.skills.conditions.CheckPlayerState: com.l2jfrozen.gameserver.skills.conditions.CheckPlayerState FLYING
com.l2jfrozen.gameserver.skills.conditions.CheckPlayerState: com.l2jfrozen.gameserver.skills.conditions.CheckPlayerState BEHIND
com.l2jfrozen.gameserver.skills.conditions.CheckPlayerState: com.l2jfrozen.gameserver.skills.conditions.CheckPlayerState FRONT
com.l2jfrozen.gameserver.skills.conditions.CheckPlayerState: com.l2jfrozen.gameserver.skills.conditions.CheckPlayerState SIDE
com.l2jfrozen.gameserver.skills.conditions.CheckPlayerState: com.l2jfrozen.gameserver.skills.conditions.CheckPlayerState[] $VALUES
com.l2jfrozen.gameserver.skills.conditions.CheckPlayerState: com.l2jfrozen.gameserver.skills.conditions.CheckPlayerState[] values()
com.l2jfrozen.gameserver.skills.conditions.CheckPlayerState: com.l2jfrozen.gameserver.skills.conditions.CheckPlayerState valueOf(java.lang.String)
com.l2jfrozen.gameserver.skills.conditions.CheckPlayerState: CheckPlayerState(java.lang.String,int)
com.l2jfrozen.gameserver.skills.conditions.CheckPlayerState: void <clinit>()
com.l2jfrozen.gameserver.skills.conditions.Condition
com.l2jfrozen.gameserver.skills.conditions.Condition: com.l2jfrozen.gameserver.skills.conditions.ConditionListener _listener
com.l2jfrozen.gameserver.skills.conditions.Condition: java.lang.String _msg
com.l2jfrozen.gameserver.skills.conditions.Condition: boolean _result
com.l2jfrozen.gameserver.skills.conditions.Condition: Condition()
com.l2jfrozen.gameserver.skills.conditions.Condition: void setMessage(java.lang.String)
com.l2jfrozen.gameserver.skills.conditions.Condition: java.lang.String getMessage()
com.l2jfrozen.gameserver.skills.conditions.Condition: void setListener(com.l2jfrozen.gameserver.skills.conditions.ConditionListener)
com.l2jfrozen.gameserver.skills.conditions.Condition: com.l2jfrozen.gameserver.skills.conditions.ConditionListener getListener()
com.l2jfrozen.gameserver.skills.conditions.Condition: boolean test(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.conditions.Condition: boolean testImpl(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.conditions.Condition: void notifyChanged()
com.l2jfrozen.gameserver.skills.conditions.ConditionElementSeed
com.l2jfrozen.gameserver.skills.conditions.ConditionElementSeed: int[] seedSkills
com.l2jfrozen.gameserver.skills.conditions.ConditionElementSeed: int[] _requiredSeeds
com.l2jfrozen.gameserver.skills.conditions.ConditionElementSeed: ConditionElementSeed(int[])
com.l2jfrozen.gameserver.skills.conditions.ConditionElementSeed: ConditionElementSeed(int,int,int,int,int)
com.l2jfrozen.gameserver.skills.conditions.ConditionElementSeed: boolean testImpl(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.conditions.ConditionElementSeed: void <clinit>()
com.l2jfrozen.gameserver.skills.conditions.ConditionForceBuff
com.l2jfrozen.gameserver.skills.conditions.ConditionForceBuff: int BATTLE_FORCE
com.l2jfrozen.gameserver.skills.conditions.ConditionForceBuff: int SPELL_FORCE
com.l2jfrozen.gameserver.skills.conditions.ConditionForceBuff: int _battleForces
com.l2jfrozen.gameserver.skills.conditions.ConditionForceBuff: int _spellForces
com.l2jfrozen.gameserver.skills.conditions.ConditionForceBuff: ConditionForceBuff(int[])
com.l2jfrozen.gameserver.skills.conditions.ConditionForceBuff: ConditionForceBuff(int,int)
com.l2jfrozen.gameserver.skills.conditions.ConditionForceBuff: boolean testImpl(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.conditions.ConditionForceBuff: void <clinit>()
com.l2jfrozen.gameserver.skills.conditions.ConditionGameChance
com.l2jfrozen.gameserver.skills.conditions.ConditionGameChance: int _chance
com.l2jfrozen.gameserver.skills.conditions.ConditionGameChance: ConditionGameChance(int)
com.l2jfrozen.gameserver.skills.conditions.ConditionGameChance: boolean testImpl(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.conditions.ConditionGameTime
com.l2jfrozen.gameserver.skills.conditions.ConditionGameTime: com.l2jfrozen.gameserver.skills.conditions.CheckGameTime _check
com.l2jfrozen.gameserver.skills.conditions.ConditionGameTime: boolean _required
com.l2jfrozen.gameserver.skills.conditions.ConditionGameTime: ConditionGameTime(com.l2jfrozen.gameserver.skills.conditions.CheckGameTime,boolean)
com.l2jfrozen.gameserver.skills.conditions.ConditionGameTime: boolean testImpl(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.conditions.ConditionGameTime$1
com.l2jfrozen.gameserver.skills.conditions.ConditionGameTime$1: int[] $SwitchMap$com$l2jfrozen$gameserver$skills$conditions$CheckGameTime
com.l2jfrozen.gameserver.skills.conditions.ConditionGameTime$1: void <clinit>()
com.l2jfrozen.gameserver.skills.conditions.ConditionInventory
com.l2jfrozen.gameserver.skills.conditions.ConditionInventory: int _slot
com.l2jfrozen.gameserver.skills.conditions.ConditionInventory: ConditionInventory(int)
com.l2jfrozen.gameserver.skills.conditions.ConditionInventory: boolean testImpl(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.conditions.ConditionItemId
com.l2jfrozen.gameserver.skills.conditions.ConditionItemId: int _itemId
com.l2jfrozen.gameserver.skills.conditions.ConditionItemId: ConditionItemId(int)
com.l2jfrozen.gameserver.skills.conditions.ConditionItemId: boolean testImpl(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.conditions.ConditionListener
com.l2jfrozen.gameserver.skills.conditions.ConditionListener: void notifyChanged()
com.l2jfrozen.gameserver.skills.conditions.ConditionLogicAnd
com.l2jfrozen.gameserver.skills.conditions.ConditionLogicAnd: com.l2jfrozen.gameserver.skills.conditions.Condition[] _emptyConditions
com.l2jfrozen.gameserver.skills.conditions.ConditionLogicAnd: com.l2jfrozen.gameserver.skills.conditions.Condition[] conditions
com.l2jfrozen.gameserver.skills.conditions.ConditionLogicAnd: ConditionLogicAnd()
com.l2jfrozen.gameserver.skills.conditions.ConditionLogicAnd: void add(com.l2jfrozen.gameserver.skills.conditions.Condition)
com.l2jfrozen.gameserver.skills.conditions.ConditionLogicAnd: void setListener(com.l2jfrozen.gameserver.skills.conditions.ConditionListener)
com.l2jfrozen.gameserver.skills.conditions.ConditionLogicAnd: boolean testImpl(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.conditions.ConditionLogicAnd: void <clinit>()
com.l2jfrozen.gameserver.skills.conditions.ConditionLogicNot
com.l2jfrozen.gameserver.skills.conditions.ConditionLogicNot: com.l2jfrozen.gameserver.skills.conditions.Condition _condition
com.l2jfrozen.gameserver.skills.conditions.ConditionLogicNot: ConditionLogicNot(com.l2jfrozen.gameserver.skills.conditions.Condition)
com.l2jfrozen.gameserver.skills.conditions.ConditionLogicNot: void setListener(com.l2jfrozen.gameserver.skills.conditions.ConditionListener)
com.l2jfrozen.gameserver.skills.conditions.ConditionLogicNot: boolean testImpl(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.conditions.ConditionLogicOr
com.l2jfrozen.gameserver.skills.conditions.ConditionLogicOr: com.l2jfrozen.gameserver.skills.conditions.Condition[] _emptyConditions
com.l2jfrozen.gameserver.skills.conditions.ConditionLogicOr: com.l2jfrozen.gameserver.skills.conditions.Condition[] conditions
com.l2jfrozen.gameserver.skills.conditions.ConditionLogicOr: ConditionLogicOr()
com.l2jfrozen.gameserver.skills.conditions.ConditionLogicOr: void add(com.l2jfrozen.gameserver.skills.conditions.Condition)
com.l2jfrozen.gameserver.skills.conditions.ConditionLogicOr: void setListener(com.l2jfrozen.gameserver.skills.conditions.ConditionListener)
com.l2jfrozen.gameserver.skills.conditions.ConditionLogicOr: boolean testImpl(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.conditions.ConditionLogicOr: void <clinit>()
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerBaseStats
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerBaseStats: com.l2jfrozen.gameserver.skills.conditions.BaseStat _stat
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerBaseStats: int _value
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerBaseStats: ConditionPlayerBaseStats(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.skills.conditions.BaseStat,int)
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerBaseStats: boolean testImpl(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerBaseStats$1
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerBaseStats$1: int[] $SwitchMap$com$l2jfrozen$gameserver$skills$conditions$BaseStat
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerBaseStats$1: void <clinit>()
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerClassIdRestriction
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerClassIdRestriction: java.util.ArrayList _classIds
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerClassIdRestriction: ConditionPlayerClassIdRestriction(java.util.ArrayList)
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerClassIdRestriction: boolean testImpl(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerHp
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerHp: int _hp
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerHp: ConditionPlayerHp(int)
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerHp: boolean testImpl(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerHpPercentage
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerHpPercentage: double _p
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerHpPercentage: ConditionPlayerHpPercentage(double)
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerHpPercentage: boolean testImpl(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerLevel
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerLevel: int _level
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerLevel: ConditionPlayerLevel(int)
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerLevel: boolean testImpl(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerMp
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerMp: int _mp
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerMp: ConditionPlayerMp(int)
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerMp: boolean testImpl(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerRace
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerRace: com.l2jfrozen.gameserver.model.base.Race _race
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerRace: ConditionPlayerRace(com.l2jfrozen.gameserver.model.base.Race)
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerRace: boolean testImpl(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerState
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerState: com.l2jfrozen.gameserver.skills.conditions.CheckPlayerState _check
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerState: boolean _required
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerState: ConditionPlayerState(com.l2jfrozen.gameserver.skills.conditions.CheckPlayerState,boolean)
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerState: boolean testImpl(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerState$1
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerState$1: int[] $SwitchMap$com$l2jfrozen$gameserver$skills$conditions$CheckPlayerState
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerState$1: void <clinit>()
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerWeight
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerWeight: int _weight
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerWeight: ConditionPlayerWeight(int)
com.l2jfrozen.gameserver.skills.conditions.ConditionPlayerWeight: boolean testImpl(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.conditions.ConditionSkillStats
com.l2jfrozen.gameserver.skills.conditions.ConditionSkillStats: com.l2jfrozen.gameserver.skills.Stats _stat
com.l2jfrozen.gameserver.skills.conditions.ConditionSkillStats: ConditionSkillStats(com.l2jfrozen.gameserver.skills.Stats)
com.l2jfrozen.gameserver.skills.conditions.ConditionSkillStats: boolean testImpl(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.conditions.ConditionSlotItemId
com.l2jfrozen.gameserver.skills.conditions.ConditionSlotItemId: int _itemId
com.l2jfrozen.gameserver.skills.conditions.ConditionSlotItemId: int _enchantLevel
com.l2jfrozen.gameserver.skills.conditions.ConditionSlotItemId: ConditionSlotItemId(int,int,int)
com.l2jfrozen.gameserver.skills.conditions.ConditionSlotItemId: boolean testImpl(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.conditions.ConditionSlotItemType
com.l2jfrozen.gameserver.skills.conditions.ConditionSlotItemType: int _mask
com.l2jfrozen.gameserver.skills.conditions.ConditionSlotItemType: ConditionSlotItemType(int,int)
com.l2jfrozen.gameserver.skills.conditions.ConditionSlotItemType: boolean testImpl(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.conditions.ConditionTargetAggro
com.l2jfrozen.gameserver.skills.conditions.ConditionTargetAggro: boolean _isAggro
com.l2jfrozen.gameserver.skills.conditions.ConditionTargetAggro: ConditionTargetAggro(boolean)
com.l2jfrozen.gameserver.skills.conditions.ConditionTargetAggro: boolean testImpl(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.conditions.ConditionTargetBodyPart
com.l2jfrozen.gameserver.skills.conditions.ConditionTargetBodyPart: com.l2jfrozen.gameserver.templates.L2Armor _armor
com.l2jfrozen.gameserver.skills.conditions.ConditionTargetBodyPart: ConditionTargetBodyPart(com.l2jfrozen.gameserver.templates.L2Armor)
com.l2jfrozen.gameserver.skills.conditions.ConditionTargetBodyPart: boolean testImpl(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.conditions.ConditionTargetClassIdRestriction
com.l2jfrozen.gameserver.skills.conditions.ConditionTargetClassIdRestriction: javolution.util.FastList _classIds
com.l2jfrozen.gameserver.skills.conditions.ConditionTargetClassIdRestriction: ConditionTargetClassIdRestriction(javolution.util.FastList)
com.l2jfrozen.gameserver.skills.conditions.ConditionTargetClassIdRestriction: boolean testImpl(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.conditions.ConditionTargetLevel
com.l2jfrozen.gameserver.skills.conditions.ConditionTargetLevel: int _level
com.l2jfrozen.gameserver.skills.conditions.ConditionTargetLevel: ConditionTargetLevel(int)
com.l2jfrozen.gameserver.skills.conditions.ConditionTargetLevel: boolean testImpl(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.conditions.ConditionTargetNone
com.l2jfrozen.gameserver.skills.conditions.ConditionTargetNone: ConditionTargetNone()
com.l2jfrozen.gameserver.skills.conditions.ConditionTargetNone: boolean testImpl(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.conditions.ConditionTargetPvp
com.l2jfrozen.gameserver.skills.conditions.ConditionTargetPvp: int _pvp
com.l2jfrozen.gameserver.skills.conditions.ConditionTargetPvp: ConditionTargetPvp(int)
com.l2jfrozen.gameserver.skills.conditions.ConditionTargetPvp: boolean testImpl(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.conditions.ConditionTargetRaceId
com.l2jfrozen.gameserver.skills.conditions.ConditionTargetRaceId: javolution.util.FastList _raceIds
com.l2jfrozen.gameserver.skills.conditions.ConditionTargetRaceId: ConditionTargetRaceId(javolution.util.FastList)
com.l2jfrozen.gameserver.skills.conditions.ConditionTargetRaceId: boolean testImpl(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.conditions.ConditionTargetUsesWeaponKind
com.l2jfrozen.gameserver.skills.conditions.ConditionTargetUsesWeaponKind: int _weaponMask
com.l2jfrozen.gameserver.skills.conditions.ConditionTargetUsesWeaponKind: ConditionTargetUsesWeaponKind(int)
com.l2jfrozen.gameserver.skills.conditions.ConditionTargetUsesWeaponKind: boolean testImpl(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.conditions.ConditionTargetWeight
com.l2jfrozen.gameserver.skills.conditions.ConditionTargetWeight: int _weight
com.l2jfrozen.gameserver.skills.conditions.ConditionTargetWeight: ConditionTargetWeight(int)
com.l2jfrozen.gameserver.skills.conditions.ConditionTargetWeight: boolean testImpl(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.conditions.ConditionUsingItemType
com.l2jfrozen.gameserver.skills.conditions.ConditionUsingItemType: boolean _armor
com.l2jfrozen.gameserver.skills.conditions.ConditionUsingItemType: int _mask
com.l2jfrozen.gameserver.skills.conditions.ConditionUsingItemType: ConditionUsingItemType(int)
com.l2jfrozen.gameserver.skills.conditions.ConditionUsingItemType: boolean testImpl(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.conditions.ConditionUsingSkill
com.l2jfrozen.gameserver.skills.conditions.ConditionUsingSkill: int _skillId
com.l2jfrozen.gameserver.skills.conditions.ConditionUsingSkill: ConditionUsingSkill(int)
com.l2jfrozen.gameserver.skills.conditions.ConditionUsingSkill: boolean testImpl(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.conditions.ConditionWithSkill
com.l2jfrozen.gameserver.skills.conditions.ConditionWithSkill: boolean _skill
com.l2jfrozen.gameserver.skills.conditions.ConditionWithSkill: ConditionWithSkill(boolean)
com.l2jfrozen.gameserver.skills.conditions.ConditionWithSkill: boolean testImpl(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.effects.EffectBattleForce
com.l2jfrozen.gameserver.skills.effects.EffectBattleForce: EffectBattleForce(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectBattleForce: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectBattleForce: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectBestowSkill
com.l2jfrozen.gameserver.skills.effects.EffectBestowSkill: EffectBestowSkill(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectBestowSkill: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectBestowSkill: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectBestowSkill: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectBestowSkill: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectBetray
com.l2jfrozen.gameserver.skills.effects.EffectBetray: EffectBetray(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectBetray: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectBetray: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectBetray: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectBetray: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectBigHead
com.l2jfrozen.gameserver.skills.effects.EffectBigHead: EffectBigHead(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectBigHead: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectBigHead: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectBigHead: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectBigHead: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectBlockBuff
com.l2jfrozen.gameserver.skills.effects.EffectBlockBuff: EffectBlockBuff(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectBlockBuff: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectBlockBuff: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectBlockBuff: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectBlockBuff: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectBluff
com.l2jfrozen.gameserver.skills.effects.EffectBluff: EffectBluff(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectBluff: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectBluff: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectBluff: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectBuff
com.l2jfrozen.gameserver.skills.effects.EffectBuff: EffectBuff(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectBuff: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectBuff: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectCancel
com.l2jfrozen.gameserver.skills.effects.EffectCancel: EffectCancel(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectCancel: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectCancel: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectCancel: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectCancel: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectCancel$1
com.l2jfrozen.gameserver.skills.effects.EffectCancel$1: int[] $SwitchMap$com$l2jfrozen$gameserver$model$EffectType
com.l2jfrozen.gameserver.skills.effects.EffectCancel$1: void <clinit>()
com.l2jfrozen.gameserver.skills.effects.EffectChameleonRest
com.l2jfrozen.gameserver.skills.effects.EffectChameleonRest: EffectChameleonRest(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectChameleonRest: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectChameleonRest: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectChameleonRest: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectChameleonRest: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectChameleonRest: void setChameleon(boolean)
com.l2jfrozen.gameserver.skills.effects.EffectCharge
com.l2jfrozen.gameserver.skills.effects.EffectCharge: int numCharges
com.l2jfrozen.gameserver.skills.effects.EffectCharge: EffectCharge(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectCharge: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectCharge: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectCharge: int getLevel()
com.l2jfrozen.gameserver.skills.effects.EffectCharge: void addNumCharges(int)
com.l2jfrozen.gameserver.skills.effects.EffectCharmOfLuck
com.l2jfrozen.gameserver.skills.effects.EffectCharmOfLuck: EffectCharmOfLuck(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectCharmOfLuck: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectCharmOfLuck: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectCharmOfLuck: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectCharmOfLuck: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectClanGate
com.l2jfrozen.gameserver.skills.effects.EffectClanGate: EffectClanGate(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectClanGate: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectClanGate: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectClanGate: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectClanGate: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectCombatPointHealOverTime
com.l2jfrozen.gameserver.skills.effects.EffectCombatPointHealOverTime: EffectCombatPointHealOverTime(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectCombatPointHealOverTime: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectCombatPointHealOverTime: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectConfuseMob
com.l2jfrozen.gameserver.skills.effects.EffectConfuseMob: EffectConfuseMob(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectConfuseMob: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectConfuseMob: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectConfuseMob: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectConfuseMob: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectConfusion
com.l2jfrozen.gameserver.skills.effects.EffectConfusion: EffectConfusion(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectConfusion: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectConfusion: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectConfusion: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectConfusion: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectDamOverTime
com.l2jfrozen.gameserver.skills.effects.EffectDamOverTime: EffectDamOverTime(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectDamOverTime: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectDamOverTime: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectDebuff
com.l2jfrozen.gameserver.skills.effects.EffectDebuff: EffectDebuff(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectDebuff: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectDebuff: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectDeflectBuff
com.l2jfrozen.gameserver.skills.effects.EffectDeflectBuff: EffectDeflectBuff(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectDeflectBuff: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectDeflectBuff: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectDeflectBuff: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectDeflectBuff: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectFakeDeath
com.l2jfrozen.gameserver.skills.effects.EffectFakeDeath: EffectFakeDeath(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectFakeDeath: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectFakeDeath: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectFakeDeath: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectFakeDeath: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectFear
com.l2jfrozen.gameserver.skills.effects.EffectFear: int FEAR_RANGE
com.l2jfrozen.gameserver.skills.effects.EffectFear: EffectFear(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectFear: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectFear: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectFear: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectFear: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectForce
com.l2jfrozen.gameserver.skills.effects.EffectForce: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.skills.effects.EffectForce: int forces
com.l2jfrozen.gameserver.skills.effects.EffectForce: int _range
com.l2jfrozen.gameserver.skills.effects.EffectForce: EffectForce(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectForce: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectForce: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectForce: void increaseForce()
com.l2jfrozen.gameserver.skills.effects.EffectForce: void decreaseForce()
com.l2jfrozen.gameserver.skills.effects.EffectForce: void updateBuff()
com.l2jfrozen.gameserver.skills.effects.EffectForce: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectForce: void <clinit>()
com.l2jfrozen.gameserver.skills.effects.EffectFusion
com.l2jfrozen.gameserver.skills.effects.EffectFusion: int _effect
com.l2jfrozen.gameserver.skills.effects.EffectFusion: int _maxEffect
com.l2jfrozen.gameserver.skills.effects.EffectFusion: EffectFusion(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectFusion: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectFusion: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectFusion: void increaseEffect()
com.l2jfrozen.gameserver.skills.effects.EffectFusion: void decreaseForce()
com.l2jfrozen.gameserver.skills.effects.EffectFusion: void updateBuff()
com.l2jfrozen.gameserver.skills.effects.EffectGrow
com.l2jfrozen.gameserver.skills.effects.EffectGrow: EffectGrow(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectGrow: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectGrow: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectGrow: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectGrow: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectHealOverTime
com.l2jfrozen.gameserver.skills.effects.EffectHealOverTime: EffectHealOverTime(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectHealOverTime: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectHealOverTime: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectHeroCancel
com.l2jfrozen.gameserver.skills.effects.EffectHeroCancel: EffectHeroCancel(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectHeroCancel: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectHeroCancel: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectHeroCancel: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectHeroCancel: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectHeroCancel$1
com.l2jfrozen.gameserver.skills.effects.EffectHeroCancel$1: int[] $SwitchMap$com$l2jfrozen$gameserver$model$EffectType
com.l2jfrozen.gameserver.skills.effects.EffectHeroCancel$1: void <clinit>()
com.l2jfrozen.gameserver.skills.effects.EffectImmobileUntilAttacked
com.l2jfrozen.gameserver.skills.effects.EffectImmobileUntilAttacked: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.skills.effects.EffectImmobileUntilAttacked: EffectImmobileUntilAttacked(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectImmobileUntilAttacked: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectImmobileUntilAttacked: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectImmobileUntilAttacked: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectImmobileUntilAttacked: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectImmobileUntilAttacked: void <clinit>()
com.l2jfrozen.gameserver.skills.effects.EffectImobileBuff
com.l2jfrozen.gameserver.skills.effects.EffectImobileBuff: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.skills.effects.EffectImobileBuff: EffectImobileBuff(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectImobileBuff: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectImobileBuff: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectImobileBuff: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectImobileBuff: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectImobileBuff: void <clinit>()
com.l2jfrozen.gameserver.skills.effects.EffectImobilePetBuff
com.l2jfrozen.gameserver.skills.effects.EffectImobilePetBuff: com.l2jfrozen.gameserver.model.L2Summon _pet
com.l2jfrozen.gameserver.skills.effects.EffectImobilePetBuff: EffectImobilePetBuff(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectImobilePetBuff: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectImobilePetBuff: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectImobilePetBuff: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectImobilePetBuff: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectInterrupt
com.l2jfrozen.gameserver.skills.effects.EffectInterrupt: EffectInterrupt(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectInterrupt: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectInterrupt: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectInterrupt: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectInterrupt: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectInvincible
com.l2jfrozen.gameserver.skills.effects.EffectInvincible: EffectInvincible(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectInvincible: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectInvincible: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectInvincible: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectInvincible: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectManaDamOverTime
com.l2jfrozen.gameserver.skills.effects.EffectManaDamOverTime: EffectManaDamOverTime(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectManaDamOverTime: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectManaDamOverTime: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectManaHealOverTime
com.l2jfrozen.gameserver.skills.effects.EffectManaHealOverTime: EffectManaHealOverTime(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectManaHealOverTime: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectManaHealOverTime: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectMeditation
com.l2jfrozen.gameserver.skills.effects.EffectMeditation: EffectMeditation(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectMeditation: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectMeditation: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectMeditation: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectMeditation: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectMpConsumePerLevel
com.l2jfrozen.gameserver.skills.effects.EffectMpConsumePerLevel: EffectMpConsumePerLevel(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectMpConsumePerLevel: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectMpConsumePerLevel: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectMute
com.l2jfrozen.gameserver.skills.effects.EffectMute: EffectMute(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectMute: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectMute: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectMute: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectMute: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectNegate
com.l2jfrozen.gameserver.skills.effects.EffectNegate: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.skills.effects.EffectNegate: EffectNegate(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectNegate: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectNegate: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectNegate: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectNegate: void <clinit>()
com.l2jfrozen.gameserver.skills.effects.EffectNoblesseBless
com.l2jfrozen.gameserver.skills.effects.EffectNoblesseBless: EffectNoblesseBless(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectNoblesseBless: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectNoblesseBless: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectNoblesseBless: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectNoblesseBless: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectParalyze
com.l2jfrozen.gameserver.skills.effects.EffectParalyze: EffectParalyze(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectParalyze: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectParalyze: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectParalyze: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectParalyze: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectPetrification
com.l2jfrozen.gameserver.skills.effects.EffectPetrification: EffectPetrification(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectPetrification: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectPetrification: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectPetrification: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectPetrification: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectPhoenixBless
com.l2jfrozen.gameserver.skills.effects.EffectPhoenixBless: EffectPhoenixBless(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectPhoenixBless: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectPhoenixBless: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectPhoenixBless: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectPhoenixBless: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectProtectionBlessing
com.l2jfrozen.gameserver.skills.effects.EffectProtectionBlessing: EffectProtectionBlessing(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectProtectionBlessing: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectProtectionBlessing: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectProtectionBlessing: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectProtectionBlessing: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectPsychicalMute
com.l2jfrozen.gameserver.skills.effects.EffectPsychicalMute: EffectPsychicalMute(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectPsychicalMute: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectPsychicalMute: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectPsychicalMute: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectPsychicalMute: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectRelax
com.l2jfrozen.gameserver.skills.effects.EffectRelax: EffectRelax(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectRelax: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectRelax: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectRelax: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectRelax: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectRelax: void setRelax(boolean)
com.l2jfrozen.gameserver.skills.effects.EffectRemoveTarget
com.l2jfrozen.gameserver.skills.effects.EffectRemoveTarget: EffectRemoveTarget(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectRemoveTarget: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectRemoveTarget: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectRemoveTarget: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectRemoveTarget: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectRoot
com.l2jfrozen.gameserver.skills.effects.EffectRoot: EffectRoot(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectRoot: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectRoot: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectRoot: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectRoot: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectSeed
com.l2jfrozen.gameserver.skills.effects.EffectSeed: int _power
com.l2jfrozen.gameserver.skills.effects.EffectSeed: EffectSeed(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectSeed: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectSeed: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectSeed: int getPower()
com.l2jfrozen.gameserver.skills.effects.EffectSeed: void increasePower()
com.l2jfrozen.gameserver.skills.effects.EffectSignet
com.l2jfrozen.gameserver.skills.effects.EffectSignet: com.l2jfrozen.gameserver.model.L2Skill _skill
com.l2jfrozen.gameserver.skills.effects.EffectSignet: com.l2jfrozen.gameserver.model.actor.instance.L2EffectPointInstance _actor
com.l2jfrozen.gameserver.skills.effects.EffectSignet: EffectSignet(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectSignet: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectSignet: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectSignet: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectSignet: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectSignetAntiSummon
com.l2jfrozen.gameserver.skills.effects.EffectSignetAntiSummon: com.l2jfrozen.gameserver.model.actor.instance.L2EffectPointInstance _actor
com.l2jfrozen.gameserver.skills.effects.EffectSignetAntiSummon: EffectSignetAntiSummon(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectSignetAntiSummon: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectSignetAntiSummon: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectSignetAntiSummon: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectSignetAntiSummon: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectSignetMDam
com.l2jfrozen.gameserver.skills.effects.EffectSignetMDam: com.l2jfrozen.gameserver.model.actor.instance.L2EffectPointInstance _actor
com.l2jfrozen.gameserver.skills.effects.EffectSignetMDam: boolean bss
com.l2jfrozen.gameserver.skills.effects.EffectSignetMDam: boolean sps
com.l2jfrozen.gameserver.skills.effects.EffectSignetMDam: EffectSignetMDam(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectSignetMDam: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectSignetMDam: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectSignetMDam: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectSignetMDam: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectSignetNoise
com.l2jfrozen.gameserver.skills.effects.EffectSignetNoise: com.l2jfrozen.gameserver.model.actor.instance.L2EffectPointInstance _actor
com.l2jfrozen.gameserver.skills.effects.EffectSignetNoise: EffectSignetNoise(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectSignetNoise: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectSignetNoise: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectSignetNoise: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectSignetNoise: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectSilenceMagicPhysical
com.l2jfrozen.gameserver.skills.effects.EffectSilenceMagicPhysical: EffectSilenceMagicPhysical(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectSilenceMagicPhysical: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectSilenceMagicPhysical: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectSilenceMagicPhysical: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectSilenceMagicPhysical: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectSilentMove
com.l2jfrozen.gameserver.skills.effects.EffectSilentMove: EffectSilentMove(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectSilentMove: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectSilentMove: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectSilentMove: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectSilentMove: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectSleep
com.l2jfrozen.gameserver.skills.effects.EffectSleep: EffectSleep(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectSleep: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectSleep: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectSleep: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectSleep: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectSpellForce
com.l2jfrozen.gameserver.skills.effects.EffectSpellForce: EffectSpellForce(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectSpellForce: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectSpellForce: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectStun
com.l2jfrozen.gameserver.skills.effects.EffectStun: EffectStun(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectStun: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectStun: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectStun: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectStun: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectStunSelf
com.l2jfrozen.gameserver.skills.effects.EffectStunSelf: EffectStunSelf(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectStunSelf: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectStunSelf: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectStunSelf: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectStunSelf: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectTargetMe
com.l2jfrozen.gameserver.skills.effects.EffectTargetMe: EffectTargetMe(com.l2jfrozen.gameserver.skills.Env,com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectTargetMe: com.l2jfrozen.gameserver.model.EffectType getEffectType()
com.l2jfrozen.gameserver.skills.effects.EffectTargetMe: void onStart()
com.l2jfrozen.gameserver.skills.effects.EffectTargetMe: void onExit()
com.l2jfrozen.gameserver.skills.effects.EffectTargetMe: boolean onActionTime()
com.l2jfrozen.gameserver.skills.effects.EffectTemplate
com.l2jfrozen.gameserver.skills.effects.EffectTemplate: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.skills.effects.EffectTemplate: java.lang.Class _func
com.l2jfrozen.gameserver.skills.effects.EffectTemplate: java.lang.reflect.Constructor _constructor
com.l2jfrozen.gameserver.skills.effects.EffectTemplate: com.l2jfrozen.gameserver.skills.conditions.Condition attachCond
com.l2jfrozen.gameserver.skills.effects.EffectTemplate: com.l2jfrozen.gameserver.skills.conditions.Condition applayCond
com.l2jfrozen.gameserver.skills.effects.EffectTemplate: com.l2jfrozen.gameserver.skills.funcs.Lambda lambda
com.l2jfrozen.gameserver.skills.effects.EffectTemplate: int counter
com.l2jfrozen.gameserver.skills.effects.EffectTemplate: int period
com.l2jfrozen.gameserver.skills.effects.EffectTemplate: int abnormalEffect
com.l2jfrozen.gameserver.skills.effects.EffectTemplate: com.l2jfrozen.gameserver.skills.funcs.FuncTemplate[] funcTemplates
com.l2jfrozen.gameserver.skills.effects.EffectTemplate: boolean showIcon
com.l2jfrozen.gameserver.skills.effects.EffectTemplate: java.lang.String stackType
com.l2jfrozen.gameserver.skills.effects.EffectTemplate: float stackOrder
com.l2jfrozen.gameserver.skills.effects.EffectTemplate: double effectPower
com.l2jfrozen.gameserver.skills.effects.EffectTemplate: com.l2jfrozen.gameserver.model.SkillType effectType
com.l2jfrozen.gameserver.skills.effects.EffectTemplate: EffectTemplate(com.l2jfrozen.gameserver.skills.conditions.Condition,com.l2jfrozen.gameserver.skills.conditions.Condition,java.lang.String,com.l2jfrozen.gameserver.skills.funcs.Lambda,int,int,int,java.lang.String,float,int,com.l2jfrozen.gameserver.model.SkillType,double)
com.l2jfrozen.gameserver.skills.effects.EffectTemplate: com.l2jfrozen.gameserver.model.L2Effect getEffect(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.effects.EffectTemplate: void attach(com.l2jfrozen.gameserver.skills.funcs.FuncTemplate)
com.l2jfrozen.gameserver.skills.effects.EffectTemplate: void <clinit>()
com.l2jfrozen.gameserver.skills.funcs.Func
com.l2jfrozen.gameserver.skills.funcs.Func: com.l2jfrozen.gameserver.skills.Stats stat
com.l2jfrozen.gameserver.skills.funcs.Func: int order
com.l2jfrozen.gameserver.skills.funcs.Func: java.lang.Object funcOwner
com.l2jfrozen.gameserver.skills.funcs.Func: com.l2jfrozen.gameserver.skills.conditions.Condition cond
com.l2jfrozen.gameserver.skills.funcs.Func: Func(com.l2jfrozen.gameserver.skills.Stats,int,java.lang.Object)
com.l2jfrozen.gameserver.skills.funcs.Func: void setCondition(com.l2jfrozen.gameserver.skills.conditions.Condition)
com.l2jfrozen.gameserver.skills.funcs.Func: void calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.funcs.FuncAdd
com.l2jfrozen.gameserver.skills.funcs.FuncAdd: com.l2jfrozen.gameserver.skills.funcs.Lambda _lambda
com.l2jfrozen.gameserver.skills.funcs.FuncAdd: FuncAdd(com.l2jfrozen.gameserver.skills.Stats,int,java.lang.Object,com.l2jfrozen.gameserver.skills.funcs.Lambda)
com.l2jfrozen.gameserver.skills.funcs.FuncAdd: void calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.funcs.FuncBaseMul
com.l2jfrozen.gameserver.skills.funcs.FuncBaseMul: com.l2jfrozen.gameserver.skills.funcs.Lambda _lambda
com.l2jfrozen.gameserver.skills.funcs.FuncBaseMul: FuncBaseMul(com.l2jfrozen.gameserver.skills.Stats,int,java.lang.Object,com.l2jfrozen.gameserver.skills.funcs.Lambda)
com.l2jfrozen.gameserver.skills.funcs.FuncBaseMul: void calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.funcs.FuncDiv
com.l2jfrozen.gameserver.skills.funcs.FuncDiv: com.l2jfrozen.gameserver.skills.funcs.Lambda _lambda
com.l2jfrozen.gameserver.skills.funcs.FuncDiv: FuncDiv(com.l2jfrozen.gameserver.skills.Stats,int,java.lang.Object,com.l2jfrozen.gameserver.skills.funcs.Lambda)
com.l2jfrozen.gameserver.skills.funcs.FuncDiv: void calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.funcs.FuncEnchant
com.l2jfrozen.gameserver.skills.funcs.FuncEnchant: FuncEnchant(com.l2jfrozen.gameserver.skills.Stats,int,java.lang.Object,com.l2jfrozen.gameserver.skills.funcs.Lambda)
com.l2jfrozen.gameserver.skills.funcs.FuncEnchant: void calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.funcs.FuncMul
com.l2jfrozen.gameserver.skills.funcs.FuncMul: com.l2jfrozen.gameserver.skills.funcs.Lambda _lambda
com.l2jfrozen.gameserver.skills.funcs.FuncMul: FuncMul(com.l2jfrozen.gameserver.skills.Stats,int,java.lang.Object,com.l2jfrozen.gameserver.skills.funcs.Lambda)
com.l2jfrozen.gameserver.skills.funcs.FuncMul: void calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.funcs.FuncSet
com.l2jfrozen.gameserver.skills.funcs.FuncSet: com.l2jfrozen.gameserver.skills.funcs.Lambda _lambda
com.l2jfrozen.gameserver.skills.funcs.FuncSet: FuncSet(com.l2jfrozen.gameserver.skills.Stats,int,java.lang.Object,com.l2jfrozen.gameserver.skills.funcs.Lambda)
com.l2jfrozen.gameserver.skills.funcs.FuncSet: void calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.funcs.FuncSub
com.l2jfrozen.gameserver.skills.funcs.FuncSub: com.l2jfrozen.gameserver.skills.funcs.Lambda _lambda
com.l2jfrozen.gameserver.skills.funcs.FuncSub: FuncSub(com.l2jfrozen.gameserver.skills.Stats,int,java.lang.Object,com.l2jfrozen.gameserver.skills.funcs.Lambda)
com.l2jfrozen.gameserver.skills.funcs.FuncSub: void calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.funcs.FuncTemplate
com.l2jfrozen.gameserver.skills.funcs.FuncTemplate: com.l2jfrozen.gameserver.skills.conditions.Condition attachCond
com.l2jfrozen.gameserver.skills.funcs.FuncTemplate: com.l2jfrozen.gameserver.skills.conditions.Condition applayCond
com.l2jfrozen.gameserver.skills.funcs.FuncTemplate: java.lang.Class func
com.l2jfrozen.gameserver.skills.funcs.FuncTemplate: java.lang.reflect.Constructor constructor
com.l2jfrozen.gameserver.skills.funcs.FuncTemplate: com.l2jfrozen.gameserver.skills.Stats stat
com.l2jfrozen.gameserver.skills.funcs.FuncTemplate: int order
com.l2jfrozen.gameserver.skills.funcs.FuncTemplate: com.l2jfrozen.gameserver.skills.funcs.Lambda lambda
com.l2jfrozen.gameserver.skills.funcs.FuncTemplate: FuncTemplate(com.l2jfrozen.gameserver.skills.conditions.Condition,com.l2jfrozen.gameserver.skills.conditions.Condition,java.lang.String,com.l2jfrozen.gameserver.skills.Stats,int,com.l2jfrozen.gameserver.skills.funcs.Lambda)
com.l2jfrozen.gameserver.skills.funcs.FuncTemplate: com.l2jfrozen.gameserver.skills.funcs.Func getFunc(com.l2jfrozen.gameserver.skills.Env,java.lang.Object)
com.l2jfrozen.gameserver.skills.funcs.Lambda
com.l2jfrozen.gameserver.skills.funcs.Lambda: Lambda()
com.l2jfrozen.gameserver.skills.funcs.Lambda: double calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.funcs.LambdaCalc
com.l2jfrozen.gameserver.skills.funcs.LambdaCalc: com.l2jfrozen.gameserver.skills.funcs.Func[] funcs
com.l2jfrozen.gameserver.skills.funcs.LambdaCalc: LambdaCalc()
com.l2jfrozen.gameserver.skills.funcs.LambdaCalc: double calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.funcs.LambdaCalc: void addFunc(com.l2jfrozen.gameserver.skills.funcs.Func)
com.l2jfrozen.gameserver.skills.funcs.LambdaConst
com.l2jfrozen.gameserver.skills.funcs.LambdaConst: double _value
com.l2jfrozen.gameserver.skills.funcs.LambdaConst: LambdaConst(double)
com.l2jfrozen.gameserver.skills.funcs.LambdaConst: double calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.funcs.LambdaRnd
com.l2jfrozen.gameserver.skills.funcs.LambdaRnd: com.l2jfrozen.gameserver.skills.funcs.Lambda _max
com.l2jfrozen.gameserver.skills.funcs.LambdaRnd: boolean _linear
com.l2jfrozen.gameserver.skills.funcs.LambdaRnd: LambdaRnd(com.l2jfrozen.gameserver.skills.funcs.Lambda,boolean)
com.l2jfrozen.gameserver.skills.funcs.LambdaRnd: double calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.funcs.LambdaStats
com.l2jfrozen.gameserver.skills.funcs.LambdaStats: com.l2jfrozen.gameserver.skills.funcs.StatsType _stat
com.l2jfrozen.gameserver.skills.funcs.LambdaStats: LambdaStats(com.l2jfrozen.gameserver.skills.funcs.StatsType)
com.l2jfrozen.gameserver.skills.funcs.LambdaStats: double calc(com.l2jfrozen.gameserver.skills.Env)
com.l2jfrozen.gameserver.skills.funcs.LambdaStats$1
com.l2jfrozen.gameserver.skills.funcs.LambdaStats$1: int[] $SwitchMap$com$l2jfrozen$gameserver$skills$funcs$StatsType
com.l2jfrozen.gameserver.skills.funcs.LambdaStats$1: void <clinit>()
com.l2jfrozen.gameserver.skills.funcs.StatsType
com.l2jfrozen.gameserver.skills.funcs.StatsType: com.l2jfrozen.gameserver.skills.funcs.StatsType PLAYER_LEVEL
com.l2jfrozen.gameserver.skills.funcs.StatsType: com.l2jfrozen.gameserver.skills.funcs.StatsType TARGET_LEVEL
com.l2jfrozen.gameserver.skills.funcs.StatsType: com.l2jfrozen.gameserver.skills.funcs.StatsType PLAYER_MAX_HP
com.l2jfrozen.gameserver.skills.funcs.StatsType: com.l2jfrozen.gameserver.skills.funcs.StatsType PLAYER_MAX_MP
com.l2jfrozen.gameserver.skills.funcs.StatsType: com.l2jfrozen.gameserver.skills.funcs.StatsType[] $VALUES
com.l2jfrozen.gameserver.skills.funcs.StatsType: com.l2jfrozen.gameserver.skills.funcs.StatsType[] values()
com.l2jfrozen.gameserver.skills.funcs.StatsType: com.l2jfrozen.gameserver.skills.funcs.StatsType valueOf(java.lang.String)
com.l2jfrozen.gameserver.skills.funcs.StatsType: StatsType(java.lang.String,int)
com.l2jfrozen.gameserver.skills.funcs.StatsType: void <clinit>()
com.l2jfrozen.gameserver.skills.hitConditionBonus
com.l2jfrozen.gameserver.skills.hitConditionBonus: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.skills.hitConditionBonus: int frontBonus
com.l2jfrozen.gameserver.skills.hitConditionBonus: int sideBonus
com.l2jfrozen.gameserver.skills.hitConditionBonus: int backBonus
com.l2jfrozen.gameserver.skills.hitConditionBonus: int highBonus
com.l2jfrozen.gameserver.skills.hitConditionBonus: int lowBonus
com.l2jfrozen.gameserver.skills.hitConditionBonus: int darkBonus
com.l2jfrozen.gameserver.skills.hitConditionBonus: hitConditionBonus()
com.l2jfrozen.gameserver.skills.hitConditionBonus: double getConditionBonus(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.skills.hitConditionBonus: void <clinit>()
com.l2jfrozen.gameserver.skills.holders.ISkillsHolder
com.l2jfrozen.gameserver.skills.holders.ISkillsHolder: java.util.Map getSkills()
com.l2jfrozen.gameserver.skills.holders.ISkillsHolder: com.l2jfrozen.gameserver.model.L2Skill addSkill(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.skills.holders.ISkillsHolder: com.l2jfrozen.gameserver.model.L2Skill getKnownSkill(int)
com.l2jfrozen.gameserver.skills.holders.ISkillsHolder: int getSkillLevel(int)
com.l2jfrozen.gameserver.skills.holders.PlayerSkillHolder
com.l2jfrozen.gameserver.skills.holders.PlayerSkillHolder: java.util.Map _skills
com.l2jfrozen.gameserver.skills.holders.PlayerSkillHolder: PlayerSkillHolder(java.util.Map)
com.l2jfrozen.gameserver.skills.holders.PlayerSkillHolder: java.util.Map getSkills()
com.l2jfrozen.gameserver.skills.holders.PlayerSkillHolder: com.l2jfrozen.gameserver.model.L2Skill addSkill(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.skills.holders.PlayerSkillHolder: int getSkillLevel(int)
com.l2jfrozen.gameserver.skills.holders.PlayerSkillHolder: com.l2jfrozen.gameserver.model.L2Skill getKnownSkill(int)
com.l2jfrozen.gameserver.skills.l2skills.L2SkillCharge
com.l2jfrozen.gameserver.skills.l2skills.L2SkillCharge: L2SkillCharge(com.l2jfrozen.gameserver.templates.StatsSet)
com.l2jfrozen.gameserver.skills.l2skills.L2SkillCharge: boolean checkCondition(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Object,boolean)
com.l2jfrozen.gameserver.skills.l2skills.L2SkillCharge: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.skills.l2skills.L2SkillChargeDmg
com.l2jfrozen.gameserver.skills.l2skills.L2SkillChargeDmg: int chargeSkillId
com.l2jfrozen.gameserver.skills.l2skills.L2SkillChargeDmg: L2SkillChargeDmg(com.l2jfrozen.gameserver.templates.StatsSet)
com.l2jfrozen.gameserver.skills.l2skills.L2SkillChargeDmg: boolean checkCondition(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Object,boolean)
com.l2jfrozen.gameserver.skills.l2skills.L2SkillChargeDmg: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.skills.l2skills.L2SkillChargeEffect
com.l2jfrozen.gameserver.skills.l2skills.L2SkillChargeEffect: int chargeSkillId
com.l2jfrozen.gameserver.skills.l2skills.L2SkillChargeEffect: L2SkillChargeEffect(com.l2jfrozen.gameserver.templates.StatsSet)
com.l2jfrozen.gameserver.skills.l2skills.L2SkillChargeEffect: boolean checkCondition(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Object,boolean)
com.l2jfrozen.gameserver.skills.l2skills.L2SkillChargeEffect: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.skills.l2skills.L2SkillCreateItem
com.l2jfrozen.gameserver.skills.l2skills.L2SkillCreateItem: int[] _createItemId
com.l2jfrozen.gameserver.skills.l2skills.L2SkillCreateItem: int _createItemCount
com.l2jfrozen.gameserver.skills.l2skills.L2SkillCreateItem: int _randomCount
com.l2jfrozen.gameserver.skills.l2skills.L2SkillCreateItem: L2SkillCreateItem(com.l2jfrozen.gameserver.templates.StatsSet)
com.l2jfrozen.gameserver.skills.l2skills.L2SkillCreateItem: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.skills.l2skills.L2SkillCreateItem: void giveItems(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,int,int)
com.l2jfrozen.gameserver.skills.l2skills.L2SkillDefault
com.l2jfrozen.gameserver.skills.l2skills.L2SkillDefault: L2SkillDefault(com.l2jfrozen.gameserver.templates.StatsSet)
com.l2jfrozen.gameserver.skills.l2skills.L2SkillDefault: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.skills.l2skills.L2SkillDrain
com.l2jfrozen.gameserver.skills.l2skills.L2SkillDrain: float _absorbPart
com.l2jfrozen.gameserver.skills.l2skills.L2SkillDrain: int _absorbAbs
com.l2jfrozen.gameserver.skills.l2skills.L2SkillDrain: L2SkillDrain(com.l2jfrozen.gameserver.templates.StatsSet)
com.l2jfrozen.gameserver.skills.l2skills.L2SkillDrain: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.skills.l2skills.L2SkillDrain: void useCubicSkill(com.l2jfrozen.gameserver.model.actor.instance.L2CubicInstance,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.skills.l2skills.L2SkillElemental
com.l2jfrozen.gameserver.skills.l2skills.L2SkillElemental: int[] _seeds
com.l2jfrozen.gameserver.skills.l2skills.L2SkillElemental: boolean _seedAny
com.l2jfrozen.gameserver.skills.l2skills.L2SkillElemental: L2SkillElemental(com.l2jfrozen.gameserver.templates.StatsSet)
com.l2jfrozen.gameserver.skills.l2skills.L2SkillElemental: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.skills.l2skills.L2SkillSeed
com.l2jfrozen.gameserver.skills.l2skills.L2SkillSeed: L2SkillSeed(com.l2jfrozen.gameserver.templates.StatsSet)
com.l2jfrozen.gameserver.skills.l2skills.L2SkillSeed: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.skills.l2skills.L2SkillSignet
com.l2jfrozen.gameserver.skills.l2skills.L2SkillSignet: int _effectNpcId
com.l2jfrozen.gameserver.skills.l2skills.L2SkillSignet: int effectId
com.l2jfrozen.gameserver.skills.l2skills.L2SkillSignet: L2SkillSignet(com.l2jfrozen.gameserver.templates.StatsSet)
com.l2jfrozen.gameserver.skills.l2skills.L2SkillSignet: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.skills.l2skills.L2SkillSignetCasttime
com.l2jfrozen.gameserver.skills.l2skills.L2SkillSignetCasttime: int _effectNpcId
com.l2jfrozen.gameserver.skills.l2skills.L2SkillSignetCasttime: int effectId
com.l2jfrozen.gameserver.skills.l2skills.L2SkillSignetCasttime: L2SkillSignetCasttime(com.l2jfrozen.gameserver.templates.StatsSet)
com.l2jfrozen.gameserver.skills.l2skills.L2SkillSignetCasttime: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.skills.l2skills.L2SkillSummon
com.l2jfrozen.gameserver.skills.l2skills.L2SkillSummon: int SKILL_CUBIC_MASTERY
com.l2jfrozen.gameserver.skills.l2skills.L2SkillSummon: int _npcId
com.l2jfrozen.gameserver.skills.l2skills.L2SkillSummon: float _expPenalty
com.l2jfrozen.gameserver.skills.l2skills.L2SkillSummon: boolean _isCubic
com.l2jfrozen.gameserver.skills.l2skills.L2SkillSummon: int _activationtime
com.l2jfrozen.gameserver.skills.l2skills.L2SkillSummon: int _activationchance
com.l2jfrozen.gameserver.skills.l2skills.L2SkillSummon: int _summonTotalLifeTime
com.l2jfrozen.gameserver.skills.l2skills.L2SkillSummon: L2SkillSummon(com.l2jfrozen.gameserver.templates.StatsSet)
com.l2jfrozen.gameserver.skills.l2skills.L2SkillSummon: boolean checkCondition(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.skills.l2skills.L2SkillSummon: void useSkill(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.skills.l2skills.L2SkillSummon: boolean isCubic()
com.l2jfrozen.gameserver.taskmanager.AttackStanceTaskManager
com.l2jfrozen.gameserver.taskmanager.AttackStanceTaskManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.taskmanager.AttackStanceTaskManager: java.util.Map _attackStanceTasks
com.l2jfrozen.gameserver.taskmanager.AttackStanceTaskManager: AttackStanceTaskManager()
com.l2jfrozen.gameserver.taskmanager.AttackStanceTaskManager: com.l2jfrozen.gameserver.taskmanager.AttackStanceTaskManager getInstance()
com.l2jfrozen.gameserver.taskmanager.AttackStanceTaskManager: void addAttackStanceTask(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.taskmanager.AttackStanceTaskManager: void removeAttackStanceTask(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.taskmanager.AttackStanceTaskManager: boolean getAttackStanceTask(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.taskmanager.AttackStanceTaskManager: AttackStanceTaskManager(com.l2jfrozen.gameserver.taskmanager.AttackStanceTaskManager$1)
com.l2jfrozen.gameserver.taskmanager.AttackStanceTaskManager: void <clinit>()
com.l2jfrozen.gameserver.taskmanager.AttackStanceTaskManager$1
com.l2jfrozen.gameserver.taskmanager.AttackStanceTaskManager$FightModeScheduler
com.l2jfrozen.gameserver.taskmanager.AttackStanceTaskManager$FightModeScheduler: com.l2jfrozen.gameserver.taskmanager.AttackStanceTaskManager this$0
com.l2jfrozen.gameserver.taskmanager.AttackStanceTaskManager$FightModeScheduler: AttackStanceTaskManager$FightModeScheduler(com.l2jfrozen.gameserver.taskmanager.AttackStanceTaskManager)
com.l2jfrozen.gameserver.taskmanager.AttackStanceTaskManager$FightModeScheduler: void run()
com.l2jfrozen.gameserver.taskmanager.AttackStanceTaskManager$SingletonHolder
com.l2jfrozen.gameserver.taskmanager.AttackStanceTaskManager$SingletonHolder: com.l2jfrozen.gameserver.taskmanager.AttackStanceTaskManager _instance
com.l2jfrozen.gameserver.taskmanager.AttackStanceTaskManager$SingletonHolder: AttackStanceTaskManager$SingletonHolder()
com.l2jfrozen.gameserver.taskmanager.AttackStanceTaskManager$SingletonHolder: void <clinit>()
com.l2jfrozen.gameserver.taskmanager.DecayTaskManager
com.l2jfrozen.gameserver.taskmanager.DecayTaskManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.taskmanager.DecayTaskManager: java.util.Map _decayTasks
com.l2jfrozen.gameserver.taskmanager.DecayTaskManager: com.l2jfrozen.gameserver.taskmanager.DecayTaskManager _instance
com.l2jfrozen.gameserver.taskmanager.DecayTaskManager: DecayTaskManager()
com.l2jfrozen.gameserver.taskmanager.DecayTaskManager: com.l2jfrozen.gameserver.taskmanager.DecayTaskManager getInstance()
com.l2jfrozen.gameserver.taskmanager.DecayTaskManager: void addDecayTask(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.taskmanager.DecayTaskManager: void addDecayTask(com.l2jfrozen.gameserver.model.L2Character,int)
com.l2jfrozen.gameserver.taskmanager.DecayTaskManager: void cancelDecayTask(com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.taskmanager.DecayTaskManager: java.lang.String toString()
com.l2jfrozen.gameserver.taskmanager.DecayTaskManager: void <clinit>()
com.l2jfrozen.gameserver.taskmanager.DecayTaskManager$DecayScheduler
com.l2jfrozen.gameserver.taskmanager.DecayTaskManager$DecayScheduler: com.l2jfrozen.gameserver.taskmanager.DecayTaskManager this$0
com.l2jfrozen.gameserver.taskmanager.DecayTaskManager$DecayScheduler: DecayTaskManager$DecayScheduler(com.l2jfrozen.gameserver.taskmanager.DecayTaskManager)
com.l2jfrozen.gameserver.taskmanager.DecayTaskManager$DecayScheduler: void run()
com.l2jfrozen.gameserver.taskmanager.KnownListUpdateTaskManager
com.l2jfrozen.gameserver.taskmanager.KnownListUpdateTaskManager: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.taskmanager.KnownListUpdateTaskManager: com.l2jfrozen.gameserver.taskmanager.KnownListUpdateTaskManager _instance
com.l2jfrozen.gameserver.taskmanager.KnownListUpdateTaskManager: KnownListUpdateTaskManager()
com.l2jfrozen.gameserver.taskmanager.KnownListUpdateTaskManager: com.l2jfrozen.gameserver.taskmanager.KnownListUpdateTaskManager getInstance()
com.l2jfrozen.gameserver.taskmanager.KnownListUpdateTaskManager: void updateRegion(com.l2jfrozen.gameserver.model.L2WorldRegion,boolean,boolean)
com.l2jfrozen.gameserver.taskmanager.KnownListUpdateTaskManager: void <clinit>()
com.l2jfrozen.gameserver.taskmanager.KnownListUpdateTaskManager$KnownListUpdate
com.l2jfrozen.gameserver.taskmanager.KnownListUpdateTaskManager$KnownListUpdate: boolean toggle
com.l2jfrozen.gameserver.taskmanager.KnownListUpdateTaskManager$KnownListUpdate: boolean fullUpdate
com.l2jfrozen.gameserver.taskmanager.KnownListUpdateTaskManager$KnownListUpdate: com.l2jfrozen.gameserver.taskmanager.KnownListUpdateTaskManager this$0
com.l2jfrozen.gameserver.taskmanager.KnownListUpdateTaskManager$KnownListUpdate: KnownListUpdateTaskManager$KnownListUpdate(com.l2jfrozen.gameserver.taskmanager.KnownListUpdateTaskManager)
com.l2jfrozen.gameserver.taskmanager.KnownListUpdateTaskManager$KnownListUpdate: void run()
com.l2jfrozen.gameserver.taskmanager.tasks.TaskCleanUp
com.l2jfrozen.gameserver.taskmanager.tasks.TaskCleanUp: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.taskmanager.tasks.TaskCleanUp: java.lang.String NAME
com.l2jfrozen.gameserver.taskmanager.tasks.TaskCleanUp: TaskCleanUp()
com.l2jfrozen.gameserver.taskmanager.tasks.TaskCleanUp: java.lang.String getName()
com.l2jfrozen.gameserver.taskmanager.tasks.TaskCleanUp: void onTimeElapsed(com.l2jfrozen.common.util.taskmanager.ExecutedTask)
com.l2jfrozen.gameserver.taskmanager.tasks.TaskCleanUp: void initializate()
com.l2jfrozen.gameserver.taskmanager.tasks.TaskJython
com.l2jfrozen.gameserver.taskmanager.tasks.TaskJython: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.taskmanager.tasks.TaskJython: java.lang.String NAME
com.l2jfrozen.gameserver.taskmanager.tasks.TaskJython: org.python.util.PythonInterpreter _python
com.l2jfrozen.gameserver.taskmanager.tasks.TaskJython: TaskJython()
com.l2jfrozen.gameserver.taskmanager.tasks.TaskJython: java.lang.String getName()
com.l2jfrozen.gameserver.taskmanager.tasks.TaskJython: void onTimeElapsed(com.l2jfrozen.common.util.taskmanager.ExecutedTask)
com.l2jfrozen.gameserver.taskmanager.tasks.TaskOlympiadSave
com.l2jfrozen.gameserver.taskmanager.tasks.TaskOlympiadSave: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.taskmanager.tasks.TaskOlympiadSave: java.lang.String NAME
com.l2jfrozen.gameserver.taskmanager.tasks.TaskOlympiadSave: TaskOlympiadSave()
com.l2jfrozen.gameserver.taskmanager.tasks.TaskOlympiadSave: java.lang.String getName()
com.l2jfrozen.gameserver.taskmanager.tasks.TaskOlympiadSave: void onTimeElapsed(com.l2jfrozen.common.util.taskmanager.ExecutedTask)
com.l2jfrozen.gameserver.taskmanager.tasks.TaskOlympiadSave: void initializate()
com.l2jfrozen.gameserver.taskmanager.tasks.TaskRaidPointsReset
com.l2jfrozen.gameserver.taskmanager.tasks.TaskRaidPointsReset: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.taskmanager.tasks.TaskRaidPointsReset: java.lang.String NAME
com.l2jfrozen.gameserver.taskmanager.tasks.TaskRaidPointsReset: TaskRaidPointsReset()
com.l2jfrozen.gameserver.taskmanager.tasks.TaskRaidPointsReset: java.lang.String getName()
com.l2jfrozen.gameserver.taskmanager.tasks.TaskRaidPointsReset: void onTimeElapsed(com.l2jfrozen.common.util.taskmanager.ExecutedTask)
com.l2jfrozen.gameserver.taskmanager.tasks.TaskRaidPointsReset: void initializate()
com.l2jfrozen.gameserver.taskmanager.tasks.TaskRecom
com.l2jfrozen.gameserver.taskmanager.tasks.TaskRecom: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.taskmanager.tasks.TaskRecom: java.lang.String NAME
com.l2jfrozen.gameserver.taskmanager.tasks.TaskRecom: TaskRecom()
com.l2jfrozen.gameserver.taskmanager.tasks.TaskRecom: java.lang.String getName()
com.l2jfrozen.gameserver.taskmanager.tasks.TaskRecom: void onTimeElapsed(com.l2jfrozen.common.util.taskmanager.ExecutedTask)
com.l2jfrozen.gameserver.taskmanager.tasks.TaskRecom: void initializate()
com.l2jfrozen.gameserver.taskmanager.tasks.TaskRestart
com.l2jfrozen.gameserver.taskmanager.tasks.TaskRestart: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.taskmanager.tasks.TaskRestart: java.lang.String NAME
com.l2jfrozen.gameserver.taskmanager.tasks.TaskRestart: TaskRestart()
com.l2jfrozen.gameserver.taskmanager.tasks.TaskRestart: java.lang.String getName()
com.l2jfrozen.gameserver.taskmanager.tasks.TaskRestart: void onTimeElapsed(com.l2jfrozen.common.util.taskmanager.ExecutedTask)
com.l2jfrozen.gameserver.taskmanager.tasks.TaskSevenSignsUpdate
com.l2jfrozen.gameserver.taskmanager.tasks.TaskSevenSignsUpdate: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.taskmanager.tasks.TaskSevenSignsUpdate: java.lang.String NAME
com.l2jfrozen.gameserver.taskmanager.tasks.TaskSevenSignsUpdate: TaskSevenSignsUpdate()
com.l2jfrozen.gameserver.taskmanager.tasks.TaskSevenSignsUpdate: java.lang.String getName()
com.l2jfrozen.gameserver.taskmanager.tasks.TaskSevenSignsUpdate: void onTimeElapsed(com.l2jfrozen.common.util.taskmanager.ExecutedTask)
com.l2jfrozen.gameserver.taskmanager.tasks.TaskSevenSignsUpdate: void initializate()
com.l2jfrozen.gameserver.taskmanager.tasks.TaskShutdown
com.l2jfrozen.gameserver.taskmanager.tasks.TaskShutdown: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.taskmanager.tasks.TaskShutdown: java.lang.String NAME
com.l2jfrozen.gameserver.taskmanager.tasks.TaskShutdown: TaskShutdown()
com.l2jfrozen.gameserver.taskmanager.tasks.TaskShutdown: java.lang.String getName()
com.l2jfrozen.gameserver.taskmanager.tasks.TaskShutdown: void onTimeElapsed(com.l2jfrozen.common.util.taskmanager.ExecutedTask)
com.l2jfrozen.gameserver.templates.AbsorbCrystalType
com.l2jfrozen.gameserver.templates.AbsorbCrystalType: com.l2jfrozen.gameserver.templates.AbsorbCrystalType LAST_HIT
com.l2jfrozen.gameserver.templates.AbsorbCrystalType: com.l2jfrozen.gameserver.templates.AbsorbCrystalType FULL_PARTY
com.l2jfrozen.gameserver.templates.AbsorbCrystalType: com.l2jfrozen.gameserver.templates.AbsorbCrystalType PARTY_ONE_RANDOM
com.l2jfrozen.gameserver.templates.AbsorbCrystalType: com.l2jfrozen.gameserver.templates.AbsorbCrystalType[] $VALUES
com.l2jfrozen.gameserver.templates.AbsorbCrystalType: com.l2jfrozen.gameserver.templates.AbsorbCrystalType[] values()
com.l2jfrozen.gameserver.templates.AbsorbCrystalType: com.l2jfrozen.gameserver.templates.AbsorbCrystalType valueOf(java.lang.String)
com.l2jfrozen.gameserver.templates.AbsorbCrystalType: AbsorbCrystalType(java.lang.String,int)
com.l2jfrozen.gameserver.templates.AbsorbCrystalType: void <clinit>()
com.l2jfrozen.gameserver.templates.L2Armor
com.l2jfrozen.gameserver.templates.L2Armor: int _avoidModifier
com.l2jfrozen.gameserver.templates.L2Armor: int _pDef
com.l2jfrozen.gameserver.templates.L2Armor: int _mDef
com.l2jfrozen.gameserver.templates.L2Armor: int _mpBonus
com.l2jfrozen.gameserver.templates.L2Armor: int _hpBonus
com.l2jfrozen.gameserver.templates.L2Armor: com.l2jfrozen.gameserver.model.L2Skill _itemSkill
com.l2jfrozen.gameserver.templates.L2Armor: L2Armor(com.l2jfrozen.gameserver.templates.L2ArmorType,com.l2jfrozen.gameserver.templates.StatsSet)
com.l2jfrozen.gameserver.templates.L2Armor: com.l2jfrozen.gameserver.templates.L2ArmorType getItemType()
com.l2jfrozen.gameserver.templates.L2Armor: int getItemMask()
com.l2jfrozen.gameserver.templates.L2Armor: int getMDef()
com.l2jfrozen.gameserver.templates.L2Armor: int getPDef()
com.l2jfrozen.gameserver.templates.L2Armor: int getAvoidModifier()
com.l2jfrozen.gameserver.templates.L2Armor: int getMpBonus()
com.l2jfrozen.gameserver.templates.L2Armor: int getHpBonus()
com.l2jfrozen.gameserver.templates.L2Armor: com.l2jfrozen.gameserver.model.L2Skill getSkill()
com.l2jfrozen.gameserver.templates.L2Armor: com.l2jfrozen.gameserver.skills.funcs.Func[] getStatFuncs(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.templates.L2Armor: java.lang.Enum getItemType()
com.l2jfrozen.gameserver.templates.L2ArmorType
com.l2jfrozen.gameserver.templates.L2ArmorType: com.l2jfrozen.gameserver.templates.L2ArmorType NONE
com.l2jfrozen.gameserver.templates.L2ArmorType: com.l2jfrozen.gameserver.templates.L2ArmorType LIGHT
com.l2jfrozen.gameserver.templates.L2ArmorType: com.l2jfrozen.gameserver.templates.L2ArmorType HEAVY
com.l2jfrozen.gameserver.templates.L2ArmorType: com.l2jfrozen.gameserver.templates.L2ArmorType MAGIC
com.l2jfrozen.gameserver.templates.L2ArmorType: com.l2jfrozen.gameserver.templates.L2ArmorType PET
com.l2jfrozen.gameserver.templates.L2ArmorType: int _id
com.l2jfrozen.gameserver.templates.L2ArmorType: java.lang.String _name
com.l2jfrozen.gameserver.templates.L2ArmorType: com.l2jfrozen.gameserver.templates.L2ArmorType[] $VALUES
com.l2jfrozen.gameserver.templates.L2ArmorType: com.l2jfrozen.gameserver.templates.L2ArmorType[] values()
com.l2jfrozen.gameserver.templates.L2ArmorType: com.l2jfrozen.gameserver.templates.L2ArmorType valueOf(java.lang.String)
com.l2jfrozen.gameserver.templates.L2ArmorType: L2ArmorType(java.lang.String,int,int,java.lang.String)
com.l2jfrozen.gameserver.templates.L2ArmorType: int mask()
com.l2jfrozen.gameserver.templates.L2ArmorType: java.lang.String toString()
com.l2jfrozen.gameserver.templates.L2ArmorType: void <clinit>()
com.l2jfrozen.gameserver.templates.L2CharTemplate
com.l2jfrozen.gameserver.templates.L2CharTemplate: int baseSTR
com.l2jfrozen.gameserver.templates.L2CharTemplate: int baseCON
com.l2jfrozen.gameserver.templates.L2CharTemplate: int baseDEX
com.l2jfrozen.gameserver.templates.L2CharTemplate: int baseINT
com.l2jfrozen.gameserver.templates.L2CharTemplate: int baseWIT
com.l2jfrozen.gameserver.templates.L2CharTemplate: int baseMEN
com.l2jfrozen.gameserver.templates.L2CharTemplate: float baseHpMax
com.l2jfrozen.gameserver.templates.L2CharTemplate: float baseCpMax
com.l2jfrozen.gameserver.templates.L2CharTemplate: float baseMpMax
com.l2jfrozen.gameserver.templates.L2CharTemplate: float baseHpReg
com.l2jfrozen.gameserver.templates.L2CharTemplate: float baseMpReg
com.l2jfrozen.gameserver.templates.L2CharTemplate: int basePAtk
com.l2jfrozen.gameserver.templates.L2CharTemplate: int baseMAtk
com.l2jfrozen.gameserver.templates.L2CharTemplate: int basePDef
com.l2jfrozen.gameserver.templates.L2CharTemplate: int baseMDef
com.l2jfrozen.gameserver.templates.L2CharTemplate: int basePAtkSpd
com.l2jfrozen.gameserver.templates.L2CharTemplate: int baseMAtkSpd
com.l2jfrozen.gameserver.templates.L2CharTemplate: float baseMReuseRate
com.l2jfrozen.gameserver.templates.L2CharTemplate: int baseShldDef
com.l2jfrozen.gameserver.templates.L2CharTemplate: int baseAtkRange
com.l2jfrozen.gameserver.templates.L2CharTemplate: int baseShldRate
com.l2jfrozen.gameserver.templates.L2CharTemplate: int baseCritRate
com.l2jfrozen.gameserver.templates.L2CharTemplate: int baseMCritRate
com.l2jfrozen.gameserver.templates.L2CharTemplate: int baseWalkSpd
com.l2jfrozen.gameserver.templates.L2CharTemplate: int baseRunSpd
com.l2jfrozen.gameserver.templates.L2CharTemplate: int baseBreath
com.l2jfrozen.gameserver.templates.L2CharTemplate: int baseAggression
com.l2jfrozen.gameserver.templates.L2CharTemplate: int baseBleed
com.l2jfrozen.gameserver.templates.L2CharTemplate: int basePoison
com.l2jfrozen.gameserver.templates.L2CharTemplate: int baseStun
com.l2jfrozen.gameserver.templates.L2CharTemplate: int baseRoot
com.l2jfrozen.gameserver.templates.L2CharTemplate: int baseMovement
com.l2jfrozen.gameserver.templates.L2CharTemplate: int baseConfusion
com.l2jfrozen.gameserver.templates.L2CharTemplate: int baseSleep
com.l2jfrozen.gameserver.templates.L2CharTemplate: int baseFire
com.l2jfrozen.gameserver.templates.L2CharTemplate: int baseWind
com.l2jfrozen.gameserver.templates.L2CharTemplate: int baseWater
com.l2jfrozen.gameserver.templates.L2CharTemplate: int baseEarth
com.l2jfrozen.gameserver.templates.L2CharTemplate: int baseHoly
com.l2jfrozen.gameserver.templates.L2CharTemplate: int baseDark
com.l2jfrozen.gameserver.templates.L2CharTemplate: double baseAggressionVuln
com.l2jfrozen.gameserver.templates.L2CharTemplate: double baseBleedVuln
com.l2jfrozen.gameserver.templates.L2CharTemplate: double basePoisonVuln
com.l2jfrozen.gameserver.templates.L2CharTemplate: double baseStunVuln
com.l2jfrozen.gameserver.templates.L2CharTemplate: double baseRootVuln
com.l2jfrozen.gameserver.templates.L2CharTemplate: double baseMovementVuln
com.l2jfrozen.gameserver.templates.L2CharTemplate: double baseConfusionVuln
com.l2jfrozen.gameserver.templates.L2CharTemplate: double baseSleepVuln
com.l2jfrozen.gameserver.templates.L2CharTemplate: double baseFireVuln
com.l2jfrozen.gameserver.templates.L2CharTemplate: double baseWindVuln
com.l2jfrozen.gameserver.templates.L2CharTemplate: double baseWaterVuln
com.l2jfrozen.gameserver.templates.L2CharTemplate: double baseEarthVuln
com.l2jfrozen.gameserver.templates.L2CharTemplate: double baseHolyVuln
com.l2jfrozen.gameserver.templates.L2CharTemplate: double baseDarkVuln
com.l2jfrozen.gameserver.templates.L2CharTemplate: double baseCritVuln
com.l2jfrozen.gameserver.templates.L2CharTemplate: boolean isUndead
com.l2jfrozen.gameserver.templates.L2CharTemplate: int baseMpConsumeRate
com.l2jfrozen.gameserver.templates.L2CharTemplate: int baseHpConsumeRate
com.l2jfrozen.gameserver.templates.L2CharTemplate: int collisionRadius
com.l2jfrozen.gameserver.templates.L2CharTemplate: int collisionHeight
com.l2jfrozen.gameserver.templates.L2CharTemplate: L2CharTemplate(com.l2jfrozen.gameserver.templates.StatsSet)
com.l2jfrozen.gameserver.templates.L2EtcItem
com.l2jfrozen.gameserver.templates.L2EtcItem: L2EtcItem(com.l2jfrozen.gameserver.templates.L2EtcItemType,com.l2jfrozen.gameserver.templates.StatsSet)
com.l2jfrozen.gameserver.templates.L2EtcItem: com.l2jfrozen.gameserver.templates.L2EtcItemType getItemType()
com.l2jfrozen.gameserver.templates.L2EtcItem: boolean isConsumable()
com.l2jfrozen.gameserver.templates.L2EtcItem: int getItemMask()
com.l2jfrozen.gameserver.templates.L2EtcItem: java.lang.Enum getItemType()
com.l2jfrozen.gameserver.templates.L2EtcItemType
com.l2jfrozen.gameserver.templates.L2EtcItemType: com.l2jfrozen.gameserver.templates.L2EtcItemType ARROW
com.l2jfrozen.gameserver.templates.L2EtcItemType: com.l2jfrozen.gameserver.templates.L2EtcItemType MATERIAL
com.l2jfrozen.gameserver.templates.L2EtcItemType: com.l2jfrozen.gameserver.templates.L2EtcItemType PET_COLLAR
com.l2jfrozen.gameserver.templates.L2EtcItemType: com.l2jfrozen.gameserver.templates.L2EtcItemType POTION
com.l2jfrozen.gameserver.templates.L2EtcItemType: com.l2jfrozen.gameserver.templates.L2EtcItemType RECEIPE
com.l2jfrozen.gameserver.templates.L2EtcItemType: com.l2jfrozen.gameserver.templates.L2EtcItemType SCROLL
com.l2jfrozen.gameserver.templates.L2EtcItemType: com.l2jfrozen.gameserver.templates.L2EtcItemType QUEST
com.l2jfrozen.gameserver.templates.L2EtcItemType: com.l2jfrozen.gameserver.templates.L2EtcItemType MONEY
com.l2jfrozen.gameserver.templates.L2EtcItemType: com.l2jfrozen.gameserver.templates.L2EtcItemType OTHER
com.l2jfrozen.gameserver.templates.L2EtcItemType: com.l2jfrozen.gameserver.templates.L2EtcItemType SPELLBOOK
com.l2jfrozen.gameserver.templates.L2EtcItemType: com.l2jfrozen.gameserver.templates.L2EtcItemType SEED
com.l2jfrozen.gameserver.templates.L2EtcItemType: com.l2jfrozen.gameserver.templates.L2EtcItemType SHOT
com.l2jfrozen.gameserver.templates.L2EtcItemType: com.l2jfrozen.gameserver.templates.L2EtcItemType HERB
com.l2jfrozen.gameserver.templates.L2EtcItemType: int _id
com.l2jfrozen.gameserver.templates.L2EtcItemType: java.lang.String _name
com.l2jfrozen.gameserver.templates.L2EtcItemType: com.l2jfrozen.gameserver.templates.L2EtcItemType[] $VALUES
com.l2jfrozen.gameserver.templates.L2EtcItemType: com.l2jfrozen.gameserver.templates.L2EtcItemType[] values()
com.l2jfrozen.gameserver.templates.L2EtcItemType: com.l2jfrozen.gameserver.templates.L2EtcItemType valueOf(java.lang.String)
com.l2jfrozen.gameserver.templates.L2EtcItemType: L2EtcItemType(java.lang.String,int,int,java.lang.String)
com.l2jfrozen.gameserver.templates.L2EtcItemType: int mask()
com.l2jfrozen.gameserver.templates.L2EtcItemType: java.lang.String toString()
com.l2jfrozen.gameserver.templates.L2EtcItemType: void <clinit>()
com.l2jfrozen.gameserver.templates.L2HelperBuff
com.l2jfrozen.gameserver.templates.L2HelperBuff: int _lowerLevel
com.l2jfrozen.gameserver.templates.L2HelperBuff: int _upperLevel
com.l2jfrozen.gameserver.templates.L2HelperBuff: int _skillID
com.l2jfrozen.gameserver.templates.L2HelperBuff: int _skillLevel
com.l2jfrozen.gameserver.templates.L2HelperBuff: boolean _isMagicClass
com.l2jfrozen.gameserver.templates.L2HelperBuff: L2HelperBuff(com.l2jfrozen.gameserver.templates.StatsSet)
com.l2jfrozen.gameserver.templates.L2HelperBuff: int getLowerLevel()
com.l2jfrozen.gameserver.templates.L2HelperBuff: void setLowerLevel(int)
com.l2jfrozen.gameserver.templates.L2HelperBuff: int getUpperLevel()
com.l2jfrozen.gameserver.templates.L2HelperBuff: void setUpperLevel(int)
com.l2jfrozen.gameserver.templates.L2HelperBuff: int getSkillID()
com.l2jfrozen.gameserver.templates.L2HelperBuff: void setSkillID(int)
com.l2jfrozen.gameserver.templates.L2HelperBuff: int getSkillLevel()
com.l2jfrozen.gameserver.templates.L2HelperBuff: void setSkillLevel(int)
com.l2jfrozen.gameserver.templates.L2HelperBuff: boolean isMagicClassBuff()
com.l2jfrozen.gameserver.templates.L2HelperBuff: void setIsMagicClass(boolean)
com.l2jfrozen.gameserver.templates.L2Henna
com.l2jfrozen.gameserver.templates.L2Henna: int symbolId
com.l2jfrozen.gameserver.templates.L2Henna: java.lang.String symbolName
com.l2jfrozen.gameserver.templates.L2Henna: int dye
com.l2jfrozen.gameserver.templates.L2Henna: int price
com.l2jfrozen.gameserver.templates.L2Henna: int amount
com.l2jfrozen.gameserver.templates.L2Henna: int statINT
com.l2jfrozen.gameserver.templates.L2Henna: int statSTR
com.l2jfrozen.gameserver.templates.L2Henna: int statCON
com.l2jfrozen.gameserver.templates.L2Henna: int statMEM
com.l2jfrozen.gameserver.templates.L2Henna: int statDEX
com.l2jfrozen.gameserver.templates.L2Henna: int statWIT
com.l2jfrozen.gameserver.templates.L2Henna: L2Henna(com.l2jfrozen.gameserver.templates.StatsSet)
com.l2jfrozen.gameserver.templates.L2Henna: int getSymbolId()
com.l2jfrozen.gameserver.templates.L2Henna: int getDyeId()
com.l2jfrozen.gameserver.templates.L2Henna: int getPrice()
com.l2jfrozen.gameserver.templates.L2Henna: int getAmountDyeRequire()
com.l2jfrozen.gameserver.templates.L2Henna: int getStatINT()
com.l2jfrozen.gameserver.templates.L2Henna: int getStatSTR()
com.l2jfrozen.gameserver.templates.L2Henna: int getStatCON()
com.l2jfrozen.gameserver.templates.L2Henna: int getStatMEM()
com.l2jfrozen.gameserver.templates.L2Henna: int getStatDEX()
com.l2jfrozen.gameserver.templates.L2Henna: int getStatWIT()
com.l2jfrozen.gameserver.templates.L2Item
com.l2jfrozen.gameserver.templates.L2Item: int TYPE1_WEAPON_RING_EARRING_NECKLACE
com.l2jfrozen.gameserver.templates.L2Item: int TYPE1_SHIELD_ARMOR
com.l2jfrozen.gameserver.templates.L2Item: int TYPE1_ITEM_QUESTITEM_ADENA
com.l2jfrozen.gameserver.templates.L2Item: int TYPE2_WEAPON
com.l2jfrozen.gameserver.templates.L2Item: int TYPE2_SHIELD_ARMOR
com.l2jfrozen.gameserver.templates.L2Item: int TYPE2_ACCESSORY
com.l2jfrozen.gameserver.templates.L2Item: int TYPE2_QUEST
com.l2jfrozen.gameserver.templates.L2Item: int TYPE2_MONEY
com.l2jfrozen.gameserver.templates.L2Item: int TYPE2_OTHER
com.l2jfrozen.gameserver.templates.L2Item: int TYPE2_PET_WOLF
com.l2jfrozen.gameserver.templates.L2Item: int TYPE2_PET_HATCHLING
com.l2jfrozen.gameserver.templates.L2Item: int TYPE2_PET_STRIDER
com.l2jfrozen.gameserver.templates.L2Item: int TYPE2_PET_BABY
com.l2jfrozen.gameserver.templates.L2Item: int SLOT_NONE
com.l2jfrozen.gameserver.templates.L2Item: int SLOT_UNDERWEAR
com.l2jfrozen.gameserver.templates.L2Item: int SLOT_R_EAR
com.l2jfrozen.gameserver.templates.L2Item: int SLOT_L_EAR
com.l2jfrozen.gameserver.templates.L2Item: int SLOT_NECK
com.l2jfrozen.gameserver.templates.L2Item: int SLOT_R_FINGER
com.l2jfrozen.gameserver.templates.L2Item: int SLOT_L_FINGER
com.l2jfrozen.gameserver.templates.L2Item: int SLOT_HEAD
com.l2jfrozen.gameserver.templates.L2Item: int SLOT_R_HAND
com.l2jfrozen.gameserver.templates.L2Item: int SLOT_L_HAND
com.l2jfrozen.gameserver.templates.L2Item: int SLOT_GLOVES
com.l2jfrozen.gameserver.templates.L2Item: int SLOT_CHEST
com.l2jfrozen.gameserver.templates.L2Item: int SLOT_LEGS
com.l2jfrozen.gameserver.templates.L2Item: int SLOT_FEET
com.l2jfrozen.gameserver.templates.L2Item: int SLOT_BACK
com.l2jfrozen.gameserver.templates.L2Item: int SLOT_LR_HAND
com.l2jfrozen.gameserver.templates.L2Item: int SLOT_FULL_ARMOR
com.l2jfrozen.gameserver.templates.L2Item: int SLOT_HAIR
com.l2jfrozen.gameserver.templates.L2Item: int SLOT_WOLF
com.l2jfrozen.gameserver.templates.L2Item: int SLOT_HATCHLING
com.l2jfrozen.gameserver.templates.L2Item: int SLOT_STRIDER
com.l2jfrozen.gameserver.templates.L2Item: int SLOT_BABYPET
com.l2jfrozen.gameserver.templates.L2Item: int SLOT_FACE
com.l2jfrozen.gameserver.templates.L2Item: int SLOT_DHAIR
com.l2jfrozen.gameserver.templates.L2Item: int CRYSTAL_NONE
com.l2jfrozen.gameserver.templates.L2Item: int CRYSTAL_D
com.l2jfrozen.gameserver.templates.L2Item: int CRYSTAL_C
com.l2jfrozen.gameserver.templates.L2Item: int CRYSTAL_B
com.l2jfrozen.gameserver.templates.L2Item: int CRYSTAL_A
com.l2jfrozen.gameserver.templates.L2Item: int CRYSTAL_S
com.l2jfrozen.gameserver.templates.L2Item: int[] crystalItemId
com.l2jfrozen.gameserver.templates.L2Item: int[] crystalEnchantBonusArmor
com.l2jfrozen.gameserver.templates.L2Item: int[] crystalEnchantBonusWeapon
com.l2jfrozen.gameserver.templates.L2Item: int _itemId
com.l2jfrozen.gameserver.templates.L2Item: java.lang.String _name
com.l2jfrozen.gameserver.templates.L2Item: int _type1
com.l2jfrozen.gameserver.templates.L2Item: int _type2
com.l2jfrozen.gameserver.templates.L2Item: int _weight
com.l2jfrozen.gameserver.templates.L2Item: boolean _crystallizable
com.l2jfrozen.gameserver.templates.L2Item: boolean _stackable
com.l2jfrozen.gameserver.templates.L2Item: int _crystalType
com.l2jfrozen.gameserver.templates.L2Item: int _duration
com.l2jfrozen.gameserver.templates.L2Item: int _bodyPart
com.l2jfrozen.gameserver.templates.L2Item: int _referencePrice
com.l2jfrozen.gameserver.templates.L2Item: int _crystalCount
com.l2jfrozen.gameserver.templates.L2Item: boolean _sellable
com.l2jfrozen.gameserver.templates.L2Item: boolean _dropable
com.l2jfrozen.gameserver.templates.L2Item: boolean _destroyable
com.l2jfrozen.gameserver.templates.L2Item: boolean _tradeable
com.l2jfrozen.gameserver.templates.L2Item: java.lang.Enum _type
com.l2jfrozen.gameserver.templates.L2Item: com.l2jfrozen.gameserver.skills.funcs.FuncTemplate[] _funcTemplates
com.l2jfrozen.gameserver.templates.L2Item: com.l2jfrozen.gameserver.skills.effects.EffectTemplate[] _effectTemplates
com.l2jfrozen.gameserver.templates.L2Item: com.l2jfrozen.gameserver.model.L2Skill[] _skills
com.l2jfrozen.gameserver.templates.L2Item: com.l2jfrozen.gameserver.skills.funcs.Func[] _emptyFunctionSet
com.l2jfrozen.gameserver.templates.L2Item: com.l2jfrozen.gameserver.model.L2Effect[] _emptyEffectSet
com.l2jfrozen.gameserver.templates.L2Item: L2Item(java.lang.Enum,com.l2jfrozen.gameserver.templates.StatsSet)
com.l2jfrozen.gameserver.templates.L2Item: java.lang.Enum getItemType()
com.l2jfrozen.gameserver.templates.L2Item: int getDuration()
com.l2jfrozen.gameserver.templates.L2Item: int getItemId()
com.l2jfrozen.gameserver.templates.L2Item: int getItemMask()
com.l2jfrozen.gameserver.templates.L2Item: int getType2()
com.l2jfrozen.gameserver.templates.L2Item: int getWeight()
com.l2jfrozen.gameserver.templates.L2Item: boolean isCrystallizable()
com.l2jfrozen.gameserver.templates.L2Item: int getCrystalType()
com.l2jfrozen.gameserver.templates.L2Item: int getCrystalItemId()
com.l2jfrozen.gameserver.templates.L2Item: int getItemGrade()
com.l2jfrozen.gameserver.templates.L2Item: int getCrystalCount()
com.l2jfrozen.gameserver.templates.L2Item: int getCrystalCount(int)
com.l2jfrozen.gameserver.templates.L2Item: java.lang.String getName()
com.l2jfrozen.gameserver.templates.L2Item: int getBodyPart()
com.l2jfrozen.gameserver.templates.L2Item: int getType1()
com.l2jfrozen.gameserver.templates.L2Item: boolean isStackable()
com.l2jfrozen.gameserver.templates.L2Item: boolean isConsumable()
com.l2jfrozen.gameserver.templates.L2Item: int getReferencePrice()
com.l2jfrozen.gameserver.templates.L2Item: boolean isSellable()
com.l2jfrozen.gameserver.templates.L2Item: boolean isDropable()
com.l2jfrozen.gameserver.templates.L2Item: boolean isDestroyable()
com.l2jfrozen.gameserver.templates.L2Item: boolean isTradeable()
com.l2jfrozen.gameserver.templates.L2Item: boolean isPotion()
com.l2jfrozen.gameserver.templates.L2Item: boolean isForHatchling()
com.l2jfrozen.gameserver.templates.L2Item: boolean isForStrider()
com.l2jfrozen.gameserver.templates.L2Item: boolean isForWolf()
com.l2jfrozen.gameserver.templates.L2Item: boolean isForBabyPet()
com.l2jfrozen.gameserver.templates.L2Item: com.l2jfrozen.gameserver.skills.funcs.Func[] getStatFuncs(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.templates.L2Item: com.l2jfrozen.gameserver.model.L2Effect[] getEffects(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.templates.L2Item: com.l2jfrozen.gameserver.model.L2Effect[] getSkillEffects(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.templates.L2Item: void attach(com.l2jfrozen.gameserver.skills.funcs.FuncTemplate)
com.l2jfrozen.gameserver.templates.L2Item: void attach(com.l2jfrozen.gameserver.skills.effects.EffectTemplate)
com.l2jfrozen.gameserver.templates.L2Item: void attach(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.templates.L2Item: java.lang.String toString()
com.l2jfrozen.gameserver.templates.L2Item: void <clinit>()
com.l2jfrozen.gameserver.templates.L2ItemType
com.l2jfrozen.gameserver.templates.L2ItemType: com.l2jfrozen.gameserver.templates.L2ItemType[] $VALUES
com.l2jfrozen.gameserver.templates.L2ItemType: com.l2jfrozen.gameserver.templates.L2ItemType[] values()
com.l2jfrozen.gameserver.templates.L2ItemType: com.l2jfrozen.gameserver.templates.L2ItemType valueOf(java.lang.String)
com.l2jfrozen.gameserver.templates.L2ItemType: L2ItemType(java.lang.String,int)
com.l2jfrozen.gameserver.templates.L2ItemType: void <clinit>()
com.l2jfrozen.gameserver.templates.L2NpcTemplate
com.l2jfrozen.gameserver.templates.L2NpcTemplate: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.templates.L2NpcTemplate: int npcId
com.l2jfrozen.gameserver.templates.L2NpcTemplate: int idTemplate
com.l2jfrozen.gameserver.templates.L2NpcTemplate: java.lang.String type
com.l2jfrozen.gameserver.templates.L2NpcTemplate: java.lang.String name
com.l2jfrozen.gameserver.templates.L2NpcTemplate: boolean serverSideName
com.l2jfrozen.gameserver.templates.L2NpcTemplate: java.lang.String title
com.l2jfrozen.gameserver.templates.L2NpcTemplate: boolean serverSideTitle
com.l2jfrozen.gameserver.templates.L2NpcTemplate: java.lang.String sex
com.l2jfrozen.gameserver.templates.L2NpcTemplate: byte level
com.l2jfrozen.gameserver.templates.L2NpcTemplate: int rewardExp
com.l2jfrozen.gameserver.templates.L2NpcTemplate: int rewardSp
com.l2jfrozen.gameserver.templates.L2NpcTemplate: int aggroRange
com.l2jfrozen.gameserver.templates.L2NpcTemplate: int rhand
com.l2jfrozen.gameserver.templates.L2NpcTemplate: int lhand
com.l2jfrozen.gameserver.templates.L2NpcTemplate: int armor
com.l2jfrozen.gameserver.templates.L2NpcTemplate: java.lang.String factionId
com.l2jfrozen.gameserver.templates.L2NpcTemplate: int factionRange
com.l2jfrozen.gameserver.templates.L2NpcTemplate: int absorbLevel
com.l2jfrozen.gameserver.templates.L2NpcTemplate: com.l2jfrozen.gameserver.templates.AbsorbCrystalType absorbType
com.l2jfrozen.gameserver.templates.L2NpcTemplate: com.l2jfrozen.gameserver.templates.Race race
com.l2jfrozen.gameserver.templates.L2NpcTemplate: boolean _custom
com.l2jfrozen.gameserver.templates.L2NpcTemplate: com.l2jfrozen.gameserver.templates.StatsSet _npcStatsSet
com.l2jfrozen.gameserver.templates.L2NpcTemplate: javolution.util.FastList _categories
com.l2jfrozen.gameserver.templates.L2NpcTemplate: java.util.List _minions
com.l2jfrozen.gameserver.templates.L2NpcTemplate: java.util.List _teachInfo
com.l2jfrozen.gameserver.templates.L2NpcTemplate: java.util.Map _skills
com.l2jfrozen.gameserver.templates.L2NpcTemplate: java.util.Map _vulnerabilities
com.l2jfrozen.gameserver.templates.L2NpcTemplate: java.util.Map _questEvents
com.l2jfrozen.gameserver.templates.L2NpcTemplate: javolution.util.FastMap _aiEvents
com.l2jfrozen.gameserver.templates.L2NpcTemplate: L2NpcTemplate(com.l2jfrozen.gameserver.templates.StatsSet,boolean)
com.l2jfrozen.gameserver.templates.L2NpcTemplate: void addTeachInfo(com.l2jfrozen.gameserver.model.base.ClassId)
com.l2jfrozen.gameserver.templates.L2NpcTemplate: com.l2jfrozen.gameserver.model.base.ClassId[] getTeachInfo()
com.l2jfrozen.gameserver.templates.L2NpcTemplate: boolean canTeach(com.l2jfrozen.gameserver.model.base.ClassId)
com.l2jfrozen.gameserver.templates.L2NpcTemplate: void addDropData(com.l2jfrozen.gameserver.model.L2DropData,int)
com.l2jfrozen.gameserver.templates.L2NpcTemplate: void addRaidData(com.l2jfrozen.gameserver.model.L2MinionData)
com.l2jfrozen.gameserver.templates.L2NpcTemplate: void addSkill(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.templates.L2NpcTemplate: void addVulnerability(com.l2jfrozen.gameserver.skills.Stats,double)
com.l2jfrozen.gameserver.templates.L2NpcTemplate: double getVulnerability(com.l2jfrozen.gameserver.skills.Stats)
com.l2jfrozen.gameserver.templates.L2NpcTemplate: double removeVulnerability(com.l2jfrozen.gameserver.skills.Stats)
com.l2jfrozen.gameserver.templates.L2NpcTemplate: javolution.util.FastList getDropData()
com.l2jfrozen.gameserver.templates.L2NpcTemplate: java.util.List getAllDropData()
com.l2jfrozen.gameserver.templates.L2NpcTemplate: void clearAllDropData()
com.l2jfrozen.gameserver.templates.L2NpcTemplate: java.util.List getMinionData()
com.l2jfrozen.gameserver.templates.L2NpcTemplate: java.util.Map getSkills()
com.l2jfrozen.gameserver.templates.L2NpcTemplate: void addQuestEvent(com.l2jfrozen.gameserver.model.quest.QuestEventType,com.l2jfrozen.gameserver.model.quest.Quest)
com.l2jfrozen.gameserver.templates.L2NpcTemplate: com.l2jfrozen.gameserver.model.quest.Quest[] getEventQuests(com.l2jfrozen.gameserver.model.quest.QuestEventType)
com.l2jfrozen.gameserver.templates.L2NpcTemplate: void addAIEvent(com.l2jfrozen.gameserver.ai.special.manager.Action,com.l2jfrozen.gameserver.ai.special.manager.AIExtend)
com.l2jfrozen.gameserver.templates.L2NpcTemplate: void clearAI()
com.l2jfrozen.gameserver.templates.L2NpcTemplate: com.l2jfrozen.gameserver.templates.StatsSet getStatsSet()
com.l2jfrozen.gameserver.templates.L2NpcTemplate: void setRace(int)
com.l2jfrozen.gameserver.templates.L2NpcTemplate: com.l2jfrozen.gameserver.templates.Race getRace()
com.l2jfrozen.gameserver.templates.L2NpcTemplate: byte getLevel()
com.l2jfrozen.gameserver.templates.L2NpcTemplate: java.lang.String getName()
com.l2jfrozen.gameserver.templates.L2NpcTemplate: int getNpcId()
com.l2jfrozen.gameserver.templates.L2NpcTemplate: boolean isCustom()
com.l2jfrozen.gameserver.templates.L2NpcTemplate: void <clinit>()
com.l2jfrozen.gameserver.templates.L2PcTemplate
com.l2jfrozen.gameserver.templates.L2PcTemplate: com.l2jfrozen.gameserver.model.base.Race race
com.l2jfrozen.gameserver.templates.L2PcTemplate: com.l2jfrozen.gameserver.model.base.ClassId classId
com.l2jfrozen.gameserver.templates.L2PcTemplate: int _currentCollisionRadius
com.l2jfrozen.gameserver.templates.L2PcTemplate: int _currentCollisionHeight
com.l2jfrozen.gameserver.templates.L2PcTemplate: java.lang.String className
com.l2jfrozen.gameserver.templates.L2PcTemplate: int spawnX
com.l2jfrozen.gameserver.templates.L2PcTemplate: int spawnY
com.l2jfrozen.gameserver.templates.L2PcTemplate: int spawnZ
com.l2jfrozen.gameserver.templates.L2PcTemplate: int classBaseLevel
com.l2jfrozen.gameserver.templates.L2PcTemplate: float lvlHpAdd
com.l2jfrozen.gameserver.templates.L2PcTemplate: float lvlHpMod
com.l2jfrozen.gameserver.templates.L2PcTemplate: float lvlCpAdd
com.l2jfrozen.gameserver.templates.L2PcTemplate: float lvlCpMod
com.l2jfrozen.gameserver.templates.L2PcTemplate: float lvlMpAdd
com.l2jfrozen.gameserver.templates.L2PcTemplate: float lvlMpMod
com.l2jfrozen.gameserver.templates.L2PcTemplate: java.util.List _items
com.l2jfrozen.gameserver.templates.L2PcTemplate: L2PcTemplate(com.l2jfrozen.gameserver.templates.StatsSet)
com.l2jfrozen.gameserver.templates.L2PcTemplate: void addItem(int)
com.l2jfrozen.gameserver.templates.L2PcTemplate: com.l2jfrozen.gameserver.templates.L2Item[] getItems()
com.l2jfrozen.gameserver.templates.L2PcTemplate: double getCollisionRadius()
com.l2jfrozen.gameserver.templates.L2PcTemplate: double getCollisionHeight()
com.l2jfrozen.gameserver.templates.L2PcTemplate: int getBaseFallSafeHeight(boolean)
com.l2jfrozen.gameserver.templates.L2PcTemplate: int getFallHeight()
com.l2jfrozen.gameserver.templates.L2Weapon
com.l2jfrozen.gameserver.templates.L2Weapon: int _soulShotCount
com.l2jfrozen.gameserver.templates.L2Weapon: int _spiritShotCount
com.l2jfrozen.gameserver.templates.L2Weapon: int _pDam
com.l2jfrozen.gameserver.templates.L2Weapon: int _rndDam
com.l2jfrozen.gameserver.templates.L2Weapon: int _critical
com.l2jfrozen.gameserver.templates.L2Weapon: double _hitModifier
com.l2jfrozen.gameserver.templates.L2Weapon: int _avoidModifier
com.l2jfrozen.gameserver.templates.L2Weapon: int _shieldDef
com.l2jfrozen.gameserver.templates.L2Weapon: double _shieldDefRate
com.l2jfrozen.gameserver.templates.L2Weapon: int _atkSpeed
com.l2jfrozen.gameserver.templates.L2Weapon: int _atkReuse
com.l2jfrozen.gameserver.templates.L2Weapon: int _mpConsume
com.l2jfrozen.gameserver.templates.L2Weapon: int _mDam
com.l2jfrozen.gameserver.templates.L2Weapon: com.l2jfrozen.gameserver.model.L2Skill _itemSkill
com.l2jfrozen.gameserver.templates.L2Weapon: com.l2jfrozen.gameserver.model.L2Skill _enchant4Skill
com.l2jfrozen.gameserver.templates.L2Weapon: com.l2jfrozen.gameserver.model.L2Skill[] _skillsOnCast
com.l2jfrozen.gameserver.templates.L2Weapon: com.l2jfrozen.gameserver.model.L2Skill[] _skillsOnCrit
com.l2jfrozen.gameserver.templates.L2Weapon: L2Weapon(com.l2jfrozen.gameserver.templates.L2WeaponType,com.l2jfrozen.gameserver.templates.StatsSet)
com.l2jfrozen.gameserver.templates.L2Weapon: com.l2jfrozen.gameserver.templates.L2WeaponType getItemType()
com.l2jfrozen.gameserver.templates.L2Weapon: int getItemMask()
com.l2jfrozen.gameserver.templates.L2Weapon: int getSoulShotCount()
com.l2jfrozen.gameserver.templates.L2Weapon: int getSpiritShotCount()
com.l2jfrozen.gameserver.templates.L2Weapon: int getPDamage()
com.l2jfrozen.gameserver.templates.L2Weapon: int getRandomDamage()
com.l2jfrozen.gameserver.templates.L2Weapon: int getAttackSpeed()
com.l2jfrozen.gameserver.templates.L2Weapon: int getAttackReuseDelay()
com.l2jfrozen.gameserver.templates.L2Weapon: int getAvoidModifier()
com.l2jfrozen.gameserver.templates.L2Weapon: int getCritical()
com.l2jfrozen.gameserver.templates.L2Weapon: double getHitModifier()
com.l2jfrozen.gameserver.templates.L2Weapon: int getMDamage()
com.l2jfrozen.gameserver.templates.L2Weapon: int getMpConsume()
com.l2jfrozen.gameserver.templates.L2Weapon: int getShieldDef()
com.l2jfrozen.gameserver.templates.L2Weapon: double getShieldDefRate()
com.l2jfrozen.gameserver.templates.L2Weapon: com.l2jfrozen.gameserver.model.L2Skill getSkill()
com.l2jfrozen.gameserver.templates.L2Weapon: com.l2jfrozen.gameserver.model.L2Skill getEnchant4Skill()
com.l2jfrozen.gameserver.templates.L2Weapon: com.l2jfrozen.gameserver.skills.funcs.Func[] getStatFuncs(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance,com.l2jfrozen.gameserver.model.L2Character)
com.l2jfrozen.gameserver.templates.L2Weapon: com.l2jfrozen.gameserver.model.L2Effect[] getSkillEffects(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Character,boolean)
com.l2jfrozen.gameserver.templates.L2Weapon: boolean getSkillEffects(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.templates.L2Weapon: void attachOnCrit(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.templates.L2Weapon: void attachOnCast(com.l2jfrozen.gameserver.model.L2Skill)
com.l2jfrozen.gameserver.templates.L2Weapon: java.lang.Enum getItemType()
com.l2jfrozen.gameserver.templates.L2WeaponType
com.l2jfrozen.gameserver.templates.L2WeaponType: com.l2jfrozen.gameserver.templates.L2WeaponType NONE
com.l2jfrozen.gameserver.templates.L2WeaponType: com.l2jfrozen.gameserver.templates.L2WeaponType SWORD
com.l2jfrozen.gameserver.templates.L2WeaponType: com.l2jfrozen.gameserver.templates.L2WeaponType BLUNT
com.l2jfrozen.gameserver.templates.L2WeaponType: com.l2jfrozen.gameserver.templates.L2WeaponType DAGGER
com.l2jfrozen.gameserver.templates.L2WeaponType: com.l2jfrozen.gameserver.templates.L2WeaponType BOW
com.l2jfrozen.gameserver.templates.L2WeaponType: com.l2jfrozen.gameserver.templates.L2WeaponType POLE
com.l2jfrozen.gameserver.templates.L2WeaponType: com.l2jfrozen.gameserver.templates.L2WeaponType ETC
com.l2jfrozen.gameserver.templates.L2WeaponType: com.l2jfrozen.gameserver.templates.L2WeaponType FIST
com.l2jfrozen.gameserver.templates.L2WeaponType: com.l2jfrozen.gameserver.templates.L2WeaponType DUAL
com.l2jfrozen.gameserver.templates.L2WeaponType: com.l2jfrozen.gameserver.templates.L2WeaponType DUALFIST
com.l2jfrozen.gameserver.templates.L2WeaponType: com.l2jfrozen.gameserver.templates.L2WeaponType BIGSWORD
com.l2jfrozen.gameserver.templates.L2WeaponType: com.l2jfrozen.gameserver.templates.L2WeaponType PET
com.l2jfrozen.gameserver.templates.L2WeaponType: com.l2jfrozen.gameserver.templates.L2WeaponType ROD
com.l2jfrozen.gameserver.templates.L2WeaponType: com.l2jfrozen.gameserver.templates.L2WeaponType BIGBLUNT
com.l2jfrozen.gameserver.templates.L2WeaponType: int _id
com.l2jfrozen.gameserver.templates.L2WeaponType: java.lang.String _name
com.l2jfrozen.gameserver.templates.L2WeaponType: com.l2jfrozen.gameserver.templates.L2WeaponType[] $VALUES
com.l2jfrozen.gameserver.templates.L2WeaponType: com.l2jfrozen.gameserver.templates.L2WeaponType[] values()
com.l2jfrozen.gameserver.templates.L2WeaponType: com.l2jfrozen.gameserver.templates.L2WeaponType valueOf(java.lang.String)
com.l2jfrozen.gameserver.templates.L2WeaponType: L2WeaponType(java.lang.String,int,int,java.lang.String)
com.l2jfrozen.gameserver.templates.L2WeaponType: int mask()
com.l2jfrozen.gameserver.templates.L2WeaponType: java.lang.String toString()
com.l2jfrozen.gameserver.templates.L2WeaponType: void <clinit>()
com.l2jfrozen.gameserver.templates.Race
com.l2jfrozen.gameserver.templates.Race: com.l2jfrozen.gameserver.templates.Race UNDEAD
com.l2jfrozen.gameserver.templates.Race: com.l2jfrozen.gameserver.templates.Race MAGICCREATURE
com.l2jfrozen.gameserver.templates.Race: com.l2jfrozen.gameserver.templates.Race BEAST
com.l2jfrozen.gameserver.templates.Race: com.l2jfrozen.gameserver.templates.Race ANIMAL
com.l2jfrozen.gameserver.templates.Race: com.l2jfrozen.gameserver.templates.Race PLANT
com.l2jfrozen.gameserver.templates.Race: com.l2jfrozen.gameserver.templates.Race HUMANOID
com.l2jfrozen.gameserver.templates.Race: com.l2jfrozen.gameserver.templates.Race SPIRIT
com.l2jfrozen.gameserver.templates.Race: com.l2jfrozen.gameserver.templates.Race ANGEL
com.l2jfrozen.gameserver.templates.Race: com.l2jfrozen.gameserver.templates.Race DEMON
com.l2jfrozen.gameserver.templates.Race: com.l2jfrozen.gameserver.templates.Race DRAGON
com.l2jfrozen.gameserver.templates.Race: com.l2jfrozen.gameserver.templates.Race GIANT
com.l2jfrozen.gameserver.templates.Race: com.l2jfrozen.gameserver.templates.Race BUG
com.l2jfrozen.gameserver.templates.Race: com.l2jfrozen.gameserver.templates.Race FAIRIE
com.l2jfrozen.gameserver.templates.Race: com.l2jfrozen.gameserver.templates.Race HUMAN
com.l2jfrozen.gameserver.templates.Race: com.l2jfrozen.gameserver.templates.Race ELVE
com.l2jfrozen.gameserver.templates.Race: com.l2jfrozen.gameserver.templates.Race DARKELVE
com.l2jfrozen.gameserver.templates.Race: com.l2jfrozen.gameserver.templates.Race ORC
com.l2jfrozen.gameserver.templates.Race: com.l2jfrozen.gameserver.templates.Race DWARVE
com.l2jfrozen.gameserver.templates.Race: com.l2jfrozen.gameserver.templates.Race OTHER
com.l2jfrozen.gameserver.templates.Race: com.l2jfrozen.gameserver.templates.Race NONLIVING
com.l2jfrozen.gameserver.templates.Race: com.l2jfrozen.gameserver.templates.Race SIEGEWEAPON
com.l2jfrozen.gameserver.templates.Race: com.l2jfrozen.gameserver.templates.Race DEFENDINGARMY
com.l2jfrozen.gameserver.templates.Race: com.l2jfrozen.gameserver.templates.Race MERCENARIE
com.l2jfrozen.gameserver.templates.Race: com.l2jfrozen.gameserver.templates.Race UNKNOWN
com.l2jfrozen.gameserver.templates.Race: com.l2jfrozen.gameserver.templates.Race[] $VALUES
com.l2jfrozen.gameserver.templates.Race: com.l2jfrozen.gameserver.templates.Race[] values()
com.l2jfrozen.gameserver.templates.Race: com.l2jfrozen.gameserver.templates.Race valueOf(java.lang.String)
com.l2jfrozen.gameserver.templates.Race: Race(java.lang.String,int)
com.l2jfrozen.gameserver.templates.Race: void <clinit>()
com.l2jfrozen.gameserver.templates.StatsSet
com.l2jfrozen.gameserver.templates.StatsSet: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.templates.StatsSet: java.util.Map _set
com.l2jfrozen.gameserver.templates.StatsSet: boolean $assertionsDisabled
com.l2jfrozen.gameserver.templates.StatsSet: StatsSet()
com.l2jfrozen.gameserver.templates.StatsSet: java.util.Map getSet()
com.l2jfrozen.gameserver.templates.StatsSet: void add(com.l2jfrozen.gameserver.templates.StatsSet)
com.l2jfrozen.gameserver.templates.StatsSet: boolean getBool(java.lang.String)
com.l2jfrozen.gameserver.templates.StatsSet: boolean getBool(java.lang.String,boolean)
com.l2jfrozen.gameserver.templates.StatsSet: byte getByte(java.lang.String,byte)
com.l2jfrozen.gameserver.templates.StatsSet: byte getByte(java.lang.String)
com.l2jfrozen.gameserver.templates.StatsSet: short getShort(java.lang.String,short)
com.l2jfrozen.gameserver.templates.StatsSet: short getShort(java.lang.String)
com.l2jfrozen.gameserver.templates.StatsSet: int getInteger(java.lang.String)
com.l2jfrozen.gameserver.templates.StatsSet: int getInteger(java.lang.String,int)
com.l2jfrozen.gameserver.templates.StatsSet: int[] getIntegerArray(java.lang.String)
com.l2jfrozen.gameserver.templates.StatsSet: long getLong(java.lang.String)
com.l2jfrozen.gameserver.templates.StatsSet: long getLong(java.lang.String,int)
com.l2jfrozen.gameserver.templates.StatsSet: float getFloat(java.lang.String)
com.l2jfrozen.gameserver.templates.StatsSet: float getFloat(java.lang.String,float)
com.l2jfrozen.gameserver.templates.StatsSet: double getDouble(java.lang.String)
com.l2jfrozen.gameserver.templates.StatsSet: double getDouble(java.lang.String,float)
com.l2jfrozen.gameserver.templates.StatsSet: java.lang.String getString(java.lang.String)
com.l2jfrozen.gameserver.templates.StatsSet: java.lang.String getString(java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.templates.StatsSet: java.lang.Enum getEnum(java.lang.String,java.lang.Class)
com.l2jfrozen.gameserver.templates.StatsSet: java.lang.Enum getEnum(java.lang.String,java.lang.Class,java.lang.Enum)
com.l2jfrozen.gameserver.templates.StatsSet: void set(java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.templates.StatsSet: void set(java.lang.String,boolean)
com.l2jfrozen.gameserver.templates.StatsSet: void set(java.lang.String,int)
com.l2jfrozen.gameserver.templates.StatsSet: void set(java.lang.String,double)
com.l2jfrozen.gameserver.templates.StatsSet: void set(java.lang.String,long)
com.l2jfrozen.gameserver.templates.StatsSet: void set(java.lang.String,java.lang.Enum)
com.l2jfrozen.gameserver.templates.StatsSet: void safeSet(java.lang.String,int,int,int,java.lang.String)
com.l2jfrozen.gameserver.templates.StatsSet: java.lang.String toString()
com.l2jfrozen.gameserver.templates.StatsSet: void <clinit>()
com.l2jfrozen.gameserver.thread.daemons.ItemsAutoDestroy
com.l2jfrozen.gameserver.thread.daemons.ItemsAutoDestroy: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.thread.daemons.ItemsAutoDestroy: com.l2jfrozen.gameserver.thread.daemons.ItemsAutoDestroy _instance
com.l2jfrozen.gameserver.thread.daemons.ItemsAutoDestroy: java.util.List _items
com.l2jfrozen.gameserver.thread.daemons.ItemsAutoDestroy: long _sleep
com.l2jfrozen.gameserver.thread.daemons.ItemsAutoDestroy: ItemsAutoDestroy()
com.l2jfrozen.gameserver.thread.daemons.ItemsAutoDestroy: com.l2jfrozen.gameserver.thread.daemons.ItemsAutoDestroy getInstance()
com.l2jfrozen.gameserver.thread.daemons.ItemsAutoDestroy: void addItem(com.l2jfrozen.gameserver.model.actor.instance.L2ItemInstance)
com.l2jfrozen.gameserver.thread.daemons.ItemsAutoDestroy: void removeItems()
com.l2jfrozen.gameserver.thread.daemons.ItemsAutoDestroy: void <clinit>()
com.l2jfrozen.gameserver.thread.daemons.ItemsAutoDestroy$CheckItemsForDestroy
com.l2jfrozen.gameserver.thread.daemons.ItemsAutoDestroy$CheckItemsForDestroy: com.l2jfrozen.gameserver.thread.daemons.ItemsAutoDestroy this$0
com.l2jfrozen.gameserver.thread.daemons.ItemsAutoDestroy$CheckItemsForDestroy: ItemsAutoDestroy$CheckItemsForDestroy(com.l2jfrozen.gameserver.thread.daemons.ItemsAutoDestroy)
com.l2jfrozen.gameserver.thread.daemons.ItemsAutoDestroy$CheckItemsForDestroy: void run()
com.l2jfrozen.gameserver.thread.daemons.PcPoint
com.l2jfrozen.gameserver.thread.daemons.PcPoint: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.thread.daemons.PcPoint: com.l2jfrozen.gameserver.thread.daemons.PcPoint _instance
com.l2jfrozen.gameserver.thread.daemons.PcPoint: com.l2jfrozen.gameserver.thread.daemons.PcPoint getInstance()
com.l2jfrozen.gameserver.thread.daemons.PcPoint: PcPoint()
com.l2jfrozen.gameserver.thread.daemons.PcPoint: void run()
com.l2jfrozen.gameserver.updaters.CastleUpdater
com.l2jfrozen.gameserver.updaters.CastleUpdater: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.updaters.CastleUpdater: com.l2jfrozen.gameserver.model.L2Clan _clan
com.l2jfrozen.gameserver.updaters.CastleUpdater: int _runCount
com.l2jfrozen.gameserver.updaters.CastleUpdater: CastleUpdater(com.l2jfrozen.gameserver.model.L2Clan,int)
com.l2jfrozen.gameserver.updaters.CastleUpdater: void run()
com.l2jfrozen.gameserver.updaters.CastleUpdater: void <clinit>()
com.l2jfrozen.gameserver.util.Broadcast
com.l2jfrozen.gameserver.util.Broadcast: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.util.Broadcast: Broadcast()
com.l2jfrozen.gameserver.util.Broadcast: void toPlayersTargettingMyself(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.network.serverpackets.L2GameServerPacket)
com.l2jfrozen.gameserver.util.Broadcast: void toKnownPlayers(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.network.serverpackets.L2GameServerPacket)
com.l2jfrozen.gameserver.util.Broadcast: void toKnownPlayersInRadius(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.network.serverpackets.L2GameServerPacket,int)
com.l2jfrozen.gameserver.util.Broadcast: void toSelfAndKnownPlayers(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.network.serverpackets.L2GameServerPacket)
com.l2jfrozen.gameserver.util.Broadcast: void toSelfAndKnownPlayersInRadius(com.l2jfrozen.gameserver.model.L2Character,com.l2jfrozen.gameserver.network.serverpackets.L2GameServerPacket,long)
com.l2jfrozen.gameserver.util.Broadcast: void toAllOnlinePlayers(com.l2jfrozen.gameserver.network.serverpackets.L2GameServerPacket)
com.l2jfrozen.gameserver.util.Broadcast: void <clinit>()
com.l2jfrozen.gameserver.util.EventData
com.l2jfrozen.gameserver.util.EventData: int eventX
com.l2jfrozen.gameserver.util.EventData: int eventY
com.l2jfrozen.gameserver.util.EventData: int eventZ
com.l2jfrozen.gameserver.util.EventData: int eventKarma
com.l2jfrozen.gameserver.util.EventData: int eventPvpKills
com.l2jfrozen.gameserver.util.EventData: int eventPkKills
com.l2jfrozen.gameserver.util.EventData: java.lang.String eventTitle
com.l2jfrozen.gameserver.util.EventData: java.util.List kills
com.l2jfrozen.gameserver.util.EventData: boolean eventSitForced
com.l2jfrozen.gameserver.util.EventData: EventData(int,int,int,int,int,int,java.lang.String,java.util.List,boolean)
com.l2jfrozen.gameserver.util.FloodProtectorAction
com.l2jfrozen.gameserver.util.FloodProtectorAction: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.util.FloodProtectorAction: com.l2jfrozen.gameserver.network.L2GameClient client
com.l2jfrozen.gameserver.util.FloodProtectorAction: com.l2jfrozen.gameserver.config.FloodProtectorConfig config
com.l2jfrozen.gameserver.util.FloodProtectorAction: float _nextGameTick
com.l2jfrozen.gameserver.util.FloodProtectorAction: java.util.concurrent.atomic.AtomicInteger _count
com.l2jfrozen.gameserver.util.FloodProtectorAction: boolean _logged
com.l2jfrozen.gameserver.util.FloodProtectorAction: boolean _punishmentInProgress
com.l2jfrozen.gameserver.util.FloodProtectorAction: int _untilBlock
com.l2jfrozen.gameserver.util.FloodProtectorAction: java.util.Hashtable received_commands_actions
com.l2jfrozen.gameserver.util.FloodProtectorAction: FloodProtectorAction(com.l2jfrozen.gameserver.network.L2GameClient,com.l2jfrozen.gameserver.config.FloodProtectorConfig)
com.l2jfrozen.gameserver.util.FloodProtectorAction: boolean tryPerformAction(java.lang.String)
com.l2jfrozen.gameserver.util.FloodProtectorAction: void kickPlayer()
com.l2jfrozen.gameserver.util.FloodProtectorAction: void banChat()
com.l2jfrozen.gameserver.util.FloodProtectorAction: void banAccount()
com.l2jfrozen.gameserver.util.FloodProtectorAction: void jailChar()
com.l2jfrozen.gameserver.util.FloodProtectorAction: void LOGGER(java.lang.String[])
com.l2jfrozen.gameserver.util.FloodProtectorAction: void <clinit>()
com.l2jfrozen.gameserver.util.FloodProtectorAction$1
com.l2jfrozen.gameserver.util.FloodProtectorAction$1: int[] $SwitchMap$com$l2jfrozen$gameserver$network$GameClientState
com.l2jfrozen.gameserver.util.FloodProtectorAction$1: void <clinit>()
com.l2jfrozen.gameserver.util.FloodProtectors
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction _useItem
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction _rollDice
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction _firework
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction _itemPetSummon
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction _heroVoice
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction _globalChat
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction _subclass
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction _dropItem
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction _augmentScript
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction _enchantItem
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction _serverBypass
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction _multiSell
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction _transaction
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction _manufacture
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction _manor
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction _characterSelect
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction _unknownPackets
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction _partyInvitation
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction _sayAction
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction _moveAction
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction _genericAction
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction _macro
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction _potion
com.l2jfrozen.gameserver.util.FloodProtectors: FloodProtectors(com.l2jfrozen.gameserver.network.L2GameClient)
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction getUseItem()
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction getRollDice()
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction getFirework()
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction getItemPetSummon()
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction getHeroVoice()
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction getGlobalChat()
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction getSubclass()
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction getDropItem()
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction getAugmentItem()
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction getEnchantItem()
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction getServerBypass()
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction getMultiSell()
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction getTransaction()
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction getManufacture()
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction getManor()
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction getCharacterSelect()
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction getUnknownPackets()
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction getPartyInvitation()
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction getSayAction()
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction getMoveAction()
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction getGenericAction()
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction getMacro()
com.l2jfrozen.gameserver.util.FloodProtectors: com.l2jfrozen.gameserver.util.FloodProtectorAction getUsePotion()
com.l2jfrozen.gameserver.util.GMAudit
com.l2jfrozen.gameserver.util.GMAudit: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.util.GMAudit: GMAudit()
com.l2jfrozen.gameserver.util.GMAudit: void auditGMAction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.util.GMAudit: void auditGMAction(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.util.GMAudit: void <clinit>()
com.l2jfrozen.gameserver.util.GameServerFloodProtectorActions
com.l2jfrozen.gameserver.util.GameServerFloodProtectorActions: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.util.GameServerFloodProtectorActions: int MAX_CONCURRENT_ACTIONS_PER_PLAYER
com.l2jfrozen.gameserver.util.GameServerFloodProtectorActions: java.util.Hashtable clients_concurrent_actions
com.l2jfrozen.gameserver.util.GameServerFloodProtectorActions: java.util.Hashtable clients_actions
com.l2jfrozen.gameserver.util.GameServerFloodProtectorActions: java.util.Hashtable clients_nextGameTick
com.l2jfrozen.gameserver.util.GameServerFloodProtectorActions: java.util.Hashtable punishes_in_progress
com.l2jfrozen.gameserver.util.GameServerFloodProtectorActions: GameServerFloodProtectorActions()
com.l2jfrozen.gameserver.util.GameServerFloodProtectorActions: boolean tryPerformAction(int,int,com.l2jfrozen.netcore.MMOClient)
com.l2jfrozen.gameserver.util.GameServerFloodProtectorActions: boolean isOpCodeToBeTested(int,int)
com.l2jfrozen.gameserver.util.GameServerFloodProtectorActions: void kickPlayer(com.l2jfrozen.netcore.MMOClient,int)
com.l2jfrozen.gameserver.util.GameServerFloodProtectorActions: void banAccount(com.l2jfrozen.netcore.MMOClient,int)
com.l2jfrozen.gameserver.util.GameServerFloodProtectorActions: void <clinit>()
com.l2jfrozen.gameserver.util.IllegalPlayerAction
com.l2jfrozen.gameserver.util.IllegalPlayerAction: java.util.logging.Logger _logAudit
com.l2jfrozen.gameserver.util.IllegalPlayerAction: java.lang.String _message
com.l2jfrozen.gameserver.util.IllegalPlayerAction: int _punishment
com.l2jfrozen.gameserver.util.IllegalPlayerAction: com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance _actor
com.l2jfrozen.gameserver.util.IllegalPlayerAction: int PUNISH_BROADCAST
com.l2jfrozen.gameserver.util.IllegalPlayerAction: int PUNISH_KICK
com.l2jfrozen.gameserver.util.IllegalPlayerAction: int PUNISH_KICKBAN
com.l2jfrozen.gameserver.util.IllegalPlayerAction: int PUNISH_JAIL
com.l2jfrozen.gameserver.util.IllegalPlayerAction: IllegalPlayerAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String,int)
com.l2jfrozen.gameserver.util.IllegalPlayerAction: void run()
com.l2jfrozen.gameserver.util.IllegalPlayerAction: void <clinit>()
com.l2jfrozen.gameserver.util.MinionList
com.l2jfrozen.gameserver.util.MinionList: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.util.MinionList: java.util.List minionReferences
com.l2jfrozen.gameserver.util.MinionList: javolution.util.FastMap _respawnTasks
com.l2jfrozen.gameserver.util.MinionList: com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance master
com.l2jfrozen.gameserver.util.MinionList: MinionList(com.l2jfrozen.gameserver.model.actor.instance.L2MonsterInstance)
com.l2jfrozen.gameserver.util.MinionList: int countSpawnedMinions()
com.l2jfrozen.gameserver.util.MinionList: int countSpawnedMinionsById(int)
com.l2jfrozen.gameserver.util.MinionList: boolean hasMinions()
com.l2jfrozen.gameserver.util.MinionList: java.util.List getSpawnedMinions()
com.l2jfrozen.gameserver.util.MinionList: void addSpawnedMinion(com.l2jfrozen.gameserver.model.actor.instance.L2MinionInstance)
com.l2jfrozen.gameserver.util.MinionList: int lazyCountSpawnedMinionsGroups()
com.l2jfrozen.gameserver.util.MinionList: void removeSpawnedMinion(com.l2jfrozen.gameserver.model.actor.instance.L2MinionInstance)
com.l2jfrozen.gameserver.util.MinionList: void moveMinionToRespawnList(com.l2jfrozen.gameserver.model.actor.instance.L2MinionInstance)
com.l2jfrozen.gameserver.util.MinionList: void clearRespawnList()
com.l2jfrozen.gameserver.util.MinionList: void maintainMinions()
com.l2jfrozen.gameserver.util.MinionList: void spawnMinions()
com.l2jfrozen.gameserver.util.MinionList: void spawnSingleMinion(int)
com.l2jfrozen.gameserver.util.MinionList: void <clinit>()
com.l2jfrozen.gameserver.util.MultiSort
com.l2jfrozen.gameserver.util.MultiSort: int SORT_ASCENDING
com.l2jfrozen.gameserver.util.MultiSort: int SORT_DESCENDING
com.l2jfrozen.gameserver.util.MultiSort: java.util.List _keyList
com.l2jfrozen.gameserver.util.MultiSort: java.util.List _valueList
com.l2jfrozen.gameserver.util.MultiSort: boolean _isSortDescending
com.l2jfrozen.gameserver.util.MultiSort: boolean _isSorted
com.l2jfrozen.gameserver.util.MultiSort: MultiSort(int[])
com.l2jfrozen.gameserver.util.MultiSort: MultiSort(java.util.Collection)
com.l2jfrozen.gameserver.util.MultiSort: MultiSort(java.lang.Object[],int[])
com.l2jfrozen.gameserver.util.MultiSort: MultiSort(java.util.Map)
com.l2jfrozen.gameserver.util.MultiSort: java.util.List getIntList(java.util.Collection)
com.l2jfrozen.gameserver.util.MultiSort: java.util.List getIntList(int[])
com.l2jfrozen.gameserver.util.MultiSort: java.util.List getList(java.util.Collection)
com.l2jfrozen.gameserver.util.MultiSort: java.util.List getList(java.lang.Object[])
com.l2jfrozen.gameserver.util.MultiSort: int getCount()
com.l2jfrozen.gameserver.util.MultiSort: int getHarmonicMean()
com.l2jfrozen.gameserver.util.MultiSort: java.util.List getKeys()
com.l2jfrozen.gameserver.util.MultiSort: int getFrequency(int)
com.l2jfrozen.gameserver.util.MultiSort: int getMaxValue()
com.l2jfrozen.gameserver.util.MultiSort: int getMinValue()
com.l2jfrozen.gameserver.util.MultiSort: int getMean()
com.l2jfrozen.gameserver.util.MultiSort: double getStandardDeviation()
com.l2jfrozen.gameserver.util.MultiSort: int getTotalValue()
com.l2jfrozen.gameserver.util.MultiSort: java.util.List getValues()
com.l2jfrozen.gameserver.util.MultiSort: boolean isSortDescending()
com.l2jfrozen.gameserver.util.MultiSort: boolean isSorted()
com.l2jfrozen.gameserver.util.MultiSort: void setSortDescending(boolean)
com.l2jfrozen.gameserver.util.MultiSort: boolean sort()
com.l2jfrozen.gameserver.util.Util
com.l2jfrozen.gameserver.util.Util: Util()
com.l2jfrozen.gameserver.util.Util: void handleIllegalPlayerAction(com.l2jfrozen.gameserver.model.actor.instance.L2PcInstance,java.lang.String,int)
com.l2jfrozen.gameserver.util.Util: java.lang.String getRelativePath(java.io.File,java.io.File)
com.l2jfrozen.gameserver.util.Util: double calculateAngleFrom(com.l2jfrozen.gameserver.model.L2Object,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.util.Util: double calculateAngleFrom(int,int,int,int)
com.l2jfrozen.gameserver.util.Util: double calculateDistance(int,int,int,int,int)
com.l2jfrozen.gameserver.util.Util: double calculateDistance(int,int,int,int,int,int,boolean)
com.l2jfrozen.gameserver.util.Util: double calculateDistance(com.l2jfrozen.gameserver.model.L2Object,com.l2jfrozen.gameserver.model.L2Object,boolean)
com.l2jfrozen.gameserver.util.Util: java.lang.String capitalizeFirst(java.lang.String)
com.l2jfrozen.gameserver.util.Util: java.lang.String capitalizeWords(java.lang.String)
com.l2jfrozen.gameserver.util.Util: boolean checkIfInRange(int,com.l2jfrozen.gameserver.model.L2Object,com.l2jfrozen.gameserver.model.L2Object,boolean)
com.l2jfrozen.gameserver.util.Util: double convertHeadingToDegree(int)
com.l2jfrozen.gameserver.util.Util: int countWords(java.lang.String)
com.l2jfrozen.gameserver.util.Util: java.lang.String implodeString(java.lang.String[],java.lang.String)
com.l2jfrozen.gameserver.util.Util: java.lang.String implodeString(java.util.Collection,java.lang.String)
com.l2jfrozen.gameserver.util.Util: float roundTo(float,int)
com.l2jfrozen.gameserver.util.Util: boolean isAlphaNumeric(java.lang.String)
com.l2jfrozen.gameserver.util.Util: java.lang.String formatAdena(int)
com.l2jfrozen.gameserver.util.Util: java.lang.String reverseColor(java.lang.String)
com.l2jfrozen.gameserver.util.Util: int convertMinutesToMiliseconds(int)
com.l2jfrozen.gameserver.util.Util: int calculateHeadingFrom(com.l2jfrozen.gameserver.model.L2Object,com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.util.Util: int calculateHeadingFrom(int,int,int,int)
com.l2jfrozen.gameserver.util.Util: int calculateHeadingFrom(double,double)
com.l2jfrozen.gameserver.util.Util: int calcCameraAngle(int)
com.l2jfrozen.gameserver.util.Util: int calcCameraAngle(com.l2jfrozen.gameserver.model.actor.instance.L2NpcInstance)
com.l2jfrozen.gameserver.util.Util: boolean contains(int[],int)
com.l2jfrozen.gameserver.util.monitoring.ServerConfigStatus
com.l2jfrozen.gameserver.util.monitoring.ServerConfigStatus: long serialVersionUID
com.l2jfrozen.gameserver.util.monitoring.ServerConfigStatus: java.lang.String ServerName
com.l2jfrozen.gameserver.util.monitoring.ServerConfigStatus: java.lang.String GameServerIps
com.l2jfrozen.gameserver.util.monitoring.ServerConfigStatus: int GameServerPort
com.l2jfrozen.gameserver.util.monitoring.ServerConfigStatus: float GameServerRate
com.l2jfrozen.gameserver.util.monitoring.ServerConfigStatus: float GameServerAdenaRate
com.l2jfrozen.gameserver.util.monitoring.ServerConfigStatus: java.lang.String GameServerLink
com.l2jfrozen.gameserver.util.monitoring.ServerConfigStatus: java.lang.String GameServerHopzoneLink
com.l2jfrozen.gameserver.util.monitoring.ServerConfigStatus: java.lang.String GameServerTopzoneLink
com.l2jfrozen.gameserver.util.monitoring.ServerConfigStatus: java.lang.String GameServerL2NetworkLink
com.l2jfrozen.gameserver.util.monitoring.ServerConfigStatus: ServerConfigStatus()
com.l2jfrozen.gameserver.util.monitoring.ServerConfigStatus: java.lang.String getStaticStatus()
com.l2jfrozen.gameserver.util.monitoring.ServerConfigStatus: java.lang.String getDynamicStatus()
com.l2jfrozen.gameserver.util.monitoring.ServerConfigStatus: java.lang.String getServerName()
com.l2jfrozen.gameserver.util.monitoring.ServerConfigStatus: java.lang.String getGameServerIPs()
com.l2jfrozen.gameserver.util.monitoring.ServerConfigStatus: int getGameServerPort()
com.l2jfrozen.gameserver.util.monitoring.ServerConfigStatus: float getGameServerRate()
com.l2jfrozen.gameserver.util.monitoring.ServerConfigStatus: float getGameServerAdenaRate()
com.l2jfrozen.gameserver.util.monitoring.ServerConfigStatus: java.lang.String getGameServerLink()
com.l2jfrozen.gameserver.util.monitoring.ServerConfigStatus: java.lang.String getGameServerHopzoneLink()
com.l2jfrozen.gameserver.util.monitoring.ServerConfigStatus: java.lang.String getGameServerTopzoneLink()
com.l2jfrozen.gameserver.util.monitoring.ServerConfigStatus: java.lang.String getGameServerL2NetworkLink()
com.l2jfrozen.gameserver.util.monitoring.ServerConfigStatus: long getSerialversionuid()
com.l2jfrozen.gameserver.util.monitoring.ServerConfigStatus: java.lang.String toString()
com.l2jfrozen.gameserver.util.monitoring.ServerConfigStatus: void refreshStatus()
com.l2jfrozen.gameserver.util.monitoring.ServerStatus
com.l2jfrozen.gameserver.util.monitoring.ServerStatus: long serialVersionUID
com.l2jfrozen.gameserver.util.monitoring.ServerStatus: int TotalOnline
com.l2jfrozen.gameserver.util.monitoring.ServerStatus: int ActivePlayers
com.l2jfrozen.gameserver.util.monitoring.ServerStatus: int OfflinePlayers
com.l2jfrozen.gameserver.util.monitoring.ServerStatus: int FakePlayers
com.l2jfrozen.gameserver.util.monitoring.ServerStatus: int ActiveClients
com.l2jfrozen.gameserver.util.monitoring.ServerStatus: ServerStatus()
com.l2jfrozen.gameserver.util.monitoring.ServerStatus: java.lang.String getDynamicStatus()
com.l2jfrozen.gameserver.util.monitoring.ServerStatus: java.lang.String getStaticStatus()
com.l2jfrozen.gameserver.util.monitoring.ServerStatus: long getSerialversionuid()
com.l2jfrozen.gameserver.util.monitoring.ServerStatus: int getTotalOnline()
com.l2jfrozen.gameserver.util.monitoring.ServerStatus: int getActivePlayers()
com.l2jfrozen.gameserver.util.monitoring.ServerStatus: int getOfflinePlayers()
com.l2jfrozen.gameserver.util.monitoring.ServerStatus: int getFakePlayers()
com.l2jfrozen.gameserver.util.monitoring.ServerStatus: int getActiveClients()
com.l2jfrozen.gameserver.util.monitoring.ServerStatus: java.lang.String toString()
com.l2jfrozen.gameserver.util.monitoring.ServerStatus: void refreshStatus()
com.l2jfrozen.gameserver.util.object.L2ObjectHashMap
com.l2jfrozen.gameserver.util.object.L2ObjectHashMap: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.util.object.L2ObjectHashMap: boolean TRACE
com.l2jfrozen.gameserver.util.object.L2ObjectHashMap: boolean DEBUG
com.l2jfrozen.gameserver.util.object.L2ObjectHashMap: int[] PRIMES
com.l2jfrozen.gameserver.util.object.L2ObjectHashMap: com.l2jfrozen.gameserver.model.L2Object[] _table
com.l2jfrozen.gameserver.util.object.L2ObjectHashMap: int[] _keys
com.l2jfrozen.gameserver.util.object.L2ObjectHashMap: int _count
com.l2jfrozen.gameserver.util.object.L2ObjectHashMap: boolean $assertionsDisabled
com.l2jfrozen.gameserver.util.object.L2ObjectHashMap: int getPrime(int)
com.l2jfrozen.gameserver.util.object.L2ObjectHashMap: L2ObjectHashMap()
com.l2jfrozen.gameserver.util.object.L2ObjectHashMap: int size()
com.l2jfrozen.gameserver.util.object.L2ObjectHashMap: boolean isEmpty()
com.l2jfrozen.gameserver.util.object.L2ObjectHashMap: void clear()
com.l2jfrozen.gameserver.util.object.L2ObjectHashMap: void check()
com.l2jfrozen.gameserver.util.object.L2ObjectHashMap: void put(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.util.object.L2ObjectHashMap: void remove(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.util.object.L2ObjectHashMap: com.l2jfrozen.gameserver.model.L2Object get(int)
com.l2jfrozen.gameserver.util.object.L2ObjectHashMap: boolean contains(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.util.object.L2ObjectHashMap: void expand()
com.l2jfrozen.gameserver.util.object.L2ObjectHashMap: java.util.Iterator iterator()
com.l2jfrozen.gameserver.util.object.L2ObjectHashMap: void <clinit>()
com.l2jfrozen.gameserver.util.object.L2ObjectHashMap$Itr
com.l2jfrozen.gameserver.util.object.L2ObjectHashMap$Itr: com.l2jfrozen.gameserver.model.L2Object[] _array
com.l2jfrozen.gameserver.util.object.L2ObjectHashMap$Itr: int _nextIdx
com.l2jfrozen.gameserver.util.object.L2ObjectHashMap$Itr: com.l2jfrozen.gameserver.model.L2Object _nextObj
com.l2jfrozen.gameserver.util.object.L2ObjectHashMap$Itr: com.l2jfrozen.gameserver.model.L2Object _lastRet
com.l2jfrozen.gameserver.util.object.L2ObjectHashMap$Itr: com.l2jfrozen.gameserver.util.object.L2ObjectHashMap this$0
com.l2jfrozen.gameserver.util.object.L2ObjectHashMap$Itr: L2ObjectHashMap$Itr(com.l2jfrozen.gameserver.util.object.L2ObjectHashMap,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.util.object.L2ObjectHashMap$Itr: boolean hasNext()
com.l2jfrozen.gameserver.util.object.L2ObjectHashMap$Itr: com.l2jfrozen.gameserver.model.L2Object next()
com.l2jfrozen.gameserver.util.object.L2ObjectHashMap$Itr: void remove()
com.l2jfrozen.gameserver.util.object.L2ObjectHashMap$Itr: java.lang.Object next()
com.l2jfrozen.gameserver.util.object.L2ObjectHashSet
com.l2jfrozen.gameserver.util.object.L2ObjectHashSet: org.apache.log4j.Logger LOGGER
com.l2jfrozen.gameserver.util.object.L2ObjectHashSet: boolean TRACE
com.l2jfrozen.gameserver.util.object.L2ObjectHashSet: boolean DEBUG
com.l2jfrozen.gameserver.util.object.L2ObjectHashSet: int[] PRIMES
com.l2jfrozen.gameserver.util.object.L2ObjectHashSet: com.l2jfrozen.gameserver.model.L2Object[] _table
com.l2jfrozen.gameserver.util.object.L2ObjectHashSet: int[] _collisions
com.l2jfrozen.gameserver.util.object.L2ObjectHashSet: int _count
com.l2jfrozen.gameserver.util.object.L2ObjectHashSet: boolean $assertionsDisabled
com.l2jfrozen.gameserver.util.object.L2ObjectHashSet: int getPrime(int)
com.l2jfrozen.gameserver.util.object.L2ObjectHashSet: L2ObjectHashSet()
com.l2jfrozen.gameserver.util.object.L2ObjectHashSet: int size()
com.l2jfrozen.gameserver.util.object.L2ObjectHashSet: boolean isEmpty()
com.l2jfrozen.gameserver.util.object.L2ObjectHashSet: void clear()
com.l2jfrozen.gameserver.util.object.L2ObjectHashSet: void check()
com.l2jfrozen.gameserver.util.object.L2ObjectHashSet: void put(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.util.object.L2ObjectHashSet: void remove(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.util.object.L2ObjectHashSet: boolean contains(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.util.object.L2ObjectHashSet: void expand()
com.l2jfrozen.gameserver.util.object.L2ObjectHashSet: java.util.Iterator iterator()
com.l2jfrozen.gameserver.util.object.L2ObjectHashSet: void <clinit>()
com.l2jfrozen.gameserver.util.object.L2ObjectHashSet$Itr
com.l2jfrozen.gameserver.util.object.L2ObjectHashSet$Itr: com.l2jfrozen.gameserver.model.L2Object[] _array
com.l2jfrozen.gameserver.util.object.L2ObjectHashSet$Itr: int _nextIdx
com.l2jfrozen.gameserver.util.object.L2ObjectHashSet$Itr: com.l2jfrozen.gameserver.model.L2Object _nextObj
com.l2jfrozen.gameserver.util.object.L2ObjectHashSet$Itr: com.l2jfrozen.gameserver.model.L2Object _lastRet
com.l2jfrozen.gameserver.util.object.L2ObjectHashSet$Itr: com.l2jfrozen.gameserver.util.object.L2ObjectHashSet this$0
com.l2jfrozen.gameserver.util.object.L2ObjectHashSet$Itr: L2ObjectHashSet$Itr(com.l2jfrozen.gameserver.util.object.L2ObjectHashSet,com.l2jfrozen.gameserver.model.L2Object[])
com.l2jfrozen.gameserver.util.object.L2ObjectHashSet$Itr: boolean hasNext()
com.l2jfrozen.gameserver.util.object.L2ObjectHashSet$Itr: com.l2jfrozen.gameserver.model.L2Object next()
com.l2jfrozen.gameserver.util.object.L2ObjectHashSet$Itr: void remove()
com.l2jfrozen.gameserver.util.object.L2ObjectHashSet$Itr: java.lang.Object next()
com.l2jfrozen.gameserver.util.object.L2ObjectMap
com.l2jfrozen.gameserver.util.object.L2ObjectMap: L2ObjectMap()
com.l2jfrozen.gameserver.util.object.L2ObjectMap: int size()
com.l2jfrozen.gameserver.util.object.L2ObjectMap: boolean isEmpty()
com.l2jfrozen.gameserver.util.object.L2ObjectMap: void clear()
com.l2jfrozen.gameserver.util.object.L2ObjectMap: void put(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.util.object.L2ObjectMap: void remove(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.util.object.L2ObjectMap: com.l2jfrozen.gameserver.model.L2Object get(int)
com.l2jfrozen.gameserver.util.object.L2ObjectMap: boolean contains(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.util.object.L2ObjectMap: java.util.Iterator iterator()
com.l2jfrozen.gameserver.util.object.L2ObjectMap: com.l2jfrozen.gameserver.util.object.L2ObjectMap createL2ObjectMap()
com.l2jfrozen.gameserver.util.object.L2ObjectMap$1
com.l2jfrozen.gameserver.util.object.L2ObjectMap$1: int[] $SwitchMap$com$l2jfrozen$gameserver$config$ObjectMapType
com.l2jfrozen.gameserver.util.object.L2ObjectMap$1: void <clinit>()
com.l2jfrozen.gameserver.util.object.L2ObjectSet
com.l2jfrozen.gameserver.util.object.L2ObjectSet: L2ObjectSet()
com.l2jfrozen.gameserver.util.object.L2ObjectSet: com.l2jfrozen.gameserver.util.object.L2ObjectSet createL2ObjectSet()
com.l2jfrozen.gameserver.util.object.L2ObjectSet: com.l2jfrozen.gameserver.util.object.L2ObjectSet createL2PlayerSet()
com.l2jfrozen.gameserver.util.object.L2ObjectSet: int size()
com.l2jfrozen.gameserver.util.object.L2ObjectSet: boolean isEmpty()
com.l2jfrozen.gameserver.util.object.L2ObjectSet: void clear()
com.l2jfrozen.gameserver.util.object.L2ObjectSet: void put(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.util.object.L2ObjectSet: void remove(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.util.object.L2ObjectSet: boolean contains(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.util.object.L2ObjectSet: java.util.Iterator iterator()
com.l2jfrozen.gameserver.util.object.L2ObjectSet$1
com.l2jfrozen.gameserver.util.object.L2ObjectSet$1: int[] $SwitchMap$com$l2jfrozen$gameserver$config$ObjectSetType
com.l2jfrozen.gameserver.util.object.L2ObjectSet$1: void <clinit>()
com.l2jfrozen.gameserver.util.object.WorldObjectMap
com.l2jfrozen.gameserver.util.object.WorldObjectMap: java.util.Map _objectMap
com.l2jfrozen.gameserver.util.object.WorldObjectMap: WorldObjectMap()
com.l2jfrozen.gameserver.util.object.WorldObjectMap: int size()
com.l2jfrozen.gameserver.util.object.WorldObjectMap: boolean isEmpty()
com.l2jfrozen.gameserver.util.object.WorldObjectMap: void clear()
com.l2jfrozen.gameserver.util.object.WorldObjectMap: void put(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.util.object.WorldObjectMap: void remove(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.util.object.WorldObjectMap: com.l2jfrozen.gameserver.model.L2Object get(int)
com.l2jfrozen.gameserver.util.object.WorldObjectMap: boolean contains(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.util.object.WorldObjectMap: java.util.Iterator iterator()
com.l2jfrozen.gameserver.util.object.WorldObjectSet
com.l2jfrozen.gameserver.util.object.WorldObjectSet: java.util.Map _objectMap
com.l2jfrozen.gameserver.util.object.WorldObjectSet: WorldObjectSet()
com.l2jfrozen.gameserver.util.object.WorldObjectSet: int size()
com.l2jfrozen.gameserver.util.object.WorldObjectSet: boolean isEmpty()
com.l2jfrozen.gameserver.util.object.WorldObjectSet: void clear()
com.l2jfrozen.gameserver.util.object.WorldObjectSet: void put(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.util.object.WorldObjectSet: void remove(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.util.object.WorldObjectSet: boolean contains(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.util.object.WorldObjectSet: java.util.Iterator iterator()
com.l2jfrozen.gameserver.util.object.WorldObjectTree
com.l2jfrozen.gameserver.util.object.WorldObjectTree: java.util.TreeMap _objectMap
com.l2jfrozen.gameserver.util.object.WorldObjectTree: java.util.concurrent.locks.ReentrantReadWriteLock _rwl
com.l2jfrozen.gameserver.util.object.WorldObjectTree: java.util.concurrent.locks.Lock _r
com.l2jfrozen.gameserver.util.object.WorldObjectTree: java.util.concurrent.locks.Lock _w
com.l2jfrozen.gameserver.util.object.WorldObjectTree: WorldObjectTree()
com.l2jfrozen.gameserver.util.object.WorldObjectTree: int size()
com.l2jfrozen.gameserver.util.object.WorldObjectTree: boolean isEmpty()
com.l2jfrozen.gameserver.util.object.WorldObjectTree: void clear()
com.l2jfrozen.gameserver.util.object.WorldObjectTree: void put(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.util.object.WorldObjectTree: void remove(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.util.object.WorldObjectTree: com.l2jfrozen.gameserver.model.L2Object get(int)
com.l2jfrozen.gameserver.util.object.WorldObjectTree: boolean contains(com.l2jfrozen.gameserver.model.L2Object)
com.l2jfrozen.gameserver.util.object.WorldObjectTree: java.util.Iterator iterator()
com.l2jfrozen.gameserver.util.sql.SQLQuery
com.l2jfrozen.gameserver.util.sql.SQLQuery: void execute(java.sql.Connection)
com.l2jfrozen.gameserver.util.sql.SQLQueue
com.l2jfrozen.gameserver.util.sql.SQLQueue: com.l2jfrozen.gameserver.util.sql.SQLQueue _instance
com.l2jfrozen.gameserver.util.sql.SQLQueue: javolution.util.FastList _query
com.l2jfrozen.gameserver.util.sql.SQLQueue: java.util.concurrent.ScheduledFuture _task
com.l2jfrozen.gameserver.util.sql.SQLQueue: boolean _inShutdown
com.l2jfrozen.gameserver.util.sql.SQLQueue: boolean _isRuning
com.l2jfrozen.gameserver.util.sql.SQLQueue: com.l2jfrozen.gameserver.util.sql.SQLQueue getInstance()
com.l2jfrozen.gameserver.util.sql.SQLQueue: SQLQueue()
com.l2jfrozen.gameserver.util.sql.SQLQueue: void shutdown()
com.l2jfrozen.gameserver.util.sql.SQLQueue: void add(com.l2jfrozen.gameserver.util.sql.SQLQuery)
com.l2jfrozen.gameserver.util.sql.SQLQueue: void run()
com.l2jfrozen.gameserver.util.sql.SQLQueue: void <clinit>()
com.l2jfrozen.gameserver.util.xml.IXmlReader
com.l2jfrozen.gameserver.util.xml.IXmlReader: org.apache.log4j.Logger LOG
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.String JAXP_SCHEMA_LANGUAGE
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.String W3C_XML_SCHEMA
com.l2jfrozen.gameserver.util.xml.IXmlReader: com.l2jfrozen.gameserver.util.xml.XMLFilter XML_FILTER
com.l2jfrozen.gameserver.util.xml.IXmlReader: void load()
com.l2jfrozen.gameserver.util.xml.IXmlReader: void parseFile(java.io.File)
com.l2jfrozen.gameserver.util.xml.IXmlReader: boolean parseDirectory(java.io.File)
com.l2jfrozen.gameserver.util.xml.IXmlReader: boolean parseDirectory(java.lang.String)
com.l2jfrozen.gameserver.util.xml.IXmlReader: boolean parseDirectory(java.lang.String,boolean)
com.l2jfrozen.gameserver.util.xml.IXmlReader: boolean parseDirectory(java.io.File,boolean)
com.l2jfrozen.gameserver.util.xml.IXmlReader: void parseDocument(org.w3c.dom.Document,java.io.File)
com.l2jfrozen.gameserver.util.xml.IXmlReader: void parseDocument(org.w3c.dom.Document)
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.Boolean parseBoolean(org.w3c.dom.Node,java.lang.Boolean)
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.Boolean parseBoolean(org.w3c.dom.Node)
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.Boolean parseBoolean(org.w3c.dom.NamedNodeMap,java.lang.String)
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.Boolean parseBoolean(org.w3c.dom.NamedNodeMap,java.lang.String,java.lang.Boolean)
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.Byte parseByte(org.w3c.dom.Node,java.lang.Byte)
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.Byte parseByte(org.w3c.dom.Node)
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.Byte parseByte(org.w3c.dom.NamedNodeMap,java.lang.String)
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.Byte parseByte(org.w3c.dom.NamedNodeMap,java.lang.String,java.lang.Byte)
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.Short parseShort(org.w3c.dom.Node,java.lang.Short)
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.Short parseShort(org.w3c.dom.Node)
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.Short parseShort(org.w3c.dom.NamedNodeMap,java.lang.String)
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.Short parseShort(org.w3c.dom.NamedNodeMap,java.lang.String,java.lang.Short)
com.l2jfrozen.gameserver.util.xml.IXmlReader: int parseInt(org.w3c.dom.Node,java.lang.Integer)
com.l2jfrozen.gameserver.util.xml.IXmlReader: int parseInt(org.w3c.dom.Node)
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.Integer parseInteger(org.w3c.dom.Node,java.lang.Integer)
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.Integer parseInteger(org.w3c.dom.Node)
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.Integer parseInteger(org.w3c.dom.NamedNodeMap,java.lang.String)
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.Integer parseInteger(org.w3c.dom.NamedNodeMap,java.lang.String,java.lang.Integer)
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.Long parseLong(org.w3c.dom.Node,java.lang.Long)
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.Long parseLong(org.w3c.dom.Node)
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.Long parseLong(org.w3c.dom.NamedNodeMap,java.lang.String)
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.Long parseLong(org.w3c.dom.NamedNodeMap,java.lang.String,java.lang.Long)
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.Float parseFloat(org.w3c.dom.Node,java.lang.Float)
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.Float parseFloat(org.w3c.dom.Node)
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.Float parseFloat(org.w3c.dom.NamedNodeMap,java.lang.String)
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.Float parseFloat(org.w3c.dom.NamedNodeMap,java.lang.String,java.lang.Float)
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.Double parseDouble(org.w3c.dom.Node,java.lang.Double)
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.Double parseDouble(org.w3c.dom.Node)
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.Double parseDouble(org.w3c.dom.NamedNodeMap,java.lang.String)
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.Double parseDouble(org.w3c.dom.NamedNodeMap,java.lang.String,java.lang.Double)
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.String parseString(org.w3c.dom.Node,java.lang.String)
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.String parseString(org.w3c.dom.Node)
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.String parseString(org.w3c.dom.NamedNodeMap,java.lang.String)
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.String parseString(org.w3c.dom.NamedNodeMap,java.lang.String,java.lang.String)
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.Enum parseEnum(org.w3c.dom.Node,java.lang.Class,java.lang.Enum)
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.Enum parseEnum(org.w3c.dom.Node,java.lang.Class)
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.Enum parseEnum(org.w3c.dom.NamedNodeMap,java.lang.Class,java.lang.String)
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.lang.Enum parseEnum(org.w3c.dom.NamedNodeMap,java.lang.Class,java.lang.String,java.lang.Enum)
com.l2jfrozen.gameserver.util.xml.IXmlReader: java.io.FileFilter getCurrentFileFilter()
com.l2jfrozen.gameserver.util.xml.IXmlReader: void <clinit>()
com.l2jfrozen.gameserver.util.xml.IXmlReader$XMLErrorHandler
com.l2jfrozen.gameserver.util.xml.IXmlReader$XMLErrorHandler: IXmlReader$XMLErrorHandler()
com.l2jfrozen.gameserver.util.xml.IXmlReader$XMLErrorHandler: void warning(org.xml.sax.SAXParseException)
com.l2jfrozen.gameserver.util.xml.IXmlReader$XMLErrorHandler: void error(org.xml.sax.SAXParseException)
com.l2jfrozen.gameserver.util.xml.IXmlReader$XMLErrorHandler: void fatalError(org.xml.sax.SAXParseException)
com.l2jfrozen.gameserver.util.xml.XMLFilter
com.l2jfrozen.gameserver.util.xml.XMLFilter: XMLFilter()
com.l2jfrozen.gameserver.util.xml.XMLFilter: boolean accept(java.io.File)
com.l2jfrozen.netcore.AbstractPacket: java.nio.ByteBuffer _buf
com.l2jfrozen.netcore.AbstractPacket: java.lang.Long _clientIdentifier
com.l2jfrozen.netcore.AbstractPacket: AbstractPacket()
com.l2jfrozen.netcore.AbstractPacket: com.l2jfrozen.netcore.MMOClient getClient()
com.l2jfrozen.netcore.MMOClient: long _nextIdentifier
com.l2jfrozen.netcore.MMOClient: com.l2jfrozen.netcore.MMOConnection _con
com.l2jfrozen.netcore.MMOClient: long _identifier
com.l2jfrozen.netcore.MMOClient: MMOClient(com.l2jfrozen.netcore.MMOConnection)
com.l2jfrozen.netcore.MMOClient: com.l2jfrozen.netcore.MMOConnection getConnection()
com.l2jfrozen.netcore.MMOClient: long getIdentifier()
com.l2jfrozen.netcore.MMOClient: boolean decrypt(java.nio.ByteBuffer,int)
com.l2jfrozen.netcore.MMOClient: boolean encrypt(java.nio.ByteBuffer,int)
com.l2jfrozen.netcore.MMOClient: void onDisconnection()
com.l2jfrozen.netcore.MMOClient: void onForcedDisconnection(boolean)
com.l2jfrozen.netcore.MMOClient: void <clinit>()
com.l2jfrozen.netcore.NetcoreConfig
com.l2jfrozen.netcore.NetcoreConfig: boolean SHOW_LICENCE
com.l2jfrozen.netcore.NetcoreConfig: boolean PACKET_HANDLER_DEBUG
com.l2jfrozen.netcore.NetcoreConfig: int MMO_SELECTOR_SLEEP_TIME
com.l2jfrozen.netcore.NetcoreConfig: int MMO_MAX_SEND_PER_PASS
com.l2jfrozen.netcore.NetcoreConfig: int MMO_MAX_READ_PER_PASS
com.l2jfrozen.netcore.NetcoreConfig: int MMO_HELPER_BUFFER_COUNT
com.l2jfrozen.netcore.NetcoreConfig: boolean ENABLE_MMOCORE_EXCEPTIONS
com.l2jfrozen.netcore.NetcoreConfig: boolean ENABLE_MMOCORE_DEBUG
com.l2jfrozen.netcore.NetcoreConfig: boolean ENABLE_MMOCORE_DEVELOP
com.l2jfrozen.netcore.NetcoreConfig: boolean ENABLE_MMOCORE_PACKETS_LOG
com.l2jfrozen.netcore.NetcoreConfig: boolean ENABLE_CLIENT_FLOOD_PROTECTION
com.l2jfrozen.netcore.NetcoreConfig: int CLIENT_PACKET_QUEUE_SIZE
com.l2jfrozen.netcore.NetcoreConfig: int CLIENT_PACKET_QUEUE_MAX_BURST_SIZE
com.l2jfrozen.netcore.NetcoreConfig: int CLIENT_PACKET_QUEUE_MAX_PACKETS_PER_SECOND
com.l2jfrozen.netcore.NetcoreConfig: int CLIENT_PACKET_QUEUE_MEASURE_INTERVAL
com.l2jfrozen.netcore.NetcoreConfig: int CLIENT_PACKET_QUEUE_MAX_AVERAGE_PACKETS_PER_SECOND
com.l2jfrozen.netcore.NetcoreConfig: int CLIENT_PACKET_QUEUE_MAX_FLOODS_PER_MIN
com.l2jfrozen.netcore.NetcoreConfig: int CLIENT_PACKET_QUEUE_MAX_OVERFLOWS_PER_MIN
com.l2jfrozen.netcore.NetcoreConfig: int CLIENT_PACKET_QUEUE_MAX_UNDERFLOWS_PER_MIN
com.l2jfrozen.netcore.NetcoreConfig: int CLIENT_PACKET_QUEUE_MAX_UNKNOWN_PER_MIN
com.l2jfrozen.netcore.NetcoreConfig: boolean DISABLE_FULL_PACKETS_FLOOD_PROTECTOR
com.l2jfrozen.netcore.NetcoreConfig: int FLOOD_PACKET_PROTECTION_INTERVAL
com.l2jfrozen.netcore.NetcoreConfig: boolean LOG_PACKET_FLOODING
com.l2jfrozen.netcore.NetcoreConfig: int PACKET_FLOODING_PUNISHMENT_LIMIT
com.l2jfrozen.netcore.NetcoreConfig: java.lang.String PACKET_FLOODING_PUNISHMENT_TYPE
com.l2jfrozen.netcore.NetcoreConfig: java.lang.String PROTECTED_OPCODES
com.l2jfrozen.netcore.NetcoreConfig: javolution.util.FastList GS_LIST_PROTECTED_OPCODES
com.l2jfrozen.netcore.NetcoreConfig: javolution.util.FastList GS_LIST_PROTECTED_OPCODES2
com.l2jfrozen.netcore.NetcoreConfig: javolution.util.FastList LS_LIST_PROTECTED_OPCODES
com.l2jfrozen.netcore.NetcoreConfig: java.lang.String ALLOWED_OFFLINE_OPCODES
com.l2jfrozen.netcore.NetcoreConfig: javolution.util.FastList LIST_ALLOWED_OFFLINE_OPCODES
com.l2jfrozen.netcore.NetcoreConfig: javolution.util.FastList LIST_ALLOWED_OFFLINE_OPCODES2
com.l2jfrozen.netcore.NetcoreConfig: boolean DUMP_CLOSE_CONNECTIONS
com.l2jfrozen.netcore.NetcoreConfig: com.l2jfrozen.netcore.NetcoreConfig _instance
com.l2jfrozen.netcore.NetcoreConfig: com.l2jfrozen.netcore.NetcoreConfig getInstance()
com.l2jfrozen.netcore.NetcoreConfig: NetcoreConfig()
com.l2jfrozen.netcore.NetcoreConfig: void <clinit>()
com.l2jfrozen.netcore.NetcoreConfigFiles
com.l2jfrozen.netcore.NetcoreConfigFiles: org.apache.log4j.Logger LOGGER
com.l2jfrozen.netcore.NetcoreConfigFiles: java.lang.String MAIN_CONFIGURATION_FILE
com.l2jfrozen.netcore.NetcoreConfigFiles: java.lang.String NETCORE_CONFIGURATION_FILE
com.l2jfrozen.netcore.NetcoreConfigFiles: java.util.Properties configFiles
com.l2jfrozen.netcore.NetcoreConfigFiles: NetcoreConfigFiles()
com.l2jfrozen.netcore.NetcoreConfigFiles: void loadConfigurationFilesPaths()
com.l2jfrozen.netcore.NetcoreConfigFiles: void loadConfigurationFilesPaths(java.lang.String)
com.l2jfrozen.netcore.NetcoreConfigFiles: void <clinit>()
com.l2jfrozen.netcore.ReceivablePacket: com.l2jfrozen.netcore.NioNetStringBuffer _sbuf
com.l2jfrozen.netcore.ReceivablePacket: org.apache.log4j.Logger LOGGER
com.l2jfrozen.netcore.ReceivablePacket: ReceivablePacket()
com.l2jfrozen.netcore.ReceivablePacket: boolean read()
com.l2jfrozen.netcore.ReceivablePacket: void run()
com.l2jfrozen.netcore.ReceivablePacket: void readB(byte[])
com.l2jfrozen.netcore.ReceivablePacket: void readB(byte[],int,int)
com.l2jfrozen.netcore.ReceivablePacket: int readC()
com.l2jfrozen.netcore.ReceivablePacket: int readH(java.lang.String)
com.l2jfrozen.netcore.ReceivablePacket: int readD()
com.l2jfrozen.netcore.ReceivablePacket: long readQ()
com.l2jfrozen.netcore.ReceivablePacket: double readF()
com.l2jfrozen.netcore.ReceivablePacket: java.lang.String readS()
com.l2jfrozen.netcore.ReceivablePacket: void setBuffers(java.nio.ByteBuffer,com.l2jfrozen.netcore.MMOClient,com.l2jfrozen.netcore.NioNetStringBuffer)
com.l2jfrozen.netcore.ReceivablePacket: void <clinit>()
com.l2jfrozen.netcore.SelectorConfig
com.l2jfrozen.netcore.SelectorConfig: int readBufferSize
com.l2jfrozen.netcore.SelectorConfig: int writeBufferSize
com.l2jfrozen.netcore.SelectorConfig: int helperBufferCount
com.l2jfrozen.netcore.SelectorConfig: int helperBufferSize
com.l2jfrozen.netcore.SelectorConfig: int maxSendPerPass
com.l2jfrozen.netcore.SelectorConfig: int maxReadPerPass
com.l2jfrozen.netcore.SelectorConfig: int sleepTime
com.l2jfrozen.netcore.SelectorConfig: SelectorConfig()
com.l2jfrozen.netcore.SelectorConfig: int getReadBufferSize()
com.l2jfrozen.netcore.SelectorConfig: void setReadBufferSize(int)
com.l2jfrozen.netcore.SelectorConfig: int getWriteBufferSize()
com.l2jfrozen.netcore.SelectorConfig: void setWriteBufferSize(int)
com.l2jfrozen.netcore.SelectorConfig: int getHelperBufferCount()
com.l2jfrozen.netcore.SelectorConfig: void setHelperBufferCount(int)
com.l2jfrozen.netcore.SelectorConfig: int getHelperBufferSize()
com.l2jfrozen.netcore.SelectorConfig: void setHelperBufferSize(int)
com.l2jfrozen.netcore.SelectorConfig: int getMaxSendPerPass()
com.l2jfrozen.netcore.SelectorConfig: void setMaxSendPerPass(int)
com.l2jfrozen.netcore.SelectorConfig: int getMaxReadPerPass()
com.l2jfrozen.netcore.SelectorConfig: void setMaxReadPerPass(int)
com.l2jfrozen.netcore.SelectorConfig: int getSleepTime()
com.l2jfrozen.netcore.SelectorConfig: void setSleepTime(int)
com.l2jfrozen.netcore.SelectorThread
com.l2jfrozen.netcore.SelectorThread: org.apache.log4j.Logger LOGGER
com.l2jfrozen.netcore.SelectorThread: java.nio.ByteOrder BYTE_ORDER
com.l2jfrozen.netcore.SelectorThread: int HEADER_SIZE
com.l2jfrozen.netcore.SelectorThread: java.nio.channels.Selector _selector
com.l2jfrozen.netcore.SelectorThread: com.l2jfrozen.netcore.IPacketHandler _packetHandler
com.l2jfrozen.netcore.SelectorThread: com.l2jfrozen.netcore.IMMOExecutor _executor
com.l2jfrozen.netcore.SelectorThread: com.l2jfrozen.netcore.IClientFactory _clientFactory
com.l2jfrozen.netcore.SelectorThread: com.l2jfrozen.netcore.IAcceptFilter _acceptFilter
com.l2jfrozen.netcore.SelectorThread: int HELPER_BUFFER_SIZE
com.l2jfrozen.netcore.SelectorThread: int HELPER_BUFFER_COUNT
com.l2jfrozen.netcore.SelectorThread: int MAX_SEND_PER_PASS
com.l2jfrozen.netcore.SelectorThread: int MAX_READ_PER_PASS
com.l2jfrozen.netcore.SelectorThread: long SLEEP_TIME
com.l2jfrozen.netcore.SelectorThread: java.nio.ByteBuffer DIRECT_WRITE_BUFFER
com.l2jfrozen.netcore.SelectorThread: java.nio.ByteBuffer WRITE_BUFFER
com.l2jfrozen.netcore.SelectorThread: java.nio.ByteBuffer READ_BUFFER
com.l2jfrozen.netcore.SelectorThread: com.l2jfrozen.netcore.NioNetStringBuffer STRING_BUFFER
com.l2jfrozen.netcore.SelectorThread: javolution.util.FastList _bufferPool
com.l2jfrozen.netcore.SelectorThread: com.l2jfrozen.netcore.NioNetStackList _pendingClose
com.l2jfrozen.netcore.SelectorThread: boolean _shutdown
com.l2jfrozen.netcore.SelectorThread: java.util.HashMap selector_threads
com.l2jfrozen.netcore.SelectorThread: com.l2jfrozen.netcore.SelectorThread getSelectorThread(java.lang.String)
com.l2jfrozen.netcore.SelectorThread: SelectorThread(com.l2jfrozen.netcore.SelectorConfig,com.l2jfrozen.netcore.IMMOExecutor,com.l2jfrozen.netcore.IPacketHandler,com.l2jfrozen.netcore.IClientFactory,com.l2jfrozen.netcore.IAcceptFilter)
com.l2jfrozen.netcore.SelectorThread: void openServerSocket(java.net.InetAddress,int)
com.l2jfrozen.netcore.SelectorThread: java.nio.ByteBuffer getPooledBuffer()
com.l2jfrozen.netcore.SelectorThread: void recycleBuffer(java.nio.ByteBuffer)
com.l2jfrozen.netcore.SelectorThread: void run()
com.l2jfrozen.netcore.SelectorThread: void finishConnection(java.nio.channels.SelectionKey,com.l2jfrozen.netcore.MMOConnection)
com.l2jfrozen.netcore.SelectorThread: void acceptConnection(java.nio.channels.SelectionKey,com.l2jfrozen.netcore.MMOConnection)
com.l2jfrozen.netcore.SelectorThread: void readPacket(java.nio.channels.SelectionKey,com.l2jfrozen.netcore.MMOConnection)
com.l2jfrozen.netcore.SelectorThread: boolean tryReadPacket(java.nio.channels.SelectionKey,com.l2jfrozen.netcore.MMOClient,java.nio.ByteBuffer,com.l2jfrozen.netcore.MMOConnection)
com.l2jfrozen.netcore.SelectorThread: void allocateReadBuffer(com.l2jfrozen.netcore.MMOConnection)
com.l2jfrozen.netcore.SelectorThread: boolean parseClientPacket(int,java.nio.ByteBuffer,int,com.l2jfrozen.netcore.MMOClient)
com.l2jfrozen.netcore.SelectorThread: void writeClosePacket(com.l2jfrozen.netcore.MMOConnection)
com.l2jfrozen.netcore.SelectorThread: void writePacket(java.nio.channels.SelectionKey,com.l2jfrozen.netcore.MMOConnection)
com.l2jfrozen.netcore.SelectorThread: boolean prepareWriteBuffer(com.l2jfrozen.netcore.MMOConnection)
com.l2jfrozen.netcore.SelectorThread: void putPacketIntoWriteBuffer(com.l2jfrozen.netcore.MMOClient,com.l2jfrozen.netcore.SendablePacket)
com.l2jfrozen.netcore.SelectorThread: void closeConnection(com.l2jfrozen.netcore.MMOConnection)
com.l2jfrozen.netcore.SelectorThread: void closeConnectionImpl(java.nio.channels.SelectionKey,com.l2jfrozen.netcore.MMOConnection,boolean,boolean)
com.l2jfrozen.netcore.SelectorThread: void shutdown()
com.l2jfrozen.netcore.SelectorThread: boolean isShutdown()
com.l2jfrozen.netcore.SelectorThread: void closeSelectorThread()
com.l2jfrozen.netcore.SelectorThread: void shutdownSelectorThreads()
com.l2jfrozen.netcore.SelectorThread: void <clinit>()
com.l2jfrozen.netcore.SendablePacket: SendablePacket()
com.l2jfrozen.netcore.SendablePacket: void putInt(int)
com.l2jfrozen.netcore.SendablePacket: void putDouble(double)
com.l2jfrozen.netcore.SendablePacket: void putFloat(float)
com.l2jfrozen.netcore.SendablePacket: void writeC(int)
com.l2jfrozen.netcore.SendablePacket: void writeF(double)
com.l2jfrozen.netcore.SendablePacket: void writeH(int)
com.l2jfrozen.netcore.SendablePacket: void writeD(int)
com.l2jfrozen.netcore.SendablePacket: void writeQ(long)
com.l2jfrozen.netcore.SendablePacket: void writeB(byte[])
com.l2jfrozen.netcore.SendablePacket: void writeS(java.lang.String)
com.l2jfrozen.netcore.SendablePacket: void write()
com.l2jfrozen.netcore.util.network.BaseRecievePacket: byte[] _decrypt
com.l2jfrozen.netcore.util.network.BaseRecievePacket: int _off
com.l2jfrozen.netcore.util.network.BaseRecievePacket: BaseRecievePacket(byte[])
com.l2jfrozen.netcore.util.network.BaseRecievePacket: int readD()
com.l2jfrozen.netcore.util.network.BaseRecievePacket: int readC()
com.l2jfrozen.netcore.util.network.BaseRecievePacket: int readH()
com.l2jfrozen.netcore.util.network.BaseRecievePacket: double readF()
com.l2jfrozen.netcore.util.network.BaseRecievePacket: java.lang.String readS()
com.l2jfrozen.netcore.util.network.BaseRecievePacket: byte[] readB(int)
com.l2jfrozen.netcore.util.network.BaseSendablePacket: java.io.ByteArrayOutputStream _bao
com.l2jfrozen.netcore.util.network.BaseSendablePacket: BaseSendablePacket()
com.l2jfrozen.netcore.util.network.BaseSendablePacket: void writeD(int)
com.l2jfrozen.netcore.util.network.BaseSendablePacket: void writeH(int)
com.l2jfrozen.netcore.util.network.BaseSendablePacket: void writeC(int)
com.l2jfrozen.netcore.util.network.BaseSendablePacket: void writeF(double)
com.l2jfrozen.netcore.util.network.BaseSendablePacket: void writeS(java.lang.String)
com.l2jfrozen.netcore.util.network.BaseSendablePacket: void writeB(byte[])
com.l2jfrozen.netcore.util.network.BaseSendablePacket: int getLength()
com.l2jfrozen.netcore.util.network.BaseSendablePacket: byte[] getBytes()
com.l2jfrozen.netcore.util.network.BaseSendablePacket: byte[] getContent()
